10:19:52 [DEBUG] (19) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=36.998939ms elapsed_secs=0.036998939
10:19:52 [DEBUG] (26) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.821µs elapsed_secs=4.7821e-5
10:19:52 [DEBUG] (24) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=40.179255ms elapsed_secs=0.040179255
10:19:52 [DEBUG] (21) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=38.396204ms elapsed_secs=0.038396204
10:19:52 [DEBUG] (28) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.85µs elapsed_secs=3.685e-5
10:19:52 [DEBUG] (27) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.392µs elapsed_secs=6.9392e-5
10:19:52 [DEBUG] (14) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.30633ms elapsed_secs=0.01530633
10:19:52 [DEBUG] (22) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.487584ms elapsed_secs=0.015487584
10:19:52 [DEBUG] (15) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=40.786513ms elapsed_secs=0.040786513
10:19:52 [DEBUG] (16) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=16.272423ms elapsed_secs=0.016272423
10:19:52 [DEBUG] (18) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=40.016412ms elapsed_secs=0.040016412
10:19:52 [DEBUG] (20) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.656766ms elapsed_secs=0.015656766
10:19:52 [DEBUG] (25) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.548545ms elapsed_secs=0.015548545
10:19:52 [DEBUG] (17) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.422381ms elapsed_secs=0.015422381
10:19:52 [DEBUG] (29) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=171.994µs elapsed_secs=0.000171994
10:19:52 [DEBUG] (30) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.991µs elapsed_secs=3.3991e-5
10:19:52 [DEBUG] (31) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=266.404µs elapsed_secs=0.000266404
10:19:52 [DEBUG] (32) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.571µs elapsed_secs=4.6571e-5
10:19:52 [DEBUG] (33) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.275µs elapsed_secs=6.3275e-5
10:19:52 [DEBUG] (34) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=118.572µs elapsed_secs=0.000118572
10:19:52 [DEBUG] (23) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=19.528602ms elapsed_secs=0.019528602
10:19:52 [DEBUG] (35) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=323.578µs elapsed_secs=0.000323578
10:19:52 [DEBUG] (37) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=136.48µs elapsed_secs=0.00013648
10:19:52 [DEBUG] (36) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=324.642µs elapsed_secs=0.000324642
10:19:52 [DEBUG] (26) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.387973ms elapsed_secs=0.014387973
10:19:52 [DEBUG] (26) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=107.475µs elapsed_secs=0.000107475
10:19:52 [DEBUG] (26) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=44.931µs elapsed_secs=4.4931e-5
10:19:52 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=126.832µs elapsed_secs=0.000126832
10:19:52 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.964µs elapsed_secs=5.7964e-5
10:19:52 [DEBUG] (27) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.431803ms elapsed_secs=0.010431803
10:19:52 [DEBUG] (28) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.749191ms elapsed_secs=0.013749191
10:19:52 [DEBUG] (29) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.699142ms elapsed_secs=0.012699142
10:19:52 [DEBUG] (30) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.97781ms elapsed_secs=0.01197781
10:19:52 [DEBUG] (28) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=90.864µs elapsed_secs=9.0864e-5
10:19:52 [DEBUG] (27) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=137.92µs elapsed_secs=0.00013792
10:19:52 [DEBUG] (30) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=55.568µs elapsed_secs=5.5568e-5
10:19:52 [DEBUG] (28) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=67.634µs elapsed_secs=6.7634e-5
10:19:52 [DEBUG] (29) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=154.391µs elapsed_secs=0.000154391
10:19:52 [DEBUG] (30) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=42.225µs elapsed_secs=4.2225e-5
10:19:52 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=120.697µs elapsed_secs=0.000120697
10:19:52 [DEBUG] (27) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.314µs elapsed_secs=7.6314e-5
10:19:52 [DEBUG] (29) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=107.945µs elapsed_secs=0.000107945
10:19:52 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.075µs elapsed_secs=8.2075e-5
10:19:52 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=126.282µs elapsed_secs=0.000126282
10:19:52 [DEBUG] (32) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.16479ms elapsed_secs=0.01216479
10:19:52 [DEBUG] (36) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.416395ms elapsed_secs=0.008416395
10:19:52 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.084µs elapsed_secs=0.000103084
10:19:52 [DEBUG] (37) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.556053ms elapsed_secs=0.008556053
10:19:52 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=359.45µs elapsed_secs=0.00035945
10:19:52 [DEBUG] (33) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.88691ms elapsed_secs=0.01188691
10:19:52 [DEBUG] (32) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=53.758µs elapsed_secs=5.3758e-5
10:19:52 [DEBUG] (36) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=26.515µs elapsed_secs=2.6515e-5
10:19:52 [DEBUG] (37) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.295µs elapsed_secs=8.3295e-5
10:19:52 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.483µs elapsed_secs=4.7483e-5
10:19:52 [DEBUG] (32) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=153.318µs elapsed_secs=0.000153318
10:19:52 [DEBUG] (37) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=41.887µs elapsed_secs=4.1887e-5
10:19:52 [DEBUG] (33) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=125.455µs elapsed_secs=0.000125455
10:19:52 [DEBUG] (36) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=60.248µs elapsed_secs=6.0248e-5
10:19:52 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=599.079µs elapsed_secs=0.000599079
10:19:52 [DEBUG] (35) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.992174ms elapsed_secs=0.010992174
10:19:52 [DEBUG] (34) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.671705ms elapsed_secs=0.012671705
10:19:52 [DEBUG] (31) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.229174ms elapsed_secs=0.013229174
10:19:52 [DEBUG] (35) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=93.447µs elapsed_secs=9.3447e-5
10:19:52 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=281.376µs elapsed_secs=0.000281376
10:19:52 [DEBUG] (35) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=27.309µs elapsed_secs=2.7309e-5
10:19:52 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=556.509µs elapsed_secs=0.000556509
10:19:52 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=33.523µs elapsed_secs=3.3523e-5
10:19:52 [DEBUG] (31) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=46.685µs elapsed_secs=4.6685e-5
10:19:52 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.208893ms elapsed_secs=0.002208893
10:19:52 [DEBUG] (33) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=329.409µs elapsed_secs=0.000329409
10:19:52 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.359µs elapsed_secs=0.000107359
10:19:52 [DEBUG] (34) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=35.274µs elapsed_secs=3.5274e-5
10:19:52 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=130.198µs elapsed_secs=0.000130198
10:19:52 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.581µs elapsed_secs=4.5581e-5
10:19:52 [DEBUG] (31) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.1µs elapsed_secs=5.71e-5
10:19:52 [DEBUG] (34) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=182.43µs elapsed_secs=0.00018243
10:19:52 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.070752ms elapsed_secs=0.001070752
10:19:52 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.715µs elapsed_secs=9.1715e-5
10:19:52 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.35398ms elapsed_secs=0.00135398
10:19:52 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=695.008µs elapsed_secs=0.000695008
10:19:52 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=868.994µs elapsed_secs=0.000868994
10:19:52 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.514431ms elapsed_secs=0.001514431
10:19:52 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=430.731µs elapsed_secs=0.000430731
10:19:52 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=430.717µs elapsed_secs=0.000430717
10:19:52 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.358936ms elapsed_secs=0.001358936
10:19:52 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.649256ms elapsed_secs=0.004649256
10:19:52 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.949µs elapsed_secs=7.6949e-5
10:19:52 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.470462ms elapsed_secs=0.004470462
10:19:52 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=241.659µs elapsed_secs=0.000241659
10:19:52 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=115.13µs elapsed_secs=0.00011513
10:19:52 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.263µs elapsed_secs=7.2263e-5
10:19:52 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=178.734µs elapsed_secs=0.000178734
10:19:52 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.002951ms elapsed_secs=0.007002951
10:19:52 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.722µs elapsed_secs=5.1722e-5
10:19:52 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=181.343µs elapsed_secs=0.000181343
10:19:52 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.489µs elapsed_secs=5.3489e-5
10:19:52 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.635531ms elapsed_secs=0.006635531
10:19:52 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.970312ms elapsed_secs=0.006970312
10:19:52 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=710.305µs elapsed_secs=0.000710305
10:19:52 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=674.625µs elapsed_secs=0.000674625
10:19:52 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.73033ms elapsed_secs=0.00473033
10:19:52 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.742672ms elapsed_secs=0.004742672
10:19:52 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.462µs elapsed_secs=0.000100462
10:19:52 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=227.313µs elapsed_secs=0.000227313
10:19:52 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=193.285µs elapsed_secs=0.000193285
10:19:52 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.440763ms elapsed_secs=0.003440763
10:19:52 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.523917ms elapsed_secs=0.003523917
10:19:52 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.419143ms elapsed_secs=0.003419143
10:19:52 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.942µs elapsed_secs=8.7942e-5
10:19:52 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.441808ms elapsed_secs=0.003441808
10:19:52 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.636561ms elapsed_secs=0.003636561
10:19:52 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=452.545µs elapsed_secs=0.000452545
10:19:52 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.23µs elapsed_secs=7.623e-5
10:19:52 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=830.366µs elapsed_secs=0.000830366
10:19:52 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=587.24µs elapsed_secs=0.00058724
10:19:52 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=899.613µs elapsed_secs=0.000899613
10:19:52 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.263031ms elapsed_secs=0.003263031
10:19:52 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=227.745µs elapsed_secs=0.000227745
10:19:52 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.060621ms elapsed_secs=0.001060621
10:19:52 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.304µs elapsed_secs=0.000147304
10:19:52 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.470035ms elapsed_secs=0.003470035
10:19:52 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.815µs elapsed_secs=9.5815e-5
10:19:52 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=313.025µs elapsed_secs=0.000313025
10:19:52 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.742µs elapsed_secs=0.000155742
10:19:52 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.436531ms elapsed_secs=0.003436531
10:19:52 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=538.377µs elapsed_secs=0.000538377
10:19:52 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=570.58µs elapsed_secs=0.00057058
10:19:52 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=964.206µs elapsed_secs=0.000964206
10:19:52 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.564µs elapsed_secs=0.000105564
10:19:52 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=391.649µs elapsed_secs=0.000391649
10:19:52 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.733µs elapsed_secs=0.000102733
10:19:52 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=282.009µs elapsed_secs=0.000282009
10:19:52 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.975911ms elapsed_secs=0.003975911
10:19:52 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=152.058µs elapsed_secs=0.000152058
10:19:52 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.324µs elapsed_secs=6.7324e-5
10:19:52 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.471841ms elapsed_secs=0.003471841
10:19:52 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.520073ms elapsed_secs=0.003520073
10:19:52 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=226.964µs elapsed_secs=0.000226964
10:19:52 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=160.151µs elapsed_secs=0.000160151
10:19:52 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.884µs elapsed_secs=9.0884e-5
10:19:52 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.812347ms elapsed_secs=0.002812347
10:19:52 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.968512ms elapsed_secs=0.002968512
10:19:52 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.981098ms elapsed_secs=0.002981098
10:19:52 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.927176ms elapsed_secs=0.002927176
10:19:52 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.972227ms elapsed_secs=0.002972227
10:19:52 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.985628ms elapsed_secs=0.002985628
10:19:52 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=145.266µs elapsed_secs=0.000145266
10:19:52 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.134006ms elapsed_secs=0.003134006
10:19:52 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=329.707µs elapsed_secs=0.000329707
10:19:52 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.969539ms elapsed_secs=0.002969539
10:19:52 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=597.915µs elapsed_secs=0.000597915
10:19:52 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.042576ms elapsed_secs=0.003042576
10:19:52 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=357.889µs elapsed_secs=0.000357889
10:19:52 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=434.954µs elapsed_secs=0.000434954
10:19:52 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=208.24µs elapsed_secs=0.00020824
10:19:52 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.176878ms elapsed_secs=0.001176878
10:19:52 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=861.675µs elapsed_secs=0.000861675
10:19:52 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=271.282µs elapsed_secs=0.000271282
10:19:52 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.109µs elapsed_secs=6.9109e-5
10:19:52 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=321.87µs elapsed_secs=0.00032187
10:19:52 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.942µs elapsed_secs=0.000150942
10:19:52 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=232.657µs elapsed_secs=0.000232657
10:19:52 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=503.162µs elapsed_secs=0.000503162
10:19:52 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.118µs elapsed_secs=6.3118e-5
10:19:52 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.908µs elapsed_secs=6.1908e-5
10:19:52 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.55µs elapsed_secs=6.055e-5
10:19:52 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.341µs elapsed_secs=6.6341e-5
10:19:52 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.335µs elapsed_secs=8.5335e-5
10:19:52 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.442201ms elapsed_secs=0.003442201
10:19:52 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=129.343µs elapsed_secs=0.000129343
10:19:52 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.967µs elapsed_secs=4.9967e-5
10:19:52 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.481457ms elapsed_secs=0.003481457
10:19:52 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.415504ms elapsed_secs=0.003415504
10:19:52 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=240.162µs elapsed_secs=0.000240162
10:19:52 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=230.325µs elapsed_secs=0.000230325
10:19:52 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.382µs elapsed_secs=0.000102382
10:19:52 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.434µs elapsed_secs=5.3434e-5
10:19:52 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.605041ms elapsed_secs=0.002605041
10:19:52 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.665317ms elapsed_secs=0.002665317
10:19:52 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.66561ms elapsed_secs=0.00266561
10:19:52 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.637932ms elapsed_secs=0.002637932
10:19:52 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=195.931µs elapsed_secs=0.000195931
10:19:52 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=176.53µs elapsed_secs=0.00017653
10:19:52 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=95.218µs elapsed_secs=9.5218e-5
10:19:52 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=89.499µs elapsed_secs=8.9499e-5
10:19:52 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.485913ms elapsed_secs=0.002485913
10:19:52 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.453533ms elapsed_secs=0.002453533
10:19:52 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.587648ms elapsed_secs=0.002587648
10:19:52 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=122.09µs elapsed_secs=0.00012209
10:19:52 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.648µs elapsed_secs=6.0648e-5
10:19:52 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=174.884µs elapsed_secs=0.000174884
10:19:52 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.484488ms elapsed_secs=0.002484488
10:19:52 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.944µs elapsed_secs=8.0944e-5
10:19:52 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.66469ms elapsed_secs=0.00266469
10:19:52 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.784µs elapsed_secs=6.0784e-5
10:19:52 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.221733ms elapsed_secs=0.002221733
10:19:52 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=105.264µs elapsed_secs=0.000105264
10:19:52 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=145.411µs elapsed_secs=0.000145411
10:19:52 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.56µs elapsed_secs=6.556e-5
10:19:52 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=263.674µs elapsed_secs=0.000263674
10:19:52 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=126.249µs elapsed_secs=0.000126249
10:19:52 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.905µs elapsed_secs=0.000124905
10:19:52 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.818997ms elapsed_secs=0.001818997
10:19:52 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=195.591µs elapsed_secs=0.000195591
10:19:52 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=367.411µs elapsed_secs=0.000367411
10:19:52 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.537µs elapsed_secs=5.6537e-5
10:19:52 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.739µs elapsed_secs=7.0739e-5
10:19:52 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=126.823µs elapsed_secs=0.000126823
10:19:52 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.687µs elapsed_secs=0.000120687
10:19:52 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.906645ms elapsed_secs=0.002906645
10:19:52 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.24µs elapsed_secs=6.824e-5
10:19:52 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=116.847µs elapsed_secs=0.000116847
10:19:52 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.393µs elapsed_secs=6.1393e-5
10:19:52 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.430446ms elapsed_secs=0.002430446
10:19:52 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.458962ms elapsed_secs=0.002458962
10:19:52 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.461203ms elapsed_secs=0.002461203
10:19:52 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=129.751µs elapsed_secs=0.000129751
10:19:52 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=153.163µs elapsed_secs=0.000153163
10:19:52 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.593µs elapsed_secs=7.1593e-5
10:19:52 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.249059ms elapsed_secs=0.002249059
10:19:52 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.232316ms elapsed_secs=0.002232316
10:19:52 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.216649ms elapsed_secs=0.002216649
10:19:52 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.402406ms elapsed_secs=0.002402406
10:19:52 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.309µs elapsed_secs=5.3309e-5
10:19:52 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=104.362µs elapsed_secs=0.000104362
10:19:52 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=163.454µs elapsed_secs=0.000163454
10:19:52 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.241437ms elapsed_secs=0.002241437
10:19:52 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.330336ms elapsed_secs=0.002330336
10:19:52 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.726µs elapsed_secs=7.7726e-5
10:19:52 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=132.023µs elapsed_secs=0.000132023
10:19:52 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.5817ms elapsed_secs=0.0025817
10:19:52 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.362µs elapsed_secs=5.7362e-5
10:19:52 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.273746ms elapsed_secs=0.002273746
10:19:52 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.435µs elapsed_secs=5.7435e-5
10:19:52 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.536904ms elapsed_secs=0.002536904
10:19:52 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.192802ms elapsed_secs=0.002192802
10:19:52 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.95953ms elapsed_secs=0.00295953
10:19:52 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.29281ms elapsed_secs=0.00229281
10:19:52 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.318379ms elapsed_secs=0.002318379
10:19:52 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.389556ms elapsed_secs=0.002389556
10:19:52 [DEBUG] (26) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.793495ms elapsed_secs=0.048793495
10:19:52 [DEBUG] (6) menahel::handlers::project: No target specified. using default target: all
10:19:52 [DEBUG] (6) menahel::handlers::project: Getting all projects
10:19:52 [DEBUG] (26) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=1 rows_returned=10 elapsed=77.711µs elapsed_secs=7.7711e-5
10:19:52 [DEBUG] (6) menahel::repository::project_repo: Got all projects: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }, Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }, Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }]
10:19:52 [DEBUG] (6) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }, Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }, Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }], count: 10, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "3cd55c0e-f17c-4c2a-90d1-3ff5c799eecc", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (29) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.902577ms elapsed_secs=0.048902577
10:19:52 [DEBUG] (27) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.874745ms elapsed_secs=0.048874745
10:19:52 [ERROR] Error: BadRequest("[ProjectNameEmpty] Project name cannot be empty: (Name = )")
10:19:52 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsNoIdSpecified] No id specified: ()")
10:19:52 [DEBUG] (36) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=49.044591ms elapsed_secs=0.049044591
10:19:52 [DEBUG] (13) menahel::handlers::project: No target specified. using default target: all
10:19:52 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: None, page_size: Some(10))")
10:19:52 [DEBUG] (30) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=49.457121ms elapsed_secs=0.049457121
10:19:52 [DEBUG] (35) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=49.94581ms elapsed_secs=0.04994581
10:19:52 [DEBUG] (28) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=50.205843ms elapsed_secs=0.050205843
10:19:52 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsNoNameSpecified] No name specified: ()")
10:19:52 [DEBUG] (30) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=93.359µs elapsed_secs=9.3359e-5
10:19:52 [DEBUG] (28) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=51.528µs elapsed_secs=5.1528e-5
10:19:52 [DEBUG] (12) menahel::repository::project_repo: Got project by name: None
10:19:52 [DEBUG] (7) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(0), name: "TestProject0" })
10:19:52 [DEBUG] (7) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "404076ae-d2f6-4ac4-a522-833131de8c0f", api_version: "0.1.0" }) }
10:19:52 [ERROR] Error: NotFound("[ProjectGetByNameNotFound] Project name not found: (Name = NotExists)")
10:19:52 [DEBUG] (32) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=50.187598ms elapsed_secs=0.050187598
10:19:52 [DEBUG] (31) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=50.633796ms elapsed_secs=0.050633796
10:19:52 [DEBUG] (33) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=50.050513ms elapsed_secs=0.050050513
10:19:52 [DEBUG] (34) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=50.654952ms elapsed_secs=0.050654952
10:19:52 [DEBUG] (5) actix_web::types::json: Failed to deserialize Json from payload. Request path: /projects
10:19:52 [ERROR] Error: BadRequest("[ProjectHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
10:19:52 [DEBUG] (34) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=136.414µs elapsed_secs=0.000136414
10:19:52 [DEBUG] (31) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=179µs elapsed_secs=0.000179
10:19:52 [DEBUG] (9) menahel::repository::project_repo: Got project by id: None
10:19:52 [ERROR] Error: InternalServerError("[ProjectCreateFailed] Failed to create project due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: projects.name)")
10:19:52 [ERROR] Error: NotFound("[ProjectGetByIdNotFound] Project ID not found: (ID = 100)")
10:19:52 [DEBUG] (37) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.821432ms elapsed_secs=0.052821432
10:19:52 [DEBUG] (37) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=97.188µs elapsed_secs=9.7188e-5
10:19:52 [DEBUG] (10) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(0), name: "TestProject0" })
10:19:52 [DEBUG] (10) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "4a307edc-5ca8-4809-b76d-be8f2ebc24bd", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (45) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.464969ms elapsed_secs=0.010464969
10:19:52 [DEBUG] (43) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.862992ms elapsed_secs=0.011862992
10:19:52 [DEBUG] (32) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=5.897731ms elapsed_secs=0.005897731
10:19:52 [DEBUG] (39) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.018371ms elapsed_secs=0.013018371
10:19:52 [DEBUG] (42) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.254246ms elapsed_secs=0.012254246
10:19:52 [INFO] Created project: Project { id: Some(10), name: "TestProject10" }
10:19:52 [DEBUG] (61) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.114µs elapsed_secs=6.5114e-5
10:19:52 [DEBUG] (62) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.332µs elapsed_secs=7.5332e-5
10:19:52 [DEBUG] (65) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=154.173µs elapsed_secs=0.000154173
10:19:52 [DEBUG] (32) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=251.947µs elapsed_secs=0.000251947
10:19:52 [DEBUG] (64) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=143.158µs elapsed_secs=0.000143158
10:19:52 [DEBUG] (2) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(10), name: "TestProject10" })
10:19:52 [DEBUG] (2) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(10), name: "TestProject10" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "eebca15b-bb98-45ab-a9d7-ec929b48d16c", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (50) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.18895ms elapsed_secs=0.01218895
10:19:52 [DEBUG] (51) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.057035ms elapsed_secs=0.012057035
10:19:52 [DEBUG] (47) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.781389ms elapsed_secs=0.012781389
10:19:52 [DEBUG] (70) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.705µs elapsed_secs=5.1705e-5
10:19:52 [DEBUG] (71) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=243.968µs elapsed_secs=0.000243968
10:19:52 [DEBUG] (72) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=139.971µs elapsed_secs=0.000139971
10:19:52 [DEBUG] (57) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.160804ms elapsed_secs=0.013160804
10:19:52 [DEBUG] (73) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=152.451µs elapsed_secs=0.000152451
10:19:52 [DEBUG] (61) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.698752ms elapsed_secs=0.012698752
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=95.481µs elapsed_secs=9.5481e-5
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.249µs elapsed_secs=8.2249e-5
10:19:52 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=184.365µs elapsed_secs=0.000184365
10:19:52 [DEBUG] (63) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.350262ms elapsed_secs=0.014350262
10:19:52 [DEBUG] (64) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.148994ms elapsed_secs=0.013148994
10:19:52 [DEBUG] (65) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.042756ms elapsed_secs=0.014042756
10:19:52 [DEBUG] (67) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.020817ms elapsed_secs=0.012020817
10:19:52 [DEBUG] (59) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=17.085267ms elapsed_secs=0.017085267
10:19:52 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.645µs elapsed_secs=0.000132645
10:19:52 [DEBUG] (74) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=235.329µs elapsed_secs=0.000235329
10:19:52 [DEBUG] (62) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.281589ms elapsed_secs=0.015281589
10:19:52 [DEBUG] (64) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.785µs elapsed_secs=8.5785e-5
10:19:52 [DEBUG] (65) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=347.923µs elapsed_secs=0.000347923
10:19:52 [DEBUG] (69) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.655051ms elapsed_secs=0.012655051
10:19:52 [DEBUG] (62) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=201.109µs elapsed_secs=0.000201109
10:19:52 [DEBUG] (65) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=153.092µs elapsed_secs=0.000153092
10:19:52 [DEBUG] (76) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.008µs elapsed_secs=4.9008e-5
10:19:52 [DEBUG] (62) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=209.851µs elapsed_secs=0.000209851
10:19:52 [DEBUG] (75) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.432µs elapsed_secs=6.0432e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.706211ms elapsed_secs=0.012706211
10:19:52 [DEBUG] (64) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=320.044µs elapsed_secs=0.000320044
10:19:52 [DEBUG] (77) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.927µs elapsed_secs=3.9927e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=393.697µs elapsed_secs=0.000393697
10:19:52 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=973.414µs elapsed_secs=0.000973414
10:19:52 [DEBUG] (62) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.104559ms elapsed_secs=0.001104559
10:19:52 [DEBUG] (71) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.846101ms elapsed_secs=0.012846101
10:19:52 [DEBUG] (70) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=311.306µs elapsed_secs=0.000311306
10:19:52 [DEBUG] (62) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.784µs elapsed_secs=5.8784e-5
10:19:52 [DEBUG] (72) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.01546ms elapsed_secs=0.01301546
10:19:52 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=961.685µs elapsed_secs=0.000961685
10:19:52 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=214.425µs elapsed_secs=0.000214425
10:19:52 [DEBUG] (71) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=62.727µs elapsed_secs=6.2727e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=158.335µs elapsed_secs=0.000158335
10:19:52 [DEBUG] (72) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.006µs elapsed_secs=7.2006e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.899µs elapsed_secs=5.6899e-5
10:19:52 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.577µs elapsed_secs=7.9577e-5
10:19:52 [DEBUG] (71) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=115.072µs elapsed_secs=0.000115072
10:19:52 [DEBUG] (72) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=72.633µs elapsed_secs=7.2633e-5
10:19:52 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.125747ms elapsed_secs=0.002125747
10:19:52 [DEBUG] (73) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.996772ms elapsed_secs=0.007996772
10:19:52 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=187.41µs elapsed_secs=0.00018741
10:19:52 [DEBUG] (73) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=89.782µs elapsed_secs=8.9782e-5
10:19:52 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=300.33µs elapsed_secs=0.00030033
10:19:52 [DEBUG] (73) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=53.254µs elapsed_secs=5.3254e-5
10:19:52 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=215.173µs elapsed_secs=0.000215173
10:19:52 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.21µs elapsed_secs=0.00010121
10:19:52 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.434µs elapsed_secs=4.9434e-5
10:19:52 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.532µs elapsed_secs=9.0532e-5
10:19:52 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=335.458µs elapsed_secs=0.000335458
10:19:52 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.842µs elapsed_secs=7.5842e-5
10:19:52 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.970227ms elapsed_secs=0.003970227
10:19:52 [DEBUG] (74) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.567362ms elapsed_secs=0.009567362
10:19:52 [DEBUG] (62) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.971011ms elapsed_secs=0.003971011
10:19:52 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=731.081µs elapsed_secs=0.000731081
10:19:52 [DEBUG] (74) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=246.972µs elapsed_secs=0.000246972
10:19:52 [DEBUG] (62) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=274.163µs elapsed_secs=0.000274163
10:19:52 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=330.906µs elapsed_secs=0.000330906
10:19:52 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.881253ms elapsed_secs=0.004881253
10:19:52 [DEBUG] (62) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.048µs elapsed_secs=9.9048e-5
10:19:52 [DEBUG] (75) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.511327ms elapsed_secs=0.011511327
10:19:52 [DEBUG] (74) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=168.407µs elapsed_secs=0.000168407
10:19:52 [DEBUG] (77) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.04084ms elapsed_secs=0.01104084
10:19:52 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.547242ms elapsed_secs=0.004547242
10:19:52 [DEBUG] (77) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.463µs elapsed_secs=7.8463e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=217.559µs elapsed_secs=0.000217559
10:19:52 [DEBUG] (75) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.101µs elapsed_secs=7.9101e-5
10:19:52 [DEBUG] (77) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.052µs elapsed_secs=8.2052e-5
10:19:52 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=319.608µs elapsed_secs=0.000319608
10:19:52 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.501479ms elapsed_secs=0.004501479
10:19:52 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.554475ms elapsed_secs=0.004554475
10:19:52 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=234.372µs elapsed_secs=0.000234372
10:19:52 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.450831ms elapsed_secs=0.004450831
10:19:52 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.514003ms elapsed_secs=0.004514003
10:19:52 [DEBUG] (76) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.994003ms elapsed_secs=0.011994003
10:19:52 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=385.269µs elapsed_secs=0.000385269
10:19:52 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=214.27µs elapsed_secs=0.00021427
10:19:52 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=254.231µs elapsed_secs=0.000254231
10:19:52 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=359.646µs elapsed_secs=0.000359646
10:19:52 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=883.699µs elapsed_secs=0.000883699
10:19:52 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=586.539µs elapsed_secs=0.000586539
10:19:52 [DEBUG] (75) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.791µs elapsed_secs=5.6791e-5
10:19:52 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.65µs elapsed_secs=5.865e-5
10:19:52 [DEBUG] (76) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=73.208µs elapsed_secs=7.3208e-5
10:19:52 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.114µs elapsed_secs=9.8114e-5
10:19:52 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.675µs elapsed_secs=5.9675e-5
10:19:52 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.731µs elapsed_secs=9.9731e-5
10:19:52 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.205µs elapsed_secs=8.4205e-5
10:19:52 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=288.885µs elapsed_secs=0.000288885
10:19:52 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=186.775µs elapsed_secs=0.000186775
10:19:52 [DEBUG] (76) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.357µs elapsed_secs=7.7357e-5
10:19:52 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.77µs elapsed_secs=8.077e-5
10:19:52 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.468µs elapsed_secs=6.6468e-5
10:19:52 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=304.03µs elapsed_secs=0.00030403
10:19:52 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.797µs elapsed_secs=9.3797e-5
10:19:52 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.217811ms elapsed_secs=0.003217811
10:19:52 [DEBUG] (62) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.28044ms elapsed_secs=0.00328044
10:19:52 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=135.343µs elapsed_secs=0.000135343
10:19:52 [DEBUG] (62) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=128.235µs elapsed_secs=0.000128235
10:19:52 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.516µs elapsed_secs=0.000116516
10:19:52 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.369089ms elapsed_secs=0.003369089
10:19:52 [DEBUG] (62) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.92µs elapsed_secs=6.092e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=218.592µs elapsed_secs=0.000218592
10:19:52 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.090075ms elapsed_secs=0.003090075
10:19:52 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.213µs elapsed_secs=0.000122213
10:19:52 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.094193ms elapsed_secs=0.003094193
10:19:52 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=187.498µs elapsed_secs=0.000187498
10:19:52 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=327.004µs elapsed_secs=0.000327004
10:19:52 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.038µs elapsed_secs=7.0038e-5
10:19:52 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.115µs elapsed_secs=5.1115e-5
10:19:52 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.357364ms elapsed_secs=0.003357364
10:19:52 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.172426ms elapsed_secs=0.003172426
10:19:52 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.349019ms elapsed_secs=0.003349019
10:19:52 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.26079ms elapsed_secs=0.00326079
10:19:52 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.368114ms elapsed_secs=0.003368114
10:19:52 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=343.691µs elapsed_secs=0.000343691
10:19:52 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.381594ms elapsed_secs=0.003381594
10:19:52 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.603µs elapsed_secs=0.000104603
10:19:52 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=264.542µs elapsed_secs=0.000264542
10:19:52 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.328147ms elapsed_secs=0.003328147
10:19:52 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=197.906µs elapsed_secs=0.000197906
10:19:52 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=453.775µs elapsed_secs=0.000453775
10:19:52 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=264.461µs elapsed_secs=0.000264461
10:19:52 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=186.246µs elapsed_secs=0.000186246
10:19:52 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.36µs elapsed_secs=0.00010136
10:19:52 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=238.379µs elapsed_secs=0.000238379
10:19:52 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=129.396µs elapsed_secs=0.000129396
10:19:52 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.786µs elapsed_secs=6.5786e-5
10:19:52 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.605µs elapsed_secs=5.7605e-5
10:19:52 [DEBUG] (62) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.084867ms elapsed_secs=0.003084867
10:19:52 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.024398ms elapsed_secs=0.003024398
10:19:52 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.517µs elapsed_secs=6.2517e-5
10:19:52 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.663µs elapsed_secs=6.4663e-5
10:19:52 [DEBUG] (62) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=181.531µs elapsed_secs=0.000181531
10:19:52 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=123.818µs elapsed_secs=0.000123818
10:19:52 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.968079ms elapsed_secs=0.002968079
10:19:52 [DEBUG] (62) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.766µs elapsed_secs=0.000155766
10:19:52 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.03µs elapsed_secs=4.703e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=171.876µs elapsed_secs=0.000171876
10:19:52 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.529µs elapsed_secs=8.7529e-5
10:19:52 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.593012ms elapsed_secs=0.002593012
10:19:52 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.956074ms elapsed_secs=0.002956074
10:19:52 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=486.598µs elapsed_secs=0.000486598
10:19:52 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=414.833µs elapsed_secs=0.000414833
10:19:52 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.183791ms elapsed_secs=0.003183791
10:19:52 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.296µs elapsed_secs=0.000120296
10:19:52 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=376.221µs elapsed_secs=0.000376221
10:19:52 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=395.394µs elapsed_secs=0.000395394
10:19:52 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.818µs elapsed_secs=0.000108818
10:19:52 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.103583ms elapsed_secs=0.005103583
10:19:52 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.934958ms elapsed_secs=0.004934958
10:19:52 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.074839ms elapsed_secs=0.005074839
10:19:52 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.610536ms elapsed_secs=0.004610536
10:19:52 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=397.176µs elapsed_secs=0.000397176
10:19:52 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=349.472µs elapsed_secs=0.000349472
10:19:52 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=394.457µs elapsed_secs=0.000394457
10:19:52 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.715µs elapsed_secs=6.5715e-5
10:19:52 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=490.361µs elapsed_secs=0.000490361
10:19:52 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.287µs elapsed_secs=0.000111287
10:19:52 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.741µs elapsed_secs=4.8741e-5
10:19:52 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.281626ms elapsed_secs=0.005281626
10:19:52 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.350538ms elapsed_secs=0.005350538
10:19:52 [DEBUG] (62) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.37959ms elapsed_secs=0.00537959
10:19:52 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=319.984µs elapsed_secs=0.000319984
10:19:52 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=483.563µs elapsed_secs=0.000483563
10:19:52 [DEBUG] (62) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=184.815µs elapsed_secs=0.000184815
10:19:52 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.8µs elapsed_secs=4.88e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.364392ms elapsed_secs=0.003364392
10:19:52 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=539.635µs elapsed_secs=0.000539635
10:19:52 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.436236ms elapsed_secs=0.003436236
10:19:52 [DEBUG] (62) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.707µs elapsed_secs=4.7707e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=151.156µs elapsed_secs=0.000151156
10:19:52 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.24µs elapsed_secs=4.924e-5
10:19:52 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.965µs elapsed_secs=4.2965e-5
10:19:52 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=92.146µs elapsed_secs=9.2146e-5
10:19:52 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.909561ms elapsed_secs=0.002909561
10:19:52 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.990615ms elapsed_secs=0.002990615
10:19:52 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.91µs elapsed_secs=0.00015991
10:19:52 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=284.463µs elapsed_secs=0.000284463
10:19:52 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.248µs elapsed_secs=6.0248e-5
10:19:52 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.663626ms elapsed_secs=0.002663626
10:19:52 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=240.662µs elapsed_secs=0.000240662
10:19:52 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.985µs elapsed_secs=0.000136985
10:19:52 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.573584ms elapsed_secs=0.003573584
10:19:52 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.84764ms elapsed_secs=0.00384764
10:19:52 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.670478ms elapsed_secs=0.003670478
10:19:52 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.469279ms elapsed_secs=0.003469279
10:19:52 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=968.887µs elapsed_secs=0.000968887
10:19:52 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=891.81µs elapsed_secs=0.00089181
10:19:52 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.013178ms elapsed_secs=0.001013178
10:19:52 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=523.662µs elapsed_secs=0.000523662
10:19:52 [DEBUG] (62) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.829727ms elapsed_secs=0.004829727
10:19:52 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.907µs elapsed_secs=6.7907e-5
10:19:52 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.191µs elapsed_secs=5.9191e-5
10:19:52 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.568224ms elapsed_secs=0.004568224
10:19:52 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.029µs elapsed_secs=8.8029e-5
10:19:52 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=44.247µs elapsed_secs=4.4247e-5
10:19:52 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.75093ms elapsed_secs=0.00375093
10:19:52 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=483.712µs elapsed_secs=0.000483712
10:19:52 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.098326ms elapsed_secs=0.004098326
10:19:52 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.208589ms elapsed_secs=0.004208589
10:19:52 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.969µs elapsed_secs=0.000139969
10:19:52 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=170.807µs elapsed_secs=0.000170807
10:19:52 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.788437ms elapsed_secs=0.002788437
10:19:52 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.715µs elapsed_secs=6.4715e-5
10:19:52 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=205.265µs elapsed_secs=0.000205265
10:19:52 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.647µs elapsed_secs=4.9647e-5
10:19:52 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.587839ms elapsed_secs=0.002587839
10:19:52 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=285.392µs elapsed_secs=0.000285392
10:19:52 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.92µs elapsed_secs=0.00013292
10:19:52 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.75531ms elapsed_secs=0.00275531
10:19:52 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.783848ms elapsed_secs=0.002783848
10:19:52 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=87.852µs elapsed_secs=8.7852e-5
10:19:52 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.648µs elapsed_secs=5.0648e-5
10:19:52 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.929437ms elapsed_secs=0.002929437
10:19:52 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.900371ms elapsed_secs=0.002900371
10:19:52 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.903569ms elapsed_secs=0.002903569
10:19:52 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.734832ms elapsed_secs=0.002734832
10:19:52 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=128.16µs elapsed_secs=0.00012816
10:19:52 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.482µs elapsed_secs=4.9482e-5
10:19:52 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.353831ms elapsed_secs=0.002353831
10:19:52 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.438883ms elapsed_secs=0.002438883
10:19:52 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.30716ms elapsed_secs=0.00230716
10:19:52 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.847058ms elapsed_secs=0.003847058
10:19:52 [DEBUG] (61) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=57.449019ms elapsed_secs=0.057449019
10:19:52 [DEBUG] (40) menahel::handlers::project: No target specified. using default target: all
10:19:52 [DEBUG] (40) menahel::handlers::project: Getting projects with pagenation: page: Some(1), page_size: Some(4)
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=39.266µs elapsed_secs=3.9266e-5
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Got projects count: 10
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Get users with pagenation: offset: 0, limit: 4
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=195.73µs elapsed_secs=0.00019573
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }]
10:19:52 [DEBUG] (40) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }], count: 4, rc: 0, message: "OK", pagenation: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "84502916-23a3-4bf0-b312-8f5fd980682b", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (40) menahel::handlers::project: No target specified. using default target: all
10:19:52 [DEBUG] (40) menahel::handlers::project: Getting projects with pagenation: page: Some(2), page_size: Some(4)
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=10.653µs elapsed_secs=1.0653e-5
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Got projects count: 10
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Get users with pagenation: offset: 4, limit: 4
10:19:52 [DEBUG] (62) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.222701ms elapsed_secs=0.054222701
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=70.066µs elapsed_secs=7.0066e-5
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }]
10:19:52 [DEBUG] (40) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }], count: 4, rc: 0, message: "OK", pagenation: Some(Pagination { current_page: 2, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "1297b8ec-72b3-4195-9764-a2a131d236a8", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (40) menahel::handlers::project: No target specified. using default target: all
10:19:52 [DEBUG] (40) menahel::handlers::project: Getting projects with pagenation: page: Some(3), page_size: Some(4)
10:19:52 [DEBUG] (70) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.556639ms elapsed_secs=0.053556639
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=45.413µs elapsed_secs=4.5413e-5
10:19:52 [DEBUG] (65) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.913067ms elapsed_secs=0.053913067
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Got projects count: 10
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Get users with pagenation: offset: 8, limit: 4
10:19:52 [DEBUG] (38) menahel::handlers::project: No target specified. using default target: all
10:19:52 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: Some(1), page_size: Some(1000))")
10:19:52 [DEBUG] (61) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=2 elapsed=44.226µs elapsed_secs=4.4226e-5
10:19:52 [DEBUG] (40) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }]
10:19:52 [DEBUG] (62) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=368.64µs elapsed_secs=0.00036864
10:19:52 [ERROR] Error: InternalServerError("[ProjectUpdateFailed] Failed to update project due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: projects.name)")
10:19:52 [DEBUG] (40) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }], count: 2, rc: 0, message: "OK", pagenation: Some(Pagination { current_page: 3, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "0a9c6855-c83d-4d1d-a4ca-96c363ab9297", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (70) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=155.307µs elapsed_secs=0.000155307
10:19:52 [INFO] Updated project: None
10:19:52 [ERROR] Error: NotFound("[ProjectUpdateFailed] Failed to update project due to database operation failure: (ID = Some(100))")
10:19:52 [DEBUG] (73) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.322916ms elapsed_secs=0.054322916
10:19:52 [DEBUG] (64) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.668192ms elapsed_secs=0.053668192
10:19:52 [DEBUG] (71) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.109677ms elapsed_secs=0.055109677
10:19:52 [DEBUG] (73) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=284.681µs elapsed_secs=0.000284681
10:19:52 [ERROR] Error: InternalServerError("[UserCreateFailed] Failed to create user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
10:19:52 [ERROR] Error: BadRequest("[ProjectNameTooLong] Project name cannot be longer than 128 characters: (Name = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)")
10:19:52 [DEBUG] (74) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.049678ms elapsed_secs=0.055049678
10:19:52 [DEBUG] (77) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.113418ms elapsed_secs=0.055113418
10:19:52 [DEBUG] (72) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=57.331975ms elapsed_secs=0.057331975
10:19:52 [ERROR] Error: BadRequest("[UserEmailInvalid] Invalid email address: (Email = test11example.com)")
10:19:52 [DEBUG] (79) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.233301ms elapsed_secs=0.009233301
10:19:52 [DEBUG] (64) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=3.668561ms elapsed_secs=0.003668561
10:19:52 [DEBUG] (82) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.576279ms elapsed_secs=0.008576279
10:19:52 [DEBUG] (83) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.644289ms elapsed_secs=0.008644289
10:19:52 [INFO] Updated project: Some(Project { id: Some(0), name: "TestProject11" })
10:19:52 [ERROR] Error: BadRequest("[ProjectHandlerPathAndBodyIdMismatch] Path and body id mismatch: (path_id: 0, body_id: Some(1))")
10:19:52 [DEBUG] (74) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=423.408µs elapsed_secs=0.000423408
10:19:52 [DEBUG] (75) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.780309ms elapsed_secs=0.056780309
10:19:52 [ERROR] Error: InternalServerError("[UserCreateFailed] Failed to create user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
10:19:52 [DEBUG] (92) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=270.929µs elapsed_secs=0.000270929
10:19:52 [DEBUG] (94) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.165µs elapsed_secs=3.0165e-5
10:19:52 [DEBUG] (93) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.068µs elapsed_secs=4.5068e-5
10:19:52 [DEBUG] (64) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=66.537µs elapsed_secs=6.6537e-5
10:19:52 [DEBUG] (41) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(0), name: "TestProject11" })
10:19:52 [DEBUG] (41) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject11" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "14cf3726-fd50-4171-8907-84184e355031", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (85) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.097579ms elapsed_secs=0.011097579
10:19:52 [DEBUG] (76) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.783665ms elapsed_secs=0.055783665
10:19:52 [DEBUG] (101) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=115.748µs elapsed_secs=0.000115748
10:19:52 [ERROR] Error: BadRequest("[UserNameEmpty] Username cannot be empty: (Name = )")
10:19:52 [DEBUG] (75) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=4.127372ms elapsed_secs=0.004127372
10:19:52 [INFO] Created user: User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" }
10:19:52 [DEBUG] (75) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=115.648µs elapsed_secs=0.000115648
10:19:52 [DEBUG] (58) menahel::repository::user_repo: Get user by name: Some(User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" })
10:19:52 [DEBUG] (58) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "8c650128-2df2-4459-9d14-3578779cf8b0", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (89) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.391548ms elapsed_secs=0.010391548
10:19:52 [DEBUG] (87) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.841218ms elapsed_secs=0.011841218
10:19:52 [DEBUG] (106) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=145.914µs elapsed_secs=0.000145914
10:19:52 [DEBUG] (105) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=196.334µs elapsed_secs=0.000196334
10:19:52 [DEBUG] (92) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.895158ms elapsed_secs=0.008895158
10:19:52 [DEBUG] (92) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=117.005µs elapsed_secs=0.000117005
10:19:52 [DEBUG] (96) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.848665ms elapsed_secs=0.009848665
10:19:52 [DEBUG] (92) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=81.616µs elapsed_secs=8.1616e-5
10:19:52 [DEBUG] (92) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=380.223µs elapsed_secs=0.000380223
10:19:52 [DEBUG] (108) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.104µs elapsed_secs=5.2104e-5
10:19:52 [DEBUG] (91) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.534385ms elapsed_secs=0.012534385
10:19:52 [DEBUG] (92) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.075µs elapsed_secs=9.2075e-5
10:19:52 [DEBUG] (109) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=64.376µs elapsed_secs=6.4376e-5
10:19:52 [DEBUG] (94) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.009411ms elapsed_secs=0.013009411
10:19:52 [DEBUG] (93) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.157051ms elapsed_secs=0.013157051
10:19:52 [DEBUG] (98) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.167984ms elapsed_secs=0.013167984
10:19:52 [DEBUG] (94) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=452.302µs elapsed_secs=0.000452302
10:19:52 [DEBUG] (93) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=458.465µs elapsed_secs=0.000458465
10:19:52 [DEBUG] (93) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=151.989µs elapsed_secs=0.000151989
10:19:52 [DEBUG] (94) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=256.014µs elapsed_secs=0.000256014
10:19:52 [DEBUG] (101) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.190286ms elapsed_secs=0.013190286
10:19:52 [DEBUG] (110) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=91.804µs elapsed_secs=9.1804e-5
10:19:52 [DEBUG] (103) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.858277ms elapsed_secs=0.011858277
10:19:52 [DEBUG] (93) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=417.188µs elapsed_secs=0.000417188
10:19:52 [DEBUG] (100) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.309362ms elapsed_secs=0.015309362
10:19:52 [DEBUG] (101) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=300.963µs elapsed_secs=0.000300963
10:19:52 [DEBUG] (94) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=491.984µs elapsed_secs=0.000491984
10:19:52 [DEBUG] (93) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.252µs elapsed_secs=7.5252e-5
10:19:52 [DEBUG] (101) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=130.66µs elapsed_secs=0.00013066
10:19:52 [DEBUG] (111) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=116.677µs elapsed_secs=0.000116677
10:19:52 [DEBUG] (94) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=225.748µs elapsed_secs=0.000225748
10:19:52 [DEBUG] (112) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.182µs elapsed_secs=5.1182e-5
10:19:52 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=165.136µs elapsed_secs=0.000165136
10:19:52 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.466µs elapsed_secs=0.000108466
10:19:52 [DEBUG] (92) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.186807ms elapsed_secs=0.004186807
10:19:52 [DEBUG] (92) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=113.803µs elapsed_secs=0.000113803
10:19:52 [DEBUG] (92) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.954µs elapsed_secs=6.8954e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.934872ms elapsed_secs=0.012934872
10:19:52 [DEBUG] (106) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.220496ms elapsed_secs=0.013220496
10:19:52 [DEBUG] (107) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.179885ms elapsed_secs=0.012179885
10:19:52 [DEBUG] (105) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=67.808µs elapsed_secs=6.7808e-5
10:19:52 [DEBUG] (106) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=57.404µs elapsed_secs=5.7404e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.686µs elapsed_secs=6.3686e-5
10:19:52 [DEBUG] (106) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=51.728µs elapsed_secs=5.1728e-5
10:19:52 [DEBUG] (108) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.852592ms elapsed_secs=0.011852592
10:19:52 [DEBUG] (109) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.6769ms elapsed_secs=0.0106769
10:19:52 [DEBUG] (113) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=115.954µs elapsed_secs=0.000115954
10:19:52 [DEBUG] (108) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=102.382µs elapsed_secs=0.000102382
10:19:52 [DEBUG] (109) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.654µs elapsed_secs=9.7654e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=414.139µs elapsed_secs=0.000414139
10:19:52 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=422.51µs elapsed_secs=0.00042251
10:19:52 [DEBUG] (108) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.636µs elapsed_secs=5.6636e-5
10:19:52 [DEBUG] (109) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.224µs elapsed_secs=7.5224e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.067µs elapsed_secs=9.5067e-5
10:19:52 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.526µs elapsed_secs=5.9526e-5
10:19:52 [DEBUG] (93) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.56819ms elapsed_secs=0.00256819
10:19:52 [DEBUG] (94) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.671285ms elapsed_secs=0.002671285
10:19:52 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.556865ms elapsed_secs=0.002556865
10:19:52 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=608.756µs elapsed_secs=0.000608756
10:19:52 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=546.895µs elapsed_secs=0.000546895
10:19:52 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.228µs elapsed_secs=0.000134228
10:19:52 [DEBUG] (93) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=399.558µs elapsed_secs=0.000399558
10:19:52 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.529µs elapsed_secs=6.0529e-5
10:19:52 [DEBUG] (94) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=644.575µs elapsed_secs=0.000644575
10:19:52 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=312.836µs elapsed_secs=0.000312836
10:19:52 [DEBUG] (93) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.71µs elapsed_secs=6.271e-5
10:19:52 [DEBUG] (94) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.69µs elapsed_secs=0.00014169
10:19:52 [DEBUG] (111) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=6.98097ms elapsed_secs=0.00698097
10:19:52 [DEBUG] (110) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.557752ms elapsed_secs=0.008557752
10:19:52 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.029µs elapsed_secs=0.000108029
10:19:52 [DEBUG] (111) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=144.634µs elapsed_secs=0.000144634
10:19:52 [DEBUG] (110) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.401µs elapsed_secs=8.1401e-5
10:19:52 [DEBUG] (111) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=131.849µs elapsed_secs=0.000131849
10:19:52 [DEBUG] (112) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.171793ms elapsed_secs=0.008171793
10:19:52 [DEBUG] (92) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.688204ms elapsed_secs=0.002688204
10:19:52 [DEBUG] (110) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=112.152µs elapsed_secs=0.000112152
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=319.628µs elapsed_secs=0.000319628
10:19:52 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=295.826µs elapsed_secs=0.000295826
10:19:52 [DEBUG] (92) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=236.498µs elapsed_secs=0.000236498
10:19:52 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=244.16µs elapsed_secs=0.00024416
10:19:52 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=277.143µs elapsed_secs=0.000277143
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=323.934µs elapsed_secs=0.000323934
10:19:52 [DEBUG] (92) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.287µs elapsed_secs=0.000124287
10:19:52 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=222.789µs elapsed_secs=0.000222789
10:19:52 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=478.128µs elapsed_secs=0.000478128
10:19:52 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.95µs elapsed_secs=0.00010395
10:19:52 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.714222ms elapsed_secs=0.004714222
10:19:52 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.706188ms elapsed_secs=0.004706188
10:19:52 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=310.83µs elapsed_secs=0.00031083
10:19:52 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=157.115µs elapsed_secs=0.000157115
10:19:52 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.009µs elapsed_secs=0.000133009
10:19:52 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.207µs elapsed_secs=9.3207e-5
10:19:52 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.1889ms elapsed_secs=0.0031889
10:19:52 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.19707ms elapsed_secs=0.00319707
10:19:52 [DEBUG] (93) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.217898ms elapsed_secs=0.003217898
10:19:52 [DEBUG] (94) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.165731ms elapsed_secs=0.003165731
10:19:52 [DEBUG] (113) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.200942ms elapsed_secs=0.010200942
10:19:52 [DEBUG] (113) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=204.562µs elapsed_secs=0.000204562
10:19:52 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=671.949µs elapsed_secs=0.000671949
10:19:52 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.84271ms elapsed_secs=0.00184271
10:19:52 [DEBUG] (94) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=534.551µs elapsed_secs=0.000534551
10:19:52 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=622.846µs elapsed_secs=0.000622846
10:19:52 [DEBUG] (94) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.298µs elapsed_secs=7.5298e-5
10:19:52 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=111.398µs elapsed_secs=0.000111398
10:19:52 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=43.8µs elapsed_secs=4.38e-5
10:19:52 [DEBUG] (93) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=688.676µs elapsed_secs=0.000688676
10:19:52 [DEBUG] (113) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=89.383µs elapsed_secs=8.9383e-5
10:19:52 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.484µs elapsed_secs=5.3484e-5
10:19:52 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.31µs elapsed_secs=6.431e-5
10:19:52 [DEBUG] (92) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.431789ms elapsed_secs=0.002431789
10:19:52 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.428991ms elapsed_secs=0.002428991
10:19:52 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.621918ms elapsed_secs=0.002621918
10:19:52 [DEBUG] (93) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.467µs elapsed_secs=7.0467e-5
10:19:52 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=138.481µs elapsed_secs=0.000138481
10:19:52 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=277.943µs elapsed_secs=0.000277943
10:19:52 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=173.299µs elapsed_secs=0.000173299
10:19:52 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.488µs elapsed_secs=5.8488e-5
10:19:52 [DEBUG] (92) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=434.654µs elapsed_secs=0.000434654
10:19:52 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.643051ms elapsed_secs=0.002643051
10:19:52 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.512µs elapsed_secs=8.6512e-5
10:19:52 [DEBUG] (92) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.143µs elapsed_secs=0.000114143
10:19:52 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.116µs elapsed_secs=5.9116e-5
10:19:52 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=164.32µs elapsed_secs=0.00016432
10:19:52 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.658µs elapsed_secs=5.5658e-5
10:19:52 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.712709ms elapsed_secs=0.002712709
10:19:52 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.345231ms elapsed_secs=0.003345231
10:19:52 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=155.568µs elapsed_secs=0.000155568
10:19:52 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.183µs elapsed_secs=4.9183e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=87.771µs elapsed_secs=8.7771e-5
10:19:52 [DEBUG] (94) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.693103ms elapsed_secs=0.002693103
10:19:52 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.398µs elapsed_secs=9.4398e-5
10:19:52 [DEBUG] (94) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=114.91µs elapsed_secs=0.00011491
10:19:52 [DEBUG] (94) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.694µs elapsed_secs=5.5694e-5
10:19:52 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.723244ms elapsed_secs=0.002723244
10:19:52 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.671129ms elapsed_secs=0.002671129
10:19:52 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.659458ms elapsed_secs=0.002659458
10:19:52 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=115.799µs elapsed_secs=0.000115799
10:19:52 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=176.726µs elapsed_secs=0.000176726
10:19:52 [DEBUG] (93) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.607434ms elapsed_secs=0.002607434
10:19:52 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=191.264µs elapsed_secs=0.000191264
10:19:52 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.004µs elapsed_secs=0.000138004
10:19:52 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.653µs elapsed_secs=0.000116653
10:19:52 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=183.728µs elapsed_secs=0.000183728
10:19:52 [DEBUG] (93) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=420.977µs elapsed_secs=0.000420977
10:19:52 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.031967ms elapsed_secs=0.004031967
10:19:52 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.032918ms elapsed_secs=0.004032918
10:19:52 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.044883ms elapsed_secs=0.004044883
10:19:52 [DEBUG] (92) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.150998ms elapsed_secs=0.004150998
10:19:52 [DEBUG] (93) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=342.16µs elapsed_secs=0.00034216
10:19:52 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=269.163µs elapsed_secs=0.000269163
10:19:52 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=580.492µs elapsed_secs=0.000580492
10:19:52 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=230.098µs elapsed_secs=0.000230098
10:19:52 [DEBUG] (92) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=487.662µs elapsed_secs=0.000487662
10:19:52 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.384µs elapsed_secs=0.000167384
10:19:52 [DEBUG] (92) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.596µs elapsed_secs=5.3596e-5
10:19:52 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=463.336µs elapsed_secs=0.000463336
10:19:52 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.871441ms elapsed_secs=0.004871441
10:19:52 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.339µs elapsed_secs=5.9339e-5
10:19:52 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=148.208µs elapsed_secs=0.000148208
10:19:52 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.551µs elapsed_secs=7.8551e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.634197ms elapsed_secs=0.003634197
10:19:52 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.664984ms elapsed_secs=0.003664984
10:19:52 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=163.61µs elapsed_secs=0.00016361
10:19:52 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=86.614µs elapsed_secs=8.6614e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.264µs elapsed_secs=5.3264e-5
10:19:52 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.705µs elapsed_secs=4.1705e-5
10:19:52 [DEBUG] (94) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.857313ms elapsed_secs=0.002857313
10:19:52 [DEBUG] (94) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=199.47µs elapsed_secs=0.00019947
10:19:52 [DEBUG] (94) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.446µs elapsed_secs=5.2446e-5
10:19:52 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.610479ms elapsed_secs=0.002610479
10:19:52 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.560011ms elapsed_secs=0.002560011
10:19:52 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.568811ms elapsed_secs=0.002568811
10:19:52 [DEBUG] (93) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.627329ms elapsed_secs=0.002627329
10:19:52 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.588552ms elapsed_secs=0.002588552
10:19:52 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=103.031µs elapsed_secs=0.000103031
10:19:52 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=170.565µs elapsed_secs=0.000170565
10:19:52 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.365312ms elapsed_secs=0.002365312
10:19:52 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=557.446µs elapsed_secs=0.000557446
10:19:52 [DEBUG] (92) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.551665ms elapsed_secs=0.002551665
10:19:52 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=145.212µs elapsed_secs=0.000145212
10:19:52 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.325491ms elapsed_secs=0.002325491
10:19:52 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=205.489µs elapsed_secs=0.000205489
10:19:52 [DEBUG] (93) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=613.346µs elapsed_secs=0.000613346
10:19:52 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=421.52µs elapsed_secs=0.00042152
10:19:52 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.325722ms elapsed_secs=0.002325722
10:19:52 [DEBUG] (93) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.992µs elapsed_secs=4.8992e-5
10:19:52 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=118.592µs elapsed_secs=0.000118592
10:19:52 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.225µs elapsed_secs=4.8225e-5
10:19:52 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=92.401µs elapsed_secs=9.2401e-5
10:19:52 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.016µs elapsed_secs=5.4016e-5
10:19:52 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=101.921µs elapsed_secs=0.000101921
10:19:52 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.623µs elapsed_secs=4.5623e-5
10:19:52 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.361µs elapsed_secs=4.8361e-5
10:19:52 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.758µs elapsed_secs=4.7758e-5
10:19:52 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.514091ms elapsed_secs=0.002514091
10:19:52 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.721237ms elapsed_secs=0.002721237
10:19:52 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=214.953µs elapsed_secs=0.000214953
10:19:52 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=117.956µs elapsed_secs=0.000117956
10:19:52 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.396µs elapsed_secs=5.0396e-5
10:19:52 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.196µs elapsed_secs=8.1196e-5
10:19:52 [DEBUG] (94) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.895741ms elapsed_secs=0.002895741
10:19:52 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.427526ms elapsed_secs=0.002427526
10:19:52 [DEBUG] (93) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.453064ms elapsed_secs=0.002453064
10:19:52 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.424388ms elapsed_secs=0.002424388
10:19:52 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.440988ms elapsed_secs=0.002440988
10:19:52 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.489774ms elapsed_secs=0.002489774
10:19:52 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=118.851µs elapsed_secs=0.000118851
10:19:52 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=154.365µs elapsed_secs=0.000154365
10:19:52 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.588µs elapsed_secs=0.000101588
10:19:52 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=250.653µs elapsed_secs=0.000250653
10:19:52 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.542µs elapsed_secs=4.5542e-5
10:19:52 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.715µs elapsed_secs=4.7715e-5
10:19:52 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.063302ms elapsed_secs=0.005063302
10:19:52 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.09009ms elapsed_secs=0.00509009
10:19:52 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.056799ms elapsed_secs=0.005056799
10:19:52 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=161.921µs elapsed_secs=0.000161921
10:19:52 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=132.169µs elapsed_secs=0.000132169
10:19:52 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.117µs elapsed_secs=9.3117e-5
10:19:52 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=275.724µs elapsed_secs=0.000275724
10:19:52 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.164705ms elapsed_secs=0.005164705
10:19:52 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.118574ms elapsed_secs=0.005118574
10:19:52 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=321.308µs elapsed_secs=0.000321308
10:19:52 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.427µs elapsed_secs=5.5427e-5
10:19:52 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.727842ms elapsed_secs=0.002727842
10:19:52 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.660086ms elapsed_secs=0.002660086
10:19:52 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.773939ms elapsed_secs=0.002773939
10:19:52 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=123.931µs elapsed_secs=0.000123931
10:19:52 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.536µs elapsed_secs=4.8536e-5
10:19:52 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.164017ms elapsed_secs=0.002164017
10:19:52 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.190587ms elapsed_secs=0.002190587
10:19:52 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.021532ms elapsed_secs=0.002021532
10:19:52 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.959005ms elapsed_secs=0.001959005
10:19:52 [DEBUG] (92) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.555436ms elapsed_secs=0.052555436
10:19:52 [DEBUG] (78) actix_web::types::json: Failed to deserialize Json from payload. Request path: /users
10:19:52 [ERROR] Error: BadRequest("[UserHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
10:19:52 [DEBUG] (94) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.809859ms elapsed_secs=0.052809859
10:19:52 [DEBUG] (94) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=56.024µs elapsed_secs=5.6024e-5
10:19:52 [DEBUG] (81) menahel::repository::user_repo: Get user by id: Some(User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" })
10:19:52 [DEBUG] (81) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "a814d357-4ed0-4528-a257-bc7dd7ae93bb", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (101) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.912476ms elapsed_secs=0.052912476
10:19:52 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidTarget] Invalid target. Target must be 'all', 'name', or 'id': (target: \"invalid\")")
10:19:52 [DEBUG] (93) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.323741ms elapsed_secs=0.055323741
10:19:52 [DEBUG] (80) menahel::handlers::user: No target specified, using default target: All
10:19:52 [DEBUG] (80) menahel::handlers::user: Getting all users
10:19:52 [DEBUG] (93) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=1 rows_returned=10 elapsed=185.597µs elapsed_secs=0.000185597
10:19:52 [DEBUG] (80) menahel::repository::user_repo: Get all users: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }, User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }, User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }]
10:19:52 [DEBUG] (80) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }, User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }, User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }], count: 10, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "c7c04fb3-801b-41c4-b483-41acf6ae87bc", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (105) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=51.666483ms elapsed_secs=0.051666483
10:19:52 [DEBUG] (106) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.025118ms elapsed_secs=0.052025118
10:19:52 [DEBUG] (115) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.196871ms elapsed_secs=0.009196871
10:19:52 [DEBUG] (105) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=1 rows_returned=0 elapsed=142.683µs elapsed_secs=0.000142683
10:19:52 [DEBUG] (88) menahel::repository::user_repo: Get user by id: None
10:19:52 [ERROR] Error: NotFound("[UserGetByIdNotFound] User not found: (ID = 1000)")
10:19:52 [DEBUG] (123) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.124µs elapsed_secs=4.6124e-5
10:19:52 [DEBUG] (109) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.438707ms elapsed_secs=0.053438707
10:19:52 [DEBUG] (108) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.687955ms elapsed_secs=0.056687955
10:19:52 [DEBUG] (109) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=254.779µs elapsed_secs=0.000254779
10:19:52 [ERROR] Error: BadRequest("[UserHandlerGetUsersNoNameSpecified] Name is not specified: ()")
10:19:52 [DEBUG] (90) menahel::repository::user_repo: Get user by name: Some(User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" })
10:19:52 [DEBUG] (90) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "0b2679c0-03a0-4e3b-a3cc-4d02eed78b9f", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (110) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.709839ms elapsed_secs=0.056709839
10:19:52 [DEBUG] (111) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.506148ms elapsed_secs=0.056506148
10:19:52 [DEBUG] (112) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.400614ms elapsed_secs=0.056400614
10:19:52 [DEBUG] (102) menahel::handlers::user: No target specified, using default target: All
10:19:52 [DEBUG] (119) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.929929ms elapsed_secs=0.011929929
10:19:52 [DEBUG] (117) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.265493ms elapsed_secs=0.014265493
10:19:52 [DEBUG] (99) menahel::handlers::user: No target specified, using default target: All
10:19:52 [DEBUG] (110) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=398.433µs elapsed_secs=0.000398433
10:19:52 [DEBUG] (99) menahel::handlers::user: Getting users with pagenation: page: Some(1), page_size: Some(4)
10:19:52 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(0), page_size: Some(4))")
10:19:52 [DEBUG] (97) menahel::repository::user_repo: Get user by name: None
10:19:52 [ERROR] Error: NotFound("[UserGetByNameNotFound] User not found: (Name = not_exists)")
10:19:52 [DEBUG] (132) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=197.883µs elapsed_secs=0.000197883
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=248.11µs elapsed_secs=0.00024811
10:19:52 [DEBUG] (131) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=384.936µs elapsed_secs=0.000384936
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users count with transaction: 10
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users with pagenation: offset: 0, limit: 4
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=326.448µs elapsed_secs=0.000326448
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }]
10:19:52 [DEBUG] (99) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "8600613e-07f5-4efc-ba48-318fed299594", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (99) menahel::handlers::user: No target specified, using default target: All
10:19:52 [DEBUG] (99) menahel::handlers::user: Getting users with pagenation: page: Some(2), page_size: Some(4)
10:19:52 [DEBUG] (123) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.397591ms elapsed_secs=0.014397591
10:19:52 [DEBUG] (126) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.549401ms elapsed_secs=0.013549401
10:19:52 [DEBUG] (121) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.785182ms elapsed_secs=0.014785182
10:19:52 [DEBUG] (124) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.456735ms elapsed_secs=0.014456735
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=26.038µs elapsed_secs=2.6038e-5
10:19:52 [DEBUG] (123) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=175.997µs elapsed_secs=0.000175997
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users count with transaction: 10
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users with pagenation: offset: 4, limit: 4
10:19:52 [DEBUG] (113) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=61.878151ms elapsed_secs=0.061878151
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=75.465µs elapsed_secs=7.5465e-5
10:19:52 [DEBUG] (137) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.469µs elapsed_secs=7.3469e-5
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }]
10:19:52 [DEBUG] (123) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=285.54µs elapsed_secs=0.00028554
10:19:52 [DEBUG] (104) menahel::handlers::user: No target specified, using default target: All
10:19:52 [DEBUG] (99) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 2, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "75980faa-d218-4308-8b30-ff1af85d0f71", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (138) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=159.606µs elapsed_secs=0.000159606
10:19:52 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: None, page_size: Some(10))")
10:19:52 [DEBUG] (139) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=124.341µs elapsed_secs=0.000124341
10:19:52 [DEBUG] (123) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=335.059µs elapsed_secs=0.000335059
10:19:52 [DEBUG] (99) menahel::handlers::user: No target specified, using default target: All
10:19:52 [DEBUG] (99) menahel::handlers::user: Getting users with pagenation: page: Some(3), page_size: Some(4)
10:19:52 [DEBUG] (123) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.945µs elapsed_secs=8.8945e-5
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=25.811µs elapsed_secs=2.5811e-5
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users count with transaction: 10
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users with pagenation: offset: 8, limit: 4
10:19:52 [DEBUG] (112) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=2 elapsed=67.221µs elapsed_secs=6.7221e-5
10:19:52 [DEBUG] (99) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }]
10:19:52 [DEBUG] (99) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }], count: 2, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 3, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "5ae146bb-1ad7-4bf5-aa7e-6ae83807d01e", api_version: "0.1.0" }) }
10:19:52 [DEBUG] (129) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.544041ms elapsed_secs=0.010544041
10:19:52 [DEBUG] (142) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.143µs elapsed_secs=6.8143e-5
10:19:52 [DEBUG] (143) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=180.951µs elapsed_secs=0.000180951
10:19:53 [DEBUG] (130) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.753241ms elapsed_secs=0.012753241
10:19:53 [DEBUG] (146) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.928µs elapsed_secs=4.3928e-5
10:19:53 [DEBUG] (131) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.84263ms elapsed_secs=0.00984263
10:19:53 [DEBUG] (132) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.039632ms elapsed_secs=0.010039632
10:19:53 [DEBUG] (135) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.011281ms elapsed_secs=0.010011281
10:19:53 [DEBUG] (147) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.27µs elapsed_secs=7.127e-5
10:19:53 [DEBUG] (132) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.023µs elapsed_secs=8.1023e-5
10:19:53 [DEBUG] (136) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.864868ms elapsed_secs=0.010864868
10:19:53 [DEBUG] (131) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=222.024µs elapsed_secs=0.000222024
10:19:53 [DEBUG] (132) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=141.533µs elapsed_secs=0.000141533
10:19:53 [DEBUG] (131) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=125.093µs elapsed_secs=0.000125093
10:19:53 [DEBUG] (123) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.548847ms elapsed_secs=0.003548847
10:19:53 [DEBUG] (149) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.994µs elapsed_secs=4.9994e-5
10:19:53 [DEBUG] (148) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=100.622µs elapsed_secs=0.000100622
10:19:53 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=557.861µs elapsed_secs=0.000557861
10:19:53 [DEBUG] (131) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=216.959µs elapsed_secs=0.000216959
10:19:53 [DEBUG] (123) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=333.893µs elapsed_secs=0.000333893
10:19:53 [DEBUG] (138) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.427155ms elapsed_secs=0.009427155
10:19:53 [DEBUG] (139) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.290261ms elapsed_secs=0.009290261
10:19:53 [DEBUG] (137) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.26816ms elapsed_secs=0.01026816
10:19:53 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=323.272µs elapsed_secs=0.000323272
10:19:53 [DEBUG] (123) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=371.575µs elapsed_secs=0.000371575
10:19:53 [DEBUG] (131) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=415.086µs elapsed_secs=0.000415086
10:19:53 [DEBUG] (139) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=530.245µs elapsed_secs=0.000530245
10:19:53 [DEBUG] (137) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=272.987µs elapsed_secs=0.000272987
10:19:53 [DEBUG] (139) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=218.042µs elapsed_secs=0.000218042
10:19:53 [DEBUG] (138) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=581.512µs elapsed_secs=0.000581512
10:19:53 [DEBUG] (137) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=226.869µs elapsed_secs=0.000226869
10:19:53 [DEBUG] (138) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=117.308µs elapsed_secs=0.000117308
10:19:53 [DEBUG] (139) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=346.608µs elapsed_secs=0.000346608
10:19:53 [DEBUG] (137) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=219.016µs elapsed_secs=0.000219016
10:19:53 [DEBUG] (139) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.289µs elapsed_secs=9.9289e-5
10:19:53 [DEBUG] (137) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=269.069µs elapsed_secs=0.000269069
10:19:53 [DEBUG] (138) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=470.842µs elapsed_secs=0.000470842
10:19:53 [DEBUG] (138) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.708µs elapsed_secs=0.000111708
10:19:53 [DEBUG] (142) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.860598ms elapsed_secs=0.012860598
10:19:53 [DEBUG] (142) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=159.577µs elapsed_secs=0.000159577
10:19:53 [DEBUG] (142) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=91.183µs elapsed_secs=9.1183e-5
10:19:53 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=550.108µs elapsed_secs=0.000550108
10:19:53 [DEBUG] (146) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.812305ms elapsed_secs=0.012812305
10:19:53 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.805µs elapsed_secs=9.0805e-5
10:19:53 [DEBUG] (146) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.543µs elapsed_secs=8.2543e-5
10:19:53 [DEBUG] (146) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.722µs elapsed_secs=6.4722e-5
10:19:53 [DEBUG] (131) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.177701ms elapsed_secs=0.003177701
10:19:53 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.248915ms elapsed_secs=0.003248915
10:19:53 [DEBUG] (143) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.235867ms elapsed_secs=0.014235867
10:19:53 [DEBUG] (123) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.408417ms elapsed_secs=0.003408417
10:19:53 [DEBUG] (147) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.432662ms elapsed_secs=0.012432662
10:19:53 [DEBUG] (143) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.393µs elapsed_secs=7.9393e-5
10:19:53 [DEBUG] (131) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=99.741µs elapsed_secs=9.9741e-5
10:19:53 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=92.606µs elapsed_secs=9.2606e-5
10:19:53 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=513.68µs elapsed_secs=0.00051368
10:19:53 [DEBUG] (123) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=223.756µs elapsed_secs=0.000223756
10:19:53 [DEBUG] (147) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=192.731µs elapsed_secs=0.000192731
10:19:53 [DEBUG] (139) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.997443ms elapsed_secs=0.002997443
10:19:53 [DEBUG] (123) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.952µs elapsed_secs=8.2952e-5
10:19:53 [DEBUG] (147) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.894µs elapsed_secs=7.8894e-5
10:19:53 [DEBUG] (138) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.794975ms elapsed_secs=0.002794975
10:19:53 [DEBUG] (131) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.674µs elapsed_secs=9.4674e-5
10:19:53 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.959µs elapsed_secs=8.9959e-5
10:19:53 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.863µs elapsed_secs=0.000106863
10:19:53 [DEBUG] (137) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.124925ms elapsed_secs=0.003124925
10:19:53 [DEBUG] (148) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.018094ms elapsed_secs=0.011018094
10:19:53 [DEBUG] (149) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.754674ms elapsed_secs=0.012754674
10:19:53 [DEBUG] (143) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=112.161µs elapsed_secs=0.000112161
10:19:53 [DEBUG] (139) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=170.002µs elapsed_secs=0.000170002
10:19:53 [DEBUG] (149) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=147.448µs elapsed_secs=0.000147448
10:19:53 [DEBUG] (138) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=172.605µs elapsed_secs=0.000172605
10:19:53 [DEBUG] (148) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=119.733µs elapsed_secs=0.000119733
10:19:53 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=259.356µs elapsed_secs=0.000259356
10:19:53 [DEBUG] (137) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=290.997µs elapsed_secs=0.000290997
10:19:53 [DEBUG] (139) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.85µs elapsed_secs=0.00011285
10:19:53 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.352µs elapsed_secs=7.2352e-5
10:19:53 [DEBUG] (138) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.194µs elapsed_secs=0.000102194
10:19:53 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=377.891µs elapsed_secs=0.000377891
10:19:53 [DEBUG] (148) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=99.841µs elapsed_secs=9.9841e-5
10:19:53 [DEBUG] (149) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=116.392µs elapsed_secs=0.000116392
10:19:53 [DEBUG] (137) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=217.77µs elapsed_secs=0.00021777
10:19:53 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=296.18µs elapsed_secs=0.00029618
10:19:53 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=705.565µs elapsed_secs=0.000705565
10:19:53 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=810.614µs elapsed_secs=0.000810614
10:19:53 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.224µs elapsed_secs=0.000204224
10:19:53 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.752µs elapsed_secs=9.9752e-5
10:19:53 [DEBUG] (123) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.798635ms elapsed_secs=0.004798635
10:19:53 [DEBUG] (123) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=206.438µs elapsed_secs=0.000206438
10:19:53 [DEBUG] (123) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.176µs elapsed_secs=5.6176e-5
10:19:53 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.876355ms elapsed_secs=0.002876355
10:19:53 [DEBUG] (131) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.052715ms elapsed_secs=0.003052715
10:19:53 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=142.165µs elapsed_secs=0.000142165
10:19:53 [DEBUG] (131) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=104.242µs elapsed_secs=0.000104242
10:19:53 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.326µs elapsed_secs=9.8326e-5
10:19:53 [DEBUG] (131) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.87µs elapsed_secs=6.087e-5
10:19:53 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.749468ms elapsed_secs=0.002749468
10:19:53 [DEBUG] (139) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.794182ms elapsed_secs=0.002794182
10:19:53 [DEBUG] (138) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.798165ms elapsed_secs=0.002798165
10:19:53 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.760553ms elapsed_secs=0.002760553
10:19:53 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=210.494µs elapsed_secs=0.000210494
10:19:53 [DEBUG] (137) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.774591ms elapsed_secs=0.002774591
10:19:53 [DEBUG] (139) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=379.056µs elapsed_secs=0.000379056
10:19:53 [DEBUG] (138) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=430.377µs elapsed_secs=0.000430377
10:19:53 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.078258ms elapsed_secs=0.005078258
10:19:53 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=205.404µs elapsed_secs=0.000205404
10:19:53 [DEBUG] (139) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=313.38µs elapsed_secs=0.00031338
10:19:53 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=342.858µs elapsed_secs=0.000342858
10:19:53 [DEBUG] (137) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=690.161µs elapsed_secs=0.000690161
10:19:53 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.809772ms elapsed_secs=0.002809772
10:19:53 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=566.231µs elapsed_secs=0.000566231
10:19:53 [DEBUG] (137) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.351µs elapsed_secs=8.1351e-5
10:19:53 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.138µs elapsed_secs=6.8138e-5
10:19:53 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.098µs elapsed_secs=4.8098e-5
10:19:53 [DEBUG] (138) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=296.469µs elapsed_secs=0.000296469
10:19:53 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.993135ms elapsed_secs=0.002993135
10:19:53 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=119.599µs elapsed_secs=0.000119599
10:19:53 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.023µs elapsed_secs=0.000170023
10:19:53 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.226143ms elapsed_secs=0.002226143
10:19:53 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=255.346µs elapsed_secs=0.000255346
10:19:53 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.219µs elapsed_secs=0.000109219
10:19:53 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=207.532µs elapsed_secs=0.000207532
10:19:53 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.431µs elapsed_secs=4.6431e-5
10:19:53 [DEBUG] (131) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.589864ms elapsed_secs=0.003589864
10:19:53 [DEBUG] (123) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.568996ms elapsed_secs=0.003568996
10:19:53 [DEBUG] (131) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=195.376µs elapsed_secs=0.000195376
10:19:53 [DEBUG] (123) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=209.238µs elapsed_secs=0.000209238
10:19:53 [DEBUG] (131) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.688µs elapsed_secs=7.5688e-5
10:19:53 [DEBUG] (123) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.234µs elapsed_secs=9.9234e-5
10:19:53 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.181604ms elapsed_secs=0.007181604
10:19:53 [DEBUG] (137) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.087649ms elapsed_secs=0.004087649
10:19:53 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.21336ms elapsed_secs=0.00421336
10:19:53 [DEBUG] (139) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.318385ms elapsed_secs=0.004318385
10:19:53 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.275009ms elapsed_secs=0.004275009
10:19:53 [DEBUG] (138) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.36436ms elapsed_secs=0.00436436
10:19:53 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=740.917µs elapsed_secs=0.000740917
10:19:53 [DEBUG] (137) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=654.825µs elapsed_secs=0.000654825
10:19:53 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=200.684µs elapsed_secs=0.000200684
10:19:53 [DEBUG] (139) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=538.889µs elapsed_secs=0.000538889
10:19:53 [DEBUG] (138) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=371.132µs elapsed_secs=0.000371132
10:19:53 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=809.17µs elapsed_secs=0.00080917
10:19:53 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.81628ms elapsed_secs=0.00481628
10:19:53 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.573467ms elapsed_secs=0.004573467
10:19:53 [DEBUG] (137) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.578µs elapsed_secs=0.000115578
10:19:53 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=815.501µs elapsed_secs=0.000815501
10:19:53 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.123138ms elapsed_secs=0.005123138
10:19:53 [DEBUG] (139) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=221.714µs elapsed_secs=0.000221714
10:19:53 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=338.111µs elapsed_secs=0.000338111
10:19:53 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.944µs elapsed_secs=6.5944e-5
10:19:53 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.552µs elapsed_secs=0.000119552
10:19:53 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=358.429µs elapsed_secs=0.000358429
10:19:53 [DEBUG] (138) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=169.591µs elapsed_secs=0.000169591
10:19:53 [DEBUG] (131) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.797904ms elapsed_secs=0.001797904
10:19:53 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.029µs elapsed_secs=0.000177029
10:19:53 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=307.682µs elapsed_secs=0.000307682
10:19:53 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.029µs elapsed_secs=9.2029e-5
10:19:53 [DEBUG] (131) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=164.588µs elapsed_secs=0.000164588
10:19:53 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.603µs elapsed_secs=5.8603e-5
10:19:53 [DEBUG] (131) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.625µs elapsed_secs=4.6625e-5
10:19:53 [DEBUG] (123) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.465474ms elapsed_secs=0.003465474
10:19:53 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.019519ms elapsed_secs=0.005019519
10:19:53 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=205.384µs elapsed_secs=0.000205384
10:19:53 [DEBUG] (137) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.586855ms elapsed_secs=0.002586855
10:19:53 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.095µs elapsed_secs=0.000204095
10:19:53 [DEBUG] (137) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=125.144µs elapsed_secs=0.000125144
10:19:53 [DEBUG] (137) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.906µs elapsed_secs=5.0906e-5
10:19:53 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.794467ms elapsed_secs=0.002794467
10:19:53 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.78598ms elapsed_secs=0.00278598
10:19:53 [DEBUG] (139) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.797473ms elapsed_secs=0.002797473
10:19:53 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.778534ms elapsed_secs=0.002778534
10:19:53 [DEBUG] (138) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.752375ms elapsed_secs=0.002752375
10:19:53 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.786424ms elapsed_secs=0.002786424
10:19:53 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=141.011µs elapsed_secs=0.000141011
10:19:53 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=126.603µs elapsed_secs=0.000126603
10:19:53 [DEBUG] (139) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=91.215µs elapsed_secs=9.1215e-5
10:19:53 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=142.288µs elapsed_secs=0.000142288
10:19:53 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.690514ms elapsed_secs=0.002690514
10:19:53 [DEBUG] (131) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.682297ms elapsed_secs=0.002682297
10:19:53 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.12µs elapsed_secs=6.312e-5
10:19:53 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.087µs elapsed_secs=5.7087e-5
10:19:53 [DEBUG] (138) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=93.436µs elapsed_secs=9.3436e-5
10:19:53 [DEBUG] (139) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.324µs elapsed_secs=4.1324e-5
10:19:53 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.389µs elapsed_secs=4.6389e-5
10:19:53 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=122.74µs elapsed_secs=0.00012274
10:19:53 [DEBUG] (138) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=187.816µs elapsed_secs=0.000187816
10:19:53 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.266µs elapsed_secs=8.3266e-5
10:19:53 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.340291ms elapsed_secs=0.005340291
10:19:53 [DEBUG] (137) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.220909ms elapsed_secs=0.003220909
10:19:53 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=265.378µs elapsed_secs=0.000265378
10:19:53 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.399µs elapsed_secs=5.9399e-5
10:19:53 [DEBUG] (138) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.289852ms elapsed_secs=0.002289852
10:19:53 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.207345ms elapsed_secs=0.002207345
10:19:53 [DEBUG] (139) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.344016ms elapsed_secs=0.002344016
10:19:53 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.28329ms elapsed_secs=0.00228329
10:19:53 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.396661ms elapsed_secs=0.002396661
10:19:53 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.421187ms elapsed_secs=0.002421187
10:19:53 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=96.47µs elapsed_secs=9.647e-5
10:19:53 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=112.84µs elapsed_secs=0.00011284
10:19:53 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=286.251µs elapsed_secs=0.000286251
10:19:53 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=319.348µs elapsed_secs=0.000319348
10:19:53 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.744µs elapsed_secs=6.6744e-5
10:19:53 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.682µs elapsed_secs=5.9682e-5
10:19:53 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.772µs elapsed_secs=5.0772e-5
10:19:53 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.477µs elapsed_secs=5.4477e-5
10:19:53 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.421544ms elapsed_secs=0.004421544
10:19:53 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=426.335µs elapsed_secs=0.000426335
10:19:53 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.41µs elapsed_secs=5.041e-5
10:19:53 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.391162ms elapsed_secs=0.002391162
10:19:53 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.302761ms elapsed_secs=0.002302761
10:19:53 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.391013ms elapsed_secs=0.002391013
10:19:53 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.446982ms elapsed_secs=0.002446982
10:19:53 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.326814ms elapsed_secs=0.004326814
10:19:53 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=510.494µs elapsed_secs=0.000510494
10:19:53 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.467µs elapsed_secs=8.7467e-5
10:19:53 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.258287ms elapsed_secs=0.005258287
10:19:53 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=252.475µs elapsed_secs=0.000252475
10:19:53 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.086µs elapsed_secs=6.7086e-5
10:19:53 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.432697ms elapsed_secs=0.004432697
10:19:53 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=496.213µs elapsed_secs=0.000496213
10:19:53 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.205µs elapsed_secs=8.6205e-5
10:19:53 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.031356ms elapsed_secs=0.005031356
10:19:53 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.489896ms elapsed_secs=0.004489896
10:19:53 [DEBUG] (123) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.103421ms elapsed_secs=0.052103421
10:19:53 [DEBUG] (114) menahel::handlers::user: No target specified, using default target: All
10:19:53 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(1), page_size: None)")
10:19:53 [DEBUG] (152) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.893µs elapsed_secs=4.0893e-5
10:19:53 [DEBUG] (132) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.070498ms elapsed_secs=0.053070498
10:19:53 [DEBUG] (116) menahel::handlers::user: No target specified, using default target: All
10:19:53 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(1), page_size: Some(1000))")
10:19:53 [DEBUG] (131) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.214809ms elapsed_secs=0.053214809
10:19:53 [DEBUG] (155) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.804µs elapsed_secs=4.3804e-5
10:19:53 [DEBUG] (152) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.027122ms elapsed_secs=0.007027122
10:19:53 [DEBUG] (137) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.766354ms elapsed_secs=0.052766354
10:19:53 [DEBUG] (152) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=206.123µs elapsed_secs=0.000206123
10:19:53 [ERROR] Error: BadRequest("[UserHandlerPathAndBodyIdMismatch] Path ID and body ID mismatch: (path.id: 1, user_data.id: Some(2))")
10:19:53 [DEBUG] (152) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=122.72µs elapsed_secs=0.00012272
10:19:53 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=296.538µs elapsed_secs=0.000296538
10:19:53 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.28µs elapsed_secs=0.00011428
10:19:53 [DEBUG] (158) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.478µs elapsed_secs=5.1478e-5
10:19:53 [DEBUG] (137) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=79.148µs elapsed_secs=7.9148e-5
10:19:53 [DEBUG] (125) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" })
10:19:53 [DEBUG] (137) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=111.045µs elapsed_secs=0.000111045
10:19:53 [ERROR] Error: InternalServerError("[UserUpdateFailed] Failed to update user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.username)")
10:19:53 [DEBUG] (138) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.805168ms elapsed_secs=0.055805168
10:19:53 [DEBUG] (139) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.810061ms elapsed_secs=0.055810061
10:19:53 [DEBUG] (161) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=258.419µs elapsed_secs=0.000258419
10:19:53 [DEBUG] (138) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=116.12µs elapsed_secs=0.00011612
10:19:53 [DEBUG] (139) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=100.025µs elapsed_secs=0.000100025
10:19:53 [DEBUG] (120) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" })
10:19:53 [DEBUG] (122) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" })
10:19:53 [DEBUG] (139) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=872.603µs elapsed_secs=0.000872603
10:19:53 [ERROR] Error: InternalServerError("[UserUpdateFailed] Failed to update user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
10:19:53 [DEBUG] (138) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=922.188µs elapsed_secs=0.000922188
10:19:53 [DEBUG] (155) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.643513ms elapsed_secs=0.015643513
10:19:53 [DEBUG] (155) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=166.788µs elapsed_secs=0.000166788
10:19:53 [DEBUG] (164) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.577µs elapsed_secs=8.5577e-5
10:19:53 [DEBUG] (155) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=288.449µs elapsed_secs=0.000288449
10:19:53 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=506.513µs elapsed_secs=0.000506513
10:19:53 [INFO] Updated user: Some(User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" })
10:19:53 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=267.086µs elapsed_secs=0.000267086
10:19:53 [DEBUG] (138) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=69.612µs elapsed_secs=6.9612e-5
10:19:53 [DEBUG] (120) menahel::repository::user_repo: Get user by name: Some(User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" })
10:19:53 [DEBUG] (120) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "bcbe0ca8-4e17-488e-a02e-e6fb8bff0431", api_version: "0.1.0" }) }
10:19:53 [DEBUG] (147) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=62.531765ms elapsed_secs=0.062531765
10:19:53 [DEBUG] (149) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=62.799857ms elapsed_secs=0.062799857
10:19:53 [DEBUG] (148) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=62.639786ms elapsed_secs=0.062639786
10:19:53 [DEBUG] (158) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.52694ms elapsed_secs=0.01752694
10:19:53 [DEBUG] (158) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=164.814µs elapsed_secs=0.000164814
10:19:53 [DEBUG] (158) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=162.998µs elapsed_secs=0.000162998
10:19:53 [DEBUG] (167) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.574µs elapsed_secs=3.6574e-5
10:19:53 [DEBUG] (134) actix_web::types::json: Failed to deserialize Json from payload. Request path: /users/1
10:19:53 [ERROR] Error: BadRequest("[UserHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
10:19:53 [DEBUG] (143) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=65.027178ms elapsed_secs=0.065027178
10:19:53 [ERROR] Error: BadRequest("[UserEmailInvalid] Invalid email address: (Email = test1_xexample.com)")
10:19:53 [DEBUG] (161) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.589564ms elapsed_secs=0.014589564
10:19:53 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.015666ms elapsed_secs=0.001015666
10:19:53 [DEBUG] (161) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=254.724µs elapsed_secs=0.000254724
10:19:53 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.92µs elapsed_secs=0.00011492
10:19:53 [DEBUG] (161) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=107.025µs elapsed_secs=0.000107025
10:19:53 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=593.705µs elapsed_secs=0.000593705
10:19:53 [DEBUG] (172) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.569µs elapsed_secs=5.5569e-5
10:19:53 [ERROR] Error: BadRequest("[UserNameEmpty] Username cannot be empty: (Name = )")
10:19:53 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.716µs elapsed_secs=0.000146716
10:19:53 [DEBUG] (173) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=1.639683ms elapsed_secs=0.001639683
10:19:53 [DEBUG] (176) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.517µs elapsed_secs=6.8517e-5
10:19:53 [DEBUG] (148) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=1 rows_returned=0 elapsed=666.862µs elapsed_secs=0.000666862
10:19:53 [DEBUG] (133) menahel::repository::user_repo: Get user by id with transaction: None
10:19:53 [ERROR] Error: NotFound("[UserGetByIdNotFound] User not found: (ID = 100)")
10:19:53 [DEBUG] (164) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.496107ms elapsed_secs=0.013496107
10:19:53 [DEBUG] (164) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=191.584µs elapsed_secs=0.000191584
10:19:53 [DEBUG] (164) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=209.874µs elapsed_secs=0.000209874
10:19:53 [DEBUG] (179) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.345µs elapsed_secs=4.0345e-5
10:19:53 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.260673ms elapsed_secs=0.014260673
10:19:53 [DEBUG] (164) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.138943ms elapsed_secs=0.001138943
10:19:53 [DEBUG] (164) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=796.427µs elapsed_secs=0.000796427
10:19:53 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=812.703µs elapsed_secs=0.000812703
10:19:53 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=174.403µs elapsed_secs=0.000174403
10:19:53 [DEBUG] (172) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.007697ms elapsed_secs=0.014007697
10:19:53 [DEBUG] (167) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.080757ms elapsed_secs=0.017080757
10:19:53 [DEBUG] (172) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=213.756µs elapsed_secs=0.000213756
10:19:53 [DEBUG] (167) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=181.375µs elapsed_secs=0.000181375
10:19:53 [DEBUG] (172) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=110.282µs elapsed_secs=0.000110282
10:19:53 [DEBUG] (167) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.226µs elapsed_secs=7.6226e-5
10:19:53 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=554.531µs elapsed_secs=0.000554531
10:19:53 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=564.495µs elapsed_secs=0.000564495
10:19:53 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.132µs elapsed_secs=0.000118132
10:19:53 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.479µs elapsed_secs=7.6479e-5
10:19:53 [DEBUG] (173) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.267105ms elapsed_secs=0.016267105
10:19:53 [DEBUG] (176) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.246237ms elapsed_secs=0.015246237
10:19:53 [DEBUG] (173) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=93.292µs elapsed_secs=9.3292e-5
10:19:53 [DEBUG] (176) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.02µs elapsed_secs=8.502e-5
10:19:53 [DEBUG] (173) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=103.94µs elapsed_secs=0.00010394
10:19:53 [DEBUG] (176) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.498µs elapsed_secs=8.5498e-5
10:19:53 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=744.436µs elapsed_secs=0.000744436
10:19:53 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=659.32µs elapsed_secs=0.00065932
10:19:53 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=168.031µs elapsed_secs=0.000168031
10:19:53 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.45µs elapsed_secs=0.00013045
10:19:53 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.364291ms elapsed_secs=0.013364291
10:19:53 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=287.292µs elapsed_secs=0.000287292
10:19:53 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.743µs elapsed_secs=0.000105743
10:19:53 [DEBUG] (179) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.523569ms elapsed_secs=0.017523569
10:19:53 [DEBUG] (179) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=205.402µs elapsed_secs=0.000205402
10:19:53 [DEBUG] (179) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=111.258µs elapsed_secs=0.000111258
10:19:53 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.284831ms elapsed_secs=0.011284831
10:19:53 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.445524ms elapsed_secs=0.009445524
10:19:53 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=569.793µs elapsed_secs=0.000569793
10:19:53 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=655.599µs elapsed_secs=0.000655599
10:19:53 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=144.881µs elapsed_secs=0.000144881
10:19:53 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.883µs elapsed_secs=0.000118883
10:19:53 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.081µs elapsed_secs=7.7081e-5
10:19:53 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.801µs elapsed_secs=0.000135801
10:19:53 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.206828ms elapsed_secs=0.006206828
10:19:53 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=187.305µs elapsed_secs=0.000187305
10:19:53 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.684µs elapsed_secs=7.6684e-5
10:19:53 [DEBUG] (164) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.665245ms elapsed_secs=0.006665245
10:19:53 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.086678ms elapsed_secs=0.007086678
10:19:53 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.66946ms elapsed_secs=0.00766946
10:19:53 [DEBUG] (164) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=520.143µs elapsed_secs=0.000520143
10:19:53 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=223.781µs elapsed_secs=0.000223781
10:19:53 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=316.445µs elapsed_secs=0.000316445
10:19:53 [DEBUG] (164) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=215.292µs elapsed_secs=0.000215292
10:19:53 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=221.157µs elapsed_secs=0.000221157
10:19:53 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=279.311µs elapsed_secs=0.000279311
10:19:53 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.751033ms elapsed_secs=0.008751033
10:19:53 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.929176ms elapsed_secs=0.008929176
10:19:53 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=289µs elapsed_secs=0.000289
10:19:53 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=364.687µs elapsed_secs=0.000364687
10:19:53 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.627µs elapsed_secs=0.000141627
10:19:53 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.912µs elapsed_secs=5.4912e-5
10:19:53 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.948415ms elapsed_secs=0.008948415
10:19:53 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=144.682µs elapsed_secs=0.000144682
10:19:53 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.003µs elapsed_secs=7.7003e-5
10:19:53 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.429468ms elapsed_secs=0.006429468
10:19:53 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=418.241µs elapsed_secs=0.000418241
10:19:53 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=308.071µs elapsed_secs=0.000308071
10:19:53 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.582473ms elapsed_secs=0.010582473
10:19:53 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.095609ms elapsed_secs=0.011095609
10:19:53 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=188.801µs elapsed_secs=0.000188801
10:19:53 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.655µs elapsed_secs=0.000124655
10:19:53 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=394.03µs elapsed_secs=0.00039403
10:19:53 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.186µs elapsed_secs=8.9186e-5
10:19:53 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.872845ms elapsed_secs=0.010872845
10:19:53 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=147.448µs elapsed_secs=0.000147448
10:19:53 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.002µs elapsed_secs=9.7002e-5
10:19:53 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.747837ms elapsed_secs=0.007747837
10:19:53 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.011536ms elapsed_secs=0.008011536
10:19:53 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.188678ms elapsed_secs=0.006188678
10:19:53 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.597344ms elapsed_secs=0.008597344
10:19:53 [DEBUG] (164) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.633666ms elapsed_secs=0.008633666
10:19:53 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=651.884µs elapsed_secs=0.000651884
10:19:53 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=393.22µs elapsed_secs=0.00039322
10:19:53 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=431.311µs elapsed_secs=0.000431311
10:19:53 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=201.169µs elapsed_secs=0.000201169
10:19:53 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=510.861µs elapsed_secs=0.000510861
10:19:53 [DEBUG] (164) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=616.527µs elapsed_secs=0.000616527
10:19:53 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.615µs elapsed_secs=7.7615e-5
10:19:53 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.365214ms elapsed_secs=0.006365214
10:19:53 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=279.659µs elapsed_secs=0.000279659
10:19:53 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.773µs elapsed_secs=0.000135773
10:19:53 [DEBUG] (164) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=360.845µs elapsed_secs=0.000360845
10:19:53 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=170.096µs elapsed_secs=0.000170096
10:19:53 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.129µs elapsed_secs=7.1129e-5
10:19:53 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.45647ms elapsed_secs=0.00645647
10:19:53 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=136.719µs elapsed_secs=0.000136719
10:19:53 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.489µs elapsed_secs=6.7489e-5
10:19:53 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.017939ms elapsed_secs=0.008017939
10:19:53 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.208997ms elapsed_secs=0.008208997
10:19:53 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=528.236µs elapsed_secs=0.000528236
10:19:53 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=528.125µs elapsed_secs=0.000528125
10:19:53 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.024µs elapsed_secs=7.4024e-5
10:19:53 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.483µs elapsed_secs=7.8483e-5
10:19:53 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.997199ms elapsed_secs=0.007997199
10:19:53 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=155.328µs elapsed_secs=0.000155328
10:19:53 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=287.155µs elapsed_secs=0.000287155
10:19:53 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.604919ms elapsed_secs=0.006604919
10:19:53 [DEBUG] (164) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.874241ms elapsed_secs=0.006874241
10:19:53 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.921301ms elapsed_secs=0.006921301
10:19:53 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.050833ms elapsed_secs=0.007050833
10:19:53 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=212.375µs elapsed_secs=0.000212375
10:19:53 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.844579ms elapsed_secs=0.005844579
10:19:53 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.545427ms elapsed_secs=0.007545427
10:19:53 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=262.841µs elapsed_secs=0.000262841
10:19:53 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=577.44µs elapsed_secs=0.00057744
10:19:53 [DEBUG] (164) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=609.012µs elapsed_secs=0.000609012
10:19:53 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=333.493µs elapsed_secs=0.000333493
10:19:53 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=379.573µs elapsed_secs=0.000379573
10:19:53 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=223.553µs elapsed_secs=0.000223553
10:19:53 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.925µs elapsed_secs=8.8925e-5
10:19:53 [DEBUG] (164) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.372µs elapsed_secs=7.6372e-5
10:19:53 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=592.98µs elapsed_secs=0.00059298
10:19:53 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=355.76µs elapsed_secs=0.00035576
10:19:53 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.491µs elapsed_secs=7.0491e-5
10:19:53 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.380951ms elapsed_secs=0.006380951
10:19:53 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=247.074µs elapsed_secs=0.000247074
10:19:53 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.27µs elapsed_secs=7.127e-5
10:19:53 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.638739ms elapsed_secs=0.007638739
10:19:53 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.823327ms elapsed_secs=0.007823327
10:19:53 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=139.868µs elapsed_secs=0.000139868
10:19:53 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=379.598µs elapsed_secs=0.000379598
10:19:53 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=570.87µs elapsed_secs=0.00057087
10:19:53 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.275µs elapsed_secs=9.4275e-5
10:19:53 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.797577ms elapsed_secs=0.006797577
10:19:53 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.470567ms elapsed_secs=0.005470567
10:19:53 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=571.054µs elapsed_secs=0.000571054
10:19:53 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.043µs elapsed_secs=0.000150043
10:19:53 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.381121ms elapsed_secs=0.008381121
10:19:53 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.601928ms elapsed_secs=0.008601928
10:19:53 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.606058ms elapsed_secs=0.008606058
10:19:53 [DEBUG] (164) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.907611ms elapsed_secs=0.008907611
10:19:53 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=317.149µs elapsed_secs=0.000317149
10:19:53 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=316.01µs elapsed_secs=0.00031601
10:19:53 [DEBUG] (164) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=175.752µs elapsed_secs=0.000175752
10:19:53 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.064µs elapsed_secs=0.000104064
10:19:53 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.45µs elapsed_secs=0.00010445
10:19:53 [DEBUG] (164) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.1µs elapsed_secs=8.41e-5
10:19:53 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.617819ms elapsed_secs=0.010617819
10:19:53 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=166.303µs elapsed_secs=0.000166303
10:19:53 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.913µs elapsed_secs=9.7913e-5
10:19:53 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.605624ms elapsed_secs=0.009605624
10:19:53 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.578782ms elapsed_secs=0.008578782
10:19:53 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.640768ms elapsed_secs=0.010640768
10:19:53 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=215.033µs elapsed_secs=0.000215033
10:19:53 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.041µs elapsed_secs=0.000104041
10:19:53 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.536346ms elapsed_secs=0.007536346
10:19:53 [DEBUG] (164) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.782968ms elapsed_secs=0.007782968
10:19:53 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.842267ms elapsed_secs=0.008842267
10:19:53 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.126825ms elapsed_secs=0.010126825
10:19:53 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.202395ms elapsed_secs=0.009202395
10:19:53 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.601462ms elapsed_secs=0.010601462
10:19:53 [DEBUG] (142) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=233.737491ms elapsed_secs=0.233737491
10:19:53 [DEBUG] (180) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.223µs elapsed_secs=4.3223e-5
10:19:53 [DEBUG] (180) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=128.833µs elapsed_secs=0.000128833
10:19:53 [DEBUG] (140) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:53 [DEBUG] (180) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=52.393µs elapsed_secs=5.2393e-5
10:19:53 [DEBUG] (180) sqlx::query: summary="INSERT INTO comments (user_id, …" db.statement="\n\n\n                INSERT INTO comments (user_id, task_id, content, created_at)\n                VALUES ($1, $2, $3, $4)\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=186.683µs elapsed_secs=0.000186683
10:19:53 [DEBUG] (146) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=232.23023ms elapsed_secs=0.23223023
10:19:53 [DEBUG] (181) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.725µs elapsed_secs=3.9725e-5
10:19:53 [DEBUG] (181) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=365.889µs elapsed_secs=0.000365889
10:19:53 [DEBUG] (144) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:53 [DEBUG] (181) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=92.869µs elapsed_secs=9.2869e-5
10:19:53 [DEBUG] (184) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=100.367µs elapsed_secs=0.000100367
10:19:53 [DEBUG] (181) sqlx::query: summary="INSERT INTO comments (user_id, …" db.statement="\n\n\n                INSERT INTO comments (user_id, task_id, content, created_at)\n                VALUES ($1, $2, $3, $4)\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=173.429µs elapsed_secs=0.000173429
10:19:53 [DEBUG] (187) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.461µs elapsed_secs=5.5461e-5
10:19:53 [DEBUG] (184) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.725784ms elapsed_secs=0.008725784
10:19:53 [DEBUG] (184) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.53µs elapsed_secs=7.853e-5
10:19:53 [DEBUG] (184) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.771µs elapsed_secs=6.8771e-5
10:19:53 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=461.985µs elapsed_secs=0.000461985
10:19:53 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.956µs elapsed_secs=8.2956e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.627444ms elapsed_secs=0.011627444
10:19:53 [DEBUG] (187) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.353µs elapsed_secs=7.6353e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=41.986µs elapsed_secs=4.1986e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=433.209µs elapsed_secs=0.000433209
10:19:53 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.9µs elapsed_secs=6.09e-5
10:19:53 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.663363ms elapsed_secs=0.009663363
10:19:53 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=175.627µs elapsed_secs=0.000175627
10:19:53 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.522µs elapsed_secs=8.1522e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.657935ms elapsed_secs=0.006657935
10:19:53 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=350.692µs elapsed_secs=0.000350692
10:19:53 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.758µs elapsed_secs=0.000104758
10:19:53 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.938228ms elapsed_secs=0.009938228
10:19:53 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=138.35µs elapsed_secs=0.00013835
10:19:53 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.722µs elapsed_secs=6.9722e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.845378ms elapsed_secs=0.008845378
10:19:53 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=223.138µs elapsed_secs=0.000223138
10:19:53 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.972µs elapsed_secs=6.7972e-5
10:19:53 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.170446ms elapsed_secs=0.010170446
10:19:53 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=167.549µs elapsed_secs=0.000167549
10:19:53 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.731µs elapsed_secs=9.1731e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.042653ms elapsed_secs=0.012042653
10:19:53 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=154.964µs elapsed_secs=0.000154964
10:19:53 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.645µs elapsed_secs=0.000111645
10:19:53 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.033589ms elapsed_secs=0.007033589
10:19:53 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=234.511µs elapsed_secs=0.000234511
10:19:53 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.192µs elapsed_secs=6.7192e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.359271ms elapsed_secs=0.013359271
10:19:53 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=141.142µs elapsed_secs=0.000141142
10:19:53 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.725µs elapsed_secs=8.8725e-5
10:19:53 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.839074ms elapsed_secs=0.009839074
10:19:53 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.253573ms elapsed_secs=0.011253573
10:19:53 [DEBUG] (158) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=242.691943ms elapsed_secs=0.242691943
10:19:53 [DEBUG] (188) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.455µs elapsed_secs=3.6455e-5
10:19:53 [DEBUG] (188) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=223.864µs elapsed_secs=0.000223864
10:19:53 [DEBUG] (156) menahel::repository::user_repo: Get user by id with transaction: None
10:19:53 [DEBUG] (191) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.552µs elapsed_secs=4.5552e-5
10:19:53 [DEBUG] (152) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=262.431337ms elapsed_secs=0.262431337
10:19:53 [DEBUG] (155) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=255.605589ms elapsed_secs=0.255605589
10:19:53 [DEBUG] (192) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.746µs elapsed_secs=4.8746e-5
10:19:53 [DEBUG] (193) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.664µs elapsed_secs=7.4664e-5
10:19:53 [DEBUG] (193) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=242.634µs elapsed_secs=0.000242634
10:19:53 [DEBUG] (153) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:53 [DEBUG] (193) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=91.518µs elapsed_secs=9.1518e-5
10:19:53 [DEBUG] (196) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.435µs elapsed_secs=8.3435e-5
10:19:53 [DEBUG] (199) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.206µs elapsed_secs=6.0206e-5
10:19:53 [DEBUG] (173) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=239.74688ms elapsed_secs=0.23974688
10:19:53 [DEBUG] (172) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=237.887072ms elapsed_secs=0.237887072
10:19:53 [DEBUG] (161) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=262.494164ms elapsed_secs=0.262494164
10:19:53 [DEBUG] (200) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=121.817µs elapsed_secs=0.000121817
10:19:53 [DEBUG] (201) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.812µs elapsed_secs=4.4812e-5
10:19:53 [DEBUG] (202) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=21.309µs elapsed_secs=2.1309e-5
10:19:53 [DEBUG] (191) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.081329ms elapsed_secs=0.018081329
10:19:53 [DEBUG] (202) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=242.439µs elapsed_secs=0.000242439
10:19:53 [DEBUG] (191) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=88.484µs elapsed_secs=8.8484e-5
10:19:53 [DEBUG] (159) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:53 [DEBUG] (205) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.602µs elapsed_secs=8.5602e-5
10:19:53 [DEBUG] (202) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=68.139µs elapsed_secs=6.8139e-5
10:19:53 [DEBUG] (191) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=334.285µs elapsed_secs=0.000334285
10:19:53 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=242.888µs elapsed_secs=0.000242888
10:19:53 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.362µs elapsed_secs=8.4362e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.037µs elapsed_secs=5.2037e-5
10:19:53 [DEBUG] (196) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.412303ms elapsed_secs=0.015412303
10:19:53 [DEBUG] (196) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=132.981µs elapsed_secs=0.000132981
10:19:53 [DEBUG] (196) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.237µs elapsed_secs=8.2237e-5
10:19:53 [DEBUG] (196) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=953.4µs elapsed_secs=0.0009534
10:19:53 [DEBUG] (167) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=256.006962ms elapsed_secs=0.256006962
10:19:53 [DEBUG] (196) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=723.856µs elapsed_secs=0.000723856
10:19:53 [DEBUG] (199) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.049105ms elapsed_secs=0.018049105
10:19:53 [DEBUG] (164) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=256.829926ms elapsed_secs=0.256829926
10:19:53 [DEBUG] (201) sqlx::query: summary="DELETE FROM comments WHERE …" db.statement="\n\n\n                DELETE FROM comments\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=10.891596ms elapsed_secs=0.010891596
10:19:53 [DEBUG] (199) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=406.04µs elapsed_secs=0.00040604
10:19:53 [DEBUG] (199) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=646.918µs elapsed_secs=0.000646918
10:19:53 [DEBUG] (209) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=144.867µs elapsed_secs=0.000144867
10:19:53 [DEBUG] (210) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.335µs elapsed_secs=7.5335e-5
10:19:53 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=794.043µs elapsed_secs=0.000794043
10:19:53 [DEBUG] (213) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.555µs elapsed_secs=4.9555e-5
10:19:53 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.298µs elapsed_secs=8.1298e-5
10:19:53 [DEBUG] (209) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=884.601µs elapsed_secs=0.000884601
10:19:53 [DEBUG] (210) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=668.084µs elapsed_secs=0.000668084
10:19:53 [DEBUG] (165) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:53 [DEBUG] (162) menahel::repository::user_repo: Get user by id with transaction: None
10:19:53 [DEBUG] (209) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=98.389µs elapsed_secs=9.8389e-5
10:19:53 [DEBUG] (205) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.277606ms elapsed_secs=0.013277606
10:19:53 [DEBUG] (205) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=156.967µs elapsed_secs=0.000156967
10:19:53 [DEBUG] (205) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=208.16µs elapsed_secs=0.00020816
10:19:53 [DEBUG] (217) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.272µs elapsed_secs=5.1272e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.177008ms elapsed_secs=0.013177008
10:19:53 [DEBUG] (176) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=259.271558ms elapsed_secs=0.259271558
10:19:53 [DEBUG] (219) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.045µs elapsed_secs=4.3045e-5
10:19:53 [DEBUG] (205) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=665.612µs elapsed_secs=0.000665612
10:19:53 [DEBUG] (208) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.355µs elapsed_secs=7.9355e-5
10:19:53 [DEBUG] (205) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=451.53µs elapsed_secs=0.00045153
10:19:53 [DEBUG] (208) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=170.408µs elapsed_secs=0.000170408
10:19:53 [DEBUG] (220) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.193µs elapsed_secs=7.1193e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=523.454µs elapsed_secs=0.000523454
10:19:53 [DEBUG] (220) sqlx::query: summary="DELETE FROM comments WHERE …" db.statement="\n\n\n                DELETE FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=406.107µs elapsed_secs=0.000406107
10:19:53 [DEBUG] (179) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=254.182526ms elapsed_secs=0.254182526
10:19:53 [DEBUG] (208) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.271µs elapsed_secs=0.000189271
10:19:53 [DEBUG] (221) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.318µs elapsed_secs=6.9318e-5
10:19:53 [DEBUG] (221) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=173.678µs elapsed_secs=0.000173678
10:19:53 [DEBUG] (224) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.117µs elapsed_secs=5.3117e-5
10:19:53 [DEBUG] (213) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.543427ms elapsed_secs=0.008543427
10:19:53 [DEBUG] (213) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=262.414µs elapsed_secs=0.000262414
10:19:53 [DEBUG] (213) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.103µs elapsed_secs=8.4103e-5
10:19:53 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=231.382µs elapsed_secs=0.000231382
10:19:53 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.585µs elapsed_secs=8.5585e-5
10:19:53 [DEBUG] (227) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=254.365µs elapsed_secs=0.000254365
10:19:53 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.980311ms elapsed_secs=0.011980311
10:19:53 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=565.211µs elapsed_secs=0.000565211
10:19:53 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.46µs elapsed_secs=0.00011446
10:19:53 [DEBUG] (196) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.618825ms elapsed_secs=0.012618825
10:19:53 [DEBUG] (196) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=393.223µs elapsed_secs=0.000393223
10:19:53 [DEBUG] (219) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.302545ms elapsed_secs=0.014302545
10:19:53 [DEBUG] (196) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.778µs elapsed_secs=8.7778e-5
10:19:53 [DEBUG] (217) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.495027ms elapsed_secs=0.015495027
10:19:53 [DEBUG] (219) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=93.142µs elapsed_secs=9.3142e-5
10:19:53 [DEBUG] (217) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.844µs elapsed_secs=6.6844e-5
10:19:53 [DEBUG] (219) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=44.833µs elapsed_secs=4.4833e-5
10:19:53 [DEBUG] (217) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.089µs elapsed_secs=5.7089e-5
10:19:53 [DEBUG] (217) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=193.799µs elapsed_secs=0.000193799
10:19:53 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=487.485µs elapsed_secs=0.000487485
10:19:53 [DEBUG] (217) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.378µs elapsed_secs=7.6378e-5
10:19:53 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.45µs elapsed_secs=6.445e-5
10:19:53 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.018135ms elapsed_secs=0.012018135
10:19:53 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=410.319µs elapsed_secs=0.000410319
10:19:53 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.372µs elapsed_secs=8.7372e-5
10:19:53 [DEBUG] (224) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.445847ms elapsed_secs=0.015445847
10:19:53 [DEBUG] (224) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=120.391µs elapsed_secs=0.000120391
10:19:53 [DEBUG] (224) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=93.223µs elapsed_secs=9.3223e-5
10:19:53 [DEBUG] (227) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.829734ms elapsed_secs=0.012829734
10:19:53 [DEBUG] (224) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=805.284µs elapsed_secs=0.000805284
10:19:53 [DEBUG] (227) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=501.652µs elapsed_secs=0.000501652
10:19:53 [DEBUG] (224) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=630.233µs elapsed_secs=0.000630233
10:19:53 [DEBUG] (227) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=350.695µs elapsed_secs=0.000350695
10:19:53 [DEBUG] (205) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.578312ms elapsed_secs=0.010578312
10:19:53 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=482.19µs elapsed_secs=0.00048219
10:19:53 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=231.281µs elapsed_secs=0.000231281
10:19:53 [DEBUG] (205) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=852.685µs elapsed_secs=0.000852685
10:19:53 [DEBUG] (205) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=161.325µs elapsed_secs=0.000161325
10:19:53 [DEBUG] (208) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.762194ms elapsed_secs=0.009762194
10:19:53 [DEBUG] (208) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=302.867µs elapsed_secs=0.000302867
10:19:53 [DEBUG] (208) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=235.207µs elapsed_secs=0.000235207
10:19:53 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.153168ms elapsed_secs=0.009153168
10:19:53 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.497912ms elapsed_secs=0.009497912
10:19:53 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=203.467µs elapsed_secs=0.000203467
10:19:53 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.364µs elapsed_secs=7.8364e-5
10:19:53 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=153.131µs elapsed_secs=0.000153131
10:19:53 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.858µs elapsed_secs=8.0858e-5
10:19:53 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.402998ms elapsed_secs=0.008402998
10:19:53 [DEBUG] (196) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.576391ms elapsed_secs=0.008576391
10:19:53 [DEBUG] (217) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.50031ms elapsed_secs=0.00850031
10:19:53 [DEBUG] (217) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.593869ms elapsed_secs=0.001593869
10:19:53 [DEBUG] (196) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.934484ms elapsed_secs=0.001934484
10:19:53 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.86498ms elapsed_secs=0.00186498
10:19:53 [DEBUG] (217) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=198.524µs elapsed_secs=0.000198524
10:19:53 [DEBUG] (196) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.579µs elapsed_secs=0.000138579
10:19:53 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.09408ms elapsed_secs=0.01109408
10:19:53 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.075µs elapsed_secs=9.2075e-5
10:19:53 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=342.356µs elapsed_secs=0.000342356
10:19:53 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=161.33µs elapsed_secs=0.00016133
10:19:53 [DEBUG] (224) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.369799ms elapsed_secs=0.010369799
10:19:53 [DEBUG] (224) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=129.696µs elapsed_secs=0.000129696
10:19:53 [DEBUG] (224) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=365.503µs elapsed_secs=0.000365503
10:19:53 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.651654ms elapsed_secs=0.006651654
10:19:53 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=377.419µs elapsed_secs=0.000377419
10:19:53 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.938µs elapsed_secs=7.4938e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.892958ms elapsed_secs=0.006892958
10:19:53 [DEBUG] (205) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.435336ms elapsed_secs=0.009435336
10:19:53 [DEBUG] (205) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=284.214µs elapsed_secs=0.000284214
10:19:53 [DEBUG] (208) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=455.847µs elapsed_secs=0.000455847
10:19:53 [DEBUG] (205) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.956µs elapsed_secs=6.3956e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.223µs elapsed_secs=0.000113223
10:19:53 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.827614ms elapsed_secs=0.008827614
10:19:53 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.09382ms elapsed_secs=0.00909382
10:19:53 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=129.204µs elapsed_secs=0.000129204
10:19:53 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.919µs elapsed_secs=0.000151919
10:19:53 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=304.735µs elapsed_secs=0.000304735
10:19:53 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.23µs elapsed_secs=6.723e-5
10:19:53 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.734848ms elapsed_secs=0.005734848
10:19:53 [DEBUG] (217) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.697023ms elapsed_secs=0.007697023
10:19:53 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=317.859µs elapsed_secs=0.000317859
10:19:53 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.556µs elapsed_secs=6.4556e-5
10:19:53 [DEBUG] (217) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=251.091µs elapsed_secs=0.000251091
10:19:53 [DEBUG] (217) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.91µs elapsed_secs=5.491e-5
10:19:53 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.532593ms elapsed_secs=0.008532593
10:19:53 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=188.74µs elapsed_secs=0.00018874
10:19:53 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.264µs elapsed_secs=7.8264e-5
10:19:53 [DEBUG] (196) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.520878ms elapsed_secs=0.011520878
10:19:53 [DEBUG] (196) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=144.422µs elapsed_secs=0.000144422
10:19:53 [DEBUG] (196) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.577µs elapsed_secs=7.8577e-5
10:19:53 [DEBUG] (224) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.734659ms elapsed_secs=0.009734659
10:19:53 [DEBUG] (224) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=454.043µs elapsed_secs=0.000454043
10:19:53 [DEBUG] (224) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.876µs elapsed_secs=6.2876e-5
10:19:53 [DEBUG] (205) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.483595ms elapsed_secs=0.009483595
10:19:53 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.008942ms elapsed_secs=0.011008942
10:19:53 [DEBUG] (205) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=428.165µs elapsed_secs=0.000428165
10:19:53 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=434.587µs elapsed_secs=0.000434587
10:19:53 [DEBUG] (205) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.882µs elapsed_secs=9.7882e-5
10:19:53 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.116µs elapsed_secs=8.9116e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.66498ms elapsed_secs=0.00766498
10:19:53 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.885132ms elapsed_secs=0.007885132
10:19:53 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.160889ms elapsed_secs=0.008160889
10:19:53 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=235.439µs elapsed_secs=0.000235439
10:19:53 [DEBUG] (208) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=381.595µs elapsed_secs=0.000381595
10:19:53 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.592µs elapsed_secs=6.2592e-5
10:19:53 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=112.691µs elapsed_secs=0.000112691
10:19:53 [DEBUG] (208) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.995µs elapsed_secs=7.2995e-5
10:19:53 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.366µs elapsed_secs=0.000125366
10:19:53 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.899379ms elapsed_secs=0.008899379
10:19:53 [DEBUG] (217) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.194732ms elapsed_secs=0.009194732
10:19:53 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=291.877µs elapsed_secs=0.000291877
10:19:53 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.442µs elapsed_secs=0.000101442
10:19:53 [DEBUG] (217) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=169.81µs elapsed_secs=0.00016981
10:19:53 [DEBUG] (217) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.338µs elapsed_secs=6.2338e-5
10:19:53 [DEBUG] (196) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.567854ms elapsed_secs=0.006567854
10:19:53 [DEBUG] (196) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=247.173µs elapsed_secs=0.000247173
10:19:53 [DEBUG] (196) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.037µs elapsed_secs=5.7037e-5
10:19:53 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.238382ms elapsed_secs=0.008238382
10:19:53 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=229.766µs elapsed_secs=0.000229766
10:19:53 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.004µs elapsed_secs=6.3004e-5
10:19:53 [DEBUG] (224) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.784648ms elapsed_secs=0.006784648
10:19:53 [DEBUG] (224) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=210.368µs elapsed_secs=0.000210368
10:19:53 [DEBUG] (224) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.969µs elapsed_secs=7.1969e-5
10:19:53 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.93465ms elapsed_secs=0.00593465
10:19:53 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=145.171µs elapsed_secs=0.000145171
10:19:53 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.82µs elapsed_secs=5.882e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.666189ms elapsed_secs=0.005666189
10:19:53 [DEBUG] (205) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.528173ms elapsed_secs=0.007528173
10:19:53 [DEBUG] (208) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=154.477µs elapsed_secs=0.000154477
10:19:53 [DEBUG] (208) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=239.667µs elapsed_secs=0.000239667
10:19:53 [DEBUG] (205) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=326.125µs elapsed_secs=0.000326125
10:19:53 [DEBUG] (205) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.183µs elapsed_secs=7.4183e-5
10:19:53 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.514545ms elapsed_secs=0.007514545
10:19:53 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.282939ms elapsed_secs=0.008282939
10:19:53 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=278.668µs elapsed_secs=0.000278668
10:19:53 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.517µs elapsed_secs=8.2517e-5
10:19:53 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.224096ms elapsed_secs=0.006224096
10:19:53 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=428.754µs elapsed_secs=0.000428754
10:19:53 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.139µs elapsed_secs=6.1139e-5
10:19:53 [DEBUG] (217) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.248009ms elapsed_secs=0.006248009
10:19:53 [DEBUG] (217) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=145.323µs elapsed_secs=0.000145323
10:19:53 [DEBUG] (217) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=299.606µs elapsed_secs=0.000299606
10:19:53 [DEBUG] (196) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.983712ms elapsed_secs=0.006983712
10:19:53 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.048696ms elapsed_secs=0.009048696
10:19:53 [DEBUG] (224) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.219249ms elapsed_secs=0.007219249
10:19:53 [DEBUG] (224) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=169.78µs elapsed_secs=0.00016978
10:19:53 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.792827ms elapsed_secs=0.007792827
10:19:53 [DEBUG] (224) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.961µs elapsed_secs=0.000182961
10:19:53 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=153.367µs elapsed_secs=0.000153367
10:19:53 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.914µs elapsed_secs=8.3914e-5
10:19:53 [DEBUG] (208) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.321409ms elapsed_secs=0.009321409
10:19:53 [DEBUG] (205) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.843692ms elapsed_secs=0.009843692
10:19:53 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.120981ms elapsed_secs=0.008120981
10:19:53 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.223028ms elapsed_secs=0.010223028
10:19:53 [DEBUG] (217) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.802923ms elapsed_secs=0.012802923
10:19:53 [DEBUG] (224) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.021986ms elapsed_secs=0.008021986
10:19:53 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.852953ms elapsed_secs=0.008852953
10:19:53 [DEBUG] (184) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=236.575219ms elapsed_secs=0.236575219
10:19:53 [DEBUG] (228) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.145µs elapsed_secs=3.6145e-5
10:19:53 [DEBUG] (228) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=137.16µs elapsed_secs=0.00013716
10:19:53 [DEBUG] (231) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.378µs elapsed_secs=3.7378e-5
10:19:53 [DEBUG] (187) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=237.026351ms elapsed_secs=0.237026351
10:19:53 [DEBUG] (232) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.361µs elapsed_secs=4.3361e-5
10:19:53 [DEBUG] (232) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n            SELECT id, user_id, task_id, content, created_at, updated_at\n            FROM comments\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=154.94µs elapsed_secs=0.00015494
10:19:53 [DEBUG] (235) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.877µs elapsed_secs=6.3877e-5
10:19:53 [DEBUG] (231) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.253348ms elapsed_secs=0.014253348
10:19:53 [DEBUG] (231) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=318.76µs elapsed_secs=0.00031876
10:19:53 [DEBUG] (231) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=95.448µs elapsed_secs=9.5448e-5
10:19:53 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=656.572µs elapsed_secs=0.000656572
10:19:53 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=226.32µs elapsed_secs=0.00022632
10:19:53 [DEBUG] (235) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.11959ms elapsed_secs=0.01511959
10:19:53 [DEBUG] (235) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.677µs elapsed_secs=7.8677e-5
10:19:53 [DEBUG] (235) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.262µs elapsed_secs=6.3262e-5
10:19:53 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=395.454µs elapsed_secs=0.000395454
10:19:53 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.066µs elapsed_secs=6.5066e-5
10:19:53 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.165873ms elapsed_secs=0.008165873
10:19:53 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=324.194µs elapsed_secs=0.000324194
10:19:53 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=279.741µs elapsed_secs=0.000279741
10:19:53 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.279995ms elapsed_secs=0.010279995
10:19:53 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=236.124µs elapsed_secs=0.000236124
10:19:53 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.418µs elapsed_secs=8.1418e-5
10:19:53 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.999744ms elapsed_secs=0.007999744
10:19:53 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=378.438µs elapsed_secs=0.000378438
10:19:53 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.137µs elapsed_secs=7.8137e-5
10:19:53 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.424867ms elapsed_secs=0.008424867
10:19:53 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=407.822µs elapsed_secs=0.000407822
10:19:53 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.05µs elapsed_secs=6.905e-5
10:19:53 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.524577ms elapsed_secs=0.007524577
10:19:53 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=171.951µs elapsed_secs=0.000171951
10:19:53 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.553µs elapsed_secs=9.1553e-5
10:19:53 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.555076ms elapsed_secs=0.009555076
10:19:53 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=208.178µs elapsed_secs=0.000208178
10:19:53 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.742µs elapsed_secs=9.8742e-5
10:19:53 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.552826ms elapsed_secs=0.005552826
10:19:53 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=449.213µs elapsed_secs=0.000449213
10:19:53 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.081µs elapsed_secs=6.7081e-5
10:19:53 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.660138ms elapsed_secs=0.009660138
10:19:53 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=212.482µs elapsed_secs=0.000212482
10:19:53 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=259.228µs elapsed_secs=0.000259228
10:19:53 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.854953ms elapsed_secs=0.007854953
10:19:53 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.983807ms elapsed_secs=0.005983807
10:19:53 [DEBUG] (191) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=237.547814ms elapsed_secs=0.237547814
10:19:53 [DEBUG] (236) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.978µs elapsed_secs=5.0978e-5
10:19:53 [DEBUG] (236) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n            SELECT id, user_id, task_id, content, created_at, updated_at\n            FROM comments\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=137.665µs elapsed_secs=0.000137665
10:19:53 [DEBUG] (239) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.569µs elapsed_secs=3.6569e-5
10:19:53 [DEBUG] (196) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=243.635906ms elapsed_secs=0.243635906
10:19:53 [DEBUG] (199) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=242.123202ms elapsed_secs=0.242123202
10:19:53 [DEBUG] (219) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=227.886825ms elapsed_secs=0.227886825
10:19:53 [DEBUG] (239) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.375284ms elapsed_secs=0.014375284
10:19:53 [DEBUG] (241) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=101.918µs elapsed_secs=0.000101918
10:19:53 [DEBUG] (240) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=170.557µs elapsed_secs=0.000170557
10:19:53 [DEBUG] (239) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=164.632µs elapsed_secs=0.000164632
10:19:53 [DEBUG] (242) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=153.807µs elapsed_secs=0.000153807
10:19:53 [DEBUG] (239) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=99.2µs elapsed_secs=9.92e-5
10:19:53 [DEBUG] (240) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=412.193µs elapsed_secs=0.000412193
10:19:53 [DEBUG] (242) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=484.904µs elapsed_secs=0.000484904
10:19:53 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=324.168µs elapsed_secs=0.000324168
10:19:53 [DEBUG] (205) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=238.928429ms elapsed_secs=0.238928429
10:19:53 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=444.083µs elapsed_secs=0.000444083
10:19:53 [DEBUG] (247) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.65µs elapsed_secs=5.165e-5
10:19:53 [DEBUG] (248) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.282µs elapsed_secs=7.4282e-5
10:19:53 [DEBUG] (249) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.41µs elapsed_secs=7.841e-5
10:19:53 [DEBUG] (252) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=122µs elapsed_secs=0.000122
10:19:53 [DEBUG] (249) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=3 elapsed=515.827µs elapsed_secs=0.000515827
10:19:53 [DEBUG] (208) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=242.670764ms elapsed_secs=0.242670764
10:19:53 [DEBUG] (255) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.514µs elapsed_secs=8.8514e-5
10:19:53 [DEBUG] (256) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.799µs elapsed_secs=4.4799e-5
10:19:53 [DEBUG] (255) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=489.504µs elapsed_secs=0.000489504
10:19:53 [DEBUG] (217) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=239.643313ms elapsed_secs=0.239643313
10:19:53 [DEBUG] (259) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=95.962µs elapsed_secs=9.5962e-5
10:19:53 [DEBUG] (260) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=170.731µs elapsed_secs=0.000170731
10:19:53 [DEBUG] (260) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=157.608µs elapsed_secs=0.000157608
10:19:53 [DEBUG] (214) menahel::repository::user_repo: Get user by id with transaction: None
10:19:53 [DEBUG] (263) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.688µs elapsed_secs=4.1688e-5
10:19:53 [DEBUG] (227) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=242.428431ms elapsed_secs=0.242428431
10:19:53 [DEBUG] (213) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=253.766186ms elapsed_secs=0.253766186
10:19:53 [DEBUG] (247) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.714364ms elapsed_secs=0.016714364
10:19:53 [DEBUG] (247) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=177.84µs elapsed_secs=0.00017784
10:19:53 [DEBUG] (264) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.855µs elapsed_secs=8.8855e-5
10:19:53 [DEBUG] (247) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=140.011µs elapsed_secs=0.000140011
10:19:53 [DEBUG] (265) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.1µs elapsed_secs=4.11e-5
10:19:53 [DEBUG] (264) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=193.019µs elapsed_secs=0.000193019
10:19:53 [DEBUG] (248) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.673251ms elapsed_secs=0.018673251
10:19:53 [DEBUG] (225) menahel::repository::user_repo: Get user by id with transaction: None
10:19:53 [DEBUG] (256) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.054316ms elapsed_secs=0.015054316
10:19:53 [DEBUG] (265) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=328.476µs elapsed_secs=0.000328476
10:19:53 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=618.208µs elapsed_secs=0.000618208
10:19:53 [DEBUG] (252) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.048973ms elapsed_secs=0.018048973
10:19:53 [DEBUG] (248) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=277.441µs elapsed_secs=0.000277441
10:19:53 [DEBUG] (211) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:19:53 [DEBUG] (256) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=127.783µs elapsed_secs=0.000127783
10:19:53 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.988µs elapsed_secs=0.000106988
10:19:53 [DEBUG] (256) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.47µs elapsed_secs=8.547e-5
10:19:53 [DEBUG] (252) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.247µs elapsed_secs=8.2247e-5
10:19:53 [DEBUG] (265) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=77.101µs elapsed_secs=7.7101e-5
10:19:53 [DEBUG] (248) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=192.384µs elapsed_secs=0.000192384
10:19:53 [DEBUG] (224) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=246.908226ms elapsed_secs=0.246908226
10:19:53 [DEBUG] (268) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.097µs elapsed_secs=4.7097e-5
10:19:53 [DEBUG] (252) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=164.392µs elapsed_secs=0.000164392
10:19:53 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=490.236µs elapsed_secs=0.000490236
10:19:53 [DEBUG] (265) sqlx::query: summary="UPDATE comments SET content …" db.statement="\n\n\n                UPDATE comments\n                SET content = $1, user_id = $2, task_id = $3, updated_at = $4\n                WHERE id = $5\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=462.954µs elapsed_secs=0.000462954
10:19:53 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=199.125µs elapsed_secs=0.000199125
10:19:53 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=752.23µs elapsed_secs=0.00075223
10:19:53 [DEBUG] (252) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=513.236µs elapsed_secs=0.000513236
10:19:53 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=171.75µs elapsed_secs=0.00017175
10:19:53 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.006183ms elapsed_secs=0.011006183
10:19:53 [DEBUG] (269) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.049µs elapsed_secs=7.4049e-5
10:19:53 [DEBUG] (252) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.72µs elapsed_secs=0.00013972
10:19:53 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=219.99µs elapsed_secs=0.00021999
10:19:53 [DEBUG] (269) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=150.771µs elapsed_secs=0.000150771
10:19:53 [DEBUG] (222) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:53 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.369µs elapsed_secs=0.000118369
10:19:53 [DEBUG] (269) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=143.314µs elapsed_secs=0.000143314
10:19:53 [DEBUG] (263) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.201211ms elapsed_secs=0.012201211
10:19:53 [DEBUG] (263) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=540.773µs elapsed_secs=0.000540773
10:19:53 [DEBUG] (272) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=87.263µs elapsed_secs=8.7263e-5
10:19:53 [DEBUG] (263) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=206.35µs elapsed_secs=0.00020635
10:19:53 [DEBUG] (259) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.333422ms elapsed_secs=0.018333422
10:19:53 [DEBUG] (259) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.574µs elapsed_secs=0.000133574
10:19:53 [DEBUG] (263) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=332.069µs elapsed_secs=0.000332069
10:19:53 [DEBUG] (259) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=151.992µs elapsed_secs=0.000151992
10:19:53 [DEBUG] (263) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=363.075µs elapsed_secs=0.000363075
10:19:53 [DEBUG] (259) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=355.684µs elapsed_secs=0.000355684
10:19:53 [DEBUG] (259) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=160.697µs elapsed_secs=0.000160697
10:19:53 [DEBUG] (275) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=102.281µs elapsed_secs=0.000102281
10:19:53 [DEBUG] (268) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.854061ms elapsed_secs=0.013854061
10:19:53 [DEBUG] (268) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=111.173µs elapsed_secs=0.000111173
10:19:53 [DEBUG] (268) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=73.548µs elapsed_secs=7.3548e-5
10:19:53 [DEBUG] (268) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=498.959µs elapsed_secs=0.000498959
10:19:53 [DEBUG] (268) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.302µs elapsed_secs=7.4302e-5
10:19:53 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.780734ms elapsed_secs=0.008780734
10:19:53 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.734223ms elapsed_secs=0.008734223
10:19:53 [DEBUG] (272) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.95346ms elapsed_secs=0.01495346
10:19:53 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=327.501µs elapsed_secs=0.000327501
10:19:53 [DEBUG] (272) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=140.904µs elapsed_secs=0.000140904
10:19:53 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=255.008µs elapsed_secs=0.000255008
10:19:53 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.916µs elapsed_secs=0.000176916
10:19:53 [DEBUG] (272) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=125.048µs elapsed_secs=0.000125048
10:19:53 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.31µs elapsed_secs=0.00012731
10:19:53 [DEBUG] (272) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=338.875µs elapsed_secs=0.000338875
10:19:53 [DEBUG] (272) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.879µs elapsed_secs=9.3879e-5
10:19:53 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.864681ms elapsed_secs=0.010864681
10:19:53 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.188489ms elapsed_secs=0.011188489
10:19:53 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=158.401µs elapsed_secs=0.000158401
10:19:53 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=273.009µs elapsed_secs=0.000273009
10:19:53 [DEBUG] (275) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.2744ms elapsed_secs=0.0132744
10:19:53 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=333.713µs elapsed_secs=0.000333713
10:19:53 [DEBUG] (275) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.421µs elapsed_secs=7.7421e-5
10:19:53 [DEBUG] (252) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.936102ms elapsed_secs=0.009936102
10:19:53 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.632µs elapsed_secs=7.1632e-5
10:19:53 [DEBUG] (275) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=72.969µs elapsed_secs=7.2969e-5
10:19:53 [DEBUG] (252) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=660.733µs elapsed_secs=0.000660733
10:19:53 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=256.517µs elapsed_secs=0.000256517
10:19:53 [DEBUG] (252) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.797µs elapsed_secs=6.9797e-5
10:19:53 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.761µs elapsed_secs=6.8761e-5
10:19:53 [DEBUG] (259) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.913574ms elapsed_secs=0.006913574
10:19:53 [DEBUG] (263) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.366921ms elapsed_secs=0.007366921
10:19:53 [DEBUG] (259) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=130.646µs elapsed_secs=0.000130646
10:19:53 [DEBUG] (263) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=233.992µs elapsed_secs=0.000233992
10:19:53 [DEBUG] (259) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=420.929µs elapsed_secs=0.000420929
10:19:53 [DEBUG] (263) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.373µs elapsed_secs=7.0373e-5
10:19:53 [DEBUG] (268) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.390476ms elapsed_secs=0.010390476
10:19:53 [DEBUG] (268) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=491.232µs elapsed_secs=0.000491232
10:19:53 [DEBUG] (268) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.293µs elapsed_secs=7.6293e-5
10:19:53 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.32529ms elapsed_secs=0.00632529
10:19:53 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=368.011µs elapsed_secs=0.000368011
10:19:53 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.911µs elapsed_secs=7.9911e-5
10:19:53 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.294894ms elapsed_secs=0.008294894
10:19:53 [DEBUG] (272) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.485063ms elapsed_secs=0.008485063
10:19:53 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=580.677µs elapsed_secs=0.000580677
10:19:53 [DEBUG] (272) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=133.981µs elapsed_secs=0.000133981
10:19:53 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.092µs elapsed_secs=6.7092e-5
10:19:53 [DEBUG] (272) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.584µs elapsed_secs=5.8584e-5
10:19:53 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.752084ms elapsed_secs=0.006752084
10:19:53 [DEBUG] (252) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.938589ms elapsed_secs=0.006938589
10:19:53 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.116164ms elapsed_secs=0.007116164
10:19:53 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=161.4µs elapsed_secs=0.0001614
10:19:53 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.39µs elapsed_secs=0.00010339
10:19:53 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.829208ms elapsed_secs=0.007829208
10:19:53 [DEBUG] (252) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=665.075µs elapsed_secs=0.000665075
10:19:53 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=541.454µs elapsed_secs=0.000541454
10:19:53 [DEBUG] (252) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.247µs elapsed_secs=9.7247e-5
10:19:53 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=202.148µs elapsed_secs=0.000202148
10:19:53 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=149.803µs elapsed_secs=0.000149803
10:19:53 [DEBUG] (259) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.832934ms elapsed_secs=0.007832934
10:19:53 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.927µs elapsed_secs=8.8927e-5
10:19:53 [DEBUG] (259) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.038693ms elapsed_secs=0.001038693
10:19:53 [DEBUG] (259) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=196.819µs elapsed_secs=0.000196819
10:19:53 [DEBUG] (263) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.068784ms elapsed_secs=0.011068784
10:19:53 [DEBUG] (263) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=483.524µs elapsed_secs=0.000483524
10:19:53 [DEBUG] (263) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.671µs elapsed_secs=8.7671e-5
10:19:53 [DEBUG] (268) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.002792ms elapsed_secs=0.008002792
10:19:53 [DEBUG] (268) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=236.579µs elapsed_secs=0.000236579
10:19:53 [DEBUG] (268) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.158µs elapsed_secs=6.4158e-5
10:19:53 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.582301ms elapsed_secs=0.005582301
10:19:53 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.663268ms elapsed_secs=0.008663268
10:19:53 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=304.584µs elapsed_secs=0.000304584
10:19:53 [DEBUG] (272) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.47773ms elapsed_secs=0.00647773
10:19:53 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.278µs elapsed_secs=9.6278e-5
10:19:53 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=292.942µs elapsed_secs=0.000292942
10:19:53 [DEBUG] (272) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=217.728µs elapsed_secs=0.000217728
10:19:53 [DEBUG] (272) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.423µs elapsed_secs=7.0423e-5
10:19:53 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.517µs elapsed_secs=0.000124517
10:19:53 [DEBUG] (252) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.526048ms elapsed_secs=0.006526048
10:19:53 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.916117ms elapsed_secs=0.006916117
10:19:53 [DEBUG] (259) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.809087ms elapsed_secs=0.006809087
10:19:53 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.186149ms elapsed_secs=0.007186149
10:19:53 [DEBUG] (252) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=329.986µs elapsed_secs=0.000329986
10:19:53 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=251.535µs elapsed_secs=0.000251535
10:19:53 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=176.217µs elapsed_secs=0.000176217
10:19:53 [DEBUG] (259) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=224.367µs elapsed_secs=0.000224367
10:19:53 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.791µs elapsed_secs=8.5791e-5
10:19:53 [DEBUG] (252) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=201.658µs elapsed_secs=0.000201658
10:19:53 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.793µs elapsed_secs=7.7793e-5
10:19:53 [DEBUG] (259) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.223µs elapsed_secs=0.000170223
10:19:53 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.92954ms elapsed_secs=0.00892954
10:19:53 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=350.062µs elapsed_secs=0.000350062
10:19:53 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.986µs elapsed_secs=6.6986e-5
10:19:53 [DEBUG] (263) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.078164ms elapsed_secs=0.008078164
10:19:53 [DEBUG] (263) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=330.883µs elapsed_secs=0.000330883
10:19:53 [DEBUG] (263) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.095µs elapsed_secs=6.9095e-5
10:19:53 [DEBUG] (268) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.429525ms elapsed_secs=0.007429525
10:19:53 [DEBUG] (268) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=611.425µs elapsed_secs=0.000611425
10:19:53 [DEBUG] (268) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.706µs elapsed_secs=6.3706e-5
10:19:53 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.859935ms elapsed_secs=0.007859935
10:19:53 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.870422ms elapsed_secs=0.004870422
10:19:53 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.232845ms elapsed_secs=0.006232845
10:19:53 [DEBUG] (272) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.322929ms elapsed_secs=0.008322929
10:19:53 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=161.146µs elapsed_secs=0.000161146
10:19:53 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=215.296µs elapsed_secs=0.000215296
10:19:53 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.311µs elapsed_secs=7.6311e-5
10:19:53 [DEBUG] (272) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=152.823µs elapsed_secs=0.000152823
10:19:53 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.905µs elapsed_secs=8.3905e-5
10:19:53 [DEBUG] (272) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.347µs elapsed_secs=7.2347e-5
10:19:53 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.551572ms elapsed_secs=0.007551572
10:19:53 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=161.253µs elapsed_secs=0.000161253
10:19:53 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.007259ms elapsed_secs=0.010007259
10:19:53 [DEBUG] (259) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.074253ms elapsed_secs=0.008074253
10:19:53 [DEBUG] (252) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.124067ms elapsed_secs=0.007124067
10:19:53 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.007µs elapsed_secs=0.000123007
10:19:53 [DEBUG] (263) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.438827ms elapsed_secs=0.007438827
10:19:53 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=250.895µs elapsed_secs=0.000250895
10:19:53 [DEBUG] (259) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=154.144µs elapsed_secs=0.000154144
10:19:53 [DEBUG] (252) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=127.147µs elapsed_secs=0.000127147
10:19:53 [DEBUG] (259) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.347µs elapsed_secs=0.000172347
10:19:53 [DEBUG] (263) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=590.251µs elapsed_secs=0.000590251
10:19:53 [DEBUG] (252) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=309.934µs elapsed_secs=0.000309934
10:19:53 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=276.312µs elapsed_secs=0.000276312
10:19:53 [DEBUG] (263) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.834µs elapsed_secs=6.7834e-5
10:19:53 [DEBUG] (268) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.332344ms elapsed_secs=0.006332344
10:19:53 [DEBUG] (268) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=252.328µs elapsed_secs=0.000252328
10:19:53 [DEBUG] (268) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.663µs elapsed_secs=5.6663e-5
10:19:53 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.151038ms elapsed_secs=0.005151038
10:19:53 [DEBUG] (272) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.7702ms elapsed_secs=0.0067702
10:19:53 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.08829ms elapsed_secs=0.00708829
10:19:53 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.46593ms elapsed_secs=0.00746593
10:19:53 [DEBUG] (272) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=310.059µs elapsed_secs=0.000310059
10:19:53 [DEBUG] (272) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=233.055µs elapsed_secs=0.000233055
10:19:53 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=336.453µs elapsed_secs=0.000336453
10:19:53 [DEBUG] (276) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.522µs elapsed_secs=3.6522e-5
10:19:53 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.114µs elapsed_secs=6.4114e-5
10:19:53 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.290421ms elapsed_secs=0.006290421
10:19:53 [DEBUG] (277) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.552µs elapsed_secs=4.3552e-5
10:19:53 [DEBUG] (259) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.99241ms elapsed_secs=0.00699241
10:19:53 [DEBUG] (263) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.197795ms elapsed_secs=0.007197795
10:19:53 [DEBUG] (252) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.719545ms elapsed_secs=0.007719545
10:19:53 [DEBUG] (278) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.95µs elapsed_secs=4.395e-5
10:19:53 [DEBUG] (279) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.474µs elapsed_secs=7.8474e-5
10:19:53 [DEBUG] (281) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.478µs elapsed_secs=7.8478e-5
10:19:53 [DEBUG] (283) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.083µs elapsed_secs=7.2083e-5
10:19:53 [DEBUG] (287) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.071µs elapsed_secs=3.8071e-5
10:19:53 [DEBUG] (289) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.391µs elapsed_secs=3.0391e-5
10:19:53 [DEBUG] (276) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=7.416345ms elapsed_secs=0.007416345
10:19:53 [INFO] Created project: Project { id: Some(1), name: "duplicate_test_1_20250606101953" }
10:19:53 [DEBUG] (290) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.78µs elapsed_secs=8.278e-5
10:19:53 [DEBUG] (290) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=256.221µs elapsed_secs=0.000256221
10:19:53 [DEBUG] (281) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=7.449597ms elapsed_secs=0.007449597
10:19:53 [INFO] Created project: Project { id: Some(1), name: "create_test_20250606101953" }
10:19:53 [DEBUG] (268) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.407791ms elapsed_secs=0.008407791
10:19:53 [DEBUG] (293) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=96.509µs elapsed_secs=9.6509e-5
10:19:53 [DEBUG] (294) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.005µs elapsed_secs=4.9005e-5
10:19:53 [DEBUG] (293) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=356.428µs elapsed_secs=0.000356428
10:19:53 [DEBUG] (250) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "create_test_20250606101953" })
10:19:54 [DEBUG] (295) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.927µs elapsed_secs=7.4927e-5
10:19:54 [DEBUG] (283) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.502672ms elapsed_secs=0.009502672
10:19:54 [DEBUG] (287) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.426631ms elapsed_secs=0.008426631
10:19:54 [DEBUG] (289) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.528273ms elapsed_secs=0.008528273
10:19:54 [DEBUG] (287) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=155.49µs elapsed_secs=0.00015549
10:19:54 [DEBUG] (283) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=239.775µs elapsed_secs=0.000239775
10:19:54 [DEBUG] (287) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=183.786µs elapsed_secs=0.000183786
10:19:54 [DEBUG] (295) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=541.691µs elapsed_secs=0.000541691
10:19:54 [DEBUG] (283) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=157.764µs elapsed_secs=0.000157764
10:19:54 [DEBUG] (298) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.037µs elapsed_secs=5.1037e-5
10:19:54 [DEBUG] (289) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=737.532µs elapsed_secs=0.000737532
10:19:54 [DEBUG] (289) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=190.681µs elapsed_secs=0.000190681
10:19:54 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=631.472µs elapsed_secs=0.000631472
10:19:54 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=277.181µs elapsed_secs=0.000277181
10:19:54 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=459.59µs elapsed_secs=0.00045959
10:19:54 [DEBUG] (283) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=946.067µs elapsed_secs=0.000946067
10:19:54 [DEBUG] (272) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.849455ms elapsed_secs=0.007849455
10:19:54 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.252354ms elapsed_secs=0.008252354
10:19:54 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=277.812µs elapsed_secs=0.000277812
10:19:54 [DEBUG] (283) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=201.902µs elapsed_secs=0.000201902
10:19:54 [DEBUG] (301) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.239µs elapsed_secs=3.7239e-5
10:19:54 [DEBUG] (302) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=98.77µs elapsed_secs=9.877e-5
10:19:54 [DEBUG] (303) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.174µs elapsed_secs=5.1174e-5
10:19:54 [DEBUG] (294) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.219164ms elapsed_secs=0.010219164
10:19:54 [DEBUG] (294) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=80.964µs elapsed_secs=8.0964e-5
10:19:54 [DEBUG] (294) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.239µs elapsed_secs=8.2239e-5
10:19:54 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=179.438µs elapsed_secs=0.000179438
10:19:54 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.623µs elapsed_secs=0.000103623
10:19:54 [DEBUG] (298) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.04096ms elapsed_secs=0.01004096
10:19:54 [DEBUG] (298) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.679µs elapsed_secs=8.3679e-5
10:19:54 [DEBUG] (298) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=66.471µs elapsed_secs=6.6471e-5
10:19:54 [DEBUG] (302) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=7.590982ms elapsed_secs=0.007590982
10:19:54 [DEBUG] (298) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=174.587µs elapsed_secs=0.000174587
10:19:54 [INFO] Created project: Project { id: Some(1), name: "delete_test_20250606101954" }
10:19:54 [DEBUG] (298) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=173.559µs elapsed_secs=0.000173559
10:19:54 [DEBUG] (303) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=8.336142ms elapsed_secs=0.008336142
10:19:54 [DEBUG] (301) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.973382ms elapsed_secs=0.008973382
10:19:54 [DEBUG] (304) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.23µs elapsed_secs=8.823e-5
10:19:54 [INFO] Created project: Project { id: Some(1), name: "get_all_projects_test_20250606101954_1" }
10:19:54 [DEBUG] (301) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=64.098µs elapsed_secs=6.4098e-5
10:19:54 [DEBUG] (304) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=136.653µs elapsed_secs=0.000136653
10:19:54 [DEBUG] (301) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.44µs elapsed_secs=5.744e-5
10:19:54 [DEBUG] (270) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "delete_test_20250606101954" })
10:19:54 [DEBUG] (305) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.972µs elapsed_secs=6.5972e-5
10:19:54 [DEBUG] (301) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=475.171µs elapsed_secs=0.000475171
10:19:54 [DEBUG] (301) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.106µs elapsed_secs=8.2106e-5
10:19:54 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.609832ms elapsed_secs=0.010609832
10:19:54 [DEBUG] (283) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.243095ms elapsed_secs=0.009243095
10:19:54 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.511181ms elapsed_secs=0.009511181
10:19:54 [DEBUG] (283) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=420.804µs elapsed_secs=0.000420804
10:19:54 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=611.927µs elapsed_secs=0.000611927
10:19:54 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=143.648µs elapsed_secs=0.000143648
10:19:54 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.422µs elapsed_secs=7.1422e-5
10:19:54 [DEBUG] (283) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.023µs elapsed_secs=7.6023e-5
10:19:54 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.364µs elapsed_secs=6.0364e-5
10:19:54 [DEBUG] (302) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=12.733225ms elapsed_secs=0.012733225
10:19:54 [DEBUG] (305) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=12.974277ms elapsed_secs=0.012974277
10:19:54 [INFO] Deleted project: ID = 1
10:19:54 [INFO] Created project: Project { id: Some(2), name: "get_all_projects_test_20250606101954_2" }
10:19:54 [DEBUG] (304) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=81.008µs elapsed_secs=8.1008e-5
10:19:54 [DEBUG] (270) menahel::repository::project_repo: Got project by id: None
10:19:54 [DEBUG] (308) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.559µs elapsed_secs=5.4559e-5
10:19:54 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.424821ms elapsed_secs=0.007424821
10:19:54 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=522.722µs elapsed_secs=0.000522722
10:19:54 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.398µs elapsed_secs=0.000103398
10:19:54 [DEBUG] (298) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.732914ms elapsed_secs=0.011732914
10:19:54 [DEBUG] (301) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.763971ms elapsed_secs=0.008763971
10:19:54 [DEBUG] (298) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=347.982µs elapsed_secs=0.000347982
10:19:54 [DEBUG] (298) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=480.66µs elapsed_secs=0.00048066
10:19:54 [DEBUG] (301) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=962.01µs elapsed_secs=0.00096201
10:19:54 [DEBUG] (301) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.141µs elapsed_secs=0.000136141
10:19:54 [DEBUG] (303) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=12.452943ms elapsed_secs=0.012452943
10:19:54 [INFO] Created project: Project { id: Some(3), name: "get_all_projects_test_20250606101954_3" }
10:19:54 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.319701ms elapsed_secs=0.009319701
10:19:54 [DEBUG] (283) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.448925ms elapsed_secs=0.009448925
10:19:54 [DEBUG] (308) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.539816ms elapsed_secs=0.013539816
10:19:54 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=573.387µs elapsed_secs=0.000573387
10:19:54 [DEBUG] (283) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=391.711µs elapsed_secs=0.000391711
10:19:54 [DEBUG] (308) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.318µs elapsed_secs=7.5318e-5
10:19:54 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.154µs elapsed_secs=0.000113154
10:19:54 [DEBUG] (283) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.628µs elapsed_secs=6.9628e-5
10:19:54 [DEBUG] (308) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=55.647µs elapsed_secs=5.5647e-5
10:19:54 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=328.603µs elapsed_secs=0.000328603
10:19:54 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.123µs elapsed_secs=6.9123e-5
10:19:54 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.111409ms elapsed_secs=0.010111409
10:19:54 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=290.628µs elapsed_secs=0.000290628
10:19:54 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.623µs elapsed_secs=6.1623e-5
10:19:54 [DEBUG] (305) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=11.943009ms elapsed_secs=0.011943009
10:19:54 [INFO] Created project: Project { id: Some(4), name: "get_all_projects_test_20250606101954_4" }
10:19:54 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.128329ms elapsed_secs=0.009128329
10:19:54 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=188.792µs elapsed_secs=0.000188792
10:19:54 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.887µs elapsed_secs=7.0887e-5
10:19:54 [DEBUG] (231) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=246.82108ms elapsed_secs=0.24682108
10:19:54 [DEBUG] (309) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.848µs elapsed_secs=3.2848e-5
10:19:54 [DEBUG] (309) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=219.232µs elapsed_secs=0.000219232
10:19:54 [DEBUG] (229) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:54 [DEBUG] (309) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=46.807µs elapsed_secs=4.6807e-5
10:19:54 [DEBUG] (301) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.177245ms elapsed_secs=0.008177245
10:19:54 [DEBUG] (312) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.087µs elapsed_secs=3.7087e-5
10:19:54 [DEBUG] (298) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.277701ms elapsed_secs=0.006277701
10:19:54 [DEBUG] (301) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=423.304µs elapsed_secs=0.000423304
10:19:54 [DEBUG] (298) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=197.751µs elapsed_secs=0.000197751
10:19:54 [DEBUG] (301) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.621µs elapsed_secs=0.000182621
10:19:54 [DEBUG] (298) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.493µs elapsed_secs=0.000111493
10:19:54 [DEBUG] (303) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=7.964085ms elapsed_secs=0.007964085
10:19:54 [INFO] Created project: Project { id: Some(5), name: "get_all_projects_test_20250606101954_5" }
10:19:54 [DEBUG] (305) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=1 rows_returned=5 elapsed=114.402µs elapsed_secs=0.000114402
10:19:54 [DEBUG] (273) menahel::repository::project_repo: Got all projects: [Project { id: Some(1), name: "get_all_projects_test_20250606101954_1" }, Project { id: Some(2), name: "get_all_projects_test_20250606101954_2" }, Project { id: Some(3), name: "get_all_projects_test_20250606101954_3" }, Project { id: Some(4), name: "get_all_projects_test_20250606101954_4" }, Project { id: Some(5), name: "get_all_projects_test_20250606101954_5" }]
10:19:54 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.746268ms elapsed_secs=0.007746268
10:19:54 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=139.327µs elapsed_secs=0.000139327
10:19:54 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.363µs elapsed_secs=7.1363e-5
10:19:54 [DEBUG] (283) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.346825ms elapsed_secs=0.007346825
10:19:54 [DEBUG] (315) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=177.558µs elapsed_secs=0.000177558
10:19:54 [DEBUG] (283) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=337.284µs elapsed_secs=0.000337284
10:19:54 [DEBUG] (283) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=331.962µs elapsed_secs=0.000331962
10:19:54 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.917628ms elapsed_secs=0.011917628
10:19:54 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=338.5µs elapsed_secs=0.0003385
10:19:54 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=200.995µs elapsed_secs=0.000200995
10:19:54 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.263367ms elapsed_secs=0.012263367
10:19:54 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=163.268µs elapsed_secs=0.000163268
10:19:54 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.655µs elapsed_secs=8.5655e-5
10:19:54 [DEBUG] (312) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.467427ms elapsed_secs=0.014467427
10:19:54 [DEBUG] (312) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.802µs elapsed_secs=8.3802e-5
10:19:54 [DEBUG] (312) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.565µs elapsed_secs=5.9565e-5
10:19:54 [DEBUG] (312) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=174.264µs elapsed_secs=0.000174264
10:19:54 [DEBUG] (312) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.256µs elapsed_secs=7.8256e-5
10:19:54 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.392634ms elapsed_secs=0.009392634
10:19:54 [DEBUG] (315) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.707887ms elapsed_secs=0.012707887
10:19:54 [DEBUG] (315) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=123.439µs elapsed_secs=0.000123439
10:19:54 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=195.88µs elapsed_secs=0.00019588
10:19:54 [DEBUG] (315) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=48.192µs elapsed_secs=4.8192e-5
10:19:54 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.663µs elapsed_secs=9.2663e-5
10:19:54 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=309.08µs elapsed_secs=0.00030908
10:19:54 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.078µs elapsed_secs=0.000177078
10:19:54 [DEBUG] (298) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.986906ms elapsed_secs=0.005986906
10:19:54 [DEBUG] (301) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.69677ms elapsed_secs=0.00769677
10:19:54 [DEBUG] (298) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=327.687µs elapsed_secs=0.000327687
10:19:54 [DEBUG] (301) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=595.436µs elapsed_secs=0.000595436
10:19:54 [DEBUG] (301) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.317µs elapsed_secs=9.3317e-5
10:19:54 [DEBUG] (298) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=244.725µs elapsed_secs=0.000244725
10:19:54 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.874436ms elapsed_secs=0.008874436
10:19:54 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=275.422µs elapsed_secs=0.000275422
10:19:54 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=239.504µs elapsed_secs=0.000239504
10:19:54 [DEBUG] (283) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.478351ms elapsed_secs=0.011478351
10:19:54 [DEBUG] (235) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=269.15034ms elapsed_secs=0.26915034
10:19:54 [DEBUG] (283) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=284.594µs elapsed_secs=0.000284594
10:19:54 [DEBUG] (283) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.109µs elapsed_secs=7.8109e-5
10:19:54 [DEBUG] (316) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=24.821µs elapsed_secs=2.4821e-5
10:19:54 [DEBUG] (316) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=138.359µs elapsed_secs=0.000138359
10:19:54 [DEBUG] (233) menahel::repository::user_repo: Get user by id with transaction: None
10:19:54 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.596085ms elapsed_secs=0.011596085
10:19:54 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=137.581µs elapsed_secs=0.000137581
10:19:54 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.51µs elapsed_secs=7.651e-5
10:19:54 [DEBUG] (319) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.663µs elapsed_secs=3.9663e-5
10:19:54 [DEBUG] (312) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.853524ms elapsed_secs=0.007853524
10:19:54 [DEBUG] (312) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=120.637µs elapsed_secs=0.000120637
10:19:54 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.424581ms elapsed_secs=0.010424581
10:19:54 [DEBUG] (312) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=375.613µs elapsed_secs=0.000375613
10:19:54 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=330.014µs elapsed_secs=0.000330014
10:19:54 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.482µs elapsed_secs=5.3482e-5
10:19:54 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.963086ms elapsed_secs=0.008963086
10:19:54 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=256.409µs elapsed_secs=0.000256409
10:19:54 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=302.241µs elapsed_secs=0.000302241
10:19:54 [DEBUG] (298) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.587181ms elapsed_secs=0.013587181
10:19:54 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.820309ms elapsed_secs=0.013820309
10:19:54 [DEBUG] (298) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=140.646µs elapsed_secs=0.000140646
10:19:54 [DEBUG] (298) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.605µs elapsed_secs=9.5605e-5
10:19:54 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=252.279µs elapsed_secs=0.000252279
10:19:54 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=186.101µs elapsed_secs=0.000186101
10:19:54 [DEBUG] (319) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.848967ms elapsed_secs=0.013848967
10:19:54 [DEBUG] (319) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=110.037µs elapsed_secs=0.000110037
10:19:54 [DEBUG] (319) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.903µs elapsed_secs=6.9903e-5
10:19:54 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=154.164µs elapsed_secs=0.000154164
10:19:54 [DEBUG] (301) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.348818ms elapsed_secs=0.012348818
10:19:54 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.715µs elapsed_secs=5.6715e-5
10:19:54 [DEBUG] (301) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=466.935µs elapsed_secs=0.000466935
10:19:54 [DEBUG] (301) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.412µs elapsed_secs=8.5412e-5
10:19:54 [DEBUG] (283) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.500961ms elapsed_secs=0.009500961
10:19:54 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.678873ms elapsed_secs=0.009678873
10:19:54 [DEBUG] (320) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=148.388µs elapsed_secs=0.000148388
10:19:54 [DEBUG] (321) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=116.085µs elapsed_secs=0.000116085
10:19:54 [DEBUG] (320) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=0 rows_returned=0 elapsed=287.524µs elapsed_secs=0.000287524
10:19:54 [DEBUG] (280) menahel::repository::project_repo: Got all projects: []
10:19:54 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.817774ms elapsed_secs=0.009817774
10:19:54 [DEBUG] (312) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.261714ms elapsed_secs=0.008261714
10:19:54 [DEBUG] (324) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=129.506µs elapsed_secs=0.000129506
10:19:54 [DEBUG] (312) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=722.832µs elapsed_secs=0.000722832
10:19:54 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.054058ms elapsed_secs=0.001054058
10:19:54 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.011059ms elapsed_secs=0.012011059
10:19:54 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=337.912µs elapsed_secs=0.000337912
10:19:54 [DEBUG] (312) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=414.485µs elapsed_secs=0.000414485
10:19:54 [DEBUG] (321) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=10.585542ms elapsed_secs=0.010585542
10:19:54 [INFO] Created project: Project { id: Some(1), name: "get_by_id_test_20250606101954" }
10:19:54 [DEBUG] (325) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=206.363µs elapsed_secs=0.000206363
10:19:54 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.728311ms elapsed_secs=0.009728311
10:19:54 [DEBUG] (325) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=240.263µs elapsed_secs=0.000240263
10:19:54 [DEBUG] (284) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "get_by_id_test_20250606101954" })
10:19:54 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.091066ms elapsed_secs=0.008091066
10:19:54 [DEBUG] (298) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.378114ms elapsed_secs=0.008378114
10:19:54 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=593.54µs elapsed_secs=0.00059354
10:19:54 [DEBUG] (328) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.313µs elapsed_secs=7.1313e-5
10:19:54 [DEBUG] (329) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.31µs elapsed_secs=5.131e-5
10:19:54 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.982µs elapsed_secs=9.0982e-5
10:19:54 [DEBUG] (324) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.875211ms elapsed_secs=0.011875211
10:19:54 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.966484ms elapsed_secs=0.008966484
10:19:54 [DEBUG] (301) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.835574ms elapsed_secs=0.008835574
10:19:54 [DEBUG] (324) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=129.124µs elapsed_secs=0.000129124
10:19:54 [DEBUG] (324) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=157.254µs elapsed_secs=0.000157254
10:19:54 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=403.67µs elapsed_secs=0.00040367
10:19:54 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=349.472µs elapsed_secs=0.000349472
10:19:54 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=519.118µs elapsed_secs=0.000519118
10:19:54 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=393.686µs elapsed_secs=0.000393686
10:19:54 [DEBUG] (329) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=8.407441ms elapsed_secs=0.008407441
10:19:54 [INFO] Created project: Project { id: Some(1), name: "get_by_name_test_20250606101954" }
10:19:54 [DEBUG] (330) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.249µs elapsed_secs=5.8249e-5
10:19:54 [DEBUG] (330) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=144.32µs elapsed_secs=0.00014432
10:19:54 [DEBUG] (296) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(1), name: "get_by_name_test_20250606101954" })
10:19:54 [DEBUG] (333) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.871µs elapsed_secs=3.9871e-5
10:19:54 [DEBUG] (328) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.97157ms elapsed_secs=0.01397157
10:19:54 [DEBUG] (328) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.582µs elapsed_secs=7.2582e-5
10:19:54 [DEBUG] (328) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.875µs elapsed_secs=5.6875e-5
10:19:54 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=137.465µs elapsed_secs=0.000137465
10:19:54 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.214µs elapsed_secs=5.2214e-5
10:19:54 [DEBUG] (312) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.586834ms elapsed_secs=0.011586834
10:19:54 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.296541ms elapsed_secs=0.011296541
10:19:54 [DEBUG] (312) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=577.139µs elapsed_secs=0.000577139
10:19:54 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=337.26µs elapsed_secs=0.00033726
10:19:54 [DEBUG] (312) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.809µs elapsed_secs=8.5809e-5
10:19:54 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.589µs elapsed_secs=6.2589e-5
10:19:54 [DEBUG] (333) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.034686ms elapsed_secs=0.011034686
10:19:54 [DEBUG] (333) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=111.133µs elapsed_secs=0.000111133
10:19:54 [DEBUG] (333) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=88.078µs elapsed_secs=8.8078e-5
10:19:54 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.255592ms elapsed_secs=0.011255592
10:19:54 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=346.745µs elapsed_secs=0.000346745
10:19:54 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=618.077µs elapsed_secs=0.000618077
10:19:54 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.835µs elapsed_secs=7.8835e-5
10:19:54 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.535µs elapsed_secs=6.4535e-5
10:19:54 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.159713ms elapsed_secs=0.010159713
10:19:54 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.453873ms elapsed_secs=0.010453873
10:19:54 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=148.203µs elapsed_secs=0.000148203
10:19:54 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=169.057µs elapsed_secs=0.000169057
10:19:54 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=270.176µs elapsed_secs=0.000270176
10:19:54 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.78µs elapsed_secs=0.00012778
10:19:54 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.451502ms elapsed_secs=0.008451502
10:19:54 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=439.466µs elapsed_secs=0.000439466
10:19:54 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.249µs elapsed_secs=0.000127249
10:19:54 [DEBUG] (312) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.682848ms elapsed_secs=0.009682848
10:19:54 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.902179ms elapsed_secs=0.009902179
10:19:54 [DEBUG] (312) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=528.812µs elapsed_secs=0.000528812
10:19:54 [DEBUG] (312) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.601µs elapsed_secs=7.0601e-5
10:19:54 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.802514ms elapsed_secs=0.010802514
10:19:54 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=248.062µs elapsed_secs=0.000248062
10:19:54 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.888µs elapsed_secs=6.9888e-5
10:19:54 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.904788ms elapsed_secs=0.007904788
10:19:54 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=162.068µs elapsed_secs=0.000162068
10:19:54 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.101µs elapsed_secs=7.1101e-5
10:19:54 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.39617ms elapsed_secs=0.00739617
10:19:54 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.875446ms elapsed_secs=0.007875446
10:19:54 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=225.397µs elapsed_secs=0.000225397
10:19:54 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.512µs elapsed_secs=0.000131512
10:19:54 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=335.78µs elapsed_secs=0.00033578
10:19:54 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.254µs elapsed_secs=8.6254e-5
10:19:54 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.649916ms elapsed_secs=0.009649916
10:19:54 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=285.331µs elapsed_secs=0.000285331
10:19:54 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.303µs elapsed_secs=6.9303e-5
10:19:54 [DEBUG] (312) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.622046ms elapsed_secs=0.009622046
10:19:54 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.823493ms elapsed_secs=0.007823493
10:19:54 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.104913ms elapsed_secs=0.001104913
10:19:54 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=206.014µs elapsed_secs=0.000206014
10:19:54 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.460425ms elapsed_secs=0.009460425
10:19:54 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.995903ms elapsed_secs=0.009995903
10:19:54 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=535.723µs elapsed_secs=0.000535723
10:19:54 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.952µs elapsed_secs=9.9952e-5
10:19:54 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.072248ms elapsed_secs=0.011072248
10:19:54 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=444.487µs elapsed_secs=0.000444487
10:19:54 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.681µs elapsed_secs=7.5681e-5
10:19:54 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.176041ms elapsed_secs=0.008176041
10:19:54 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=171.313µs elapsed_secs=0.000171313
10:19:54 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.43µs elapsed_secs=7.643e-5
10:19:54 [DEBUG] (289) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=92.404549ms elapsed_secs=0.092404549
10:19:54 [DEBUG] (334) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.555µs elapsed_secs=5.4555e-5
10:19:54 [DEBUG] (334) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=145.715µs elapsed_secs=0.000145715
10:19:54 [DEBUG] (337) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.137µs elapsed_secs=4.7137e-5
10:19:54 [DEBUG] (301) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=84.373539ms elapsed_secs=0.084373539
10:19:54 [DEBUG] (338) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.818µs elapsed_secs=7.4818e-5
10:19:54 [DEBUG] (338) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n                SELECT COUNT(*) FROM projects\n            \n" rows_affected=0 rows_returned=1 elapsed=114.716µs elapsed_secs=0.000114716
10:19:54 [DEBUG] (299) menahel::repository::project_repo: Got projects count: 10
10:19:54 [DEBUG] (341) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.19µs elapsed_secs=4.419e-5
10:19:54 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.842883ms elapsed_secs=0.006842883
10:19:54 [DEBUG] (294) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=94.308655ms elapsed_secs=0.094308655
10:19:54 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=159.223µs elapsed_secs=0.000159223
10:19:54 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.921µs elapsed_secs=0.000130921
10:19:54 [DEBUG] (342) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=127.472µs elapsed_secs=0.000127472
10:19:54 [DEBUG] (342) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=168.862µs elapsed_secs=0.000168862
10:19:54 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.027825ms elapsed_secs=0.008027825
10:19:54 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.792847ms elapsed_secs=0.010792847
10:19:54 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=183.137µs elapsed_secs=0.000183137
10:19:54 [DEBUG] (345) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.989µs elapsed_secs=6.7989e-5
10:19:54 [DEBUG] (337) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.016623ms elapsed_secs=0.009016623
10:19:54 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=374.609µs elapsed_secs=0.000374609
10:19:54 [DEBUG] (337) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=62.905µs elapsed_secs=6.2905e-5
10:19:54 [DEBUG] (337) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=55.315µs elapsed_secs=5.5315e-5
10:19:54 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=153.767µs elapsed_secs=0.000153767
10:19:54 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.248µs elapsed_secs=8.6248e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.218148ms elapsed_secs=0.009218148
10:19:54 [DEBUG] (341) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.945µs elapsed_secs=8.7945e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=42.492µs elapsed_secs=4.2492e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=183.427µs elapsed_secs=0.000183427
10:19:54 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.747µs elapsed_secs=9.6747e-5
10:19:54 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.178177ms elapsed_secs=0.011178177
10:19:54 [DEBUG] (239) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=267.234215ms elapsed_secs=0.267234215
10:19:54 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=586.521µs elapsed_secs=0.000586521
10:19:54 [DEBUG] (346) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.465µs elapsed_secs=5.3465e-5
10:19:54 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.107µs elapsed_secs=9.9107e-5
10:19:54 [DEBUG] (346) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=258.298µs elapsed_secs=0.000258298
10:19:54 [DEBUG] (237) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:54 [DEBUG] (346) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=95.648µs elapsed_secs=9.5648e-5
10:19:54 [DEBUG] (349) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.767µs elapsed_secs=7.3767e-5
10:19:54 [DEBUG] (345) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.908513ms elapsed_secs=0.015908513
10:19:54 [DEBUG] (345) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.487µs elapsed_secs=7.6487e-5
10:19:54 [DEBUG] (345) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.654µs elapsed_secs=6.3654e-5
10:19:54 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=162.776µs elapsed_secs=0.000162776
10:19:54 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.624µs elapsed_secs=9.4624e-5
10:19:54 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.257189ms elapsed_secs=0.010257189
10:19:54 [DEBUG] (350) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.327µs elapsed_secs=5.3327e-5
10:19:54 [DEBUG] (350) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=357.27µs elapsed_secs=0.00035727
10:19:54 [INFO] Updated project: None
10:19:54 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.836113ms elapsed_secs=0.008836113
10:19:54 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.346471ms elapsed_secs=0.009346471
10:19:54 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=878.382µs elapsed_secs=0.000878382
10:19:54 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=730.233µs elapsed_secs=0.000730233
10:19:54 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=882.336µs elapsed_secs=0.000882336
10:19:54 [DEBUG] (349) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.007722ms elapsed_secs=0.013007722
10:19:54 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=291.064µs elapsed_secs=0.000291064
10:19:54 [DEBUG] (353) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.709µs elapsed_secs=7.7709e-5
10:19:54 [DEBUG] (349) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=173.367µs elapsed_secs=0.000173367
10:19:54 [DEBUG] (349) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.227µs elapsed_secs=7.8227e-5
10:19:54 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=176.5µs elapsed_secs=0.0001765
10:19:54 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.04µs elapsed_secs=9.804e-5
10:19:54 [DEBUG] (247) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=275.694187ms elapsed_secs=0.275694187
10:19:54 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.498968ms elapsed_secs=0.013498968
10:19:54 [DEBUG] (354) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.284µs elapsed_secs=4.5284e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=171.784µs elapsed_secs=0.000171784
10:19:54 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=148.616µs elapsed_secs=0.000148616
10:19:54 [DEBUG] (357) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.278µs elapsed_secs=5.3278e-5
10:19:54 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.939103ms elapsed_secs=0.007939103
10:19:54 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.504974ms elapsed_secs=0.011504974
10:19:54 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=243.077µs elapsed_secs=0.000243077
10:19:54 [DEBUG] (308) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=92.060999ms elapsed_secs=0.092060999
10:19:54 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.542µs elapsed_secs=9.8542e-5
10:19:54 [DEBUG] (359) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=89.987µs elapsed_secs=8.9987e-5
10:19:54 [DEBUG] (358) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.543µs elapsed_secs=4.5543e-5
10:19:54 [DEBUG] (359) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=351.583µs elapsed_secs=0.000351583
10:19:54 [DEBUG] (353) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.930504ms elapsed_secs=0.010930504
10:19:54 [DEBUG] (306) menahel::repository::project_repo: Got projects count: 10
10:19:54 [DEBUG] (306) menahel::repository::project_repo: Get users with pagenation: offset: 0, limit: 5
10:19:54 [DEBUG] (353) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=134.181µs elapsed_secs=0.000134181
10:19:54 [DEBUG] (359) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=131.426µs elapsed_secs=0.000131426
10:19:54 [DEBUG] (306) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(1), name: "Test Project 0" }, Project { id: Some(2), name: "Test Project 1" }, Project { id: Some(3), name: "Test Project 2" }, Project { id: Some(4), name: "Test Project 3" }, Project { id: Some(5), name: "Test Project 4" }]
10:19:54 [DEBUG] (353) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=109.025µs elapsed_secs=0.000109025
10:19:54 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=789.48µs elapsed_secs=0.00078948
10:19:54 [DEBUG] (360) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=140.023µs elapsed_secs=0.000140023
10:19:54 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=549.237µs elapsed_secs=0.000549237
10:19:54 [DEBUG] (360) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=342.279µs elapsed_secs=0.000342279
10:19:54 [DEBUG] (306) menahel::repository::project_repo: Got projects count: 10
10:19:54 [DEBUG] (306) menahel::repository::project_repo: Get users with pagenation: offset: 5, limit: 5
10:19:54 [DEBUG] (360) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=172.045µs elapsed_secs=0.000172045
10:19:54 [DEBUG] (306) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(6), name: "Test Project 5" }, Project { id: Some(7), name: "Test Project 6" }, Project { id: Some(8), name: "Test Project 7" }, Project { id: Some(9), name: "Test Project 8" }, Project { id: Some(10), name: "Test Project 9" }]
10:19:54 [DEBUG] (357) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.686211ms elapsed_secs=0.011686211
10:19:54 [DEBUG] (357) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=223.985µs elapsed_secs=0.000223985
10:19:54 [DEBUG] (357) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.266µs elapsed_secs=8.0266e-5
10:19:54 [DEBUG] (363) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.78µs elapsed_secs=3.878e-5
10:19:54 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=271.273µs elapsed_secs=0.000271273
10:19:54 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.194208ms elapsed_secs=0.008194208
10:19:54 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.577µs elapsed_secs=8.1577e-5
10:19:54 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.730558ms elapsed_secs=0.008730558
10:19:54 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=222.134µs elapsed_secs=0.000222134
10:19:54 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.125µs elapsed_secs=9.0125e-5
10:19:54 [DEBUG] (364) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=66.21µs elapsed_secs=6.621e-5
10:19:54 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.189611ms elapsed_secs=0.011189611
10:19:54 [DEBUG] (358) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=12.017694ms elapsed_secs=0.012017694
10:19:54 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=147.325µs elapsed_secs=0.000147325
10:19:54 [INFO] Created project: Project { id: Some(1), name: "update_test_20250606101954" }
10:19:54 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.581µs elapsed_secs=6.6581e-5
10:19:54 [DEBUG] (365) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.831µs elapsed_secs=6.3831e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.946877ms elapsed_secs=0.008946877
10:19:54 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=183.335µs elapsed_secs=0.000183335
10:19:54 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.435µs elapsed_secs=0.000116435
10:19:54 [DEBUG] (363) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.539043ms elapsed_secs=0.010539043
10:19:54 [DEBUG] (363) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=207.717µs elapsed_secs=0.000207717
10:19:54 [DEBUG] (363) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=287.286µs elapsed_secs=0.000287286
10:19:54 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.684818ms elapsed_secs=0.009684818
10:19:54 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=734.158µs elapsed_secs=0.000734158
10:19:54 [DEBUG] (312) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=95.986889ms elapsed_secs=0.095986889
10:19:54 [DEBUG] (364) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=11.689849ms elapsed_secs=0.011689849
10:19:54 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.098µs elapsed_secs=0.000125098
10:19:54 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=157.176µs elapsed_secs=0.000157176
10:19:54 [INFO] Created project: Project { id: Some(1), name: "empty_name_test_20250606101954" }
10:19:54 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=688.64µs elapsed_secs=0.00068864
10:19:54 [DEBUG] (366) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.471µs elapsed_secs=6.0471e-5
10:19:54 [DEBUG] (366) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=139.528µs elapsed_secs=0.000139528
10:19:54 [DEBUG] (310) menahel::repository::project_repo: Got projects count: 10
10:19:54 [DEBUG] (369) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.961µs elapsed_secs=4.4961e-5
10:19:54 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.654075ms elapsed_secs=0.008654075
10:19:54 [DEBUG] (372) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.511µs elapsed_secs=3.3511e-5
10:19:54 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=377.941µs elapsed_secs=0.000377941
10:19:54 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.174µs elapsed_secs=7.5174e-5
10:19:54 [DEBUG] (365) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=13.388863ms elapsed_secs=0.013388863
10:19:54 [INFO] Updated project: Some(Project { id: Some(1), name: "update_test_20250606101954_updated" })
10:19:54 [DEBUG] (358) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=62.988µs elapsed_secs=6.2988e-5
10:19:54 [DEBUG] (326) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "update_test_20250606101954_updated" })
10:19:54 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.484417ms elapsed_secs=0.008484417
10:19:54 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=237.271µs elapsed_secs=0.000237271
10:19:54 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.311µs elapsed_secs=8.7311e-5
10:19:54 [DEBUG] (375) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.985µs elapsed_secs=6.8985e-5
10:19:54 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.815994ms elapsed_secs=0.007815994
10:19:54 [DEBUG] (315) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=95.207399ms elapsed_secs=0.095207399
10:19:54 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=357.588µs elapsed_secs=0.000357588
10:19:54 [DEBUG] (376) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=133.61µs elapsed_secs=0.00013361
10:19:54 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.758µs elapsed_secs=0.000138758
10:19:54 [DEBUG] (376) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=250.668µs elapsed_secs=0.000250668
10:19:54 [DEBUG] (369) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.045753ms elapsed_secs=0.009045753
10:19:54 [DEBUG] (369) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=357.223µs elapsed_secs=0.000357223
10:19:54 [DEBUG] (369) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=516.396µs elapsed_secs=0.000516396
10:19:54 [DEBUG] (379) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.838µs elapsed_secs=7.8838e-5
10:19:54 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=621.937µs elapsed_secs=0.000621937
10:19:54 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.595µs elapsed_secs=0.000112595
10:19:54 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.194337ms elapsed_secs=0.011194337
10:19:54 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.168532ms elapsed_secs=0.012168532
10:19:54 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=414.535µs elapsed_secs=0.000414535
10:19:54 [DEBUG] (372) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.841425ms elapsed_secs=0.013841425
10:19:54 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.311µs elapsed_secs=9.2311e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=127.191µs elapsed_secs=0.000127191
10:19:54 [DEBUG] (372) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=68.715µs elapsed_secs=6.8715e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.399µs elapsed_secs=6.6399e-5
10:19:54 [DEBUG] (372) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.303µs elapsed_secs=6.1303e-5
10:19:54 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=373.235µs elapsed_secs=0.000373235
10:19:54 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.144µs elapsed_secs=8.8144e-5
10:19:54 [DEBUG] (375) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.229348ms elapsed_secs=0.014229348
10:19:54 [DEBUG] (375) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=89.138µs elapsed_secs=8.9138e-5
10:19:54 [DEBUG] (375) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=112.009µs elapsed_secs=0.000112009
10:19:54 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=253.406µs elapsed_secs=0.000253406
10:19:54 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.586µs elapsed_secs=9.0586e-5
10:19:54 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.647123ms elapsed_secs=0.007647123
10:19:54 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=170.395µs elapsed_secs=0.000170395
10:19:54 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.931559ms elapsed_secs=0.011931559
10:19:54 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.046µs elapsed_secs=6.3046e-5
10:19:54 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.085102ms elapsed_secs=0.012085102
10:19:54 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=604.196µs elapsed_secs=0.000604196
10:19:54 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=259.81µs elapsed_secs=0.00025981
10:19:54 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.427µs elapsed_secs=8.7427e-5
10:19:54 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.838µs elapsed_secs=6.4838e-5
10:19:54 [DEBUG] (379) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.945208ms elapsed_secs=0.009945208
10:19:54 [DEBUG] (379) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=91.793µs elapsed_secs=9.1793e-5
10:19:54 [DEBUG] (379) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.817µs elapsed_secs=9.0817e-5
10:19:54 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=391.347µs elapsed_secs=0.000391347
10:19:54 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.911µs elapsed_secs=0.000146911
10:19:54 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.447443ms elapsed_secs=0.009447443
10:19:54 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=498.42µs elapsed_secs=0.00049842
10:19:54 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=291.487µs elapsed_secs=0.000291487
10:19:54 [DEBUG] (319) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=96.577807ms elapsed_secs=0.096577807
10:19:54 [DEBUG] (380) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.68µs elapsed_secs=3.568e-5
10:19:54 [DEBUG] (380) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n                SELECT COUNT(*) FROM projects\n            \n" rows_affected=0 rows_returned=1 elapsed=126.553µs elapsed_secs=0.000126553
10:19:54 [DEBUG] (317) menahel::repository::project_repo: Got projects count: 10
10:19:54 [DEBUG] (383) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.274µs elapsed_secs=3.7274e-5
10:19:54 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.415839ms elapsed_secs=0.008415839
10:19:54 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.385496ms elapsed_secs=0.010385496
10:19:54 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=138.2µs elapsed_secs=0.0001382
10:19:54 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.574201ms elapsed_secs=0.010574201
10:19:54 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=422.221µs elapsed_secs=0.000422221
10:19:54 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=645.086µs elapsed_secs=0.000645086
10:19:54 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=434.978µs elapsed_secs=0.000434978
10:19:54 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.093µs elapsed_secs=9.4093e-5
10:19:54 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.35µs elapsed_secs=7.835e-5
10:19:54 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.041398ms elapsed_secs=0.007041398
10:19:54 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.79771ms elapsed_secs=0.00979771
10:19:54 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=328.666µs elapsed_secs=0.000328666
10:19:54 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=249.983µs elapsed_secs=0.000249983
10:19:54 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.802µs elapsed_secs=6.1802e-5
10:19:54 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.813µs elapsed_secs=6.7813e-5
10:19:54 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.677002ms elapsed_secs=0.008677002
10:19:54 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=287.088µs elapsed_secs=0.000287088
10:19:54 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.15µs elapsed_secs=0.00010915
10:19:54 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.853936ms elapsed_secs=0.009853936
10:19:54 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.80457ms elapsed_secs=0.00980457
10:19:54 [DEBUG] (383) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.9448ms elapsed_secs=0.0119448
10:19:54 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=571.961µs elapsed_secs=0.000571961
10:19:54 [DEBUG] (383) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=153.063µs elapsed_secs=0.000153063
10:19:54 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=485.355µs elapsed_secs=0.000485355
10:19:54 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.169µs elapsed_secs=0.000189169
10:19:54 [DEBUG] (383) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=154.349µs elapsed_secs=0.000154349
10:19:54 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.845µs elapsed_secs=0.000102845
10:19:54 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.533234ms elapsed_secs=0.010533234
10:19:54 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=191.069µs elapsed_secs=0.000191069
10:19:54 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=312.463µs elapsed_secs=0.000312463
10:19:54 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.822µs elapsed_secs=0.000133822
10:19:54 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.477µs elapsed_secs=0.000139477
10:19:54 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.433206ms elapsed_secs=0.011433206
10:19:54 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.558305ms elapsed_secs=0.011558305
10:19:54 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=448.983µs elapsed_secs=0.000448983
10:19:54 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=201.235µs elapsed_secs=0.000201235
10:19:54 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.459µs elapsed_secs=8.2459e-5
10:19:54 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.947µs elapsed_secs=6.8947e-5
10:19:54 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.830892ms elapsed_secs=0.006830892
10:19:54 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.96313ms elapsed_secs=0.00696313
10:19:54 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.01953ms elapsed_secs=0.00701953
10:19:54 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=698.719µs elapsed_secs=0.000698719
10:19:54 [DEBUG] (384) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.089µs elapsed_secs=6.1089e-5
10:19:54 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=696.989µs elapsed_secs=0.000696989
10:19:54 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.639µs elapsed_secs=0.000121639
10:19:54 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.1µs elapsed_secs=0.0001191
10:19:54 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.790278ms elapsed_secs=0.009790278
10:19:54 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.802445ms elapsed_secs=0.009802445
10:19:54 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.111496ms elapsed_secs=0.009111496
10:19:54 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=437.812µs elapsed_secs=0.000437812
10:19:54 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=316.808µs elapsed_secs=0.000316808
10:19:54 [DEBUG] (385) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.849µs elapsed_secs=5.1849e-5
10:19:54 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.465µs elapsed_secs=0.000100465
10:19:54 [DEBUG] (384) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=7.359099ms elapsed_secs=0.007359099
10:19:54 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.271µs elapsed_secs=9.5271e-5
10:19:54 [INFO] Created project: Project { id: Some(1), name: "long_name_test_20250606101954" }
10:19:54 [DEBUG] (385) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=364.164µs elapsed_secs=0.000364164
10:19:54 [INFO] Updated project: None
10:19:54 [DEBUG] (390) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.724µs elapsed_secs=4.2724e-5
10:19:54 [DEBUG] (391) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.721µs elapsed_secs=3.0721e-5
10:19:54 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.735891ms elapsed_secs=0.010735891
10:19:54 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.171204ms elapsed_secs=0.011171204
10:19:54 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=160.791µs elapsed_secs=0.000160791
10:19:54 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.142214ms elapsed_secs=0.009142214
10:19:54 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.043183ms elapsed_secs=0.011043183
10:19:54 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=371.559µs elapsed_secs=0.000371559
10:19:54 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=235.62µs elapsed_secs=0.00023562
10:19:54 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=219.766µs elapsed_secs=0.000219766
10:19:54 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.22µs elapsed_secs=8.322e-5
10:19:54 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.858µs elapsed_secs=6.4858e-5
10:19:54 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.404678ms elapsed_secs=0.010404678
10:19:54 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.601335ms elapsed_secs=0.010601335
10:19:54 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=280.517µs elapsed_secs=0.000280517
10:19:54 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=267.277µs elapsed_secs=0.000267277
10:19:54 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.711µs elapsed_secs=6.4711e-5
10:19:54 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=471.499µs elapsed_secs=0.000471499
10:19:54 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.593871ms elapsed_secs=0.010593871
10:19:54 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.003682ms elapsed_secs=0.011003682
10:19:54 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=906.018µs elapsed_secs=0.000906018
10:19:54 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=197.417µs elapsed_secs=0.000197417
10:19:54 [DEBUG] (391) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.969836ms elapsed_secs=0.013969836
10:19:54 [DEBUG] (390) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.27445ms elapsed_secs=0.01427445
10:19:54 [DEBUG] (391) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=182.317µs elapsed_secs=0.000182317
10:19:54 [DEBUG] (390) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=99.171µs elapsed_secs=9.9171e-5
10:19:54 [DEBUG] (390) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.963µs elapsed_secs=6.8963e-5
10:19:54 [DEBUG] (391) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=120.001µs elapsed_secs=0.000120001
10:19:54 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=377.502µs elapsed_secs=0.000377502
10:19:54 [DEBUG] (390) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=450.447µs elapsed_secs=0.000450447
10:19:54 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.606µs elapsed_secs=6.9606e-5
10:19:54 [DEBUG] (390) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.874µs elapsed_secs=8.0874e-5
10:19:54 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.420908ms elapsed_secs=0.011420908
10:19:54 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.482951ms elapsed_secs=0.011482951
10:19:54 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=188.544µs elapsed_secs=0.000188544
10:19:54 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=178.377µs elapsed_secs=0.000178377
10:19:54 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.059µs elapsed_secs=0.000120059
10:19:54 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.34µs elapsed_secs=8.834e-5
10:19:54 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.300216ms elapsed_secs=0.006300216
10:19:54 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=379.352µs elapsed_secs=0.000379352
10:19:54 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=224.866µs elapsed_secs=0.000224866
10:19:54 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.294284ms elapsed_secs=0.008294284
10:19:54 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=173.684µs elapsed_secs=0.000173684
10:19:54 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.765µs elapsed_secs=7.3765e-5
10:19:54 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.693967ms elapsed_secs=0.008693967
10:19:54 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.916325ms elapsed_secs=0.008916325
10:19:54 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.715948ms elapsed_secs=0.008715948
10:19:54 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=346.309µs elapsed_secs=0.000346309
10:19:54 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.573µs elapsed_secs=8.4573e-5
10:19:54 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.499054ms elapsed_secs=0.009499054
10:19:54 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.792078ms elapsed_secs=0.009792078
10:19:54 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=714.897µs elapsed_secs=0.000714897
10:19:54 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=387.156µs elapsed_secs=0.000387156
10:19:54 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.591µs elapsed_secs=6.4591e-5
10:19:54 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.82µs elapsed_secs=8.182e-5
10:19:54 [DEBUG] (390) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.339024ms elapsed_secs=0.010339024
10:19:54 [DEBUG] (390) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=131.842µs elapsed_secs=0.000131842
10:19:54 [DEBUG] (390) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=266.509µs elapsed_secs=0.000266509
10:19:54 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.148311ms elapsed_secs=0.008148311
10:19:54 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.355511ms elapsed_secs=0.008355511
10:19:54 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=409.925µs elapsed_secs=0.000409925
10:19:54 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=287.215µs elapsed_secs=0.000287215
10:19:54 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.051µs elapsed_secs=0.000129051
10:19:54 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.406µs elapsed_secs=0.000101406
10:19:54 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.23422ms elapsed_secs=0.00823422
10:19:54 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=210.437µs elapsed_secs=0.000210437
10:19:54 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.304µs elapsed_secs=0.000102304
10:19:54 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.913017ms elapsed_secs=0.008913017
10:19:54 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.573121ms elapsed_secs=0.009573121
10:19:54 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=145.649µs elapsed_secs=0.000145649
10:19:54 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.392µs elapsed_secs=7.1392e-5
10:19:54 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.406838ms elapsed_secs=0.006406838
10:19:54 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=136.365µs elapsed_secs=0.000136365
10:19:54 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=325.199µs elapsed_secs=0.000325199
10:19:54 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.965335ms elapsed_secs=0.008965335
10:19:54 [DEBUG] (390) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.682945ms elapsed_secs=0.009682945
10:19:54 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.114785ms elapsed_secs=0.009114785
10:19:54 [DEBUG] (390) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=313.775µs elapsed_secs=0.000313775
10:19:54 [DEBUG] (390) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=251.411µs elapsed_secs=0.000251411
10:19:54 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.155158ms elapsed_secs=0.010155158
10:19:54 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.739886ms elapsed_secs=0.009739886
10:19:54 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=154.677µs elapsed_secs=0.000154677
10:19:54 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.342µs elapsed_secs=5.6342e-5
10:19:54 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.292235ms elapsed_secs=0.009292235
10:19:54 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.343358ms elapsed_secs=0.009343358
10:19:54 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=271.912µs elapsed_secs=0.000271912
10:19:54 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.447µs elapsed_secs=9.9447e-5
10:19:54 [DEBUG] (390) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.890576ms elapsed_secs=0.011890576
10:19:54 [DEBUG] (390) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=240.167µs elapsed_secs=0.000240167
10:19:54 [DEBUG] (390) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.258µs elapsed_secs=7.4258e-5
10:19:54 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.081241ms elapsed_secs=0.008081241
10:19:54 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.126916ms elapsed_secs=0.007126916
10:19:54 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=194.536µs elapsed_secs=0.000194536
10:19:54 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.629µs elapsed_secs=7.2629e-5
10:19:54 [DEBUG] (390) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.300093ms elapsed_secs=0.012300093
10:19:54 [DEBUG] (390) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=143.561µs elapsed_secs=0.000143561
10:19:54 [DEBUG] (390) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.032µs elapsed_secs=7.4032e-5
10:19:54 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.196219ms elapsed_secs=0.008196219
10:19:54 [DEBUG] (390) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.419985ms elapsed_secs=0.007419985
10:19:54 [DEBUG] (345) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=159.088028ms elapsed_secs=0.159088028
10:19:54 [DEBUG] (392) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=146.465µs elapsed_secs=0.000146465
10:19:54 [DEBUG] (392) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=328.147µs elapsed_secs=0.000328147
10:19:54 [DEBUG] (392) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=310.798µs elapsed_secs=0.000310798
10:19:54 [DEBUG] (349) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=158.497902ms elapsed_secs=0.158497902
10:19:54 [DEBUG] (393) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.007µs elapsed_secs=3.5007e-5
10:19:54 [DEBUG] (393) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=114.141µs elapsed_secs=0.000114141
10:19:54 [DEBUG] (394) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.572µs elapsed_secs=3.5572e-5
10:19:54 [DEBUG] (393) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=101.753µs elapsed_secs=0.000101753
10:19:54 [DEBUG] (394) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=187.399µs elapsed_secs=0.000187399
10:19:54 [DEBUG] (398) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=153.227µs elapsed_secs=0.000153227
10:19:54 [DEBUG] (400) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.278µs elapsed_secs=5.3278e-5
10:19:54 [DEBUG] (353) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=159.207797ms elapsed_secs=0.159207797
10:19:54 [DEBUG] (357) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=153.486949ms elapsed_secs=0.153486949
10:19:54 [DEBUG] (400) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.342663ms elapsed_secs=0.010342663
10:19:54 [DEBUG] (398) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.622652ms elapsed_secs=0.010622652
10:19:54 [DEBUG] (401) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.901µs elapsed_secs=4.6901e-5
10:19:54 [DEBUG] (402) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.489µs elapsed_secs=7.1489e-5
10:19:54 [DEBUG] (398) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=164.083µs elapsed_secs=0.000164083
10:19:54 [DEBUG] (400) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=224.388µs elapsed_secs=0.000224388
10:19:54 [DEBUG] (398) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=126.903µs elapsed_secs=0.000126903
10:19:54 [DEBUG] (400) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=326.796µs elapsed_secs=0.000326796
10:19:54 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=175.96µs elapsed_secs=0.00017596
10:19:54 [DEBUG] (401) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=923.321µs elapsed_secs=0.000923321
10:19:54 [DEBUG] (402) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=869.473µs elapsed_secs=0.000869473
10:19:54 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=181.001µs elapsed_secs=0.000181001
10:19:54 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.565µs elapsed_secs=8.7565e-5
10:19:54 [DEBUG] (402) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=125.292µs elapsed_secs=0.000125292
10:19:54 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=252.955µs elapsed_secs=0.000252955
10:19:54 [DEBUG] (407) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=99.454µs elapsed_secs=9.9454e-5
10:19:54 [DEBUG] (408) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=104.918µs elapsed_secs=0.000104918
10:19:54 [DEBUG] (408) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.029234ms elapsed_secs=0.013029234
10:19:54 [DEBUG] (407) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.083294ms elapsed_secs=0.013083294
10:19:54 [DEBUG] (408) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=88.144µs elapsed_secs=8.8144e-5
10:19:54 [DEBUG] (407) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=73.588µs elapsed_secs=7.3588e-5
10:19:54 [DEBUG] (408) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.719µs elapsed_secs=6.9719e-5
10:19:54 [DEBUG] (407) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.491µs elapsed_secs=5.8491e-5
10:19:54 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=273.623µs elapsed_secs=0.000273623
10:19:54 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=231.869µs elapsed_secs=0.000231869
10:19:54 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.572µs elapsed_secs=6.2572e-5
10:19:54 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.809µs elapsed_secs=0.000109809
10:19:54 [DEBUG] (363) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=162.029492ms elapsed_secs=0.162029492
10:19:54 [DEBUG] (409) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.324µs elapsed_secs=5.8324e-5
10:19:54 [DEBUG] (409) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=306.781µs elapsed_secs=0.000306781
10:19:54 [DEBUG] (409) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=51.15µs elapsed_secs=5.115e-5
10:19:54 [DEBUG] (409) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=241.571µs elapsed_secs=0.000241571
10:19:54 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.180947ms elapsed_secs=0.009180947
10:19:54 [DEBUG] (372) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=147.41065ms elapsed_secs=0.14741065
10:19:54 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.903615ms elapsed_secs=0.009903615
10:19:54 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=387.987µs elapsed_secs=0.000387987
10:19:54 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=525.055µs elapsed_secs=0.000525055
10:19:54 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=994.855µs elapsed_secs=0.000994855
10:19:54 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=423.144µs elapsed_secs=0.000423144
10:19:54 [DEBUG] (410) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=156.025µs elapsed_secs=0.000156025
10:19:54 [DEBUG] (410) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=220.809µs elapsed_secs=0.000220809
10:19:54 [DEBUG] (413) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.429µs elapsed_secs=4.2429e-5
10:19:54 [DEBUG] (369) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=160.984378ms elapsed_secs=0.160984378
10:19:54 [DEBUG] (414) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.609µs elapsed_secs=4.1609e-5
10:19:54 [DEBUG] (414) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=149.561µs elapsed_secs=0.000149561
10:19:54 [DEBUG] (415) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=144.788µs elapsed_secs=0.000144788
10:19:54 [DEBUG] (418) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=98.78µs elapsed_secs=9.878e-5
10:19:54 [DEBUG] (375) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=165.594865ms elapsed_secs=0.165594865
10:19:54 [DEBUG] (413) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.527335ms elapsed_secs=0.010527335
10:19:54 [DEBUG] (413) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=118.511µs elapsed_secs=0.000118511
10:19:54 [DEBUG] (419) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=135.556µs elapsed_secs=0.000135556
10:19:54 [DEBUG] (413) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=177.51µs elapsed_secs=0.00017751
10:19:54 [DEBUG] (419) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n            \n" rows_affected=0 rows_returned=17 elapsed=850.505µs elapsed_secs=0.000850505
10:19:54 [DEBUG] (413) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.115054ms elapsed_secs=0.001115054
10:19:54 [DEBUG] (415) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=9.349614ms elapsed_secs=0.009349614
10:19:54 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.990228ms elapsed_secs=0.010990228
10:19:54 [DEBUG] (414) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=182.87µs elapsed_secs=0.00018287
10:19:54 [DEBUG] (413) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=550.838µs elapsed_secs=0.000550838
10:19:54 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.430314ms elapsed_secs=0.011430314
10:19:54 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=327.099µs elapsed_secs=0.000327099
10:19:54 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=135.76µs elapsed_secs=0.00013576
10:19:54 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=295.99µs elapsed_secs=0.00029599
10:19:54 [DEBUG] (422) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=130.723µs elapsed_secs=0.000130723
10:19:54 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=501.557µs elapsed_secs=0.000501557
10:19:54 [DEBUG] (425) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=108.195µs elapsed_secs=0.000108195
10:19:54 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.501181ms elapsed_secs=0.010501181
10:19:54 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.53308ms elapsed_secs=0.01053308
10:19:54 [DEBUG] (418) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.068013ms elapsed_secs=0.011068013
10:19:54 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=221.228µs elapsed_secs=0.000221228
10:19:54 [DEBUG] (418) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=67.471µs elapsed_secs=6.7471e-5
10:19:54 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=236.849µs elapsed_secs=0.000236849
10:19:54 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.16µs elapsed_secs=9.816e-5
10:19:54 [DEBUG] (418) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.227µs elapsed_secs=6.1227e-5
10:19:54 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.117µs elapsed_secs=0.000146117
10:19:54 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=288.635µs elapsed_secs=0.000288635
10:19:54 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.206µs elapsed_secs=0.000134206
10:19:54 [DEBUG] (379) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.636094ms elapsed_secs=0.164636094
10:19:54 [DEBUG] (426) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.818µs elapsed_secs=8.8818e-5
10:19:54 [DEBUG] (426) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=413µs elapsed_secs=0.000413
10:19:54 [DEBUG] (422) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.650389ms elapsed_secs=0.011650389
10:19:54 [DEBUG] (422) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=105.348µs elapsed_secs=0.000105348
10:19:54 [DEBUG] (429) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.334µs elapsed_secs=4.0334e-5
10:19:54 [DEBUG] (422) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.539µs elapsed_secs=8.4539e-5
10:19:54 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=2.064794ms elapsed_secs=0.002064794
10:19:54 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=218.856µs elapsed_secs=0.000218856
10:19:54 [DEBUG] (425) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.49863ms elapsed_secs=0.01649863
10:19:54 [DEBUG] (383) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.789244ms elapsed_secs=0.166789244
10:19:54 [DEBUG] (425) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=142.221µs elapsed_secs=0.000142221
10:19:54 [DEBUG] (425) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.2µs elapsed_secs=7.62e-5
10:19:54 [DEBUG] (430) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.72µs elapsed_secs=7.372e-5
10:19:54 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=227.986µs elapsed_secs=0.000227986
10:19:54 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.833924ms elapsed_secs=0.008833924
10:19:54 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=217.226µs elapsed_secs=0.000217226
10:19:54 [DEBUG] (430) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=496.295µs elapsed_secs=0.000496295
10:19:54 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=346.329µs elapsed_secs=0.000346329
10:19:54 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.854µs elapsed_secs=7.9854e-5
10:19:54 [DEBUG] (413) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.726117ms elapsed_secs=0.010726117
10:19:54 [DEBUG] (413) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=574.042µs elapsed_secs=0.000574042
10:19:54 [DEBUG] (433) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.012µs elapsed_secs=4.1012e-5
10:19:54 [DEBUG] (413) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.187µs elapsed_secs=6.2187e-5
10:19:54 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.423509ms elapsed_secs=0.011423509
10:19:54 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=143.599µs elapsed_secs=0.000143599
10:19:54 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.598µs elapsed_secs=0.000138598
10:19:54 [DEBUG] (429) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.409612ms elapsed_secs=0.013409612
10:19:54 [DEBUG] (429) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=125.623µs elapsed_secs=0.000125623
10:19:54 [DEBUG] (429) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=156.617µs elapsed_secs=0.000156617
10:19:54 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=342.576µs elapsed_secs=0.000342576
10:19:54 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=769.848µs elapsed_secs=0.000769848
10:19:54 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.404962ms elapsed_secs=0.011404962
10:19:54 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.622565ms elapsed_secs=0.011622565
10:19:54 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.832862ms elapsed_secs=0.011832862
10:19:54 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=445.421µs elapsed_secs=0.000445421
10:19:54 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=369.222µs elapsed_secs=0.000369222
10:19:54 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=330.668µs elapsed_secs=0.000330668
10:19:54 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=250.259µs elapsed_secs=0.000250259
10:19:54 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=658.575µs elapsed_secs=0.000658575
10:19:54 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=585.727µs elapsed_secs=0.000585727
10:19:54 [DEBUG] (433) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.22314ms elapsed_secs=0.01422314
10:19:54 [DEBUG] (433) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=126.478µs elapsed_secs=0.000126478
10:19:54 [DEBUG] (433) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.444µs elapsed_secs=8.5444e-5
10:19:54 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=324.714µs elapsed_secs=0.000324714
10:19:54 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.908769ms elapsed_secs=0.011908769
10:19:54 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.603µs elapsed_secs=0.000135603
10:19:54 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=272.894µs elapsed_secs=0.000272894
10:19:54 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.808µs elapsed_secs=9.8808e-5
10:19:54 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.176119ms elapsed_secs=0.007176119
10:19:54 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.642723ms elapsed_secs=0.007642723
10:19:54 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=334.237µs elapsed_secs=0.000334237
10:19:54 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=507.063µs elapsed_secs=0.000507063
10:19:54 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=203.652µs elapsed_secs=0.000203652
10:19:54 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.716µs elapsed_secs=0.000114716
10:19:54 [DEBUG] (413) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.532482ms elapsed_secs=0.011532482
10:19:54 [DEBUG] (413) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=211.867µs elapsed_secs=0.000211867
10:19:54 [DEBUG] (413) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.163µs elapsed_secs=7.8163e-5
10:19:54 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.076355ms elapsed_secs=0.011076355
10:19:54 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=332.966µs elapsed_secs=0.000332966
10:19:54 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.142µs elapsed_secs=7.8142e-5
10:19:54 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.649309ms elapsed_secs=0.010649309
10:19:54 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.976983ms elapsed_secs=0.008976983
10:19:54 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=323.173µs elapsed_secs=0.000323173
10:19:54 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.417071ms elapsed_secs=0.009417071
10:19:54 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.476387ms elapsed_secs=0.009476387
10:19:54 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.206µs elapsed_secs=8.7206e-5
10:19:54 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=231.301µs elapsed_secs=0.000231301
10:19:54 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=293.391µs elapsed_secs=0.000293391
10:19:54 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=509.509µs elapsed_secs=0.000509509
10:19:54 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=360.018µs elapsed_secs=0.000360018
10:19:54 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=359.546µs elapsed_secs=0.000359546
10:19:54 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.104µs elapsed_secs=9.0104e-5
10:19:54 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.952336ms elapsed_secs=0.005952336
10:19:54 [DEBUG] (391) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=177.886697ms elapsed_secs=0.177886697
10:19:54 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.38053ms elapsed_secs=0.00138053
10:19:54 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.376725ms elapsed_secs=0.008376725
10:19:54 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=244.013µs elapsed_secs=0.000244013
10:19:54 [DEBUG] (434) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.8µs elapsed_secs=6.28e-5
10:19:54 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=421.271µs elapsed_secs=0.000421271
10:19:54 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=149.887µs elapsed_secs=0.000149887
10:19:54 [DEBUG] (434) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=128.073µs elapsed_secs=0.000128073
10:19:54 [DEBUG] (437) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.78µs elapsed_secs=3.678e-5
10:19:54 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.652509ms elapsed_secs=0.010652509
10:19:54 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.970368ms elapsed_secs=0.010970368
10:19:54 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=414.887µs elapsed_secs=0.000414887
10:19:54 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=367.71µs elapsed_secs=0.00036771
10:19:54 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.484µs elapsed_secs=8.7484e-5
10:19:54 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.418µs elapsed_secs=6.7418e-5
10:19:54 [DEBUG] (413) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.504477ms elapsed_secs=0.011504477
10:19:54 [DEBUG] (413) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=159.36µs elapsed_secs=0.00015936
10:19:54 [DEBUG] (413) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.658µs elapsed_secs=8.9658e-5
10:19:54 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.36823ms elapsed_secs=0.00836823
10:19:54 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.694724ms elapsed_secs=0.008694724
10:19:54 [DEBUG] (390) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=179.4885ms elapsed_secs=0.1794885
10:19:54 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=346.262µs elapsed_secs=0.000346262
10:19:54 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.745994ms elapsed_secs=0.007745994
10:19:54 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=303.503µs elapsed_secs=0.000303503
10:19:54 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=637.113µs elapsed_secs=0.000637113
10:19:54 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=294.448µs elapsed_secs=0.000294448
10:19:54 [DEBUG] (438) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=227.376µs elapsed_secs=0.000227376
10:19:54 [DEBUG] (437) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.916208ms elapsed_secs=0.010916208
10:19:54 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.604838ms elapsed_secs=0.008604838
10:19:54 [DEBUG] (437) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=92.461µs elapsed_secs=9.2461e-5
10:19:54 [DEBUG] (438) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=521.866µs elapsed_secs=0.000521866
10:19:54 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.607938ms elapsed_secs=0.008607938
10:19:54 [DEBUG] (437) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.329µs elapsed_secs=8.5329e-5
10:19:54 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=682.714µs elapsed_secs=0.000682714
10:19:54 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.24856ms elapsed_secs=0.00124856
10:19:54 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=506.915µs elapsed_secs=0.000506915
10:19:54 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=553.152µs elapsed_secs=0.000553152
10:19:54 [DEBUG] (441) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=98.025µs elapsed_secs=9.8025e-5
10:19:54 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.956955ms elapsed_secs=0.008956955
10:19:54 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.257022ms elapsed_secs=0.012257022
10:19:54 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=418.621µs elapsed_secs=0.000418621
10:19:54 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=156.224µs elapsed_secs=0.000156224
10:19:54 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.763µs elapsed_secs=8.8763e-5
10:19:54 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.11µs elapsed_secs=9.111e-5
10:19:54 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.071989ms elapsed_secs=0.011071989
10:19:54 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.745518ms elapsed_secs=0.011745518
10:19:54 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=275.748µs elapsed_secs=0.000275748
10:19:54 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=499.016µs elapsed_secs=0.000499016
10:19:54 [DEBUG] (441) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.485093ms elapsed_secs=0.009485093
10:19:54 [DEBUG] (441) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=148.005µs elapsed_secs=0.000148005
10:19:54 [DEBUG] (413) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.193257ms elapsed_secs=0.009193257
10:19:54 [DEBUG] (441) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.867µs elapsed_secs=7.5867e-5
10:19:54 [DEBUG] (413) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=589.483µs elapsed_secs=0.000589483
10:19:54 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=474.129µs elapsed_secs=0.000474129
10:19:54 [DEBUG] (413) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.677µs elapsed_secs=8.8677e-5
10:19:54 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.32µs elapsed_secs=0.00012332
10:19:54 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.511214ms elapsed_secs=0.010511214
10:19:54 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.350093ms elapsed_secs=0.011350093
10:19:54 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=137.436µs elapsed_secs=0.000137436
10:19:54 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=313.99µs elapsed_secs=0.00031399
10:19:54 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.329521ms elapsed_secs=0.010329521
10:19:54 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.992878ms elapsed_secs=0.010992878
10:19:54 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=370.725µs elapsed_secs=0.000370725
10:19:54 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.994µs elapsed_secs=6.1994e-5
10:19:54 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=129.212µs elapsed_secs=0.000129212
10:19:54 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.268µs elapsed_secs=8.0268e-5
10:19:54 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.927102ms elapsed_secs=0.006927102
10:19:54 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.567043ms elapsed_secs=0.011567043
10:19:54 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=329.982µs elapsed_secs=0.000329982
10:19:54 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.327µs elapsed_secs=8.1327e-5
10:19:54 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=714.617µs elapsed_secs=0.000714617
10:19:54 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.049µs elapsed_secs=0.000101049
10:19:54 [DEBUG] (413) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.24978ms elapsed_secs=0.01124978
10:19:54 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.231409ms elapsed_secs=0.011231409
10:19:54 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=366.138µs elapsed_secs=0.000366138
10:19:54 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.013µs elapsed_secs=6.7013e-5
10:19:54 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.496722ms elapsed_secs=0.010496722
10:19:54 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=199.016µs elapsed_secs=0.000199016
10:19:54 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=160.926µs elapsed_secs=0.000160926
10:19:54 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.658768ms elapsed_secs=0.008658768
10:19:54 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.29805ms elapsed_secs=0.00929805
10:19:54 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=423.687µs elapsed_secs=0.000423687
10:19:54 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.908µs elapsed_secs=0.000103908
10:19:54 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=395.962µs elapsed_secs=0.000395962
10:19:54 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.952µs elapsed_secs=6.7952e-5
10:19:54 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.96124ms elapsed_secs=0.00796124
10:19:54 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.945778ms elapsed_secs=0.009945778
10:19:54 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.325049ms elapsed_secs=0.010325049
10:19:54 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=145.896µs elapsed_secs=0.000145896
10:19:54 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.507µs elapsed_secs=6.8507e-5
10:19:54 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.176773ms elapsed_secs=0.007176773
10:19:54 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.266414ms elapsed_secs=0.009266414
10:19:54 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=303.89µs elapsed_secs=0.00030389
10:19:54 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.022µs elapsed_secs=7.5022e-5
10:19:54 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.147521ms elapsed_secs=0.009147521
10:19:54 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=184.875µs elapsed_secs=0.000184875
10:19:54 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.141µs elapsed_secs=0.000115141
10:19:54 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.872071ms elapsed_secs=0.007872071
10:19:54 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.6544ms elapsed_secs=0.0056544
10:19:54 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.291548ms elapsed_secs=0.006291548
10:19:54 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=338.407µs elapsed_secs=0.000338407
10:19:54 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.921µs elapsed_secs=9.5921e-5
10:19:54 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.949972ms elapsed_secs=0.007949972
10:19:54 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=170.7µs elapsed_secs=0.0001707
10:19:54 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.624µs elapsed_secs=7.7624e-5
10:19:54 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.285739ms elapsed_secs=0.006285739
10:19:54 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=229.425µs elapsed_secs=0.000229425
10:19:54 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.037µs elapsed_secs=9.1037e-5
10:19:54 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.484656ms elapsed_secs=0.007484656
10:19:54 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.287362ms elapsed_secs=0.008287362
10:19:54 [DEBUG] (398) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=146.809962ms elapsed_secs=0.146809962
10:19:54 [DEBUG] (442) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.435µs elapsed_secs=3.5435e-5
10:19:54 [DEBUG] (442) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE created_at >= $1 AND created_at <= $2\n" rows_affected=0 rows_returned=1 elapsed=195.874µs elapsed_secs=0.000195874
10:19:54 [DEBUG] (443) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.935µs elapsed_secs=7.4935e-5
10:19:54 [DEBUG] (443) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE created_at >= $1\n" rows_affected=0 rows_returned=2 elapsed=166.019µs elapsed_secs=0.000166019
10:19:54 [DEBUG] (442) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE created_at <= $1\n" rows_affected=0 rows_returned=15 elapsed=117.496µs elapsed_secs=0.000117496
10:19:54 [DEBUG] (400) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=153.968419ms elapsed_secs=0.153968419
10:19:54 [DEBUG] (446) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.776µs elapsed_secs=3.2776e-5
10:19:54 [DEBUG] (447) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.044µs elapsed_secs=4.6044e-5
10:19:54 [DEBUG] (447) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE deadline >= $1 AND deadline <= $2\n" rows_affected=0 rows_returned=1 elapsed=191.614µs elapsed_secs=0.000191614
10:19:54 [DEBUG] (448) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.399µs elapsed_secs=3.9399e-5
10:19:54 [DEBUG] (448) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE deadline >= $1\n" rows_affected=0 rows_returned=2 elapsed=162.81µs elapsed_secs=0.00016281
10:19:54 [DEBUG] (447) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE deadline <= $1\n" rows_affected=0 rows_returned=11 elapsed=95.119µs elapsed_secs=9.5119e-5
10:19:54 [DEBUG] (451) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.413µs elapsed_secs=7.2413e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.483988ms elapsed_secs=0.009483988
10:19:54 [DEBUG] (446) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=98.252µs elapsed_secs=9.8252e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.647µs elapsed_secs=7.6647e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=209.413µs elapsed_secs=0.000209413
10:19:54 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.485µs elapsed_secs=8.2485e-5
10:19:54 [DEBUG] (408) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=145.749859ms elapsed_secs=0.145749859
10:19:54 [DEBUG] (407) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=156.672126ms elapsed_secs=0.156672126
10:19:54 [DEBUG] (451) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.830065ms elapsed_secs=0.012830065
10:19:54 [DEBUG] (451) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=312.259µs elapsed_secs=0.000312259
10:19:54 [DEBUG] (453) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=112.218µs elapsed_secs=0.000112218
10:19:54 [DEBUG] (452) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=164.759µs elapsed_secs=0.000164759
10:19:54 [DEBUG] (451) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=314.03µs elapsed_secs=0.00031403
10:19:54 [DEBUG] (453) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE level = $1\n" rows_affected=0 rows_returned=2 elapsed=699µs elapsed_secs=0.000699
10:19:54 [DEBUG] (452) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE description LIKE '%' || $1 || '%'\n" rows_affected=0 rows_returned=1 elapsed=906.977µs elapsed_secs=0.000906977
10:19:54 [DEBUG] (451) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.081561ms elapsed_secs=0.001081561
10:19:54 [DEBUG] (451) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=208.577µs elapsed_secs=0.000208577
10:19:54 [DEBUG] (458) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.254µs elapsed_secs=4.1254e-5
10:19:54 [DEBUG] (459) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.267µs elapsed_secs=3.8267e-5
10:19:54 [DEBUG] (458) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.917756ms elapsed_secs=0.015917756
10:19:54 [DEBUG] (459) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.825033ms elapsed_secs=0.015825033
10:19:54 [DEBUG] (458) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=89.533µs elapsed_secs=8.9533e-5
10:19:54 [DEBUG] (459) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=98.485µs elapsed_secs=9.8485e-5
10:19:54 [DEBUG] (458) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=65.134µs elapsed_secs=6.5134e-5
10:19:54 [DEBUG] (459) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.844µs elapsed_secs=5.7844e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.105515ms elapsed_secs=0.012105515
10:19:54 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=452.427µs elapsed_secs=0.000452427
10:19:54 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=595.46µs elapsed_secs=0.00059546
10:19:54 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.336µs elapsed_secs=9.8336e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=483.297µs elapsed_secs=0.000483297
10:19:54 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.775µs elapsed_secs=7.5775e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.399µs elapsed_secs=6.2399e-5
10:19:54 [DEBUG] (451) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.025891ms elapsed_secs=0.009025891
10:19:54 [DEBUG] (451) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=361.952µs elapsed_secs=0.000361952
10:19:54 [DEBUG] (422) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=142.40716ms elapsed_secs=0.14240716
10:19:54 [DEBUG] (451) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.856µs elapsed_secs=9.2856e-5
10:19:54 [DEBUG] (460) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.222µs elapsed_secs=8.4222e-5
10:19:54 [DEBUG] (460) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks \n" rows_affected=0 rows_returned=17 elapsed=243.342µs elapsed_secs=0.000243342
10:19:54 [DEBUG] (413) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.34612ms elapsed_secs=0.16434612
10:19:54 [DEBUG] (463) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.478µs elapsed_secs=4.7478e-5
10:19:54 [DEBUG] (464) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=76.049µs elapsed_secs=7.6049e-5
10:19:54 [DEBUG] (464) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE project_id = $1 AND parent_id = $2 AND level = $3 AND name LIKE '%' || $4 || '%' AND description LIKE '%' || $5 || '%' AND status = $6 AND deadline >= $7 AND deadline <= $8 AND created_at >= $9 AND created_at <= $10 AND updated_at >= $11 AND updated_at <= $12\n" rows_affected=0 rows_returned=1 elapsed=205.411µs elapsed_secs=0.000205411
10:19:54 [DEBUG] (467) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.653µs elapsed_secs=4.5653e-5
10:19:54 [DEBUG] (418) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=161.302531ms elapsed_secs=0.161302531
10:19:54 [DEBUG] (468) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.146µs elapsed_secs=7.7146e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.483804ms elapsed_secs=0.007483804
10:19:54 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.13669ms elapsed_secs=0.00813669
10:19:54 [DEBUG] (468) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE name LIKE '%' || $1 || '%'\n" rows_affected=0 rows_returned=1 elapsed=581.952µs elapsed_secs=0.000581952
10:19:54 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=447.874µs elapsed_secs=0.000447874
10:19:54 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=319.279µs elapsed_secs=0.000319279
10:19:54 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.765µs elapsed_secs=9.2765e-5
10:19:54 [DEBUG] (463) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.291113ms elapsed_secs=0.010291113
10:19:54 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.308µs elapsed_secs=0.000204308
10:19:54 [DEBUG] (463) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=204.162µs elapsed_secs=0.000204162
10:19:54 [DEBUG] (463) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=170.569µs elapsed_secs=0.000170569
10:19:54 [DEBUG] (471) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.449µs elapsed_secs=8.4449e-5
10:19:54 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=297.326µs elapsed_secs=0.000297326
10:19:54 [DEBUG] (429) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=150.827882ms elapsed_secs=0.150827882
10:19:54 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.683µs elapsed_secs=0.000119683
10:19:54 [DEBUG] (451) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.55278ms elapsed_secs=0.00755278
10:19:54 [DEBUG] (451) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=227.927µs elapsed_secs=0.000227927
10:19:54 [DEBUG] (472) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=29.714µs elapsed_secs=2.9714e-5
10:19:54 [DEBUG] (451) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=467.507µs elapsed_secs=0.000467507
10:19:54 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.832073ms elapsed_secs=0.010832073
10:19:54 [DEBUG] (472) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE project_id = $1\n" rows_affected=0 rows_returned=3 elapsed=656.264µs elapsed_secs=0.000656264
10:19:54 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=901.422µs elapsed_secs=0.000901422
10:19:54 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=197.879µs elapsed_secs=0.000197879
10:19:54 [DEBUG] (467) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.053434ms elapsed_secs=0.015053434
10:19:54 [DEBUG] (467) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.019µs elapsed_secs=0.000133019
10:19:54 [DEBUG] (475) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.236µs elapsed_secs=4.1236e-5
10:19:54 [DEBUG] (467) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=60.358µs elapsed_secs=6.0358e-5
10:19:54 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=390.91µs elapsed_secs=0.00039091
10:19:54 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.753µs elapsed_secs=0.000107753
10:19:54 [DEBUG] (425) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=170.672589ms elapsed_secs=0.170672589
10:19:54 [DEBUG] (471) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.290726ms elapsed_secs=0.011290726
10:19:54 [DEBUG] (471) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=134.421µs elapsed_secs=0.000134421
10:19:54 [DEBUG] (476) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.802µs elapsed_secs=3.6802e-5
10:19:54 [DEBUG] (471) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=159.649µs elapsed_secs=0.000159649
10:19:54 [DEBUG] (476) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE parent_id = $1\n" rows_affected=0 rows_returned=1 elapsed=247.121µs elapsed_secs=0.000247121
10:19:54 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=458.77µs elapsed_secs=0.00045877
10:19:54 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.851µs elapsed_secs=0.000182851
10:19:54 [DEBUG] (479) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.908µs elapsed_secs=4.3908e-5
10:19:54 [DEBUG] (433) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=160.379798ms elapsed_secs=0.160379798
10:19:54 [DEBUG] (480) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=102.49µs elapsed_secs=0.00010249
10:19:54 [DEBUG] (475) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.337526ms elapsed_secs=0.012337526
10:19:54 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.320691ms elapsed_secs=0.007320691
10:19:54 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.38489ms elapsed_secs=0.00738489
10:19:54 [DEBUG] (475) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=848.919µs elapsed_secs=0.000848919
10:19:54 [DEBUG] (480) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE status = $1\n" rows_affected=0 rows_returned=6 elapsed=1.342348ms elapsed_secs=0.001342348
10:19:54 [DEBUG] (475) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=267.817µs elapsed_secs=0.000267817
10:19:54 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.189963ms elapsed_secs=0.001189963
10:19:54 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.328445ms elapsed_secs=0.001328445
10:19:54 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.085µs elapsed_secs=0.000124085
10:19:54 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=304.923µs elapsed_secs=0.000304923
10:19:54 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.635µs elapsed_secs=9.8635e-5
10:19:54 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=383.804µs elapsed_secs=0.000383804
10:19:54 [DEBUG] (451) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.692854ms elapsed_secs=0.010692854
10:19:54 [DEBUG] (483) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=117.138µs elapsed_secs=0.000117138
10:19:54 [DEBUG] (451) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=396.23µs elapsed_secs=0.00039623
10:19:54 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.600556ms elapsed_secs=0.011600556
10:19:54 [DEBUG] (451) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.117µs elapsed_secs=0.000153117
10:19:54 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=182.297µs elapsed_secs=0.000182297
10:19:54 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.292µs elapsed_secs=6.4292e-5
10:19:54 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.634803ms elapsed_secs=0.010634803
10:19:54 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=157.485µs elapsed_secs=0.000157485
10:19:54 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.996µs elapsed_secs=0.000189996
10:19:54 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.821672ms elapsed_secs=0.013821672
10:19:54 [DEBUG] (479) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.927715ms elapsed_secs=0.016927715
10:19:54 [DEBUG] (479) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=183.989µs elapsed_secs=0.000183989
10:19:54 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=529.997µs elapsed_secs=0.000529997
10:19:54 [DEBUG] (479) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=534.759µs elapsed_secs=0.000534759
10:19:54 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=534.652µs elapsed_secs=0.000534652
10:19:54 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=769.817µs elapsed_secs=0.000769817
10:19:54 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.588µs elapsed_secs=0.000100588
10:19:54 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.960413ms elapsed_secs=0.011960413
10:19:54 [DEBUG] (483) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.615125ms elapsed_secs=0.016615125
10:19:54 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=262.219µs elapsed_secs=0.000262219
10:19:54 [DEBUG] (483) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.665µs elapsed_secs=7.5665e-5
10:19:54 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.658µs elapsed_secs=0.000110658
10:19:54 [DEBUG] (483) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.748µs elapsed_secs=7.4748e-5
10:19:54 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=468.692µs elapsed_secs=0.000468692
10:19:54 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.887µs elapsed_secs=7.6887e-5
10:19:54 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.458954ms elapsed_secs=0.007458954
10:19:54 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.173943ms elapsed_secs=0.006173943
10:19:54 [DEBUG] (451) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.871648ms elapsed_secs=0.007871648
10:19:54 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.02361ms elapsed_secs=0.00802361
10:19:54 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=223.761µs elapsed_secs=0.000223761
10:19:54 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=339.239µs elapsed_secs=0.000339239
10:19:54 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=262.797µs elapsed_secs=0.000262797
10:19:54 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=290.216µs elapsed_secs=0.000290216
10:19:54 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=220.524µs elapsed_secs=0.000220524
10:19:54 [DEBUG] (451) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=642.18µs elapsed_secs=0.00064218
10:19:54 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.955µs elapsed_secs=0.000130955
10:19:54 [DEBUG] (451) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.495µs elapsed_secs=0.000100495
10:19:54 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.970808ms elapsed_secs=0.008970808
10:19:54 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.521815ms elapsed_secs=0.007521815
10:19:54 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=302.773µs elapsed_secs=0.000302773
10:19:54 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.419µs elapsed_secs=0.000110419
10:19:54 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=584.185µs elapsed_secs=0.000584185
10:19:54 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=467.194µs elapsed_secs=0.000467194
10:19:54 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.123619ms elapsed_secs=0.009123619
10:19:54 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=267.765µs elapsed_secs=0.000267765
10:19:54 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.358µs elapsed_secs=9.0358e-5
10:19:54 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.08514ms elapsed_secs=0.00808514
10:19:54 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=202.538µs elapsed_secs=0.000202538
10:19:54 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.614µs elapsed_secs=5.5614e-5
10:19:54 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.964024ms elapsed_secs=0.007964024
10:19:54 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.266993ms elapsed_secs=0.008266993
10:19:54 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=146.916µs elapsed_secs=0.000146916
10:19:54 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.158µs elapsed_secs=7.4158e-5
10:19:54 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=148.374µs elapsed_secs=0.000148374
10:19:54 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.606µs elapsed_secs=5.6606e-5
10:19:54 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.899687ms elapsed_secs=0.007899687
10:19:54 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.408453ms elapsed_secs=0.010408453
10:19:54 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.164608ms elapsed_secs=0.009164608
10:19:54 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=194.02µs elapsed_secs=0.00019402
10:19:54 [DEBUG] (437) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=183.120087ms elapsed_secs=0.183120087
10:19:54 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=156.017µs elapsed_secs=0.000156017
10:19:54 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.265666ms elapsed_secs=0.011265666
10:19:54 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.971904ms elapsed_secs=0.009971904
10:19:54 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=368.992µs elapsed_secs=0.000368992
10:19:54 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.447µs elapsed_secs=7.6447e-5
10:19:54 [DEBUG] (451) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.745486ms elapsed_secs=0.011745486
10:19:54 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=280.27µs elapsed_secs=0.00028027
10:19:54 [DEBUG] (484) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.005µs elapsed_secs=3.9005e-5
10:19:54 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=414.617µs elapsed_secs=0.000414617
10:19:54 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=270.536µs elapsed_secs=0.000270536
10:19:54 [DEBUG] (484) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE updated_at >= $1 AND updated_at <= $2\n" rows_affected=0 rows_returned=1 elapsed=235.021µs elapsed_secs=0.000235021
10:19:54 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.581µs elapsed_secs=0.000127581
10:19:54 [DEBUG] (485) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.69µs elapsed_secs=3.869e-5
10:19:54 [DEBUG] (485) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE updated_at >= $1\n" rows_affected=0 rows_returned=2 elapsed=140.628µs elapsed_secs=0.000140628
10:19:54 [DEBUG] (484) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE updated_at <= $1\n" rows_affected=0 rows_returned=1 elapsed=160.498µs elapsed_secs=0.000160498
10:19:54 [DEBUG] (488) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.836µs elapsed_secs=3.7836e-5
10:19:54 [DEBUG] (441) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=180.082706ms elapsed_secs=0.180082706
10:19:54 [DEBUG] (489) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.121µs elapsed_secs=3.8121e-5
10:19:54 [DEBUG] (492) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.859µs elapsed_secs=7.5859e-5
10:19:54 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.732433ms elapsed_secs=0.006732433
10:19:54 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=151.548µs elapsed_secs=0.000151548
10:19:54 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=441.162µs elapsed_secs=0.000441162
10:19:54 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.232746ms elapsed_secs=0.009232746
10:19:54 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=317.185µs elapsed_secs=0.000317185
10:19:54 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.346µs elapsed_secs=9.7346e-5
10:19:54 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.301812ms elapsed_secs=0.008301812
10:19:54 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=587.102µs elapsed_secs=0.000587102
10:19:54 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.097µs elapsed_secs=9.3097e-5
10:19:54 [DEBUG] (488) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.583868ms elapsed_secs=0.010583868
10:19:54 [DEBUG] (488) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=98.857µs elapsed_secs=9.8857e-5
10:19:54 [DEBUG] (488) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.832µs elapsed_secs=6.4832e-5
10:19:54 [DEBUG] (488) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=245.178µs elapsed_secs=0.000245178
10:19:54 [DEBUG] (488) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.107µs elapsed_secs=9.2107e-5
10:19:54 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.837725ms elapsed_secs=0.010837725
10:19:54 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.388068ms elapsed_secs=0.001388068
10:19:54 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=316.236µs elapsed_secs=0.000316236
10:19:54 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.110433ms elapsed_secs=0.010110433
10:19:54 [DEBUG] (492) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.556918ms elapsed_secs=0.013556918
10:19:54 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.067016ms elapsed_secs=0.010067016
10:19:54 [DEBUG] (492) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=116.109µs elapsed_secs=0.000116109
10:19:54 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=239.121µs elapsed_secs=0.000239121
10:19:54 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=235.403µs elapsed_secs=0.000235403
10:19:54 [DEBUG] (492) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=129.956µs elapsed_secs=0.000129956
10:19:54 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.604µs elapsed_secs=0.000119604
10:19:54 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.100739ms elapsed_secs=0.011100739
10:19:54 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.832µs elapsed_secs=7.1832e-5
10:19:54 [DEBUG] (492) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=386.662µs elapsed_secs=0.000386662
10:19:54 [DEBUG] (492) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.397µs elapsed_secs=7.4397e-5
10:19:54 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.484089ms elapsed_secs=0.010484089
10:19:54 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.647711ms elapsed_secs=0.008647711
10:19:54 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=166.867µs elapsed_secs=0.000166867
10:19:54 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.761µs elapsed_secs=7.8761e-5
10:19:54 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.69816ms elapsed_secs=0.00769816
10:19:54 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.849414ms elapsed_secs=0.009849414
10:19:54 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=141.174µs elapsed_secs=0.000141174
10:19:54 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.685µs elapsed_secs=8.8685e-5
10:19:54 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=135.76µs elapsed_secs=0.00013576
10:19:54 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.576µs elapsed_secs=7.1576e-5
10:19:54 [DEBUG] (488) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.576858ms elapsed_secs=0.006576858
10:19:54 [DEBUG] (488) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=144.281µs elapsed_secs=0.000144281
10:19:54 [DEBUG] (488) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.896µs elapsed_secs=9.9896e-5
10:19:54 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.837956ms elapsed_secs=0.007837956
10:19:54 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=151.017µs elapsed_secs=0.000151017
10:19:54 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=423.787µs elapsed_secs=0.000423787
10:19:54 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.034565ms elapsed_secs=0.009034565
10:19:54 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.121631ms elapsed_secs=0.009121631
10:19:54 [DEBUG] (492) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.411798ms elapsed_secs=0.009411798
10:19:54 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=200.278µs elapsed_secs=0.000200278
10:19:54 [DEBUG] (492) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=364.896µs elapsed_secs=0.000364896
10:19:54 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=298.135µs elapsed_secs=0.000298135
10:19:55 [DEBUG] (492) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=349.079µs elapsed_secs=0.000349079
10:19:55 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.500443ms elapsed_secs=0.010500443
10:19:55 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.052837ms elapsed_secs=0.008052837
10:19:55 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.67362ms elapsed_secs=0.00667362
10:19:55 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=351.868µs elapsed_secs=0.000351868
10:19:55 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.413µs elapsed_secs=6.2413e-5
10:19:55 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.403748ms elapsed_secs=0.007403748
10:19:55 [DEBUG] (488) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.663678ms elapsed_secs=0.007663678
10:19:55 [DEBUG] (488) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=181.993µs elapsed_secs=0.000181993
10:19:55 [DEBUG] (488) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.898µs elapsed_secs=8.4898e-5
10:19:55 [DEBUG] (492) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.298933ms elapsed_secs=0.007298933
10:19:55 [DEBUG] (492) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=392.199µs elapsed_secs=0.000392199
10:19:55 [DEBUG] (492) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.779µs elapsed_secs=0.000110779
10:19:55 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.371647ms elapsed_secs=0.008371647
10:19:55 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=556.253µs elapsed_secs=0.000556253
10:19:55 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.641µs elapsed_secs=6.4641e-5
10:19:55 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.297886ms elapsed_secs=0.008297886
10:19:55 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.184287ms elapsed_secs=0.007184287
10:19:55 [DEBUG] (488) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.412713ms elapsed_secs=0.007412713
10:19:55 [DEBUG] (492) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.380906ms elapsed_secs=0.009380906
10:19:55 [DEBUG] (488) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=170.147µs elapsed_secs=0.000170147
10:19:55 [DEBUG] (488) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.934µs elapsed_secs=0.000116934
10:19:55 [DEBUG] (492) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=298.977µs elapsed_secs=0.000298977
10:19:55 [DEBUG] (492) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.851µs elapsed_secs=5.9851e-5
10:19:55 [DEBUG] (492) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.404006ms elapsed_secs=0.007404006
10:19:55 [DEBUG] (492) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=685.973µs elapsed_secs=0.000685973
10:19:55 [DEBUG] (492) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.864µs elapsed_secs=7.6864e-5
10:19:55 [DEBUG] (488) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.831732ms elapsed_secs=0.006831732
10:19:55 [DEBUG] (488) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=138.861µs elapsed_secs=0.000138861
10:19:55 [DEBUG] (488) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.924µs elapsed_secs=0.000159924
10:19:55 [DEBUG] (488) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.878467ms elapsed_secs=0.006878467
10:19:55 [DEBUG] (492) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.143389ms elapsed_secs=0.007143389
10:19:55 [DEBUG] (451) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=151.473817ms elapsed_secs=0.151473817
10:19:55 [DEBUG] (446) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=154.537204ms elapsed_secs=0.154537204
10:19:55 [DEBUG] (493) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.273µs elapsed_secs=3.4273e-5
10:19:55 [DEBUG] (494) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.845µs elapsed_secs=5.8845e-5
10:19:55 [DEBUG] (498) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.443µs elapsed_secs=8.2443e-5
10:19:55 [DEBUG] (500) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.61µs elapsed_secs=4.061e-5
10:19:55 [DEBUG] (498) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.858798ms elapsed_secs=0.010858798
10:19:55 [DEBUG] (500) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.554515ms elapsed_secs=0.010554515
10:19:55 [DEBUG] (498) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=690.547µs elapsed_secs=0.000690547
10:19:55 [DEBUG] (500) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=689.992µs elapsed_secs=0.000689992
10:19:55 [DEBUG] (498) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=291.103µs elapsed_secs=0.000291103
10:19:55 [DEBUG] (500) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=246.632µs elapsed_secs=0.000246632
10:19:55 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.026743ms elapsed_secs=0.001026743
10:19:55 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.994µs elapsed_secs=0.000134994
10:19:55 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=418.038µs elapsed_secs=0.000418038
10:19:55 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=589.521µs elapsed_secs=0.000589521
10:19:55 [DEBUG] (458) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=154.31453ms elapsed_secs=0.15431453
10:19:55 [DEBUG] (501) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.74µs elapsed_secs=7.874e-5
10:19:55 [DEBUG] (459) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=160.845918ms elapsed_secs=0.160845918
10:19:55 [DEBUG] (502) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.45µs elapsed_secs=8.245e-5
10:19:55 [DEBUG] (505) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=160.432µs elapsed_secs=0.000160432
10:19:55 [DEBUG] (508) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.21µs elapsed_secs=7.321e-5
10:19:55 [DEBUG] (463) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=149.635369ms elapsed_secs=0.149635369
10:19:55 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.095197ms elapsed_secs=0.006095197
10:19:55 [DEBUG] (509) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.907µs elapsed_secs=5.6907e-5
10:19:55 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=161.973µs elapsed_secs=0.000161973
10:19:55 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.124µs elapsed_secs=0.000136124
10:19:55 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.823408ms elapsed_secs=0.006823408
10:19:55 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=331.111µs elapsed_secs=0.000331111
10:19:55 [DEBUG] (512) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.789µs elapsed_secs=4.0789e-5
10:19:55 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.839µs elapsed_secs=0.000101839
10:19:55 [DEBUG] (505) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.839604ms elapsed_secs=0.014839604
10:19:55 [DEBUG] (508) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.248853ms elapsed_secs=0.014248853
10:19:55 [DEBUG] (505) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=183.662µs elapsed_secs=0.000183662
10:19:55 [DEBUG] (508) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=203.837µs elapsed_secs=0.000203837
10:19:55 [DEBUG] (505) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=122.81µs elapsed_secs=0.00012281
10:19:55 [DEBUG] (508) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=88.582µs elapsed_secs=8.8582e-5
10:19:55 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=317.45µs elapsed_secs=0.00031745
10:19:55 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.546µs elapsed_secs=0.000104546
10:19:55 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.287709ms elapsed_secs=0.001287709
10:19:55 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.092µs elapsed_secs=8.7092e-5
10:19:55 [DEBUG] (512) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.612639ms elapsed_secs=0.012612639
10:19:55 [DEBUG] (512) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=191.615µs elapsed_secs=0.000191615
10:19:55 [DEBUG] (512) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.759µs elapsed_secs=7.6759e-5
10:19:55 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=549.584µs elapsed_secs=0.000549584
10:19:55 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.402µs elapsed_secs=0.000120402
10:19:55 [DEBUG] (471) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=162.095397ms elapsed_secs=0.162095397
10:19:55 [DEBUG] (513) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=120.457µs elapsed_secs=0.000120457
10:19:55 [DEBUG] (467) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.655691ms elapsed_secs=0.166655691
10:19:55 [DEBUG] (515) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.925µs elapsed_secs=3.7925e-5
10:19:55 [DEBUG] (517) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.054µs elapsed_secs=3.8054e-5
10:19:55 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.971579ms elapsed_secs=0.009971579
10:19:55 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.956302ms elapsed_secs=0.009956302
10:19:55 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=158.394µs elapsed_secs=0.000158394
10:19:55 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=482.572µs elapsed_secs=0.000482572
10:19:55 [DEBUG] (520) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=159.678µs elapsed_secs=0.000159678
10:19:55 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=314.727µs elapsed_secs=0.000314727
10:19:55 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.268µs elapsed_secs=7.3268e-5
10:19:55 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.004851ms elapsed_secs=0.007004851
10:19:55 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=454.778µs elapsed_secs=0.000454778
10:19:55 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.818µs elapsed_secs=7.8818e-5
10:19:55 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.59481ms elapsed_secs=0.01059481
10:19:55 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=510.313µs elapsed_secs=0.000510313
10:19:55 [DEBUG] (517) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.852154ms elapsed_secs=0.012852154
10:19:55 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=979.49µs elapsed_secs=0.00097949
10:19:55 [DEBUG] (520) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.301185ms elapsed_secs=0.011301185
10:19:55 [DEBUG] (475) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=173.329621ms elapsed_secs=0.173329621
10:19:55 [DEBUG] (520) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=189.791µs elapsed_secs=0.000189791
10:19:55 [DEBUG] (517) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=208.989µs elapsed_secs=0.000208989
10:19:55 [DEBUG] (520) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=128.383µs elapsed_secs=0.000128383
10:19:55 [DEBUG] (517) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=102.868µs elapsed_secs=0.000102868
10:19:55 [DEBUG] (521) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.947µs elapsed_secs=5.8947e-5
10:19:55 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=602.213µs elapsed_secs=0.000602213
10:19:55 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=871.728µs elapsed_secs=0.000871728
10:19:55 [DEBUG] (521) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\nSELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at FROM tasks  WHERE project_id = $1 AND parent_id = $2 AND level = $3 AND name LIKE '%' || $4 || '%' AND description LIKE '%' || $5 || '%' AND status = $6 AND deadline >= $7 AND deadline <= $8 AND created_at >= $9 AND created_at <= $10 AND updated_at >= $11 AND updated_at <= $12\n" rows_affected=0 rows_returned=0 elapsed=512.958µs elapsed_secs=0.000512958
10:19:55 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=190.272µs elapsed_secs=0.000190272
10:19:55 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.154µs elapsed_secs=0.000100154
10:19:55 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.336645ms elapsed_secs=0.012336645
10:19:55 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=238.695µs elapsed_secs=0.000238695
10:19:55 [DEBUG] (524) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.795µs elapsed_secs=4.4795e-5
10:19:55 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=303.261µs elapsed_secs=0.000303261
10:19:55 [DEBUG] (479) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.611479ms elapsed_secs=0.164611479
10:19:55 [DEBUG] (525) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.653µs elapsed_secs=3.4653e-5
10:19:55 [DEBUG] (525) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=171.152µs elapsed_secs=0.000171152
10:19:55 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.544834ms elapsed_secs=0.008544834
10:19:55 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.804533ms elapsed_secs=0.008804533
10:19:55 [DEBUG] (526) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.067µs elapsed_secs=5.1067e-5
10:19:55 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=255.379µs elapsed_secs=0.000255379
10:19:55 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=314.395µs elapsed_secs=0.000314395
10:19:55 [DEBUG] (526) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=211.362µs elapsed_secs=0.000211362
10:19:55 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.491µs elapsed_secs=7.3491e-5
10:19:55 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.441µs elapsed_secs=0.000120441
10:19:55 [DEBUG] (526) sqlx::query: summary="UPDATE tasks SET parent_id …" db.statement="\n\n\n                UPDATE tasks \n                SET parent_id = $1, level = $2, name = $3, description = $4, status = $5, deadline = $6, updated_at = $7\n                WHERE id = $8\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=599.592µs elapsed_secs=0.000599592
10:19:55 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.807397ms elapsed_secs=0.007807397
10:19:55 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=766.542µs elapsed_secs=0.000766542
10:19:55 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=214.733µs elapsed_secs=0.000214733
10:19:55 [DEBUG] (524) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.32294ms elapsed_secs=0.01232294
10:19:55 [DEBUG] (524) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=225.004µs elapsed_secs=0.000225004
10:19:55 [DEBUG] (524) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=98.81µs elapsed_secs=9.881e-5
10:19:55 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=184.224µs elapsed_secs=0.000184224
10:19:55 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=248.786µs elapsed_secs=0.000248786
10:19:55 [DEBUG] (483) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=173.333056ms elapsed_secs=0.173333056
10:19:55 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.204933ms elapsed_secs=0.008204933
10:19:55 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.934372ms elapsed_secs=0.012934372
10:19:55 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=308.007µs elapsed_secs=0.000308007
10:19:55 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=304.666µs elapsed_secs=0.000304666
10:19:55 [DEBUG] (527) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.478µs elapsed_secs=4.2478e-5
10:19:55 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.616432ms elapsed_secs=0.006616432
10:19:55 [DEBUG] (530) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.531µs elapsed_secs=5.8531e-5
10:19:55 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.924µs elapsed_secs=6.1924e-5
10:19:55 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.286µs elapsed_secs=7.8286e-5
10:19:55 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.930668ms elapsed_secs=0.006930668
10:19:55 [DEBUG] (527) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=380.702µs elapsed_secs=0.000380702
10:19:55 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=534.943µs elapsed_secs=0.000534943
10:19:55 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=273.407µs elapsed_secs=0.000273407
10:19:55 [DEBUG] (527) sqlx::query: summary="UPDATE tasks SET parent_id …" db.statement="\n\n\n                UPDATE tasks \n                SET parent_id = $1, level = $2, name = $3, description = $4, status = $5, deadline = $6, updated_at = $7\n                WHERE id = $8\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=0 elapsed=177.872µs elapsed_secs=0.000177872
10:19:55 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.054µs elapsed_secs=8.8054e-5
10:19:55 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.117µs elapsed_secs=7.9117e-5
10:19:55 [DEBUG] (533) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.034µs elapsed_secs=6.2034e-5
10:19:55 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.865033ms elapsed_secs=0.005865033
10:19:55 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=551.828µs elapsed_secs=0.000551828
10:19:55 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=343.61µs elapsed_secs=0.00034361
10:19:55 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.676248ms elapsed_secs=0.012676248
10:19:55 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=262.788µs elapsed_secs=0.000262788
10:19:55 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=143.935µs elapsed_secs=0.000143935
10:19:55 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.414412ms elapsed_secs=0.011414412
10:19:55 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=312.445µs elapsed_secs=0.000312445
10:19:55 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.016µs elapsed_secs=7.3016e-5
10:19:55 [DEBUG] (530) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.244594ms elapsed_secs=0.014244594
10:19:55 [DEBUG] (530) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.077µs elapsed_secs=8.7077e-5
10:19:55 [DEBUG] (530) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.881µs elapsed_secs=7.4881e-5
10:19:55 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=172.605µs elapsed_secs=0.000172605
10:19:55 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.458µs elapsed_secs=0.000134458
10:19:55 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.397248ms elapsed_secs=0.010397248
10:19:55 [DEBUG] (533) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.958656ms elapsed_secs=0.013958656
10:19:55 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=479.366µs elapsed_secs=0.000479366
10:19:55 [DEBUG] (533) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.094µs elapsed_secs=8.5094e-5
10:19:55 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.858µs elapsed_secs=0.000126858
10:19:55 [DEBUG] (533) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.177µs elapsed_secs=6.3177e-5
10:19:55 [DEBUG] (533) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=165.535µs elapsed_secs=0.000165535
10:19:55 [DEBUG] (533) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=277.727µs elapsed_secs=0.000277727
10:19:55 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.235622ms elapsed_secs=0.006235622
10:19:55 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.222598ms elapsed_secs=0.008222598
10:19:55 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=652.601µs elapsed_secs=0.000652601
10:19:55 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.055365ms elapsed_secs=0.001055365
10:19:55 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=436.581µs elapsed_secs=0.000436581
10:19:55 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=384.795µs elapsed_secs=0.000384795
10:19:55 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.636147ms elapsed_secs=0.010636147
10:19:55 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=165.935µs elapsed_secs=0.000165935
10:19:55 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.02µs elapsed_secs=6.502e-5
10:19:55 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.691673ms elapsed_secs=0.010691673
10:19:55 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=177.631µs elapsed_secs=0.000177631
10:19:55 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.827µs elapsed_secs=0.000159827
10:19:55 [DEBUG] (488) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=168.30875ms elapsed_secs=0.16830875
10:19:55 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.389435ms elapsed_secs=0.011389435
10:19:55 [DEBUG] (534) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.575µs elapsed_secs=4.7575e-5
10:19:55 [DEBUG] (534) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=118.477µs elapsed_secs=0.000118477
10:19:55 [DEBUG] (534) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=60.251µs elapsed_secs=6.0251e-5
10:19:55 [DEBUG] (537) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.193µs elapsed_secs=4.5193e-5
10:19:55 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.316491ms elapsed_secs=0.007316491
10:19:55 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.124098ms elapsed_secs=0.010124098
10:19:55 [DEBUG] (492) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=172.695014ms elapsed_secs=0.172695014
10:19:55 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=275.67µs elapsed_secs=0.00027567
10:19:55 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.071µs elapsed_secs=0.000118071
10:19:55 [DEBUG] (538) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.615µs elapsed_secs=3.3615e-5
10:19:55 [DEBUG] (538) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=239.018µs elapsed_secs=0.000239018
10:19:55 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.551802ms elapsed_secs=0.008551802
10:19:55 [DEBUG] (541) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.715µs elapsed_secs=4.4715e-5
10:19:55 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=718.953µs elapsed_secs=0.000718953
10:19:55 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.84µs elapsed_secs=0.00012384
10:19:55 [DEBUG] (533) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.171569ms elapsed_secs=0.009171569
10:19:55 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.426068ms elapsed_secs=0.012426068
10:19:55 [DEBUG] (533) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=508.759µs elapsed_secs=0.000508759
10:19:55 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=203.653µs elapsed_secs=0.000203653
10:19:55 [DEBUG] (533) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.554µs elapsed_secs=6.0554e-5
10:19:55 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.69µs elapsed_secs=8.169e-5
10:19:55 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.222547ms elapsed_secs=0.012222547
10:19:55 [DEBUG] (537) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.39328ms elapsed_secs=0.01539328
10:19:55 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=509.593µs elapsed_secs=0.000509593
10:19:55 [DEBUG] (537) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.664µs elapsed_secs=8.3664e-5
10:19:55 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.082µs elapsed_secs=9.7082e-5
10:19:55 [DEBUG] (537) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=130.789µs elapsed_secs=0.000130789
10:19:55 [DEBUG] (537) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=190.769µs elapsed_secs=0.000190769
10:19:55 [DEBUG] (537) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.921µs elapsed_secs=9.0921e-5
10:19:55 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=15.187374ms elapsed_secs=0.015187374
10:19:55 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=15.440599ms elapsed_secs=0.015440599
10:19:55 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=299.385µs elapsed_secs=0.000299385
10:19:55 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.594µs elapsed_secs=7.0594e-5
10:19:55 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=273.318µs elapsed_secs=0.000273318
10:19:55 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.111µs elapsed_secs=8.9111e-5
10:19:55 [DEBUG] (541) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.204101ms elapsed_secs=0.014204101
10:19:55 [DEBUG] (541) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=94.208µs elapsed_secs=9.4208e-5
10:19:55 [DEBUG] (541) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=189.366µs elapsed_secs=0.000189366
10:19:55 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=345.998µs elapsed_secs=0.000345998
10:19:55 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.878033ms elapsed_secs=0.012878033
10:19:55 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.801µs elapsed_secs=0.000204801
10:19:55 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=174.239µs elapsed_secs=0.000174239
10:19:55 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.448µs elapsed_secs=0.000176448
10:19:55 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.418609ms elapsed_secs=0.012418609
10:19:55 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.339555ms elapsed_secs=0.009339555
10:19:55 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.680457ms elapsed_secs=0.009680457
10:19:55 [DEBUG] (533) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.745693ms elapsed_secs=0.009745693
10:19:55 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=264.498µs elapsed_secs=0.000264498
10:19:55 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=226.654µs elapsed_secs=0.000226654
10:19:55 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.16261ms elapsed_secs=0.00116261
10:19:55 [DEBUG] (533) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=862.624µs elapsed_secs=0.000862624
10:19:55 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.051µs elapsed_secs=9.3051e-5
10:19:55 [DEBUG] (533) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.377µs elapsed_secs=9.0377e-5
10:19:55 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.019635ms elapsed_secs=0.007019635
10:19:55 [DEBUG] (537) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.419419ms elapsed_secs=0.007419419
10:19:55 [DEBUG] (537) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=188.012µs elapsed_secs=0.000188012
10:19:55 [DEBUG] (537) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.303µs elapsed_secs=8.2303e-5
10:19:55 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.50257ms elapsed_secs=0.00950257
10:19:55 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=684.711µs elapsed_secs=0.000684711
10:19:55 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.649753ms elapsed_secs=0.010649753
10:19:55 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=274.718µs elapsed_secs=0.000274718
10:19:55 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.816036ms elapsed_secs=0.011816036
10:19:55 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.593011ms elapsed_secs=0.012593011
10:19:55 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=185.682µs elapsed_secs=0.000185682
10:19:55 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.437µs elapsed_secs=0.000113437
10:19:55 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=139.627µs elapsed_secs=0.000139627
10:19:55 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.707µs elapsed_secs=0.000129707
10:19:55 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.84647ms elapsed_secs=0.00784647
10:19:55 [DEBUG] (537) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.39935ms elapsed_secs=0.00839935
10:19:55 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.488913ms elapsed_secs=0.008488913
10:19:55 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=330.707µs elapsed_secs=0.000330707
10:19:55 [DEBUG] (537) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=169.653µs elapsed_secs=0.000169653
10:19:55 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.177µs elapsed_secs=9.5177e-5
10:19:55 [DEBUG] (537) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.883µs elapsed_secs=0.000144883
10:19:55 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=264.764µs elapsed_secs=0.000264764
10:19:55 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.5µs elapsed_secs=8.05e-5
10:19:55 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.51437ms elapsed_secs=0.00851437
10:19:55 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.309842ms elapsed_secs=0.006309842
10:19:55 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=301.11µs elapsed_secs=0.00030111
10:19:55 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.048µs elapsed_secs=0.000103048
10:19:55 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.669681ms elapsed_secs=0.008669681
10:19:55 [DEBUG] (533) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=18.750095ms elapsed_secs=0.018750095
10:19:55 [DEBUG] (533) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=239.445µs elapsed_secs=0.000239445
10:19:55 [DEBUG] (533) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.655µs elapsed_secs=8.3655e-5
10:19:55 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.986285ms elapsed_secs=0.006986285
10:19:55 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.303016ms elapsed_secs=0.007303016
10:19:55 [DEBUG] (537) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.737769ms elapsed_secs=0.007737769
10:19:55 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=470.736µs elapsed_secs=0.000470736
10:19:55 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.089µs elapsed_secs=7.0089e-5
10:19:55 [DEBUG] (537) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=155.21µs elapsed_secs=0.00015521
10:19:55 [DEBUG] (537) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.072µs elapsed_secs=7.1072e-5
10:19:55 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.233898ms elapsed_secs=0.007233898
10:19:55 [DEBUG] (533) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.323702ms elapsed_secs=0.006323702
10:19:55 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=305.607µs elapsed_secs=0.000305607
10:19:55 [DEBUG] (533) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=183.615µs elapsed_secs=0.000183615
10:19:55 [DEBUG] (533) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.566µs elapsed_secs=9.6566e-5
10:19:55 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.304µs elapsed_secs=0.000176304
10:19:55 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.3129ms elapsed_secs=0.0083129
10:19:55 [DEBUG] (537) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.859868ms elapsed_secs=0.006859868
10:19:55 [DEBUG] (537) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=754.188µs elapsed_secs=0.000754188
10:19:55 [DEBUG] (537) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.518µs elapsed_secs=6.7518e-5
10:19:55 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.8451ms elapsed_secs=0.0088451
10:19:55 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=257.653µs elapsed_secs=0.000257653
10:19:55 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.358µs elapsed_secs=9.0358e-5
10:19:55 [DEBUG] (533) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.169682ms elapsed_secs=0.010169682
10:19:55 [DEBUG] (537) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.499436ms elapsed_secs=0.007499436
10:19:55 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.084805ms elapsed_secs=0.010084805
10:19:55 [DEBUG] (498) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=150.381041ms elapsed_secs=0.150381041
10:19:55 [DEBUG] (542) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.197µs elapsed_secs=5.0197e-5
10:19:55 [DEBUG] (542) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=130.268µs elapsed_secs=0.000130268
10:19:55 [DEBUG] (542) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=81.416µs elapsed_secs=8.1416e-5
10:19:55 [DEBUG] (545) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.809µs elapsed_secs=4.5809e-5
10:19:55 [DEBUG] (545) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.863329ms elapsed_secs=0.009863329
10:19:55 [DEBUG] (545) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=120.734µs elapsed_secs=0.000120734
10:19:55 [DEBUG] (545) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=236.828µs elapsed_secs=0.000236828
10:19:55 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=395.722µs elapsed_secs=0.000395722
10:19:55 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.697µs elapsed_secs=0.000189697
10:19:55 [DEBUG] (500) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=178.204456ms elapsed_secs=0.178204456
10:19:55 [DEBUG] (546) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.36µs elapsed_secs=4.036e-5
10:19:55 [DEBUG] (546) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=154.596µs elapsed_secs=0.000154596
10:19:55 [DEBUG] (546) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=83.599µs elapsed_secs=8.3599e-5
10:19:55 [DEBUG] (549) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.438µs elapsed_secs=3.8438e-5
10:19:55 [DEBUG] (549) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.795896ms elapsed_secs=0.013795896
10:19:55 [DEBUG] (549) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=299.272µs elapsed_secs=0.000299272
10:19:55 [DEBUG] (549) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=92.827µs elapsed_secs=9.2827e-5
10:19:55 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=290.401µs elapsed_secs=0.000290401
10:19:55 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=218.933µs elapsed_secs=0.000218933
10:19:55 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.028305ms elapsed_secs=0.011028305
10:19:55 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=138.746µs elapsed_secs=0.000138746
10:19:55 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=380.109µs elapsed_secs=0.000380109
10:19:55 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.347464ms elapsed_secs=0.006347464
10:19:55 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=261.628µs elapsed_secs=0.000261628
10:19:55 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.888µs elapsed_secs=7.4888e-5
10:19:55 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.387715ms elapsed_secs=0.007387715
10:19:55 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=136.033µs elapsed_secs=0.000136033
10:19:55 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=205.022µs elapsed_secs=0.000205022
10:19:55 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.788932ms elapsed_secs=0.006788932
10:19:55 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=238.321µs elapsed_secs=0.000238321
10:19:55 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=128.678µs elapsed_secs=0.000128678
10:19:55 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.98264ms elapsed_secs=0.00798264
10:19:55 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=166.467µs elapsed_secs=0.000166467
10:19:55 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.104µs elapsed_secs=6.2104e-5
10:19:55 [DEBUG] (508) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=217.12748ms elapsed_secs=0.21712748
10:19:55 [DEBUG] (550) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.56µs elapsed_secs=7.456e-5
10:19:55 [DEBUG] (550) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=282.439µs elapsed_secs=0.000282439
10:19:55 [DEBUG] (506) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:19:55 [DEBUG] (550) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=84.564µs elapsed_secs=8.4564e-5
10:19:55 [DEBUG] (550) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=12.418µs elapsed_secs=1.2418e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.219µs elapsed_secs=4.1219e-5
10:19:55 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.187501ms elapsed_secs=0.007187501
10:19:55 [DEBUG] (512) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=216.942512ms elapsed_secs=0.216942512
10:19:55 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.382851ms elapsed_secs=0.007382851
10:19:55 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=426.955µs elapsed_secs=0.000426955
10:19:55 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.352µs elapsed_secs=0.000177352
10:19:55 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=358.43µs elapsed_secs=0.00035843
10:19:55 [DEBUG] (554) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.672µs elapsed_secs=7.4672e-5
10:19:55 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.573µs elapsed_secs=0.000177573
10:19:55 [DEBUG] (554) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=131.397µs elapsed_secs=0.000131397
10:19:55 [DEBUG] (510) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:55 [DEBUG] (505) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=213.361982ms elapsed_secs=0.213361982
10:19:55 [DEBUG] (554) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=62.437µs elapsed_secs=6.2437e-5
10:19:55 [DEBUG] (554) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=32.94µs elapsed_secs=3.294e-5
10:19:55 [DEBUG] (554) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=74.233µs elapsed_secs=7.4233e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.455322ms elapsed_secs=0.011455322
10:19:55 [DEBUG] (553) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=286.232µs elapsed_secs=0.000286232
10:19:55 [DEBUG] (555) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=93.871µs elapsed_secs=9.3871e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=258.764µs elapsed_secs=0.000258764
10:19:55 [DEBUG] (555) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=374.869µs elapsed_secs=0.000374869
10:19:55 [DEBUG] (553) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=839.153µs elapsed_secs=0.000839153
10:19:55 [DEBUG] (558) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.369µs elapsed_secs=6.0369e-5
10:19:55 [DEBUG] (503) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:55 [DEBUG] (555) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=133.823µs elapsed_secs=0.000133823
10:19:55 [DEBUG] (553) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=310.485µs elapsed_secs=0.000310485
10:19:55 [DEBUG] (555) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=25.251µs elapsed_secs=2.5251e-5
10:19:55 [DEBUG] (555) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=102.156µs elapsed_secs=0.000102156
10:19:55 [DEBUG] (555) sqlx::query: summary="INSERT INTO user_assign (user_id, …" db.statement="\n\n\n                INSERT INTO user_assign (user_id, task_id)\n                VALUES ($1, $2)\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=1 elapsed=140.487µs elapsed_secs=0.000140487
10:19:55 [DEBUG] (559) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.956µs elapsed_secs=4.6956e-5
10:19:55 [DEBUG] (517) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=208.367807ms elapsed_secs=0.208367807
10:19:55 [DEBUG] (559) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=194.704µs elapsed_secs=0.000194704
10:19:55 [DEBUG] (558) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.594877ms elapsed_secs=0.014594877
10:19:55 [DEBUG] (560) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=29.614µs elapsed_secs=2.9614e-5
10:19:55 [DEBUG] (558) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=103.09µs elapsed_secs=0.00010309
10:19:55 [DEBUG] (558) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=103.201µs elapsed_secs=0.000103201
10:19:55 [DEBUG] (560) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=464.869µs elapsed_secs=0.000464869
10:19:55 [DEBUG] (514) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:55 [DEBUG] (563) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=103.52µs elapsed_secs=0.00010352
10:19:55 [DEBUG] (558) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=439.325µs elapsed_secs=0.000439325
10:19:55 [DEBUG] (560) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=121.697µs elapsed_secs=0.000121697
10:19:55 [DEBUG] (558) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.019µs elapsed_secs=0.000100019
10:19:55 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.407247ms elapsed_secs=0.010407247
10:19:55 [DEBUG] (566) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.805µs elapsed_secs=8.8805e-5
10:19:55 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.162023ms elapsed_secs=0.013162023
10:19:55 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=254.511µs elapsed_secs=0.000254511
10:19:55 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=128.456µs elapsed_secs=0.000128456
10:19:55 [DEBUG] (520) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=222.603817ms elapsed_secs=0.222603817
10:19:55 [DEBUG] (553) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.504704ms elapsed_secs=0.011504704
10:19:55 [DEBUG] (567) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.996µs elapsed_secs=4.0996e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=664.101µs elapsed_secs=0.000664101
10:19:55 [DEBUG] (553) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.128µs elapsed_secs=0.000167128
10:19:55 [DEBUG] (567) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=1.005129ms elapsed_secs=0.001005129
10:19:55 [DEBUG] (518) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:55 [DEBUG] (563) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.373868ms elapsed_secs=0.009373868
10:19:55 [DEBUG] (567) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=576.277µs elapsed_secs=0.000576277
10:19:55 [DEBUG] (563) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=326.149µs elapsed_secs=0.000326149
10:19:55 [DEBUG] (563) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=187.493µs elapsed_secs=0.000187493
10:19:55 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=294.133µs elapsed_secs=0.000294133
10:19:55 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.922µs elapsed_secs=0.000140922
10:19:55 [DEBUG] (570) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.781µs elapsed_secs=6.0781e-5
10:19:55 [DEBUG] (566) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.512533ms elapsed_secs=0.013512533
10:19:55 [DEBUG] (566) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=90.194µs elapsed_secs=9.0194e-5
10:19:55 [DEBUG] (566) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.979µs elapsed_secs=5.7979e-5
10:19:55 [DEBUG] (566) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=493.095µs elapsed_secs=0.000493095
10:19:55 [DEBUG] (566) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.501µs elapsed_secs=0.000139501
10:19:55 [DEBUG] (570) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.624159ms elapsed_secs=0.010624159
10:19:55 [DEBUG] (570) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=141.327µs elapsed_secs=0.000141327
10:19:55 [DEBUG] (570) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=92.012µs elapsed_secs=9.2012e-5
10:19:55 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=404.95µs elapsed_secs=0.00040495
10:19:55 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=317.385µs elapsed_secs=0.000317385
10:19:55 [DEBUG] (558) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.183419ms elapsed_secs=0.011183419
10:19:55 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.491388ms elapsed_secs=0.011491388
10:19:55 [DEBUG] (558) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.139146ms elapsed_secs=0.001139146
10:19:55 [DEBUG] (558) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.266µs elapsed_secs=0.000113266
10:19:55 [DEBUG] (530) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=215.89601ms elapsed_secs=0.21589601
10:19:55 [DEBUG] (553) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.763524ms elapsed_secs=0.010763524
10:19:55 [DEBUG] (571) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.214µs elapsed_secs=4.9214e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=267.527µs elapsed_secs=0.000267527
10:19:55 [DEBUG] (553) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.753µs elapsed_secs=7.3753e-5
10:19:55 [DEBUG] (571) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=306.462µs elapsed_secs=0.000306462
10:19:55 [DEBUG] (528) menahel::repository::user_repo: Get user by id with transaction: None
10:19:55 [DEBUG] (524) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=238.206449ms elapsed_secs=0.238206449
10:19:55 [DEBUG] (572) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=108.775µs elapsed_secs=0.000108775
10:19:55 [DEBUG] (575) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.304µs elapsed_secs=4.9304e-5
10:19:55 [DEBUG] (572) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=219.407µs elapsed_secs=0.000219407
10:19:55 [DEBUG] (522) menahel::repository::user_repo: Get user by id with transaction: None
10:19:55 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.873603ms elapsed_secs=0.013873603
10:19:55 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=216.936µs elapsed_secs=0.000216936
10:19:55 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.701µs elapsed_secs=0.000111701
10:19:55 [DEBUG] (578) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=115.163µs elapsed_secs=0.000115163
10:19:55 [DEBUG] (566) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.476826ms elapsed_secs=0.011476826
10:19:55 [DEBUG] (566) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=771.818µs elapsed_secs=0.000771818
10:19:55 [DEBUG] (566) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=216.778µs elapsed_secs=0.000216778
10:19:55 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.684315ms elapsed_secs=0.010684315
10:19:55 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=259.614µs elapsed_secs=0.000259614
10:19:55 [DEBUG] (575) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.049345ms elapsed_secs=0.013049345
10:19:55 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=169.147µs elapsed_secs=0.000169147
10:19:55 [DEBUG] (575) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=141.757µs elapsed_secs=0.000141757
10:19:55 [DEBUG] (575) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.267µs elapsed_secs=7.0267e-5
10:19:55 [DEBUG] (575) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=185.187µs elapsed_secs=0.000185187
10:19:55 [DEBUG] (575) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.067µs elapsed_secs=9.1067e-5
10:19:55 [DEBUG] (558) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.055186ms elapsed_secs=0.013055186
10:19:55 [DEBUG] (558) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=372.101µs elapsed_secs=0.000372101
10:19:55 [DEBUG] (558) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.032µs elapsed_secs=0.000144032
10:19:55 [DEBUG] (578) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.637551ms elapsed_secs=0.013637551
10:19:55 [DEBUG] (578) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.582µs elapsed_secs=9.7582e-5
10:19:55 [DEBUG] (578) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=49.649µs elapsed_secs=4.9649e-5
10:19:55 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=296.298µs elapsed_secs=0.000296298
10:19:55 [DEBUG] (533) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=231.440353ms elapsed_secs=0.231440353
10:19:55 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=149.95µs elapsed_secs=0.00014995
10:19:55 [DEBUG] (579) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.33µs elapsed_secs=4.933e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.303265ms elapsed_secs=0.009303265
10:19:55 [DEBUG] (553) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=349.25µs elapsed_secs=0.00034925
10:19:55 [DEBUG] (553) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=158.927µs elapsed_secs=0.000158927
10:19:55 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.843506ms elapsed_secs=0.010843506
10:19:55 [DEBUG] (566) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.96079ms elapsed_secs=0.01096079
10:19:55 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=339.711µs elapsed_secs=0.000339711
10:19:55 [DEBUG] (566) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=416.024µs elapsed_secs=0.000416024
10:19:55 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.072µs elapsed_secs=7.0072e-5
10:19:55 [DEBUG] (566) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.037µs elapsed_secs=6.6037e-5
10:19:55 [DEBUG] (579) sqlx::query: summary="DELETE FROM user_assign WHERE …" db.statement="\n\n\n                DELETE FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=9.242923ms elapsed_secs=0.009242923
10:19:55 [DEBUG] (582) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.317µs elapsed_secs=7.3317e-5
10:19:55 [DEBUG] (575) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.677147ms elapsed_secs=0.009677147
10:19:55 [DEBUG] (537) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=238.543428ms elapsed_secs=0.238543428
10:19:55 [DEBUG] (575) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=663.705µs elapsed_secs=0.000663705
10:19:55 [DEBUG] (575) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.695µs elapsed_secs=0.000106695
10:19:55 [DEBUG] (583) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=96.544µs elapsed_secs=9.6544e-5
10:19:55 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.968823ms elapsed_secs=0.012968823
10:19:55 [DEBUG] (583) sqlx::query: summary="DELETE FROM user_assign WHERE …" db.statement="\n\n\n                DELETE FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=390.136µs elapsed_secs=0.000390136
10:19:55 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=345.437µs elapsed_secs=0.000345437
10:19:55 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.623µs elapsed_secs=9.0623e-5
10:19:55 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.413366ms elapsed_secs=0.010413366
10:19:55 [DEBUG] (558) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.213744ms elapsed_secs=0.011213744
10:19:55 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=622.163µs elapsed_secs=0.000622163
10:19:55 [DEBUG] (586) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.849µs elapsed_secs=6.9849e-5
10:19:55 [DEBUG] (558) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=148.248µs elapsed_secs=0.000148248
10:19:55 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.333µs elapsed_secs=7.4333e-5
10:19:55 [DEBUG] (558) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.992µs elapsed_secs=9.0992e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.518985ms elapsed_secs=0.013518985
10:19:55 [DEBUG] (541) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=239.853565ms elapsed_secs=0.239853565
10:19:55 [DEBUG] (553) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=438.296µs elapsed_secs=0.000438296
10:19:55 [DEBUG] (553) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.288µs elapsed_secs=9.0288e-5
10:19:55 [DEBUG] (587) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.688µs elapsed_secs=4.3688e-5
10:19:55 [DEBUG] (587) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n            \n" rows_affected=0 rows_returned=4 elapsed=140.168µs elapsed_secs=0.000140168
10:19:55 [DEBUG] (582) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.878551ms elapsed_secs=0.015878551
10:19:55 [DEBUG] (582) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=93.478µs elapsed_secs=9.3478e-5
10:19:55 [DEBUG] (590) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.582µs elapsed_secs=7.3582e-5
10:19:55 [DEBUG] (582) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=110.067µs elapsed_secs=0.000110067
10:19:55 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=186.591µs elapsed_secs=0.000186591
10:19:55 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.187µs elapsed_secs=9.2187e-5
10:19:55 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.832387ms elapsed_secs=0.011832387
10:19:55 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=389.469µs elapsed_secs=0.000389469
10:19:55 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.014µs elapsed_secs=0.000134014
10:19:55 [DEBUG] (566) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.715242ms elapsed_secs=0.014715242
10:19:55 [DEBUG] (586) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.583911ms elapsed_secs=0.015583911
10:19:55 [DEBUG] (566) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=231.553µs elapsed_secs=0.000231553
10:19:55 [DEBUG] (586) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=217.198µs elapsed_secs=0.000217198
10:19:55 [DEBUG] (566) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.126µs elapsed_secs=8.0126e-5
10:19:55 [DEBUG] (586) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=103.904µs elapsed_secs=0.000103904
10:19:55 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=255.602µs elapsed_secs=0.000255602
10:19:55 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.658µs elapsed_secs=8.8658e-5
10:19:55 [DEBUG] (575) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.724835ms elapsed_secs=0.013724835
10:19:55 [DEBUG] (575) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=584.807µs elapsed_secs=0.000584807
10:19:55 [DEBUG] (575) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.23µs elapsed_secs=7.123e-5
10:19:55 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.373606ms elapsed_secs=0.011373606
10:19:55 [DEBUG] (590) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.089391ms elapsed_secs=0.016089391
10:19:55 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=683.74µs elapsed_secs=0.00068374
10:19:55 [DEBUG] (590) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=88.77µs elapsed_secs=8.877e-5
10:19:55 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.474µs elapsed_secs=0.000126474
10:19:55 [DEBUG] (590) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.426µs elapsed_secs=5.8426e-5
10:19:55 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=273.189µs elapsed_secs=0.000273189
10:19:55 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=275.224µs elapsed_secs=0.000275224
10:19:55 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.470737ms elapsed_secs=0.010470737
10:19:55 [DEBUG] (558) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.511085ms elapsed_secs=0.011511085
10:19:55 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=462.941µs elapsed_secs=0.000462941
10:19:55 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=217.142µs elapsed_secs=0.000217142
10:19:55 [DEBUG] (558) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.087166ms elapsed_secs=0.001087166
10:19:55 [DEBUG] (558) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=222.809µs elapsed_secs=0.000222809
10:19:55 [DEBUG] (553) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.830381ms elapsed_secs=0.010830381
10:19:55 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.633609ms elapsed_secs=0.010633609
10:19:55 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=234.604µs elapsed_secs=0.000234604
10:19:55 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.455µs elapsed_secs=0.000109455
10:19:55 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.171568ms elapsed_secs=0.008171568
10:19:55 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=508.49µs elapsed_secs=0.00050849
10:19:55 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.747µs elapsed_secs=6.5747e-5
10:19:55 [DEBUG] (566) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.326502ms elapsed_secs=0.007326502
10:19:55 [DEBUG] (566) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=153.2µs elapsed_secs=0.0001532
10:19:55 [DEBUG] (566) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.882µs elapsed_secs=8.4882e-5
10:19:55 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.293896ms elapsed_secs=0.006293896
10:19:55 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=428.823µs elapsed_secs=0.000428823
10:19:55 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.5µs elapsed_secs=8.75e-5
10:19:55 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.072748ms elapsed_secs=0.008072748
10:19:55 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.037083ms elapsed_secs=0.008037083
10:19:55 [DEBUG] (575) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.212218ms elapsed_secs=0.010212218
10:19:55 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=701.829µs elapsed_secs=0.000701829
10:19:55 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=797.802µs elapsed_secs=0.000797802
10:19:55 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.709µs elapsed_secs=9.2709e-5
10:19:55 [DEBUG] (575) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=542.713µs elapsed_secs=0.000542713
10:19:55 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=242.199µs elapsed_secs=0.000242199
10:19:55 [DEBUG] (575) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=404.32µs elapsed_secs=0.00040432
10:19:55 [DEBUG] (558) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.040749ms elapsed_secs=0.009040749
10:19:55 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.474607ms elapsed_secs=0.010474607
10:19:55 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=252.845µs elapsed_secs=0.000252845
10:19:55 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.812µs elapsed_secs=5.3812e-5
10:19:55 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.969146ms elapsed_secs=0.007969146
10:19:55 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.218643ms elapsed_secs=0.008218643
10:19:55 [DEBUG] (566) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.86968ms elapsed_secs=0.00686968
10:19:55 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=427.476µs elapsed_secs=0.000427476
10:19:55 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.911µs elapsed_secs=7.3911e-5
10:19:55 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.985258ms elapsed_secs=0.007985258
10:19:55 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=278.96µs elapsed_secs=0.00027896
10:19:55 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.218µs elapsed_secs=7.1218e-5
10:19:55 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.959251ms elapsed_secs=0.006959251
10:19:55 [DEBUG] (575) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.432666ms elapsed_secs=0.007432666
10:19:55 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.921174ms elapsed_secs=0.007921174
10:19:55 [DEBUG] (575) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=162.956µs elapsed_secs=0.000162956
10:19:55 [DEBUG] (575) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.191µs elapsed_secs=0.000126191
10:19:55 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=253.467µs elapsed_secs=0.000253467
10:19:55 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.595µs elapsed_secs=6.1595e-5
10:19:55 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.410411ms elapsed_secs=0.007410411
10:19:55 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=224.535µs elapsed_secs=0.000224535
10:19:55 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.364µs elapsed_secs=0.000123364
10:19:55 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.102541ms elapsed_secs=0.008102541
10:19:55 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=219.666µs elapsed_secs=0.000219666
10:19:55 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.74µs elapsed_secs=7.374e-5
10:19:55 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.346334ms elapsed_secs=0.009346334
10:19:55 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=215.082µs elapsed_secs=0.000215082
10:19:55 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.415µs elapsed_secs=7.6415e-5
10:19:55 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.282514ms elapsed_secs=0.008282514
10:19:55 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=197.745µs elapsed_secs=0.000197745
10:19:55 [DEBUG] (575) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.787175ms elapsed_secs=0.008787175
10:19:55 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=246.222µs elapsed_secs=0.000246222
10:19:55 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.522859ms elapsed_secs=0.007522859
10:19:55 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.084736ms elapsed_secs=0.007084736
10:19:55 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=418.808µs elapsed_secs=0.000418808
10:19:55 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.561µs elapsed_secs=8.7561e-5
10:19:55 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.833091ms elapsed_secs=0.006833091
10:19:55 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.844563ms elapsed_secs=0.008844563
10:19:55 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=531.738µs elapsed_secs=0.000531738
10:19:55 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=268.356µs elapsed_secs=0.000268356
10:19:55 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.822µs elapsed_secs=8.0822e-5
10:19:55 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.683µs elapsed_secs=7.3683e-5
10:19:55 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.769906ms elapsed_secs=0.006769906
10:19:55 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.274733ms elapsed_secs=0.007274733
10:19:55 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.828184ms elapsed_secs=0.007828184
10:19:55 [DEBUG] (545) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=215.946883ms elapsed_secs=0.215946883
10:19:55 [DEBUG] (591) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.77µs elapsed_secs=8.577e-5
10:19:55 [DEBUG] (591) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=128.712µs elapsed_secs=0.000128712
10:19:55 [DEBUG] (594) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.52µs elapsed_secs=4.052e-5
10:19:55 [DEBUG] (594) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=27.144453ms elapsed_secs=0.027144453
10:19:55 [DEBUG] (594) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=190.33µs elapsed_secs=0.00019033
10:19:55 [DEBUG] (594) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=148.824µs elapsed_secs=0.000148824
10:19:55 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.635229ms elapsed_secs=0.001635229
10:19:55 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=259.11µs elapsed_secs=0.00025911
10:19:55 [DEBUG] (549) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=253.18038ms elapsed_secs=0.25318038
10:19:55 [DEBUG] (595) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.88µs elapsed_secs=8.188e-5
10:19:55 [DEBUG] (595) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=275.513µs elapsed_secs=0.000275513
10:19:55 [DEBUG] (598) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.407µs elapsed_secs=7.8407e-5
10:19:55 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=20.483822ms elapsed_secs=0.020483822
10:19:55 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=3.690624ms elapsed_secs=0.003690624
10:19:55 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.884µs elapsed_secs=9.5884e-5
10:19:55 [DEBUG] (598) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=20.966348ms elapsed_secs=0.020966348
10:19:55 [DEBUG] (598) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=115.013µs elapsed_secs=0.000115013
10:19:55 [DEBUG] (598) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=107.523µs elapsed_secs=0.000107523
10:19:55 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=207.692µs elapsed_secs=0.000207692
10:19:55 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.384µs elapsed_secs=9.3384e-5
10:19:55 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.849698ms elapsed_secs=0.010849698
10:19:55 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=957.763µs elapsed_secs=0.000957763
10:19:55 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=386.283µs elapsed_secs=0.000386283
10:19:55 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=17.559433ms elapsed_secs=0.017559433
10:19:55 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=469.738µs elapsed_secs=0.000469738
10:19:55 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=175.398µs elapsed_secs=0.000175398
10:19:55 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.18048ms elapsed_secs=0.00918048
10:19:55 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=232.909µs elapsed_secs=0.000232909
10:19:55 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.897492ms elapsed_secs=0.009897492
10:19:55 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.309µs elapsed_secs=0.000139309
10:19:55 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=372.854µs elapsed_secs=0.000372854
10:19:55 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.174µs elapsed_secs=7.1174e-5
10:19:55 [DEBUG] (553) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=274.561604ms elapsed_secs=0.274561604
10:19:55 [DEBUG] (599) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=89.155µs elapsed_secs=8.9155e-5
10:19:55 [DEBUG] (599) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=192.124µs elapsed_secs=0.000192124
10:19:55 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.119474ms elapsed_secs=0.007119474
10:19:55 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=323.559µs elapsed_secs=0.000323559
10:19:55 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.666µs elapsed_secs=6.7666e-5
10:19:55 [DEBUG] (602) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.849µs elapsed_secs=4.4849e-5
10:19:55 [DEBUG] (558) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=261.013833ms elapsed_secs=0.261013833
10:19:55 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.157372ms elapsed_secs=0.009157372
10:19:55 [DEBUG] (603) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.258µs elapsed_secs=4.6258e-5
10:19:55 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=265.582µs elapsed_secs=0.000265582
10:19:55 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.721µs elapsed_secs=0.000100721
10:19:55 [DEBUG] (603) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=145.553µs elapsed_secs=0.000145553
10:19:55 [DEBUG] (606) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.069µs elapsed_secs=4.2069e-5
10:19:55 [DEBUG] (602) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.220845ms elapsed_secs=0.012220845
10:19:55 [DEBUG] (566) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=267.382722ms elapsed_secs=0.267382722
10:19:55 [DEBUG] (602) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=461.369µs elapsed_secs=0.000461369
10:19:55 [DEBUG] (602) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=182.208µs elapsed_secs=0.000182208
10:19:55 [DEBUG] (607) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.088µs elapsed_secs=6.2088e-5
10:19:55 [DEBUG] (606) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.984353ms elapsed_secs=0.011984353
10:19:55 [DEBUG] (602) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=959.386µs elapsed_secs=0.000959386
10:19:55 [DEBUG] (606) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=211.034µs elapsed_secs=0.000211034
10:19:55 [DEBUG] (607) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=414.484µs elapsed_secs=0.000414484
10:19:55 [DEBUG] (606) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=118.214µs elapsed_secs=0.000118214
10:19:55 [DEBUG] (602) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.938µs elapsed_secs=9.7938e-5
10:19:55 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=357.941µs elapsed_secs=0.000357941
10:19:55 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.749766ms elapsed_secs=0.010749766
10:19:55 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=425.642µs elapsed_secs=0.000425642
10:19:55 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.045271ms elapsed_secs=0.001045271
10:19:55 [DEBUG] (610) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=103.758µs elapsed_secs=0.000103758
10:19:55 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.98µs elapsed_secs=8.898e-5
10:19:55 [DEBUG] (570) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=268.002289ms elapsed_secs=0.268002289
10:19:55 [DEBUG] (563) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=278.43823ms elapsed_secs=0.27843823
10:19:55 [DEBUG] (611) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=79.959µs elapsed_secs=7.9959e-5
10:19:55 [DEBUG] (612) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.338µs elapsed_secs=4.4338e-5
10:19:55 [DEBUG] (611) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=251.346µs elapsed_secs=0.000251346
10:19:55 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.996135ms elapsed_secs=0.008996135
10:19:55 [DEBUG] (612) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=2 elapsed=409.747µs elapsed_secs=0.000409747
10:19:55 [DEBUG] (615) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.436µs elapsed_secs=4.0436e-5
10:19:55 [DEBUG] (618) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.156µs elapsed_secs=4.7156e-5
10:19:55 [DEBUG] (610) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.712638ms elapsed_secs=0.011712638
10:19:55 [DEBUG] (610) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=246.16µs elapsed_secs=0.00024616
10:19:55 [DEBUG] (610) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=146.806µs elapsed_secs=0.000146806
10:19:55 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=213.277µs elapsed_secs=0.000213277
10:19:55 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.438µs elapsed_secs=8.7438e-5
10:19:55 [DEBUG] (602) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.263911ms elapsed_secs=0.010263911
10:19:55 [DEBUG] (618) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.827218ms elapsed_secs=0.012827218
10:19:55 [DEBUG] (615) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.410242ms elapsed_secs=0.013410242
10:19:55 [DEBUG] (602) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=245.824µs elapsed_secs=0.000245824
10:19:55 [DEBUG] (618) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=67.275µs elapsed_secs=6.7275e-5
10:19:55 [DEBUG] (602) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.403µs elapsed_secs=8.8403e-5
10:19:55 [DEBUG] (615) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=63.648µs elapsed_secs=6.3648e-5
10:19:55 [DEBUG] (618) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.874µs elapsed_secs=6.1874e-5
10:19:55 [DEBUG] (615) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.187µs elapsed_secs=6.1187e-5
10:19:55 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=184.834µs elapsed_secs=0.000184834
10:19:55 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=180.766µs elapsed_secs=0.000180766
10:19:55 [DEBUG] (615) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=275.486µs elapsed_secs=0.000275486
10:19:55 [DEBUG] (615) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.711µs elapsed_secs=6.8711e-5
10:19:55 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.423442ms elapsed_secs=0.009423442
10:19:55 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.477216ms elapsed_secs=0.009477216
10:19:55 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=477.839µs elapsed_secs=0.000477839
10:19:55 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.252µs elapsed_secs=8.3252e-5
10:19:55 [DEBUG] (578) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=277.265401ms elapsed_secs=0.277265401
10:19:55 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.85484ms elapsed_secs=0.01185484
10:19:55 [DEBUG] (619) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.16µs elapsed_secs=3.716e-5
10:19:55 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=138.092µs elapsed_secs=0.000138092
10:19:55 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.061µs elapsed_secs=0.000108061
10:19:55 [DEBUG] (619) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=2 elapsed=332.095µs elapsed_secs=0.000332095
10:19:55 [DEBUG] (622) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.47µs elapsed_secs=4.447e-5
10:19:55 [DEBUG] (575) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=286.746909ms elapsed_secs=0.286746909
10:19:55 [DEBUG] (623) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.458µs elapsed_secs=8.4458e-5
10:19:55 [DEBUG] (623) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=273.765µs elapsed_secs=0.000273765
10:19:55 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.200719ms elapsed_secs=0.008200719
10:19:55 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=275.624µs elapsed_secs=0.000275624
10:19:55 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.731µs elapsed_secs=0.000112731
10:19:55 [DEBUG] (626) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=296.36µs elapsed_secs=0.00029636
10:19:55 [DEBUG] (602) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.259421ms elapsed_secs=0.012259421
10:19:55 [DEBUG] (615) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.228705ms elapsed_secs=0.012228705
10:19:55 [DEBUG] (602) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=599.015µs elapsed_secs=0.000599015
10:19:55 [DEBUG] (615) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=421.145µs elapsed_secs=0.000421145
10:19:55 [DEBUG] (602) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.369µs elapsed_secs=0.000118369
10:19:55 [DEBUG] (615) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.383µs elapsed_secs=0.000115383
10:19:55 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.369735ms elapsed_secs=0.011369735
10:19:55 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=215.702µs elapsed_secs=0.000215702
10:19:55 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.569µs elapsed_secs=8.2569e-5
10:19:55 [DEBUG] (622) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.417746ms elapsed_secs=0.012417746
10:19:55 [DEBUG] (622) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.527µs elapsed_secs=7.7527e-5
10:19:55 [DEBUG] (622) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.494µs elapsed_secs=6.4494e-5
10:19:55 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=528.853µs elapsed_secs=0.000528853
10:19:55 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.087µs elapsed_secs=6.6087e-5
10:19:55 [DEBUG] (582) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=276.283248ms elapsed_secs=0.276283248
10:19:55 [DEBUG] (627) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=90.3µs elapsed_secs=9.03e-5
10:19:55 [DEBUG] (627) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1 AND task_id = $2\n            \n" rows_affected=0 rows_returned=1 elapsed=243.923µs elapsed_secs=0.000243923
10:19:55 [DEBUG] (626) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.713234ms elapsed_secs=0.012713234
10:19:55 [DEBUG] (626) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=91.799µs elapsed_secs=9.1799e-5
10:19:56 [DEBUG] (626) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=147.155µs elapsed_secs=0.000147155
10:19:56 [DEBUG] (630) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=89.862µs elapsed_secs=8.9862e-5
10:19:56 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.693312ms elapsed_secs=0.001693312
10:19:56 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=248.021µs elapsed_secs=0.000248021
10:19:56 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.873683ms elapsed_secs=0.011873683
10:19:56 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=179.273µs elapsed_secs=0.000179273
10:19:56 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=253.075µs elapsed_secs=0.000253075
10:19:56 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.63896ms elapsed_secs=0.00863896
10:19:56 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=164.058µs elapsed_secs=0.000164058
10:19:56 [DEBUG] (602) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.30647ms elapsed_secs=0.00930647
10:19:56 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.903µs elapsed_secs=8.4903e-5
10:19:56 [DEBUG] (602) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=127.813µs elapsed_secs=0.000127813
10:19:56 [DEBUG] (602) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=145.219µs elapsed_secs=0.000145219
10:19:56 [DEBUG] (615) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.20695ms elapsed_secs=0.01020695
10:19:56 [DEBUG] (615) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=318.507µs elapsed_secs=0.000318507
10:19:56 [DEBUG] (615) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.297µs elapsed_secs=0.000132297
10:19:56 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.604834ms elapsed_secs=0.011604834
10:19:56 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=938.906µs elapsed_secs=0.000938906
10:19:56 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.678µs elapsed_secs=0.000114678
10:19:56 [DEBUG] (586) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=287.43584ms elapsed_secs=0.28743584
10:19:56 [DEBUG] (630) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.554135ms elapsed_secs=0.016554135
10:19:56 [DEBUG] (630) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=168.475µs elapsed_secs=0.000168475
10:19:56 [DEBUG] (631) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=161.558µs elapsed_secs=0.000161558
10:19:56 [DEBUG] (630) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=232.337µs elapsed_secs=0.000232337
10:19:56 [DEBUG] (631) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1 AND task_id = $2\n            \n" rows_affected=0 rows_returned=0 elapsed=761.867µs elapsed_secs=0.000761867
10:19:56 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=990.294µs elapsed_secs=0.000990294
10:19:56 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.068µs elapsed_secs=7.4068e-5
10:19:56 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.076835ms elapsed_secs=0.014076835
10:19:56 [DEBUG] (634) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.919µs elapsed_secs=3.9919e-5
10:19:56 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=519.952µs elapsed_secs=0.000519952
10:19:56 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.311µs elapsed_secs=6.8311e-5
10:19:56 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.30089ms elapsed_secs=0.01330089
10:19:56 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=915.639µs elapsed_secs=0.000915639
10:19:56 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.837µs elapsed_secs=0.000119837
10:19:56 [DEBUG] (590) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=305.118872ms elapsed_secs=0.305118872
10:19:56 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.926128ms elapsed_secs=0.012926128
10:19:56 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=692.095µs elapsed_secs=0.000692095
10:19:56 [DEBUG] (635) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.694µs elapsed_secs=6.3694e-5
10:19:56 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.853µs elapsed_secs=8.5853e-5
10:19:56 [DEBUG] (635) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=147.535µs elapsed_secs=0.000147535
10:19:56 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.327944ms elapsed_secs=0.011327944
10:19:56 [DEBUG] (602) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.650354ms elapsed_secs=0.011650354
10:19:56 [DEBUG] (602) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=932.037µs elapsed_secs=0.000932037
10:19:56 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.111213ms elapsed_secs=0.001111213
10:19:56 [DEBUG] (638) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.781µs elapsed_secs=8.1781e-5
10:19:56 [DEBUG] (602) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=164.704µs elapsed_secs=0.000164704
10:19:56 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=152.495µs elapsed_secs=0.000152495
10:19:56 [DEBUG] (634) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.85261ms elapsed_secs=0.01685261
10:19:56 [DEBUG] (634) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.811µs elapsed_secs=7.2811e-5
10:19:56 [DEBUG] (634) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.463µs elapsed_secs=6.2463e-5
10:19:56 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=199.735µs elapsed_secs=0.000199735
10:19:56 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.093µs elapsed_secs=6.4093e-5
10:19:56 [DEBUG] (615) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.083228ms elapsed_secs=0.013083228
10:19:56 [DEBUG] (615) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=250.966µs elapsed_secs=0.000250966
10:19:56 [DEBUG] (615) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.329µs elapsed_secs=9.5329e-5
10:19:56 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.234361ms elapsed_secs=0.013234361
10:19:56 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.717636ms elapsed_secs=0.010717636
10:19:56 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=220.318µs elapsed_secs=0.000220318
10:19:56 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=300.18µs elapsed_secs=0.00030018
10:19:56 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.263µs elapsed_secs=7.3263e-5
10:19:56 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.977µs elapsed_secs=0.000151977
10:19:56 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.581754ms elapsed_secs=0.010581754
10:19:56 [DEBUG] (638) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.489821ms elapsed_secs=0.013489821
10:19:56 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.154351ms elapsed_secs=0.001154351
10:19:56 [DEBUG] (638) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=96.156µs elapsed_secs=9.6156e-5
10:19:56 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.89µs elapsed_secs=8.789e-5
10:19:56 [DEBUG] (638) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=67.862µs elapsed_secs=6.7862e-5
10:19:56 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=157.263µs elapsed_secs=0.000157263
10:19:56 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.635µs elapsed_secs=5.5635e-5
10:19:56 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.100278ms elapsed_secs=0.009100278
10:19:56 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=224.822µs elapsed_secs=0.000224822
10:19:56 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.746µs elapsed_secs=6.5746e-5
10:19:56 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.437601ms elapsed_secs=0.010437601
10:19:56 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=119.993µs elapsed_secs=0.000119993
10:19:56 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.743941ms elapsed_secs=0.008743941
10:19:56 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.508µs elapsed_secs=7.2508e-5
10:19:56 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=225.614µs elapsed_secs=0.000225614
10:19:56 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.389µs elapsed_secs=6.6389e-5
10:19:56 [DEBUG] (602) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.757609ms elapsed_secs=0.006757609
10:19:56 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.999425ms elapsed_secs=0.006999425
10:19:56 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.647789ms elapsed_secs=0.008647789
10:19:56 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.451195ms elapsed_secs=0.007451195
10:19:56 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=796.487µs elapsed_secs=0.000796487
10:19:56 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=445.034µs elapsed_secs=0.000445034
10:19:56 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.456µs elapsed_secs=9.5456e-5
10:19:56 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.257µs elapsed_secs=0.000136257
10:19:56 [DEBUG] (615) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.363365ms elapsed_secs=0.010363365
10:19:56 [DEBUG] (615) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=164.598µs elapsed_secs=0.000164598
10:19:56 [DEBUG] (615) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.005µs elapsed_secs=6.9005e-5
10:19:56 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.24603ms elapsed_secs=0.00924603
10:19:56 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=124.413µs elapsed_secs=0.000124413
10:19:56 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.694µs elapsed_secs=5.4694e-5
10:19:56 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.736868ms elapsed_secs=0.009736868
10:19:56 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=420.621µs elapsed_secs=0.000420621
10:19:56 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.997µs elapsed_secs=8.6997e-5
10:19:56 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.053462ms elapsed_secs=0.010053462
10:19:56 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.734269ms elapsed_secs=0.006734269
10:19:56 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=220.827µs elapsed_secs=0.000220827
10:19:56 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=213.039µs elapsed_secs=0.000213039
10:19:56 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.030867ms elapsed_secs=0.008030867
10:19:56 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.170567ms elapsed_secs=0.009170567
10:19:56 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=161.258µs elapsed_secs=0.000161258
10:19:56 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.277µs elapsed_secs=7.6277e-5
10:19:56 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.442732ms elapsed_secs=0.008442732
10:19:56 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=132.746µs elapsed_secs=0.000132746
10:19:56 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.261µs elapsed_secs=8.2261e-5
10:19:56 [DEBUG] (615) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.472062ms elapsed_secs=0.008472062
10:19:56 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.562119ms elapsed_secs=0.008562119
10:19:56 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=153.602µs elapsed_secs=0.000153602
10:19:56 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.59µs elapsed_secs=5.759e-5
10:19:56 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.68184ms elapsed_secs=0.00968184
10:19:56 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=164.74µs elapsed_secs=0.00016474
10:19:56 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.723µs elapsed_secs=0.000147723
10:19:56 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.80722ms elapsed_secs=0.00880722
10:19:56 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=377.407µs elapsed_secs=0.000377407
10:19:56 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.082µs elapsed_secs=8.6082e-5
10:19:56 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.982506ms elapsed_secs=0.008982506
10:19:56 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.612447ms elapsed_secs=0.009612447
10:19:56 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=335.956µs elapsed_secs=0.000335956
10:19:56 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.441µs elapsed_secs=6.9441e-5
10:19:56 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=220.153µs elapsed_secs=0.000220153
10:19:56 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.971µs elapsed_secs=5.7971e-5
10:19:56 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.906489ms elapsed_secs=0.009906489
10:19:56 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.328265ms elapsed_secs=0.008328265
10:19:56 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.868235ms elapsed_secs=0.008868235
10:19:56 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=314.617µs elapsed_secs=0.000314617
10:19:56 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.931µs elapsed_secs=9.5931e-5
10:19:56 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.713438ms elapsed_secs=0.009713438
10:19:56 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=277.808µs elapsed_secs=0.000277808
10:19:56 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.57µs elapsed_secs=8.757e-5
10:19:56 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.277768ms elapsed_secs=0.011277768
10:19:56 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.18702ms elapsed_secs=0.00718702
10:19:56 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=545.579µs elapsed_secs=0.000545579
10:19:56 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.997µs elapsed_secs=0.000123997
10:19:56 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.09112ms elapsed_secs=0.00909112
10:19:56 [DEBUG] (639) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.94µs elapsed_secs=3.894e-5
10:19:56 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.441968ms elapsed_secs=0.009441968
10:19:56 [DEBUG] (639) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=7.893151ms elapsed_secs=0.007893151
10:19:56 [INFO] Created user: User { id: Some(1), username: "duplicate_test_1_20250606101956", email: "duplicate_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (640) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=99.458µs elapsed_secs=9.9458e-5
10:19:56 [DEBUG] (641) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.778µs elapsed_secs=3.7778e-5
10:19:56 [DEBUG] (641) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=153.305µs elapsed_secs=0.000153305
10:19:56 [DEBUG] (644) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.439µs elapsed_secs=4.2439e-5
10:19:56 [DEBUG] (640) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.772749ms elapsed_secs=0.008772749
10:19:56 [INFO] Created user: User { id: Some(1), username: "duplicate_test_20250606101956", email: "duplicate_test_1_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (645) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61µs elapsed_secs=6.1e-5
10:19:56 [DEBUG] (645) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=233.284µs elapsed_secs=0.000233284
10:19:56 [DEBUG] (648) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.939µs elapsed_secs=4.4939e-5
10:19:56 [DEBUG] (644) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.334822ms elapsed_secs=0.015334822
10:19:56 [DEBUG] (644) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=124.371µs elapsed_secs=0.000124371
10:19:56 [DEBUG] (644) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.886µs elapsed_secs=6.2886e-5
10:19:56 [DEBUG] (644) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=623.203µs elapsed_secs=0.000623203
10:19:56 [DEBUG] (644) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.277µs elapsed_secs=0.000138277
10:19:56 [DEBUG] (594) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=237.245649ms elapsed_secs=0.237245649
10:19:56 [DEBUG] (649) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.516µs elapsed_secs=8.3516e-5
10:19:56 [DEBUG] (649) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE user_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=425.81µs elapsed_secs=0.00042581
10:19:56 [DEBUG] (652) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.511µs elapsed_secs=8.8511e-5
10:19:56 [DEBUG] (648) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.647719ms elapsed_secs=0.015647719
10:19:56 [DEBUG] (648) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.129µs elapsed_secs=8.5129e-5
10:19:56 [DEBUG] (648) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=40.871µs elapsed_secs=4.0871e-5
10:19:56 [DEBUG] (648) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=373.205µs elapsed_secs=0.000373205
10:19:56 [DEBUG] (648) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.35µs elapsed_secs=0.00010135
10:19:56 [DEBUG] (598) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=232.045446ms elapsed_secs=0.232045446
10:19:56 [DEBUG] (653) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.325µs elapsed_secs=5.9325e-5
10:19:56 [DEBUG] (653) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE user_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=272.797µs elapsed_secs=0.000272797
10:19:56 [DEBUG] (652) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.949585ms elapsed_secs=0.008949585
10:19:56 [DEBUG] (652) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=71.894µs elapsed_secs=7.1894e-5
10:19:56 [DEBUG] (652) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=88.933µs elapsed_secs=8.8933e-5
10:19:56 [DEBUG] (652) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=642.637µs elapsed_secs=0.000642637
10:19:56 [DEBUG] (656) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.27µs elapsed_secs=7.827e-5
10:19:56 [DEBUG] (652) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.922µs elapsed_secs=0.000140922
10:19:56 [DEBUG] (644) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.174781ms elapsed_secs=0.011174781
10:19:56 [DEBUG] (644) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=826.798µs elapsed_secs=0.000826798
10:19:56 [DEBUG] (644) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.524µs elapsed_secs=0.000115524
10:19:56 [DEBUG] (656) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.119791ms elapsed_secs=0.011119791
10:19:56 [DEBUG] (656) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.981µs elapsed_secs=7.8981e-5
10:19:56 [DEBUG] (656) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=52.026µs elapsed_secs=5.2026e-5
10:19:56 [DEBUG] (656) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=162.11µs elapsed_secs=0.00016211
10:19:56 [DEBUG] (656) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.049µs elapsed_secs=4.8049e-5
10:19:56 [DEBUG] (648) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.776242ms elapsed_secs=0.010776242
10:19:56 [DEBUG] (648) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=351.585µs elapsed_secs=0.000351585
10:19:56 [DEBUG] (648) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.354µs elapsed_secs=0.000137354
10:19:56 [DEBUG] (652) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.370038ms elapsed_secs=0.013370038
10:19:56 [DEBUG] (652) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=415.429µs elapsed_secs=0.000415429
10:19:56 [DEBUG] (652) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.832µs elapsed_secs=6.1832e-5
10:19:56 [DEBUG] (644) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.767714ms elapsed_secs=0.008767714
10:19:56 [DEBUG] (644) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=251.739µs elapsed_secs=0.000251739
10:19:56 [DEBUG] (644) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.449µs elapsed_secs=7.5449e-5
10:19:56 [DEBUG] (656) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.531037ms elapsed_secs=0.008531037
10:19:56 [DEBUG] (656) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=407.565µs elapsed_secs=0.000407565
10:19:56 [DEBUG] (656) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=421.951µs elapsed_secs=0.000421951
10:19:56 [DEBUG] (648) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.646355ms elapsed_secs=0.010646355
10:19:56 [DEBUG] (648) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=172.55µs elapsed_secs=0.00017255
10:19:56 [DEBUG] (648) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.303µs elapsed_secs=7.2303e-5
10:19:56 [DEBUG] (652) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.267607ms elapsed_secs=0.010267607
10:19:56 [DEBUG] (652) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=659.275µs elapsed_secs=0.000659275
10:19:56 [DEBUG] (652) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.214µs elapsed_secs=0.000114214
10:19:56 [DEBUG] (644) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.952268ms elapsed_secs=0.007952268
10:19:56 [DEBUG] (644) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=481.116µs elapsed_secs=0.000481116
10:19:56 [DEBUG] (644) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.113µs elapsed_secs=8.7113e-5
10:19:56 [DEBUG] (656) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.961055ms elapsed_secs=0.006961055
10:19:56 [DEBUG] (656) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=278.432µs elapsed_secs=0.000278432
10:19:56 [DEBUG] (656) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.805µs elapsed_secs=7.7805e-5
10:19:56 [DEBUG] (648) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.233335ms elapsed_secs=0.008233335
10:19:56 [DEBUG] (648) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=263.868µs elapsed_secs=0.000263868
10:19:56 [DEBUG] (648) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.893µs elapsed_secs=7.5893e-5
10:19:56 [DEBUG] (652) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.45854ms elapsed_secs=0.01045854
10:19:56 [DEBUG] (652) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=228.874µs elapsed_secs=0.000228874
10:19:56 [DEBUG] (644) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.649824ms elapsed_secs=0.009649824
10:19:56 [DEBUG] (652) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.678µs elapsed_secs=5.7678e-5
10:19:56 [DEBUG] (644) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=158.803µs elapsed_secs=0.000158803
10:19:56 [DEBUG] (644) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.479µs elapsed_secs=4.9479e-5
10:19:56 [DEBUG] (602) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=214.232272ms elapsed_secs=0.214232272
10:19:56 [DEBUG] (657) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.443µs elapsed_secs=3.2443e-5
10:19:56 [DEBUG] (657) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=247.452µs elapsed_secs=0.000247452
10:19:56 [DEBUG] (600) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:19:56 [DEBUG] (657) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=46.898µs elapsed_secs=4.6898e-5
10:19:56 [DEBUG] (656) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.767307ms elapsed_secs=0.007767307
10:19:56 [DEBUG] (657) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=40.121µs elapsed_secs=4.0121e-5
10:19:56 [DEBUG] (657) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=70.733µs elapsed_secs=7.0733e-5
10:19:56 [DEBUG] (656) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=351.211µs elapsed_secs=0.000351211
10:19:56 [DEBUG] (657) sqlx::query: summary="UPDATE user_assign SET user_id …" db.statement="\n\n\n                UPDATE user_assign\n                SET user_id = $1, task_id = $2\n                WHERE id = $3\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=1 elapsed=101.087µs elapsed_secs=0.000101087
10:19:56 [DEBUG] (656) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.883µs elapsed_secs=6.6883e-5
10:19:56 [DEBUG] (648) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.305429ms elapsed_secs=0.008305429
10:19:56 [DEBUG] (648) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=137.995µs elapsed_secs=0.000137995
10:19:56 [DEBUG] (648) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.206µs elapsed_secs=5.5206e-5
10:19:56 [DEBUG] (606) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=217.201328ms elapsed_secs=0.217201328
10:19:56 [DEBUG] (652) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.994229ms elapsed_secs=0.006994229
10:19:56 [DEBUG] (652) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=189.724µs elapsed_secs=0.000189724
10:19:56 [DEBUG] (658) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.349µs elapsed_secs=4.0349e-5
10:19:56 [DEBUG] (652) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.509µs elapsed_secs=7.0509e-5
10:19:56 [DEBUG] (658) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=105.556µs elapsed_secs=0.000105556
10:19:56 [DEBUG] (604) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:19:56 [DEBUG] (658) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=50.652µs elapsed_secs=5.0652e-5
10:19:56 [DEBUG] (658) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=16.008µs elapsed_secs=1.6008e-5
10:19:56 [DEBUG] (658) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=73.006µs elapsed_secs=7.3006e-5
10:19:56 [DEBUG] (658) sqlx::query: summary="UPDATE user_assign SET user_id …" db.statement="\n\n\n                UPDATE user_assign\n                SET user_id = $1, task_id = $2\n                WHERE id = $3\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=0 elapsed=86.876µs elapsed_secs=8.6876e-5
10:19:56 [DEBUG] (661) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.149µs elapsed_secs=7.0149e-5
10:19:56 [DEBUG] (610) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=211.212335ms elapsed_secs=0.211212335
10:19:56 [DEBUG] (662) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.581µs elapsed_secs=4.7581e-5
10:19:56 [DEBUG] (644) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.619618ms elapsed_secs=0.008619618
10:19:56 [DEBUG] (662) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=146.428µs elapsed_secs=0.000146428
10:19:56 [DEBUG] (608) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:19:56 [DEBUG] (662) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=131.364µs elapsed_secs=0.000131364
10:19:56 [DEBUG] (665) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.462µs elapsed_secs=3.8462e-5
10:19:56 [DEBUG] (662) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=13.984µs elapsed_secs=1.3984e-5
10:19:56 [DEBUG] (666) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=15.955µs elapsed_secs=1.5955e-5
10:19:56 [DEBUG] (669) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.526µs elapsed_secs=4.2526e-5
10:19:56 [DEBUG] (661) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.156684ms elapsed_secs=0.009156684
10:19:56 [DEBUG] (661) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=240.44µs elapsed_secs=0.00024044
10:19:56 [DEBUG] (661) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=122.849µs elapsed_secs=0.000122849
10:19:56 [DEBUG] (656) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.808849ms elapsed_secs=0.008808849
10:19:56 [DEBUG] (661) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=566.075µs elapsed_secs=0.000566075
10:19:56 [DEBUG] (661) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.685µs elapsed_secs=0.000125685
10:19:56 [DEBUG] (656) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=258.093µs elapsed_secs=0.000258093
10:19:56 [DEBUG] (656) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=226.433µs elapsed_secs=0.000226433
10:19:56 [DEBUG] (648) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.21316ms elapsed_secs=0.00821316
10:19:56 [DEBUG] (652) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.345375ms elapsed_secs=0.008345375
10:19:56 [DEBUG] (665) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.958523ms elapsed_secs=0.009958523
10:19:56 [INFO] Created user: User { id: Some(1), username: "create_test_20250606101956", email: "create_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (670) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.16µs elapsed_secs=4.416e-5
10:19:56 [DEBUG] (672) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.904µs elapsed_secs=3.8904e-5
10:19:56 [DEBUG] (671) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.679µs elapsed_secs=4.6679e-5
10:19:56 [DEBUG] (672) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=184.482µs elapsed_secs=0.000184482
10:19:56 [DEBUG] (642) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "create_test_20250606101956", email: "create_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" })
10:19:56 [DEBUG] (666) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.537364ms elapsed_secs=0.012537364
10:19:56 [DEBUG] (669) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.52122ms elapsed_secs=0.01052122
10:19:56 [DEBUG] (669) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=62.862µs elapsed_secs=6.2862e-5
10:19:56 [DEBUG] (666) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=183.252µs elapsed_secs=0.000183252
10:19:56 [DEBUG] (669) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=159.955µs elapsed_secs=0.000159955
10:19:56 [DEBUG] (666) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=171.65µs elapsed_secs=0.00017165
10:19:56 [DEBUG] (615) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=215.142828ms elapsed_secs=0.215142828
10:19:56 [DEBUG] (669) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=688.743µs elapsed_secs=0.000688743
10:19:56 [DEBUG] (677) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=366.928µs elapsed_secs=0.000366928
10:19:56 [DEBUG] (678) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.405µs elapsed_secs=4.4405e-5
10:19:56 [DEBUG] (669) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=784.425µs elapsed_secs=0.000784425
10:19:56 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.248533ms elapsed_secs=0.001248533
10:19:56 [DEBUG] (618) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=226.817637ms elapsed_secs=0.226817637
10:19:56 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=316.512µs elapsed_secs=0.000316512
10:19:56 [DEBUG] (679) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=213.896µs elapsed_secs=0.000213896
10:19:56 [DEBUG] (680) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=179.941µs elapsed_secs=0.000179941
10:19:56 [DEBUG] (680) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=932.055µs elapsed_secs=0.000932055
10:19:56 [DEBUG] (616) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:56 [DEBUG] (679) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=995.316µs elapsed_secs=0.000995316
10:19:56 [DEBUG] (680) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=165.415µs elapsed_secs=0.000165415
10:19:56 [DEBUG] (613) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:19:56 [DEBUG] (679) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=165.991µs elapsed_secs=0.000165991
10:19:56 [DEBUG] (679) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=37.004µs elapsed_secs=3.7004e-5
10:19:56 [DEBUG] (679) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=166.662µs elapsed_secs=0.000166662
10:19:56 [DEBUG] (670) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=13.122513ms elapsed_secs=0.013122513
10:19:56 [INFO] Created user: User { id: Some(1), username: "dot.test.20250606101956", email: "dot_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (683) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=180.857µs elapsed_secs=0.000180857
10:19:56 [DEBUG] (688) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.936µs elapsed_secs=5.9936e-5
10:19:56 [DEBUG] (689) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=93.134µs elapsed_secs=9.3134e-5
10:19:56 [DEBUG] (678) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.237268ms elapsed_secs=0.016237268
10:19:56 [DEBUG] (678) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=106.332µs elapsed_secs=0.000106332
10:19:56 [DEBUG] (678) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.675µs elapsed_secs=7.8675e-5
10:19:56 [DEBUG] (656) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.750506ms elapsed_secs=0.011750506
10:19:56 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=296.384µs elapsed_secs=0.000296384
10:19:56 [DEBUG] (677) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.125228ms elapsed_secs=0.017125228
10:19:56 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.684µs elapsed_secs=0.000182684
10:19:56 [DEBUG] (677) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=135.811µs elapsed_secs=0.000135811
10:19:56 [DEBUG] (690) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.949µs elapsed_secs=5.5949e-5
10:19:56 [DEBUG] (677) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=95.913µs elapsed_secs=9.5913e-5
10:19:56 [DEBUG] (677) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=248.897µs elapsed_secs=0.000248897
10:19:56 [DEBUG] (661) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.023302ms elapsed_secs=0.012023302
10:19:56 [DEBUG] (677) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.345µs elapsed_secs=9.2345e-5
10:19:56 [DEBUG] (661) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=407.281µs elapsed_secs=0.000407281
10:19:56 [DEBUG] (693) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.718µs elapsed_secs=4.4718e-5
10:19:56 [DEBUG] (661) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.115µs elapsed_secs=8.6115e-5
10:19:56 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.70543ms elapsed_secs=0.00870543
10:19:56 [DEBUG] (669) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.857895ms elapsed_secs=0.008857895
10:19:56 [DEBUG] (669) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=492.617µs elapsed_secs=0.000492617
10:19:56 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=605.293µs elapsed_secs=0.000605293
10:19:56 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.911µs elapsed_secs=0.000109911
10:19:56 [DEBUG] (688) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.01397ms elapsed_secs=0.01201397
10:19:56 [DEBUG] (683) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.741234ms elapsed_secs=0.013741234
10:19:56 [DEBUG] (689) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.372305ms elapsed_secs=0.011372305
10:19:56 [DEBUG] (669) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=163.896µs elapsed_secs=0.000163896
10:19:56 [DEBUG] (688) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=146.327µs elapsed_secs=0.000146327
10:19:56 [DEBUG] (683) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.204µs elapsed_secs=0.000104204
10:19:56 [DEBUG] (688) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=120.961µs elapsed_secs=0.000120961
10:19:56 [DEBUG] (689) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=198.314µs elapsed_secs=0.000198314
10:19:56 [DEBUG] (683) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.103µs elapsed_secs=7.6103e-5
10:19:56 [DEBUG] (689) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=170.922µs elapsed_secs=0.000170922
10:19:56 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.812375ms elapsed_secs=0.001812375
10:19:56 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.519021ms elapsed_secs=0.001519021
10:19:56 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=421.249µs elapsed_secs=0.000421249
10:19:56 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=430.444µs elapsed_secs=0.000430444
10:19:56 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=761.911µs elapsed_secs=0.000761911
10:19:56 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.779µs elapsed_secs=0.000167779
10:19:56 [DEBUG] (693) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.709656ms elapsed_secs=0.013709656
10:19:56 [DEBUG] (693) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=149.009µs elapsed_secs=0.000149009
10:19:56 [DEBUG] (693) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.311µs elapsed_secs=7.0311e-5
10:19:56 [DEBUG] (693) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=469.105µs elapsed_secs=0.000469105
10:19:56 [DEBUG] (693) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.371µs elapsed_secs=0.000118371
10:19:56 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.088418ms elapsed_secs=0.008088418
10:19:56 [DEBUG] (626) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=227.753987ms elapsed_secs=0.227753987
10:19:56 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=234.804µs elapsed_secs=0.000234804
10:19:56 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=128.654µs elapsed_secs=0.000128654
10:19:56 [DEBUG] (622) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=234.900365ms elapsed_secs=0.234900365
10:19:56 [DEBUG] (694) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.84µs elapsed_secs=5.784e-5
10:19:56 [DEBUG] (695) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.627µs elapsed_secs=4.2627e-5
10:19:56 [DEBUG] (694) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=458.019µs elapsed_secs=0.000458019
10:19:56 [DEBUG] (624) menahel::repository::user_repo: Get user by id with transaction: None
10:19:56 [DEBUG] (695) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=167.711µs elapsed_secs=0.000167711
10:19:56 [DEBUG] (677) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.557505ms elapsed_secs=0.007557505
10:19:56 [DEBUG] (620) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:19:56 [DEBUG] (695) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=145.102µs elapsed_secs=0.000145102
10:19:56 [DEBUG] (677) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=234.47µs elapsed_secs=0.00023447
10:19:56 [DEBUG] (677) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.876µs elapsed_secs=0.000136876
10:19:56 [DEBUG] (661) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.422827ms elapsed_secs=0.010422827
10:19:56 [DEBUG] (698) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=204.182µs elapsed_secs=0.000204182
10:19:56 [DEBUG] (661) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=636.643µs elapsed_secs=0.000636643
10:19:56 [DEBUG] (661) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=230.654µs elapsed_secs=0.000230654
10:19:56 [DEBUG] (701) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.903µs elapsed_secs=4.6903e-5
10:19:56 [DEBUG] (669) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.83212ms elapsed_secs=0.00883212
10:19:56 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.067705ms elapsed_secs=0.009067705
10:19:56 [DEBUG] (669) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=370.886µs elapsed_secs=0.000370886
10:19:56 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=321.237µs elapsed_secs=0.000321237
10:19:56 [DEBUG] (669) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.716µs elapsed_secs=0.000176716
10:19:56 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.086µs elapsed_secs=8.9086e-5
10:19:56 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.567594ms elapsed_secs=0.010567594
10:19:56 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.908504ms elapsed_secs=0.010908504
10:19:56 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=274.824µs elapsed_secs=0.000274824
10:19:56 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=647.354µs elapsed_secs=0.000647354
10:19:56 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.753µs elapsed_secs=8.1753e-5
10:19:56 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.77µs elapsed_secs=0.00010777
10:19:56 [DEBUG] (630) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=228.909073ms elapsed_secs=0.228909073
10:19:56 [DEBUG] (702) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=66.111µs elapsed_secs=6.6111e-5
10:19:56 [DEBUG] (702) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=160.488µs elapsed_secs=0.000160488
10:19:56 [DEBUG] (628) menahel::repository::user_repo: Get user by id with transaction: None
10:19:56 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.786019ms elapsed_secs=0.009786019
10:19:56 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=497.101µs elapsed_secs=0.000497101
10:19:56 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.75µs elapsed_secs=8.275e-5
10:19:56 [DEBUG] (705) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.297µs elapsed_secs=4.4297e-5
10:19:56 [DEBUG] (693) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.890503ms elapsed_secs=0.009890503
10:19:56 [DEBUG] (698) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.476142ms elapsed_secs=0.012476142
10:19:56 [DEBUG] (693) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=569.563µs elapsed_secs=0.000569563
10:19:56 [DEBUG] (698) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=99.765µs elapsed_secs=9.9765e-5
10:19:56 [DEBUG] (693) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.816µs elapsed_secs=0.000110816
10:19:56 [DEBUG] (698) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=115.527µs elapsed_secs=0.000115527
10:19:56 [DEBUG] (698) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=320.951µs elapsed_secs=0.000320951
10:19:56 [DEBUG] (701) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.568169ms elapsed_secs=0.013568169
10:19:56 [DEBUG] (698) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=829.608µs elapsed_secs=0.000829608
10:19:56 [DEBUG] (701) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=384.805µs elapsed_secs=0.000384805
10:19:56 [DEBUG] (701) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=106.237µs elapsed_secs=0.000106237
10:19:56 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.355593ms elapsed_secs=0.011355593
10:19:56 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=386.339µs elapsed_secs=0.000386339
10:19:56 [DEBUG] (701) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=520.219µs elapsed_secs=0.000520219
10:19:56 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.692µs elapsed_secs=0.000123692
10:19:56 [DEBUG] (701) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=213.859µs elapsed_secs=0.000213859
10:19:56 [DEBUG] (677) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.276494ms elapsed_secs=0.010276494
10:19:56 [DEBUG] (705) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.25308ms elapsed_secs=0.01225308
10:19:56 [DEBUG] (677) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=221.441µs elapsed_secs=0.000221441
10:19:56 [DEBUG] (705) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=69.915µs elapsed_secs=6.9915e-5
10:19:56 [DEBUG] (677) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.121µs elapsed_secs=6.9121e-5
10:19:56 [DEBUG] (705) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=48.406µs elapsed_secs=4.8406e-5
10:19:56 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=215.707µs elapsed_secs=0.000215707
10:19:56 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.709µs elapsed_secs=7.2709e-5
10:19:56 [DEBUG] (669) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.485611ms elapsed_secs=0.007485611
10:19:56 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.694128ms elapsed_secs=0.007694128
10:19:56 [DEBUG] (669) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=149.957µs elapsed_secs=0.000149957
10:19:56 [DEBUG] (669) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.709µs elapsed_secs=6.2709e-5
10:19:56 [DEBUG] (661) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.587362ms elapsed_secs=0.010587362
10:19:56 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=266.576µs elapsed_secs=0.000266576
10:19:56 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.62µs elapsed_secs=9.062e-5
10:19:56 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.220082ms elapsed_secs=0.007220082
10:19:56 [DEBUG] (661) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=416.679µs elapsed_secs=0.000416679
10:19:56 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=220.745µs elapsed_secs=0.000220745
10:19:56 [DEBUG] (661) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.081µs elapsed_secs=0.000107081
10:19:56 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.968212ms elapsed_secs=0.007968212
10:19:56 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.596µs elapsed_secs=6.3596e-5
10:19:56 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=400.768µs elapsed_secs=0.000400768
10:19:56 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.85µs elapsed_secs=9.085e-5
10:19:56 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.176904ms elapsed_secs=0.007176904
10:19:56 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.302423ms elapsed_secs=0.001302423
10:19:56 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=186.036µs elapsed_secs=0.000186036
10:19:56 [DEBUG] (701) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.723602ms elapsed_secs=0.008723602
10:19:56 [DEBUG] (698) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.867721ms elapsed_secs=0.008867721
10:19:56 [DEBUG] (693) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.038596ms elapsed_secs=0.011038596
10:19:56 [DEBUG] (701) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=259.945µs elapsed_secs=0.000259945
10:19:56 [DEBUG] (698) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=251.696µs elapsed_secs=0.000251696
10:19:56 [DEBUG] (701) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.831µs elapsed_secs=0.000117831
10:19:56 [DEBUG] (693) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=229.983µs elapsed_secs=0.000229983
10:19:56 [DEBUG] (698) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.977µs elapsed_secs=8.1977e-5
10:19:56 [DEBUG] (693) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.848µs elapsed_secs=5.8848e-5
10:19:56 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.892912ms elapsed_secs=0.009892912
10:19:56 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=139.805µs elapsed_secs=0.000139805
10:19:56 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.766µs elapsed_secs=6.0766e-5
10:19:56 [DEBUG] (677) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.910436ms elapsed_secs=0.010910436
10:19:56 [DEBUG] (677) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=259.223µs elapsed_secs=0.000259223
10:19:56 [DEBUG] (677) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=340.612µs elapsed_secs=0.000340612
10:19:56 [DEBUG] (669) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.324526ms elapsed_secs=0.012324526
10:19:56 [DEBUG] (669) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=176.864µs elapsed_secs=0.000176864
10:19:56 [DEBUG] (669) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.616µs elapsed_secs=9.2616e-5
10:19:56 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.411415ms elapsed_secs=0.013411415
10:19:56 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=354.87µs elapsed_secs=0.00035487
10:19:56 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.958µs elapsed_secs=8.8958e-5
10:19:56 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.393197ms elapsed_secs=0.009393197
10:19:56 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.644414ms elapsed_secs=0.013644414
10:19:56 [DEBUG] (661) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.703302ms elapsed_secs=0.009703302
10:19:56 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=160.857µs elapsed_secs=0.000160857
10:19:56 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.705201ms elapsed_secs=0.009705201
10:19:56 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=247.333µs elapsed_secs=0.000247333
10:19:56 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=611.558µs elapsed_secs=0.000611558
10:19:56 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=161.841µs elapsed_secs=0.000161841
10:19:56 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.846µs elapsed_secs=7.3846e-5
10:19:56 [DEBUG] (661) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=383.817µs elapsed_secs=0.000383817
10:19:56 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.952µs elapsed_secs=5.5952e-5
10:19:56 [DEBUG] (661) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.396µs elapsed_secs=0.000104396
10:19:56 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.521539ms elapsed_secs=0.006521539
10:19:56 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=266.093µs elapsed_secs=0.000266093
10:19:56 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.632µs elapsed_secs=7.2632e-5
10:19:56 [DEBUG] (698) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.213239ms elapsed_secs=0.008213239
10:19:56 [DEBUG] (693) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.513243ms elapsed_secs=0.008513243
10:19:56 [DEBUG] (698) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=159.126µs elapsed_secs=0.000159126
10:19:56 [DEBUG] (693) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=158.003µs elapsed_secs=0.000158003
10:19:56 [DEBUG] (698) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.238µs elapsed_secs=9.3238e-5
10:19:56 [DEBUG] (701) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.040213ms elapsed_secs=0.007040213
10:19:56 [DEBUG] (693) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.211µs elapsed_secs=9.4211e-5
10:19:56 [DEBUG] (701) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=558.049µs elapsed_secs=0.000558049
10:19:56 [DEBUG] (701) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.65µs elapsed_secs=7.665e-5
10:19:56 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.093283ms elapsed_secs=0.008093283
10:19:56 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=263.731µs elapsed_secs=0.000263731
10:19:56 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=276.326µs elapsed_secs=0.000276326
10:19:56 [DEBUG] (669) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.479261ms elapsed_secs=0.005479261
10:19:56 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.670713ms elapsed_secs=0.005670713
10:19:56 [DEBUG] (677) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.914185ms elapsed_secs=0.007914185
10:19:56 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=275.012µs elapsed_secs=0.000275012
10:19:56 [DEBUG] (677) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=128.343µs elapsed_secs=0.000128343
10:19:56 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.561185ms elapsed_secs=0.006561185
10:19:56 [DEBUG] (677) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.815µs elapsed_secs=9.8815e-5
10:19:56 [DEBUG] (706) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.863µs elapsed_secs=7.0863e-5
10:19:56 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=179.196µs elapsed_secs=0.000179196
10:19:56 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=445.291µs elapsed_secs=0.000445291
10:19:56 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.592µs elapsed_secs=0.000100592
10:19:56 [DEBUG] (709) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.777µs elapsed_secs=3.7777e-5
10:19:56 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.269899ms elapsed_secs=0.009269899
10:19:56 [DEBUG] (661) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.527239ms elapsed_secs=0.009527239
10:19:56 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.41892ms elapsed_secs=0.00841892
10:19:56 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.766791ms elapsed_secs=0.009766791
10:19:56 [DEBUG] (710) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.075µs elapsed_secs=7.2075e-5
10:19:56 [DEBUG] (711) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.976µs elapsed_secs=3.5976e-5
10:19:56 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=367.573µs elapsed_secs=0.000367573
10:19:56 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=250.353µs elapsed_secs=0.000250353
10:19:56 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.396µs elapsed_secs=0.000114396
10:19:56 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=586.117µs elapsed_secs=0.000586117
10:19:56 [DEBUG] (698) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.230552ms elapsed_secs=0.007230552
10:19:56 [DEBUG] (698) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=261.234µs elapsed_secs=0.000261234
10:19:56 [DEBUG] (715) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.228µs elapsed_secs=4.8228e-5
10:19:56 [DEBUG] (698) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=415.459µs elapsed_secs=0.000415459
10:19:56 [DEBUG] (717) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.055µs elapsed_secs=3.0055e-5
10:19:56 [DEBUG] (693) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.918336ms elapsed_secs=0.010918336
10:19:56 [DEBUG] (693) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=133.348µs elapsed_secs=0.000133348
10:19:56 [DEBUG] (693) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.81µs elapsed_secs=0.00012081
10:19:56 [DEBUG] (701) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.787264ms elapsed_secs=0.009787264
10:19:56 [DEBUG] (709) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.536896ms elapsed_secs=0.011536896
10:19:56 [DEBUG] (701) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=155.371µs elapsed_secs=0.000155371
10:19:56 [DEBUG] (709) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=64.466µs elapsed_secs=6.4466e-5
10:19:56 [DEBUG] (701) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.329µs elapsed_secs=6.3329e-5
10:19:56 [DEBUG] (709) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=105.377µs elapsed_secs=0.000105377
10:19:56 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=176.04µs elapsed_secs=0.00017604
10:19:56 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.646µs elapsed_secs=9.0646e-5
10:19:56 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.137572ms elapsed_secs=0.009137572
10:19:56 [DEBUG] (718) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.516µs elapsed_secs=5.5516e-5
10:19:56 [DEBUG] (677) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.028172ms elapsed_secs=0.006028172
10:19:56 [DEBUG] (717) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.575634ms elapsed_secs=0.008575634
10:19:56 [DEBUG] (719) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.937µs elapsed_secs=8.1937e-5
10:19:56 [DEBUG] (717) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=90.042µs elapsed_secs=9.0042e-5
10:19:56 [DEBUG] (722) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.721µs elapsed_secs=3.7721e-5
10:19:56 [DEBUG] (717) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.956µs elapsed_secs=7.7956e-5
10:19:56 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.173109ms elapsed_secs=0.008173109
10:19:56 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=393.66µs elapsed_secs=0.00039366
10:19:56 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=166.982µs elapsed_secs=0.000166982
10:19:56 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.62µs elapsed_secs=7.362e-5
10:19:56 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.474296ms elapsed_secs=0.007474296
10:19:56 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.98µs elapsed_secs=5.998e-5
10:19:56 [DEBUG] (725) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.385µs elapsed_secs=4.3385e-5
10:19:56 [DEBUG] (715) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.609508ms elapsed_secs=0.011609508
10:19:56 [DEBUG] (726) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.821µs elapsed_secs=3.7821e-5
10:19:56 [DEBUG] (715) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.528µs elapsed_secs=9.7528e-5
10:19:56 [DEBUG] (715) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=66.332µs elapsed_secs=6.6332e-5
10:19:56 [DEBUG] (715) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=223.218µs elapsed_secs=0.000223218
10:19:56 [DEBUG] (715) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.068µs elapsed_secs=8.9068e-5
10:19:56 [DEBUG] (729) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.948µs elapsed_secs=3.4948e-5
10:19:56 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.299211ms elapsed_secs=0.010299211
10:19:56 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.88319ms elapsed_secs=0.01288319
10:19:56 [DEBUG] (693) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.070416ms elapsed_secs=0.009070416
10:19:56 [DEBUG] (701) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.051388ms elapsed_secs=0.009051388
10:19:56 [DEBUG] (698) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.702258ms elapsed_secs=0.010702258
10:19:56 [DEBUG] (730) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.829µs elapsed_secs=7.2829e-5
10:19:56 [DEBUG] (731) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=117.347µs elapsed_secs=0.000117347
10:19:56 [DEBUG] (732) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.151µs elapsed_secs=4.2151e-5
10:19:56 [DEBUG] (698) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=315.865µs elapsed_secs=0.000315865
10:19:56 [DEBUG] (701) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=452.542µs elapsed_secs=0.000452542
10:19:56 [DEBUG] (698) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=311.444µs elapsed_secs=0.000311444
10:19:56 [DEBUG] (725) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.287649ms elapsed_secs=0.012287649
10:19:56 [DEBUG] (722) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.304812ms elapsed_secs=0.014304812
10:19:56 [DEBUG] (701) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=181.342µs elapsed_secs=0.000181342
10:19:56 [DEBUG] (725) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=167.574µs elapsed_secs=0.000167574
10:19:56 [DEBUG] (722) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=168.294µs elapsed_secs=0.000168294
10:19:56 [DEBUG] (725) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.563µs elapsed_secs=6.3563e-5
10:19:56 [DEBUG] (722) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=50.889µs elapsed_secs=5.0889e-5
10:19:56 [DEBUG] (729) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.827864ms elapsed_secs=0.011827864
10:19:56 [DEBUG] (737) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=193.539µs elapsed_secs=0.000193539
10:19:56 [DEBUG] (738) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=165.984µs elapsed_secs=0.000165984
10:19:56 [DEBUG] (729) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=240.426µs elapsed_secs=0.000240426
10:19:56 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=815.907µs elapsed_secs=0.000815907
10:19:56 [DEBUG] (722) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=910.101µs elapsed_secs=0.000910101
10:19:56 [DEBUG] (729) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=86.24µs elapsed_secs=8.624e-5
10:19:56 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.901µs elapsed_secs=0.000118901
10:19:56 [DEBUG] (722) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.665µs elapsed_secs=8.2665e-5
10:19:56 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=175.307µs elapsed_secs=0.000175307
10:19:56 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.195µs elapsed_secs=6.8195e-5
10:19:56 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.647789ms elapsed_secs=0.011647789
10:19:56 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=174.977µs elapsed_secs=0.000174977
10:19:56 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.866µs elapsed_secs=9.7866e-5
10:19:56 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.973955ms elapsed_secs=0.007973955
10:19:56 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.868758ms elapsed_secs=0.007868758
10:19:56 [DEBUG] (715) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.618075ms elapsed_secs=0.006618075
10:19:56 [DEBUG] (732) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.278908ms elapsed_secs=0.008278908
10:19:56 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=244.94µs elapsed_secs=0.00024494
10:19:56 [INFO] Created user: User { id: Some(1), username: "1234567890_20250606101956", email: "numeric_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=534.686µs elapsed_secs=0.000534686
10:19:56 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=190.744µs elapsed_secs=0.000190744
10:19:56 [DEBUG] (715) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=546.75µs elapsed_secs=0.00054675
10:19:56 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.14µs elapsed_secs=0.00011214
10:19:56 [DEBUG] (715) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.621µs elapsed_secs=0.000111621
10:19:56 [DEBUG] (741) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=461.24µs elapsed_secs=0.00046124
10:19:56 [DEBUG] (738) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.149784ms elapsed_secs=0.014149784
10:19:56 [DEBUG] (737) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.281433ms elapsed_secs=0.014281433
10:19:56 [DEBUG] (738) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.593µs elapsed_secs=8.2593e-5
10:19:56 [DEBUG] (737) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=158.54µs elapsed_secs=0.00015854
10:19:56 [DEBUG] (738) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.75µs elapsed_secs=5.975e-5
10:19:56 [DEBUG] (737) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.603µs elapsed_secs=6.4603e-5
10:19:56 [DEBUG] (738) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=611.897µs elapsed_secs=0.000611897
10:19:56 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=562.245µs elapsed_secs=0.000562245
10:19:56 [DEBUG] (738) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.975µs elapsed_secs=8.9975e-5
10:19:56 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.44µs elapsed_secs=8.944e-5
10:19:56 [DEBUG] (701) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.957852ms elapsed_secs=0.009957852
10:19:56 [DEBUG] (698) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.413811ms elapsed_secs=0.010413811
10:19:56 [DEBUG] (742) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.794µs elapsed_secs=3.7794e-5
10:19:56 [DEBUG] (743) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.863µs elapsed_secs=3.7863e-5
10:19:56 [DEBUG] (741) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.528706ms elapsed_secs=0.009528706
10:19:56 [DEBUG] (741) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=145.89µs elapsed_secs=0.00014589
10:19:56 [DEBUG] (746) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.879µs elapsed_secs=3.8879e-5
10:19:56 [DEBUG] (741) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=132.746µs elapsed_secs=0.000132746
10:19:56 [DEBUG] (749) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.846µs elapsed_secs=5.5846e-5
10:19:56 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=280.364µs elapsed_secs=0.000280364
10:19:56 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.147µs elapsed_secs=9.5147e-5
10:19:56 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.138979ms elapsed_secs=0.009138979
10:19:56 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.368799ms elapsed_secs=0.009368799
10:19:56 [DEBUG] (722) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.528856ms elapsed_secs=0.009528856
10:19:56 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=257.669µs elapsed_secs=0.000257669
10:19:56 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.399205ms elapsed_secs=0.008399205
10:19:56 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.865µs elapsed_secs=0.000123865
10:19:56 [DEBUG] (722) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=338.298µs elapsed_secs=0.000338298
10:19:56 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=931.887µs elapsed_secs=0.000931887
10:19:56 [DEBUG] (722) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=198.87µs elapsed_secs=0.00019887
10:19:56 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=514.287µs elapsed_secs=0.000514287
10:19:56 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.101µs elapsed_secs=9.7101e-5
10:19:56 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.291887ms elapsed_secs=0.008291887
10:19:56 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=382.787µs elapsed_secs=0.000382787
10:19:56 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.780918ms elapsed_secs=0.008780918
10:19:56 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=390.641µs elapsed_secs=0.000390641
10:19:56 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=206.295µs elapsed_secs=0.000206295
10:19:56 [DEBUG] (750) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=141.984µs elapsed_secs=0.000141984
10:19:56 [DEBUG] (715) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.38101ms elapsed_secs=0.01338101
10:19:56 [DEBUG] (715) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=207.401µs elapsed_secs=0.000207401
10:19:56 [DEBUG] (715) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.17µs elapsed_secs=0.00010317
10:19:56 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.027606ms elapsed_secs=0.009027606
10:19:56 [DEBUG] (749) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.994691ms elapsed_secs=0.013994691
10:19:56 [DEBUG] (746) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.633861ms elapsed_secs=0.014633861
10:19:56 [DEBUG] (738) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.868757ms elapsed_secs=0.009868757
10:19:56 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=379.703µs elapsed_secs=0.000379703
10:19:56 [DEBUG] (749) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=283.643µs elapsed_secs=0.000283643
10:19:56 [DEBUG] (746) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.003µs elapsed_secs=8.7003e-5
10:19:56 [DEBUG] (749) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.329µs elapsed_secs=7.0329e-5
10:19:56 [DEBUG] (738) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=167.876µs elapsed_secs=0.000167876
10:19:56 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.868µs elapsed_secs=8.3868e-5
10:19:56 [DEBUG] (746) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=110.025µs elapsed_secs=0.000110025
10:19:56 [DEBUG] (738) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.98µs elapsed_secs=0.00014198
10:19:56 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=518.594µs elapsed_secs=0.000518594
10:19:56 [DEBUG] (746) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=408.879µs elapsed_secs=0.000408879
10:19:56 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.755µs elapsed_secs=0.000133755
10:19:56 [DEBUG] (746) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.164µs elapsed_secs=0.000133164
10:19:56 [DEBUG] (750) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.586849ms elapsed_secs=0.008586849
10:19:56 [INFO] Created user: User { id: Some(1), username: "underscore_test_20250606101956", email: "underscore_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.15702ms elapsed_secs=0.00715702
10:19:56 [DEBUG] (722) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.361812ms elapsed_secs=0.007361812
10:19:56 [DEBUG] (753) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=269.096µs elapsed_secs=0.000269096
10:19:56 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.376164ms elapsed_secs=0.008376164
10:19:56 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=579.104µs elapsed_secs=0.000579104
10:19:56 [DEBUG] (722) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=591.265µs elapsed_secs=0.000591265
10:19:56 [DEBUG] (722) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=154.313µs elapsed_secs=0.000154313
10:19:56 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=341.814µs elapsed_secs=0.000341814
10:19:56 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=447.633µs elapsed_secs=0.000447633
10:19:56 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.421µs elapsed_secs=8.9421e-5
10:19:56 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.234675ms elapsed_secs=0.010234675
10:19:56 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=194.84µs elapsed_secs=0.00019484
10:19:56 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.291µs elapsed_secs=9.2291e-5
10:19:56 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.504624ms elapsed_secs=0.010504624
10:19:56 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=420.74µs elapsed_secs=0.00042074
10:19:56 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.402µs elapsed_secs=8.2402e-5
10:19:56 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.012415ms elapsed_secs=0.011012415
10:19:56 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=172.195µs elapsed_secs=0.000172195
10:19:56 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.498µs elapsed_secs=7.7498e-5
10:19:56 [DEBUG] (715) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.125624ms elapsed_secs=0.008125624
10:19:56 [DEBUG] (753) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.145724ms elapsed_secs=0.011145724
10:19:56 [DEBUG] (715) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=335.782µs elapsed_secs=0.000335782
10:19:56 [DEBUG] (753) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=113.934µs elapsed_secs=0.000113934
10:19:56 [DEBUG] (715) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.385µs elapsed_secs=7.6385e-5
10:19:56 [DEBUG] (753) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.844µs elapsed_secs=6.4844e-5
10:19:56 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=607.995µs elapsed_secs=0.000607995
10:19:56 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.931µs elapsed_secs=8.3931e-5
10:19:56 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.38367ms elapsed_secs=0.00938367
10:19:56 [DEBUG] (746) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.949643ms elapsed_secs=0.008949643
10:19:56 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.44263ms elapsed_secs=0.01044263
10:19:56 [DEBUG] (738) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.391495ms elapsed_secs=0.010391495
10:19:56 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=471.905µs elapsed_secs=0.000471905
10:19:56 [DEBUG] (738) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=293.37µs elapsed_secs=0.00029337
10:19:56 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.71µs elapsed_secs=9.571e-5
10:19:56 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=594.314µs elapsed_secs=0.000594314
10:19:56 [DEBUG] (746) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=622.281µs elapsed_secs=0.000622281
10:19:56 [DEBUG] (738) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=169.742µs elapsed_secs=0.000169742
10:19:56 [DEBUG] (746) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=161.774µs elapsed_secs=0.000161774
10:19:56 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=289.301µs elapsed_secs=0.000289301
10:19:56 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.636128ms elapsed_secs=0.008636128
10:19:56 [DEBUG] (722) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.885388ms elapsed_secs=0.008885388
10:19:56 [DEBUG] (722) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=373.932µs elapsed_secs=0.000373932
10:19:56 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=541.37µs elapsed_secs=0.00054137
10:19:56 [DEBUG] (722) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.517µs elapsed_secs=9.9517e-5
10:19:56 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.931µs elapsed_secs=8.0931e-5
10:19:56 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.301561ms elapsed_secs=0.009301561
10:19:56 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.382524ms elapsed_secs=0.009382524
10:19:56 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=223.283µs elapsed_secs=0.000223283
10:19:56 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=412.831µs elapsed_secs=0.000412831
10:19:56 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.899µs elapsed_secs=6.4899e-5
10:19:56 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.755µs elapsed_secs=6.4755e-5
10:19:56 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.926639ms elapsed_secs=0.008926639
10:19:56 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.101032ms elapsed_secs=0.009101032
10:19:56 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=670.721µs elapsed_secs=0.000670721
10:19:56 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=897.154µs elapsed_secs=0.000897154
10:19:56 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.77µs elapsed_secs=0.00011577
10:19:56 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.01µs elapsed_secs=0.00011301
10:19:56 [DEBUG] (715) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.002662ms elapsed_secs=0.007002662
10:19:56 [DEBUG] (715) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.540743ms elapsed_secs=0.001540743
10:19:56 [DEBUG] (715) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=157.896µs elapsed_secs=0.000157896
10:19:56 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.016095ms elapsed_secs=0.011016095
10:19:56 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=168.666µs elapsed_secs=0.000168666
10:19:56 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.188µs elapsed_secs=0.000113188
10:19:56 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.027049ms elapsed_secs=0.009027049
10:19:56 [DEBUG] (746) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.390558ms elapsed_secs=0.009390558
10:19:56 [DEBUG] (738) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.525811ms elapsed_secs=0.009525811
10:19:56 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=175.874µs elapsed_secs=0.000175874
10:19:56 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.774019ms elapsed_secs=0.009774019
10:19:56 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.841632ms elapsed_secs=0.009841632
10:19:56 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.306699ms elapsed_secs=0.007306699
10:19:56 [DEBUG] (722) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.973172ms elapsed_secs=0.007973172
10:19:56 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.152µs elapsed_secs=7.9152e-5
10:19:56 [DEBUG] (738) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=445.138µs elapsed_secs=0.000445138
10:19:56 [DEBUG] (746) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=683.56µs elapsed_secs=0.00068356
10:19:56 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=407.886µs elapsed_secs=0.000407886
10:19:56 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=650.377µs elapsed_secs=0.000650377
10:19:56 [DEBUG] (746) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=336.823µs elapsed_secs=0.000336823
10:19:56 [DEBUG] (738) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.595µs elapsed_secs=0.000155595
10:19:56 [DEBUG] (722) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=540.463µs elapsed_secs=0.000540463
10:19:56 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=184.997µs elapsed_secs=0.000184997
10:19:56 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=584.84µs elapsed_secs=0.00058484
10:19:56 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=232.889µs elapsed_secs=0.000232889
10:19:56 [DEBUG] (722) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.908µs elapsed_secs=8.7908e-5
10:19:56 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=164.725µs elapsed_secs=0.000164725
10:19:56 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.882833ms elapsed_secs=0.008882833
10:19:56 [DEBUG] (754) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.736µs elapsed_secs=5.6736e-5
10:19:56 [DEBUG] (757) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.628µs elapsed_secs=3.5628e-5
10:19:56 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.490289ms elapsed_secs=0.006490289
10:19:56 [DEBUG] (758) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.267µs elapsed_secs=4.9267e-5
10:19:56 [DEBUG] (715) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.260492ms elapsed_secs=0.006260492
10:19:56 [DEBUG] (759) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.486µs elapsed_secs=4.6486e-5
10:19:56 [DEBUG] (759) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=344.888µs elapsed_secs=0.000344888
10:19:56 [DEBUG] (762) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.222µs elapsed_secs=6.0222e-5
10:19:56 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.231417ms elapsed_secs=0.009231417
10:19:56 [DEBUG] (757) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.435406ms elapsed_secs=0.008435406
10:19:56 [DEBUG] (757) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=153.737µs elapsed_secs=0.000153737
10:19:56 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=323.142µs elapsed_secs=0.000323142
10:19:56 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.235697ms elapsed_secs=0.009235697
10:19:56 [DEBUG] (757) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=145.554µs elapsed_secs=0.000145554
10:19:56 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=362.001µs elapsed_secs=0.000362001
10:19:56 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=200.938µs elapsed_secs=0.000200938
10:19:56 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.597µs elapsed_secs=0.000113597
10:19:56 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=469.092µs elapsed_secs=0.000469092
10:19:56 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=271.979µs elapsed_secs=0.000271979
10:19:56 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.15923ms elapsed_secs=0.00815923
10:19:56 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.962962ms elapsed_secs=0.008962962
10:19:56 [DEBUG] (758) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=11.781959ms elapsed_secs=0.011781959
10:19:56 [DEBUG] (738) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.094282ms elapsed_secs=0.009094282
10:19:56 [DEBUG] (746) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.923563ms elapsed_secs=0.009923563
10:19:56 [INFO] Created user: User { id: Some(1), username: "delete_user_test_20250606101956", email: "delete_user_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=359.997µs elapsed_secs=0.000359997
10:19:56 [DEBUG] (763) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=139.404µs elapsed_secs=0.000139404
10:19:56 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=239.768µs elapsed_secs=0.000239768
10:19:56 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.130816ms elapsed_secs=0.012130816
10:19:56 [DEBUG] (764) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.863µs elapsed_secs=8.2863e-5
10:19:56 [DEBUG] (738) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=320.265µs elapsed_secs=0.000320265
10:19:56 [DEBUG] (746) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=647.563µs elapsed_secs=0.000647563
10:19:56 [DEBUG] (738) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=602.621µs elapsed_secs=0.000602621
10:19:56 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=318.254µs elapsed_secs=0.000318254
10:19:56 [DEBUG] (764) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=449.349µs elapsed_secs=0.000449349
10:19:56 [DEBUG] (746) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=334.005µs elapsed_secs=0.000334005
10:19:56 [DEBUG] (714) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "delete_user_test_20250606101956", email: "delete_user_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" })
10:19:56 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=474.251µs elapsed_secs=0.000474251
10:19:56 [DEBUG] (722) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.297952ms elapsed_secs=0.013297952
10:19:56 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.296153ms elapsed_secs=0.014296153
10:19:56 [DEBUG] (762) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.009602ms elapsed_secs=0.014009602
10:19:56 [DEBUG] (765) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=169.668µs elapsed_secs=0.000169668
10:19:56 [DEBUG] (762) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=168.948µs elapsed_secs=0.000168948
10:19:56 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=245.413µs elapsed_secs=0.000245413
10:19:56 [DEBUG] (762) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=55.455µs elapsed_secs=5.5455e-5
10:19:56 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=388.951µs elapsed_secs=0.000388951
10:19:56 [DEBUG] (762) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=170.66µs elapsed_secs=0.00017066
10:19:56 [DEBUG] (762) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.226µs elapsed_secs=0.000131226
10:19:56 [DEBUG] (763) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.132036ms elapsed_secs=0.008132036
10:19:56 [INFO] Created user: User { id: Some(1), username: "get_user_by_id_test_20250606101956", email: "get_user_by_id_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (766) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.183µs elapsed_secs=4.3183e-5
10:19:56 [DEBUG] (766) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=116.214µs elapsed_secs=0.000116214
10:19:56 [DEBUG] (727) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "get_user_by_id_test_20250606101956", email: "get_user_by_id_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" })
10:19:56 [DEBUG] (763) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=1 rows_returned=0 elapsed=117.735µs elapsed_secs=0.000117735
10:19:56 [DEBUG] (727) menahel::repository::user_repo: Get user by id: None
10:19:56 [DEBUG] (758) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=9.462463ms elapsed_secs=0.009462463
10:19:56 [INFO] Deleted user: SqliteQueryResult { changes: 1, last_insert_rowid: 1 }
10:19:56 [DEBUG] (764) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=0 elapsed=55.598µs elapsed_secs=5.5598e-5
10:19:56 [DEBUG] (714) menahel::repository::user_repo: Get user by id: None
10:19:56 [DEBUG] (769) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=90.673µs elapsed_secs=9.0673e-5
10:19:56 [DEBUG] (765) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.356581ms elapsed_secs=0.009356581
10:19:56 [INFO] Created user: User { id: Some(1), username: "get_all_users_test_20250606101956_1", email: "get_all_users_test_20250606101956_1@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (772) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=122.204µs elapsed_secs=0.000122204
10:19:56 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.261145ms elapsed_secs=0.011261145
10:19:56 [DEBUG] (773) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=144.943µs elapsed_secs=0.000144943
10:19:56 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=197.639µs elapsed_secs=0.000197639
10:19:56 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.534µs elapsed_secs=7.4534e-5
10:19:56 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.456401ms elapsed_secs=0.012456401
10:19:56 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=576.494µs elapsed_secs=0.000576494
10:19:56 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.435068ms elapsed_secs=0.013435068
10:19:56 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.924µs elapsed_secs=8.9924e-5
10:19:56 [DEBUG] (774) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=80.207µs elapsed_secs=8.0207e-5
10:19:56 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.295689ms elapsed_secs=0.012295689
10:19:56 [DEBUG] (774) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=0 rows_returned=0 elapsed=199.827µs elapsed_secs=0.000199827
10:19:56 [DEBUG] (723) menahel::repository::user_repo: Get all users: []
10:19:56 [DEBUG] (738) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.088516ms elapsed_secs=0.011088516
10:19:56 [DEBUG] (746) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.316213ms elapsed_secs=0.011316213
10:19:56 [DEBUG] (746) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=359.654µs elapsed_secs=0.000359654
10:19:56 [DEBUG] (777) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.637µs elapsed_secs=3.6637e-5
10:19:56 [DEBUG] (746) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.152µs elapsed_secs=8.3152e-5
10:19:56 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.743855ms elapsed_secs=0.010743855
10:19:56 [DEBUG] (769) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.540506ms elapsed_secs=0.012540506
10:19:56 [DEBUG] (769) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.63µs elapsed_secs=8.263e-5
10:19:56 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=237.251µs elapsed_secs=0.000237251
10:19:56 [DEBUG] (769) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=104.5µs elapsed_secs=0.0001045
10:19:56 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.207µs elapsed_secs=9.0207e-5
10:19:56 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=311.163µs elapsed_secs=0.000311163
10:19:56 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.317µs elapsed_secs=8.9317e-5
10:19:56 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.072843ms elapsed_secs=0.009072843
10:19:56 [DEBUG] (762) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.655111ms elapsed_secs=0.009655111
10:19:56 [DEBUG] (773) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.811878ms elapsed_secs=0.009811878
10:19:56 [DEBUG] (778) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.585µs elapsed_secs=5.8585e-5
10:19:56 [INFO] Created user: User { id: Some(2), username: "get_all_users_test_20250606101956_2", email: "get_all_users_test_20250606101956_2@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (772) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.900765ms elapsed_secs=0.014900765
10:19:56 [DEBUG] (762) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.504853ms elapsed_secs=0.001504853
10:19:56 [DEBUG] (772) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=231.836µs elapsed_secs=0.000231836
10:19:56 [DEBUG] (762) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.728µs elapsed_secs=0.000117728
10:19:56 [DEBUG] (772) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=156.472µs elapsed_secs=0.000156472
10:19:56 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.384845ms elapsed_secs=0.001384845
10:19:56 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=382.261µs elapsed_secs=0.000382261
10:19:56 [DEBUG] (777) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.542052ms elapsed_secs=0.013542052
10:19:56 [DEBUG] (777) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.273µs elapsed_secs=7.9273e-5
10:19:56 [DEBUG] (777) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=46.106µs elapsed_secs=4.6106e-5
10:19:56 [DEBUG] (777) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=235.914µs elapsed_secs=0.000235914
10:19:56 [DEBUG] (777) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.173µs elapsed_secs=8.1173e-5
10:19:56 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.855885ms elapsed_secs=0.011855885
10:19:56 [DEBUG] (778) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=12.612958ms elapsed_secs=0.012612958
10:19:56 [DEBUG] (765) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=13.569877ms elapsed_secs=0.013569877
10:19:56 [INFO] Created user: User { id: Some(1), username: "get_user_by_name_test_20250606101956", email: "get_user_by_name_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.258063ms elapsed_secs=0.012258063
10:19:56 [DEBUG] (779) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.915µs elapsed_secs=6.1915e-5
10:19:56 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=259.837µs elapsed_secs=0.000259837
10:19:56 [INFO] Created user: User { id: Some(3), username: "get_all_users_test_20250606101956_3", email: "get_all_users_test_20250606101956_3@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=748.27µs elapsed_secs=0.00074827
10:19:56 [DEBUG] (779) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=228.228µs elapsed_secs=0.000228228
10:19:56 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.864µs elapsed_secs=0.000144864
10:19:56 [DEBUG] (739) menahel::repository::user_repo: Get user by name: Some(User { id: Some(1), username: "get_user_by_name_test_20250606101956", email: "get_user_by_name_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" })
10:19:56 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.728µs elapsed_secs=0.000170728
10:19:56 [DEBUG] (778) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=106.403µs elapsed_secs=0.000106403
10:19:56 [DEBUG] (739) menahel::repository::user_repo: Get user by name: None
10:19:56 [DEBUG] (746) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.990324ms elapsed_secs=0.009990324
10:19:56 [DEBUG] (782) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=188.817µs elapsed_secs=0.000188817
10:19:56 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.736326ms elapsed_secs=0.012736326
10:19:56 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.307866ms elapsed_secs=0.013307866
10:19:56 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=403.728µs elapsed_secs=0.000403728
10:19:56 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.705µs elapsed_secs=7.4705e-5
10:19:56 [DEBUG] (762) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.7327ms elapsed_secs=0.0117327
10:19:56 [DEBUG] (762) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=193.843µs elapsed_secs=0.000193843
10:19:56 [DEBUG] (762) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.426µs elapsed_secs=8.6426e-5
10:19:56 [DEBUG] (773) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=11.001412ms elapsed_secs=0.011001412
10:19:56 [INFO] Created user: User { id: Some(4), username: "get_all_users_test_20250606101956_4", email: "get_all_users_test_20250606101956_4@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (782) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.742916ms elapsed_secs=0.012742916
10:19:56 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.636122ms elapsed_secs=0.010636122
10:19:56 [DEBUG] (782) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=175.626µs elapsed_secs=0.000175626
10:19:56 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=403.561µs elapsed_secs=0.000403561
10:19:56 [DEBUG] (782) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=323.794µs elapsed_secs=0.000323794
10:19:56 [DEBUG] (777) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.617197ms elapsed_secs=0.012617197
10:19:56 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=513.75µs elapsed_secs=0.00051375
10:19:56 [DEBUG] (777) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=504.669µs elapsed_secs=0.000504669
10:19:56 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=877.546µs elapsed_secs=0.000877546
10:19:56 [DEBUG] (777) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.366µs elapsed_secs=0.000151366
10:19:56 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.211µs elapsed_secs=6.9211e-5
10:19:56 [DEBUG] (765) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.221304ms elapsed_secs=0.010221304
10:19:56 [INFO] Created user: User { id: Some(5), username: "get_all_users_test_20250606101956_5", email: "get_all_users_test_20250606101956_5@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.147459ms elapsed_secs=0.012147459
10:19:56 [DEBUG] (773) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=1 rows_returned=5 elapsed=129.902µs elapsed_secs=0.000129902
10:19:56 [DEBUG] (720) menahel::repository::user_repo: Get all users: [User { id: Some(1), username: "get_all_users_test_20250606101956_1", email: "get_all_users_test_20250606101956_1@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }, User { id: Some(2), username: "get_all_users_test_20250606101956_2", email: "get_all_users_test_20250606101956_2@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }, User { id: Some(3), username: "get_all_users_test_20250606101956_3", email: "get_all_users_test_20250606101956_3@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }, User { id: Some(4), username: "get_all_users_test_20250606101956_4", email: "get_all_users_test_20250606101956_4@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }, User { id: Some(5), username: "get_all_users_test_20250606101956_5", email: "get_all_users_test_20250606101956_5@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }]
10:19:56 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=160.395µs elapsed_secs=0.000160395
10:19:56 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.555µs elapsed_secs=9.2555e-5
10:19:56 [DEBUG] (785) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.905µs elapsed_secs=8.2905e-5
10:19:56 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.185688ms elapsed_secs=0.012185688
10:19:56 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.052929ms elapsed_secs=0.011052929
10:19:56 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=626.779µs elapsed_secs=0.000626779
10:19:56 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=584.766µs elapsed_secs=0.000584766
10:19:56 [DEBUG] (762) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.471569ms elapsed_secs=0.009471569
10:19:56 [DEBUG] (762) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=295.941µs elapsed_secs=0.000295941
10:19:56 [DEBUG] (762) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.86µs elapsed_secs=8.486e-5
10:19:56 [DEBUG] (785) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.507928ms elapsed_secs=0.012507928
10:19:56 [DEBUG] (785) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.791µs elapsed_secs=8.5791e-5
10:19:56 [DEBUG] (785) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=81.293µs elapsed_secs=8.1293e-5
10:19:56 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=194.511µs elapsed_secs=0.000194511
10:19:56 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=341.805µs elapsed_secs=0.000341805
10:19:56 [DEBUG] (777) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.026174ms elapsed_secs=0.008026174
10:19:56 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.060273ms elapsed_secs=0.008060273
10:19:56 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.396253ms elapsed_secs=0.008396253
10:19:56 [DEBUG] (777) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=183.599µs elapsed_secs=0.000183599
10:19:56 [DEBUG] (777) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.658µs elapsed_secs=0.000107658
10:19:56 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=536.188µs elapsed_secs=0.000536188
10:19:56 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=234.04µs elapsed_secs=0.00023404
10:19:56 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.181µs elapsed_secs=7.0181e-5
10:19:56 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.331µs elapsed_secs=6.1331e-5
10:19:56 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.754707ms elapsed_secs=0.008754707
10:19:56 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=211.807µs elapsed_secs=0.000211807
10:19:56 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=512.168µs elapsed_secs=0.000512168
10:19:56 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.000765ms elapsed_secs=0.010000765
10:19:56 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=222.683µs elapsed_secs=0.000222683
10:19:56 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.952µs elapsed_secs=6.0952e-5
10:19:56 [DEBUG] (762) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.349405ms elapsed_secs=0.007349405
10:19:56 [DEBUG] (762) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=471.45µs elapsed_secs=0.00047145
10:19:56 [DEBUG] (762) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.563µs elapsed_secs=6.6563e-5
10:19:56 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.779738ms elapsed_secs=0.007779738
10:19:56 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=153.892µs elapsed_secs=0.000153892
10:19:56 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.761µs elapsed_secs=5.5761e-5
10:19:56 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.23498ms elapsed_secs=0.00823498
10:19:56 [DEBUG] (777) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.648254ms elapsed_secs=0.008648254
10:19:56 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=583.425µs elapsed_secs=0.000583425
10:19:56 [DEBUG] (777) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=194.183µs elapsed_secs=0.000194183
10:19:56 [DEBUG] (777) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=406.275µs elapsed_secs=0.000406275
10:19:56 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=406.319µs elapsed_secs=0.000406319
10:19:56 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.314589ms elapsed_secs=0.011314589
10:19:56 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=491.712µs elapsed_secs=0.000491712
10:19:56 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.683µs elapsed_secs=8.8683e-5
10:19:56 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.959676ms elapsed_secs=0.012959676
10:19:56 [DEBUG] (786) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.354µs elapsed_secs=3.2354e-5
10:19:56 [DEBUG] (786) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=151.777µs elapsed_secs=0.000151777
10:19:56 [DEBUG] (755) menahel::repository::user_repo: Get user by id with transaction: None
10:19:56 [DEBUG] (789) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.608µs elapsed_secs=4.1608e-5
10:19:56 [DEBUG] (738) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=102.312785ms elapsed_secs=0.102312785
10:19:56 [DEBUG] (790) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.121µs elapsed_secs=8.5121e-5
10:19:56 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.824093ms elapsed_secs=0.007824093
10:19:56 [DEBUG] (790) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=547.695µs elapsed_secs=0.000547695
10:19:56 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=598.053µs elapsed_secs=0.000598053
10:19:56 [DEBUG] (734) menahel::repository::user_repo: Get user by id with transaction: None
10:19:56 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.64µs elapsed_secs=0.00015164
10:19:56 [DEBUG] (762) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.869818ms elapsed_secs=0.007869818
10:19:56 [DEBUG] (737) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=108.391402ms elapsed_secs=0.108391402
10:19:56 [DEBUG] (793) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.618µs elapsed_secs=4.6618e-5
10:19:56 [DEBUG] (794) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=80.01µs elapsed_secs=8.001e-5
10:19:56 [DEBUG] (795) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.003µs elapsed_secs=4.4003e-5
10:19:56 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.747163ms elapsed_secs=0.008747163
10:19:56 [DEBUG] (795) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=333.591µs elapsed_secs=0.000333591
10:19:56 [DEBUG] (733) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "Test User 0", email: "test0@example.com", password_hash: "password0" })
10:19:56 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=438.267µs elapsed_secs=0.000438267
10:19:56 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=183.089µs elapsed_secs=0.000183089
10:19:56 [DEBUG] (789) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.64178ms elapsed_secs=0.01164178
10:19:56 [DEBUG] (789) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=253.193µs elapsed_secs=0.000253193
10:19:56 [DEBUG] (798) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.336µs elapsed_secs=8.5336e-5
10:19:56 [DEBUG] (789) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=141.912µs elapsed_secs=0.000141912
10:19:56 [DEBUG] (789) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=746.306µs elapsed_secs=0.000746306
10:19:56 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.044555ms elapsed_secs=0.011044555
10:19:56 [DEBUG] (777) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.674277ms elapsed_secs=0.010674277
10:19:56 [DEBUG] (789) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=450.611µs elapsed_secs=0.000450611
10:19:56 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.029748ms elapsed_secs=0.012029748
10:19:56 [DEBUG] (777) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=688.076µs elapsed_secs=0.000688076
10:19:56 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=893.736µs elapsed_secs=0.000893736
10:19:56 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=193.783µs elapsed_secs=0.000193783
10:19:56 [DEBUG] (777) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.272µs elapsed_secs=0.000104272
10:19:56 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.46µs elapsed_secs=0.00013646
10:19:56 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.886µs elapsed_secs=8.5886e-5
10:19:56 [DEBUG] (746) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=91.372854ms elapsed_secs=0.091372854
10:19:56 [DEBUG] (799) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.873µs elapsed_secs=8.5873e-5
10:19:56 [DEBUG] (799) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n                SELECT COUNT(*) FROM users\n            \n" rows_affected=0 rows_returned=1 elapsed=227.046µs elapsed_secs=0.000227046
10:19:56 [DEBUG] (744) menahel::repository::user_repo: Get users count: 10
10:19:56 [DEBUG] (794) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.766201ms elapsed_secs=0.010766201
10:19:56 [INFO] Created user: User { id: Some(1), username: "update_user_test_20250606101956", email: "update_user_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (793) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.483152ms elapsed_secs=0.012483152
10:19:56 [DEBUG] (793) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=155.087µs elapsed_secs=0.000155087
10:19:56 [DEBUG] (793) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=88.032µs elapsed_secs=8.8032e-5
10:19:56 [DEBUG] (793) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=546.761µs elapsed_secs=0.000546761
10:19:56 [DEBUG] (800) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.695µs elapsed_secs=6.7695e-5
10:19:56 [DEBUG] (793) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=196.329µs elapsed_secs=0.000196329
10:19:56 [DEBUG] (800) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=360.263µs elapsed_secs=0.000360263
10:19:56 [DEBUG] (760) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "update_user_test_20250606101956", email: "update_user_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" })
10:19:56 [DEBUG] (800) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=202.701µs elapsed_secs=0.000202701
10:19:56 [DEBUG] (798) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.441974ms elapsed_secs=0.014441974
10:19:56 [DEBUG] (798) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=282.35µs elapsed_secs=0.00028235
10:19:56 [DEBUG] (798) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=167.069µs elapsed_secs=0.000167069
10:19:56 [DEBUG] (798) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=711.97µs elapsed_secs=0.00071197
10:19:56 [DEBUG] (798) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.445µs elapsed_secs=0.000123445
10:19:56 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.155885ms elapsed_secs=0.011155885
10:19:56 [DEBUG] (801) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.494µs elapsed_secs=3.0494e-5
10:19:56 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.792334ms elapsed_secs=0.007792334
10:19:56 [DEBUG] (789) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.978881ms elapsed_secs=0.007978881
10:19:56 [DEBUG] (749) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=105.528307ms elapsed_secs=0.105528307
10:19:56 [DEBUG] (777) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.616827ms elapsed_secs=0.008616827
10:19:56 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.547742ms elapsed_secs=0.008547742
10:19:56 [INFO] Updated user: Some(User { id: Some(1), username: "update_user_test_20250606101956_updated", email: "update_user_test_20250606101956@test.com_updated", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" })
10:19:56 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.965943ms elapsed_secs=0.008965943
10:19:56 [DEBUG] (802) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.887µs elapsed_secs=7.0887e-5
10:19:56 [DEBUG] (789) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=490.547µs elapsed_secs=0.000490547
10:19:56 [DEBUG] (803) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=26.513µs elapsed_secs=2.6513e-5
10:19:56 [DEBUG] (794) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=111.745µs elapsed_secs=0.000111745
10:19:56 [DEBUG] (760) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "update_user_test_20250606101956_updated", email: "update_user_test_20250606101956@test.com_updated", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" })
10:19:56 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=576.367µs elapsed_secs=0.000576367
10:19:56 [DEBUG] (804) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.135µs elapsed_secs=4.4135e-5
10:19:56 [DEBUG] (789) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=417.918µs elapsed_secs=0.000417918
10:19:56 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=772.233µs elapsed_secs=0.000772233
10:19:56 [DEBUG] (803) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=371.929µs elapsed_secs=0.000371929
10:19:56 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=174.701µs elapsed_secs=0.000174701
10:19:56 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=194.046µs elapsed_secs=0.000194046
10:19:56 [DEBUG] (747) menahel::repository::user_repo: Get users count with transaction: 10
10:19:56 [DEBUG] (747) menahel::repository::user_repo: Get users with pagenation: offset: 0, limit: 5
10:19:56 [DEBUG] (803) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=145.557µs elapsed_secs=0.000145557
10:19:56 [DEBUG] (747) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(1), username: "Test User 0", email: "test0@example.com", password_hash: "password0" }, User { id: Some(2), username: "Test User 1", email: "test1@example.com", password_hash: "password1" }, User { id: Some(3), username: "Test User 2", email: "test2@example.com", password_hash: "password2" }, User { id: Some(4), username: "Test User 3", email: "test3@example.com", password_hash: "password3" }, User { id: Some(5), username: "Test User 4", email: "test4@example.com", password_hash: "password4" }]
10:19:56 [DEBUG] (805) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.195µs elapsed_secs=4.7195e-5
10:19:56 [DEBUG] (805) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=271.848µs elapsed_secs=0.000271848
10:19:56 [DEBUG] (747) menahel::repository::user_repo: Get users count with transaction: 10
10:19:56 [DEBUG] (747) menahel::repository::user_repo: Get users with pagenation: offset: 5, limit: 5
10:19:56 [DEBUG] (805) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=97.836µs elapsed_secs=9.7836e-5
10:19:56 [DEBUG] (747) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(6), username: "Test User 5", email: "test5@example.com", password_hash: "password5" }, User { id: Some(7), username: "Test User 6", email: "test6@example.com", password_hash: "password6" }, User { id: Some(8), username: "Test User 7", email: "test7@example.com", password_hash: "password7" }, User { id: Some(9), username: "Test User 8", email: "test8@example.com", password_hash: "password8" }, User { id: Some(10), username: "Test User 9", email: "test9@example.com", password_hash: "password9" }]
10:19:56 [DEBUG] (793) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.061426ms elapsed_secs=0.006061426
10:19:56 [DEBUG] (793) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=167.595µs elapsed_secs=0.000167595
10:19:56 [DEBUG] (793) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.273µs elapsed_secs=0.000116273
10:19:56 [DEBUG] (801) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.288551ms elapsed_secs=0.010288551
10:19:56 [INFO] Created user: User { id: Some(1), username: "empty_email_test_20250606101956", email: "empty_email_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (802) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.840712ms elapsed_secs=0.008840712
10:19:56 [INFO] Created user: User { id: Some(1), username: "empty_field_test_20250606101956", email: "empty_field_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (804) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.49102ms elapsed_secs=0.01049102
10:19:56 [INFO] Created user: User { id: Some(1), username: "empty_password_test_20250606101956", email: "empty_password_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (753) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=97.904357ms elapsed_secs=0.097904357
10:19:56 [DEBUG] (798) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.955805ms elapsed_secs=0.008955805
10:19:56 [DEBUG] (798) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=396.564µs elapsed_secs=0.000396564
10:19:56 [DEBUG] (798) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.963µs elapsed_secs=8.7963e-5
10:19:56 [DEBUG] (806) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.27µs elapsed_secs=5.127e-5
10:19:56 [DEBUG] (806) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=177.144µs elapsed_secs=0.000177144
10:19:56 [DEBUG] (751) menahel::repository::user_repo: Get users count with transaction: 10
10:19:56 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.941944ms elapsed_secs=0.005941944
10:19:56 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=286.086µs elapsed_secs=0.000286086
10:19:56 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=356.109µs elapsed_secs=0.000356109
10:19:56 [DEBUG] (789) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.27532ms elapsed_secs=0.00627532
10:19:56 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.602776ms elapsed_secs=0.006602776
10:19:56 [DEBUG] (789) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=398.407µs elapsed_secs=0.000398407
10:19:56 [DEBUG] (807) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=102.866µs elapsed_secs=0.000102866
10:19:56 [DEBUG] (789) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.792µs elapsed_secs=0.000106792
10:19:56 [DEBUG] (793) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.567099ms elapsed_secs=0.007567099
10:19:56 [DEBUG] (793) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=360.58µs elapsed_secs=0.00036058
10:19:56 [DEBUG] (793) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.339µs elapsed_secs=9.8339e-5
10:19:56 [DEBUG] (798) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.852052ms elapsed_secs=0.006852052
10:19:56 [DEBUG] (798) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=170.231µs elapsed_secs=0.000170231
10:19:56 [DEBUG] (798) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.014µs elapsed_secs=8.6014e-5
10:19:56 [DEBUG] (807) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.186692ms elapsed_secs=0.008186692
10:19:56 [INFO] Created user: User { id: Some(1), username: "invalid_email_test_20250606101956", email: "invalid_email_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.033231ms elapsed_secs=0.005033231
10:19:56 [DEBUG] (808) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.989µs elapsed_secs=3.8989e-5
10:19:56 [DEBUG] (789) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.005902ms elapsed_secs=0.005005902
10:19:56 [DEBUG] (789) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=207.68µs elapsed_secs=0.00020768
10:19:56 [DEBUG] (789) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=284.091µs elapsed_secs=0.000284091
10:19:56 [DEBUG] (793) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.859001ms elapsed_secs=0.004859001
10:19:56 [DEBUG] (793) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=403.769µs elapsed_secs=0.000403769
10:19:56 [DEBUG] (793) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=292.862µs elapsed_secs=0.000292862
10:19:56 [DEBUG] (798) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.087844ms elapsed_secs=0.007087844
10:19:56 [DEBUG] (808) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.816297ms elapsed_secs=0.008816297
10:19:56 [INFO] Created user: User { id: Some(1), username: "invalid_password_test_20250606101956", email: "invalid_password_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (798) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=167.642µs elapsed_secs=0.000167642
10:19:56 [DEBUG] (798) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.045µs elapsed_secs=8.2045e-5
10:19:56 [DEBUG] (789) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.620075ms elapsed_secs=0.003620075
10:19:56 [DEBUG] (789) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=210.493µs elapsed_secs=0.000210493
10:19:56 [DEBUG] (789) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.928µs elapsed_secs=7.2928e-5
10:19:56 [DEBUG] (793) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.605851ms elapsed_secs=0.003605851
10:19:56 [DEBUG] (793) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=198.765µs elapsed_secs=0.000198765
10:19:56 [DEBUG] (793) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.287µs elapsed_secs=0.000137287
10:19:56 [DEBUG] (798) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.317374ms elapsed_secs=0.007317374
10:19:56 [DEBUG] (798) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=356.379µs elapsed_secs=0.000356379
10:19:56 [DEBUG] (798) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.826µs elapsed_secs=9.6826e-5
10:19:56 [DEBUG] (789) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.346567ms elapsed_secs=0.003346567
10:19:56 [DEBUG] (809) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.236µs elapsed_secs=7.5236e-5
10:19:56 [DEBUG] (793) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.793783ms elapsed_secs=0.003793783
10:19:56 [DEBUG] (810) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.632µs elapsed_secs=3.4632e-5
10:19:56 [DEBUG] (798) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.716752ms elapsed_secs=0.003716752
10:19:56 [DEBUG] (811) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.946µs elapsed_secs=5.6946e-5
10:19:56 [DEBUG] (809) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=4.929694ms elapsed_secs=0.004929694
10:19:56 [INFO] Created user: User { id: Some(1), username: "long_email_test_20250606101956", email: "long_email_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (810) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=7.834576ms elapsed_secs=0.007834576
10:19:56 [INFO] Created user: User { id: Some(1), username: "long_username_test_20250606101956", email: "long_username_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
10:19:56 [DEBUG] (811) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=5.79597ms elapsed_secs=0.00579597
10:19:56 [INFO] Created user: User { id: Some(1), username: "special_chars_test_20250606101956", email: "special_chars_test_20250606101956@test.com", password_hash: "6c542a6e0245127492a94c0f5e4cd526019d38bb81bb1b4b240c47914fd78fa5" }
