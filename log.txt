09:59:57 [DEBUG] (20) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=54.603931ms elapsed_secs=0.054603931
09:59:57 [DEBUG] (18) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.753035ms elapsed_secs=0.015753035
09:59:57 [DEBUG] (15) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=55.668882ms elapsed_secs=0.055668882
09:59:57 [DEBUG] (21) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=56.09729ms elapsed_secs=0.05609729
09:59:57 [DEBUG] (16) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=55.253191ms elapsed_secs=0.055253191
09:59:57 [DEBUG] (27) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=117.478µs elapsed_secs=0.000117478
09:59:57 [DEBUG] (26) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=318.612µs elapsed_secs=0.000318612
09:59:57 [DEBUG] (29) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=120.057µs elapsed_secs=0.000120057
09:59:57 [DEBUG] (30) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=105.431µs elapsed_secs=0.000105431
09:59:57 [DEBUG] (28) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.28µs elapsed_secs=7.228e-5
09:59:57 [DEBUG] (14) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=20.698952ms elapsed_secs=0.020698952
09:59:57 [DEBUG] (17) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=20.887865ms elapsed_secs=0.020887865
09:59:57 [DEBUG] (25) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=18.987553ms elapsed_secs=0.018987553
09:59:57 [DEBUG] (22) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=20.116543ms elapsed_secs=0.020116543
09:59:57 [DEBUG] (24) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=62.240836ms elapsed_secs=0.062240836
09:59:57 [DEBUG] (31) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=448.735µs elapsed_secs=0.000448735
09:59:57 [DEBUG] (32) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=738.356µs elapsed_secs=0.000738356
09:59:57 [DEBUG] (33) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=338.912µs elapsed_secs=0.000338912
09:59:57 [DEBUG] (19) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=66.215458ms elapsed_secs=0.066215458
09:59:57 [DEBUG] (35) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.184µs elapsed_secs=7.1184e-5
09:59:57 [DEBUG] (34) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=118.043µs elapsed_secs=0.000118043
09:59:57 [DEBUG] (23) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=24.278408ms elapsed_secs=0.024278408
09:59:57 [DEBUG] (36) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=113.577µs elapsed_secs=0.000113577
09:59:57 [DEBUG] (37) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=440.669µs elapsed_secs=0.000440669
09:59:57 [DEBUG] (30) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.553746ms elapsed_secs=0.016553746
09:59:57 [DEBUG] (26) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.951925ms elapsed_secs=0.018951925
09:59:57 [DEBUG] (29) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.583245ms elapsed_secs=0.018583245
09:59:57 [DEBUG] (27) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=19.379462ms elapsed_secs=0.019379462
09:59:57 [DEBUG] (28) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.547666ms elapsed_secs=0.015547666
09:59:57 [DEBUG] (30) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=147.472µs elapsed_secs=0.000147472
09:59:57 [DEBUG] (26) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.706µs elapsed_secs=0.000104706
09:59:57 [DEBUG] (29) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=120.878µs elapsed_secs=0.000120878
09:59:57 [DEBUG] (26) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=107.68µs elapsed_secs=0.00010768
09:59:57 [DEBUG] (32) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.755926ms elapsed_secs=0.014755926
09:59:57 [DEBUG] (30) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=293.345µs elapsed_secs=0.000293345
09:59:57 [DEBUG] (28) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=383.275µs elapsed_secs=0.000383275
09:59:57 [DEBUG] (27) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.422µs elapsed_secs=8.7422e-5
09:59:57 [DEBUG] (29) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=111.641µs elapsed_secs=0.000111641
09:59:57 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=253.635µs elapsed_secs=0.000253635
09:59:57 [DEBUG] (32) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=134.049µs elapsed_secs=0.000134049
09:59:57 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=219.511µs elapsed_secs=0.000219511
09:59:57 [DEBUG] (33) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.919783ms elapsed_secs=0.014919783
09:59:57 [DEBUG] (36) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.293803ms elapsed_secs=0.010293803
09:59:57 [DEBUG] (33) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=101.345µs elapsed_secs=0.000101345
09:59:57 [DEBUG] (28) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=307.949µs elapsed_secs=0.000307949
09:59:57 [DEBUG] (27) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=364.711µs elapsed_secs=0.000364711
09:59:57 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=686.687µs elapsed_secs=0.000686687
09:59:57 [DEBUG] (31) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.172176ms elapsed_secs=0.018172176
09:59:57 [DEBUG] (32) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=123.378µs elapsed_secs=0.000123378
09:59:57 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=404.266µs elapsed_secs=0.000404266
09:59:57 [DEBUG] (34) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.549733ms elapsed_secs=0.014549733
09:59:57 [DEBUG] (35) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.50294ms elapsed_secs=0.01450294
09:59:57 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.186568ms elapsed_secs=0.001186568
09:59:57 [DEBUG] (35) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=99.098µs elapsed_secs=9.9098e-5
09:59:57 [DEBUG] (37) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.102691ms elapsed_secs=0.013102691
09:59:57 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=467.552µs elapsed_secs=0.000467552
09:59:57 [DEBUG] (31) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=447.033µs elapsed_secs=0.000447033
09:59:57 [DEBUG] (36) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=145.21µs elapsed_secs=0.00014521
09:59:57 [DEBUG] (31) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=86.816µs elapsed_secs=8.6816e-5
09:59:57 [DEBUG] (33) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=179.036µs elapsed_secs=0.000179036
09:59:57 [DEBUG] (34) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=400.792µs elapsed_secs=0.000400792
09:59:57 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.65762ms elapsed_secs=0.00165762
09:59:57 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=324.978µs elapsed_secs=0.000324978
09:59:57 [DEBUG] (35) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=481.705µs elapsed_secs=0.000481705
09:59:57 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.519285ms elapsed_secs=0.001519285
09:59:57 [DEBUG] (37) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=169.961µs elapsed_secs=0.000169961
09:59:57 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=364.46µs elapsed_secs=0.00036446
09:59:57 [DEBUG] (36) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=125.852µs elapsed_secs=0.000125852
09:59:57 [DEBUG] (34) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=145.632µs elapsed_secs=0.000145632
09:59:57 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.788µs elapsed_secs=0.000144788
09:59:57 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=806.677µs elapsed_secs=0.000806677
09:59:57 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=794.542µs elapsed_secs=0.000794542
09:59:57 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.778µs elapsed_secs=8.9778e-5
09:59:57 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.159µs elapsed_secs=0.000159159
09:59:57 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.007066ms elapsed_secs=0.001007066
09:59:57 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=276.812µs elapsed_secs=0.000276812
09:59:57 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.458411ms elapsed_secs=0.002458411
09:59:57 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.293µs elapsed_secs=0.000172293
09:59:57 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.632µs elapsed_secs=9.0632e-5
09:59:57 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.493118ms elapsed_secs=0.001493118
09:59:57 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.402µs elapsed_secs=0.000112402
09:59:57 [DEBUG] (37) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=122.998µs elapsed_secs=0.000122998
09:59:57 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=156.789µs elapsed_secs=0.000156789
09:59:57 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=294.398µs elapsed_secs=0.000294398
09:59:57 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=220.416µs elapsed_secs=0.000220416
09:59:57 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=443µs elapsed_secs=0.000443
09:59:57 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.487µs elapsed_secs=7.2487e-5
09:59:57 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.12912ms elapsed_secs=0.00312912
09:59:57 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=141.193µs elapsed_secs=0.000141193
09:59:57 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.113µs elapsed_secs=6.6113e-5
09:59:57 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.163982ms elapsed_secs=0.003163982
09:59:57 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.150217ms elapsed_secs=0.003150217
09:59:57 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=247.572µs elapsed_secs=0.000247572
09:59:57 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=127.273µs elapsed_secs=0.000127273
09:59:57 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.702µs elapsed_secs=7.2702e-5
09:59:57 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.808808ms elapsed_secs=0.002808808
09:59:57 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.868845ms elapsed_secs=0.002868845
09:59:57 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.78451ms elapsed_secs=0.00278451
09:59:57 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.613µs elapsed_secs=6.2613e-5
09:59:57 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=475.603µs elapsed_secs=0.000475603
09:59:57 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=579.74µs elapsed_secs=0.00057974
09:59:57 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.223µs elapsed_secs=0.000123223
09:59:57 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.693449ms elapsed_secs=0.002693449
09:59:57 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.828491ms elapsed_secs=0.002828491
09:59:57 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.99µs elapsed_secs=5.399e-5
09:59:57 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.802777ms elapsed_secs=0.002802777
09:59:57 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.852084ms elapsed_secs=0.002852084
09:59:57 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.908287ms elapsed_secs=0.002908287
09:59:57 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=496.944µs elapsed_secs=0.000496944
09:59:57 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=134.294µs elapsed_secs=0.000134294
09:59:57 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=160.27µs elapsed_secs=0.00016027
09:59:57 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=116.933µs elapsed_secs=0.000116933
09:59:57 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=149.414µs elapsed_secs=0.000149414
09:59:57 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.695611ms elapsed_secs=0.002695611
09:59:57 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.051µs elapsed_secs=6.5051e-5
09:59:57 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=590.824µs elapsed_secs=0.000590824
09:59:57 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=416.402µs elapsed_secs=0.000416402
09:59:57 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=157.162µs elapsed_secs=0.000157162
09:59:57 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.775µs elapsed_secs=5.4775e-5
09:59:57 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.226µs elapsed_secs=0.000101226
09:59:57 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=304.112µs elapsed_secs=0.000304112
09:59:57 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.387µs elapsed_secs=8.2387e-5
09:59:57 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.70093ms elapsed_secs=0.00270093
09:59:57 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.04µs elapsed_secs=6.604e-5
09:59:57 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=125.744µs elapsed_secs=0.000125744
09:59:57 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.667µs elapsed_secs=6.0667e-5
09:59:57 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.443905ms elapsed_secs=0.003443905
09:59:57 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.426092ms elapsed_secs=0.003426092
09:59:57 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=131.148µs elapsed_secs=0.000131148
09:59:57 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=111.932µs elapsed_secs=0.000111932
09:59:57 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.232µs elapsed_secs=5.0232e-5
09:59:57 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.2µs elapsed_secs=5.82e-5
09:59:57 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.296113ms elapsed_secs=0.003296113
09:59:57 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.290829ms elapsed_secs=0.003290829
09:59:57 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=141.823µs elapsed_secs=0.000141823
09:59:57 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=167.468µs elapsed_secs=0.000167468
09:59:57 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.985µs elapsed_secs=7.4985e-5
09:59:57 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.608µs elapsed_secs=4.1608e-5
09:59:57 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.757401ms elapsed_secs=0.002757401
09:59:57 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.770892ms elapsed_secs=0.002770892
09:59:57 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=98.974µs elapsed_secs=9.8974e-5
09:59:57 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=101.275µs elapsed_secs=0.000101275
09:59:57 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.072µs elapsed_secs=4.7072e-5
09:59:57 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.331µs elapsed_secs=5.8331e-5
09:59:57 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.809943ms elapsed_secs=0.002809943
09:59:57 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.982451ms elapsed_secs=0.002982451
09:59:57 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.959869ms elapsed_secs=0.002959869
09:59:57 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.801727ms elapsed_secs=0.002801727
09:59:57 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.873823ms elapsed_secs=0.002873823
09:59:57 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.980602ms elapsed_secs=0.002980602
09:59:57 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=548.825µs elapsed_secs=0.000548825
09:59:57 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=848.486µs elapsed_secs=0.000848486
09:59:57 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=775.407µs elapsed_secs=0.000775407
09:59:57 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=520.495µs elapsed_secs=0.000520495
09:59:57 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=738.29µs elapsed_secs=0.00073829
09:59:57 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=713.929µs elapsed_secs=0.000713929
09:59:57 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.844µs elapsed_secs=5.6844e-5
09:59:57 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.844µs elapsed_secs=4.1844e-5
09:59:57 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.644µs elapsed_secs=4.6644e-5
09:59:57 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=40.455µs elapsed_secs=4.0455e-5
09:59:57 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.095674ms elapsed_secs=0.002095674
09:59:57 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.254127ms elapsed_secs=0.002254127
09:59:57 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.279786ms elapsed_secs=0.002279786
09:59:57 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.643µs elapsed_secs=5.0643e-5
09:59:57 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.377µs elapsed_secs=4.2377e-5
09:59:57 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.322464ms elapsed_secs=0.002322464
09:59:57 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.327978ms elapsed_secs=0.002327978
09:59:57 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.433753ms elapsed_secs=0.002433753
09:59:57 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=319.582µs elapsed_secs=0.000319582
09:59:57 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=349.971µs elapsed_secs=0.000349971
09:59:57 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=80.854µs elapsed_secs=8.0854e-5
09:59:57 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=93.894µs elapsed_secs=9.3894e-5
09:59:57 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=82.711µs elapsed_secs=8.2711e-5
09:59:57 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=159.722µs elapsed_secs=0.000159722
09:59:57 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.719µs elapsed_secs=8.7719e-5
09:59:57 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.03µs elapsed_secs=5.703e-5
09:59:57 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.946µs elapsed_secs=8.1946e-5
09:59:57 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.658µs elapsed_secs=5.4658e-5
09:59:57 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.093µs elapsed_secs=5.8093e-5
09:59:57 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=35.072µs elapsed_secs=3.5072e-5
09:59:57 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.262402ms elapsed_secs=0.002262402
09:59:57 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.420094ms elapsed_secs=0.002420094
09:59:57 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.412095ms elapsed_secs=0.002412095
09:59:57 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=126.45µs elapsed_secs=0.00012645
09:59:57 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.412429ms elapsed_secs=0.002412429
09:59:57 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=163.988µs elapsed_secs=0.000163988
09:59:57 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=107.964µs elapsed_secs=0.000107964
09:59:57 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=326.31µs elapsed_secs=0.00032631
09:59:57 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=405.829µs elapsed_secs=0.000405829
09:59:57 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.148728ms elapsed_secs=0.002148728
09:59:57 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.162195ms elapsed_secs=0.002162195
09:59:57 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.354µs elapsed_secs=0.000129354
09:59:57 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.995µs elapsed_secs=4.5995e-5
09:59:57 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=171.711µs elapsed_secs=0.000171711
09:59:57 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.646µs elapsed_secs=4.2646e-5
09:59:57 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.815µs elapsed_secs=5.4815e-5
09:59:57 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=87.004µs elapsed_secs=8.7004e-5
09:59:57 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.354603ms elapsed_secs=0.002354603
09:59:57 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.292099ms elapsed_secs=0.002292099
09:59:57 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.295351ms elapsed_secs=0.002295351
09:59:57 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.204µs elapsed_secs=5.0204e-5
09:59:57 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=325.182µs elapsed_secs=0.000325182
09:59:57 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=373.84µs elapsed_secs=0.00037384
09:59:57 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=270.312µs elapsed_secs=0.000270312
09:59:57 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=44.783µs elapsed_secs=4.4783e-5
09:59:57 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.189µs elapsed_secs=7.7189e-5
09:59:57 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.787992ms elapsed_secs=0.002787992
09:59:57 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.584µs elapsed_secs=0.000116584
09:59:57 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.795111ms elapsed_secs=0.002795111
09:59:57 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=151.728µs elapsed_secs=0.000151728
09:59:57 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.916733ms elapsed_secs=0.002916733
09:59:57 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.136µs elapsed_secs=7.9136e-5
09:59:57 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=275.737µs elapsed_secs=0.000275737
09:59:57 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.616µs elapsed_secs=5.1616e-5
09:59:57 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.300287ms elapsed_secs=0.002300287
09:59:57 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.307636ms elapsed_secs=0.002307636
09:59:57 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.267955ms elapsed_secs=0.002267955
09:59:57 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=435.494µs elapsed_secs=0.000435494
09:59:57 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=318.721µs elapsed_secs=0.000318721
09:59:57 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=474.862µs elapsed_secs=0.000474862
09:59:57 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.238147ms elapsed_secs=0.002238147
09:59:57 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.239377ms elapsed_secs=0.002239377
09:59:57 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.201023ms elapsed_secs=0.002201023
09:59:57 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.368µs elapsed_secs=7.2368e-5
09:59:57 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=34.454µs elapsed_secs=3.4454e-5
09:59:57 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.302µs elapsed_secs=5.2302e-5
09:59:57 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=97.336µs elapsed_secs=9.7336e-5
09:59:57 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=270.068µs elapsed_secs=0.000270068
09:59:57 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.666719ms elapsed_secs=0.002666719
09:59:57 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.740518ms elapsed_secs=0.002740518
09:59:57 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.727347ms elapsed_secs=0.002727347
09:59:57 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.051µs elapsed_secs=8.1051e-5
09:59:57 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.953µs elapsed_secs=0.000135953
09:59:57 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.209605ms elapsed_secs=0.003209605
09:59:57 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.269132ms elapsed_secs=0.003269132
09:59:57 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.220932ms elapsed_secs=0.002220932
09:59:57 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.283393ms elapsed_secs=0.002283393
09:59:57 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.286433ms elapsed_secs=0.002286433
09:59:57 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.239221ms elapsed_secs=0.002239221
09:59:57 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.303762ms elapsed_secs=0.002303762
09:59:57 [DEBUG] (26) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.868837ms elapsed_secs=0.048868837
09:59:57 [DEBUG] (6) menahel::handlers::project: No target specified. using default target: all
09:59:57 [DEBUG] (6) menahel::handlers::project: Getting all projects
09:59:57 [DEBUG] (26) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=1 rows_returned=10 elapsed=117.316µs elapsed_secs=0.000117316
09:59:57 [DEBUG] (6) menahel::repository::project_repo: Got all projects: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }, Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }, Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }]
09:59:57 [DEBUG] (6) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }, Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }, Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }], count: 10, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "08857350-0b77-43df-87d1-3732a04ef947", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (30) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.439695ms elapsed_secs=0.048439695
09:59:57 [DEBUG] (30) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=136.968µs elapsed_secs=0.000136968
09:59:57 [ERROR] Error: InternalServerError("[ProjectCreateFailed] Failed to create project due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: projects.name)")
09:59:57 [DEBUG] (29) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.900938ms elapsed_secs=0.048900938
09:59:57 [DEBUG] (27) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.985837ms elapsed_secs=0.048985837
09:59:57 [DEBUG] (31) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=48.778724ms elapsed_secs=0.048778724
09:59:57 [DEBUG] (28) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=47.352459ms elapsed_secs=0.047352459
09:59:57 [DEBUG] (29) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=93.388µs elapsed_secs=9.3388e-5
09:59:57 [DEBUG] (5) actix_web::types::json: Failed to deserialize Json from payload. Request path: /projects
09:59:57 [DEBUG] (9) menahel::repository::project_repo: Got project by id: None
09:59:57 [ERROR] Error: BadRequest("[ProjectHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
09:59:57 [ERROR] Error: NotFound("[ProjectGetByIdNotFound] Project ID not found: (ID = 100)")
09:59:57 [DEBUG] (32) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=47.756587ms elapsed_secs=0.047756587
09:59:57 [ERROR] Error: BadRequest("[ProjectNameEmpty] Project name cannot be empty: (Name = )")
09:59:57 [DEBUG] (32) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=165.759µs elapsed_secs=0.000165759
09:59:57 [DEBUG] (7) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(0), name: "TestProject0" })
09:59:57 [DEBUG] (7) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "b1c0bc54-063e-4a66-83cd-3cde0410e4ed", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (27) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=4.929378ms elapsed_secs=0.004929378
09:59:57 [INFO] Created project: Project { id: Some(10), name: "TestProject10" }
09:59:57 [DEBUG] (39) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.939734ms elapsed_secs=0.009939734
09:59:57 [DEBUG] (34) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=51.395616ms elapsed_secs=0.051395616
09:59:57 [DEBUG] (36) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=51.166125ms elapsed_secs=0.051166125
09:59:57 [DEBUG] (27) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=155.191µs elapsed_secs=0.000155191
09:59:57 [DEBUG] (13) menahel::handlers::project: No target specified. using default target: all
09:59:57 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: None, page_size: Some(10))")
09:59:57 [DEBUG] (33) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=51.510681ms elapsed_secs=0.051510681
09:59:57 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsNoIdSpecified] No id specified: ()")
09:59:57 [DEBUG] (2) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(10), name: "TestProject10" })
09:59:57 [DEBUG] (2) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(10), name: "TestProject10" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "c39b5863-31da-48e0-bcfe-e17aa9294198", api_version: "0.1.0" }) }
09:59:57 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsNoNameSpecified] No name specified: ()")
09:59:57 [DEBUG] (50) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.406µs elapsed_secs=6.0406e-5
09:59:57 [DEBUG] (37) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.340195ms elapsed_secs=0.052340195
09:59:57 [DEBUG] (41) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.357225ms elapsed_secs=0.008357225
09:59:57 [DEBUG] (35) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=51.484551ms elapsed_secs=0.051484551
09:59:57 [DEBUG] (37) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=161.835µs elapsed_secs=0.000161835
09:59:57 [DEBUG] (10) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(0), name: "TestProject0" })
09:59:57 [DEBUG] (10) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "3a0b5e99-df11-4724-9e19-71b774ac1877", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (59) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=107.112µs elapsed_secs=0.000107112
09:59:57 [DEBUG] (47) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.85954ms elapsed_secs=0.01085954
09:59:57 [DEBUG] (35) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=109.359µs elapsed_secs=0.000109359
09:59:57 [DEBUG] (45) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.65692ms elapsed_secs=0.01165692
09:59:57 [DEBUG] (12) menahel::repository::project_repo: Got project by name: None
09:59:57 [ERROR] Error: NotFound("[ProjectGetByNameNotFound] Project name not found: (Name = NotExists)")
09:59:57 [DEBUG] (46) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.438227ms elapsed_secs=0.015438227
09:59:57 [DEBUG] (65) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.6µs elapsed_secs=4.86e-5
09:59:57 [DEBUG] (69) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=137.078µs elapsed_secs=0.000137078
09:59:57 [DEBUG] (67) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=93.231µs elapsed_secs=9.3231e-5
09:59:57 [DEBUG] (49) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=17.004756ms elapsed_secs=0.017004756
09:59:57 [DEBUG] (71) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=89.26µs elapsed_secs=8.926e-5
09:59:57 [DEBUG] (52) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.643642ms elapsed_secs=0.013643642
09:59:57 [DEBUG] (72) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=98.347µs elapsed_secs=9.8347e-5
09:59:57 [DEBUG] (50) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.565321ms elapsed_secs=0.016565321
09:59:57 [DEBUG] (60) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.4125ms elapsed_secs=0.0144125
09:59:57 [DEBUG] (50) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=140.97µs elapsed_secs=0.00014097
09:59:57 [DEBUG] (50) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=87.237µs elapsed_secs=8.7237e-5
09:59:57 [DEBUG] (73) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=134.443µs elapsed_secs=0.000134443
09:59:57 [DEBUG] (65) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.250503ms elapsed_secs=0.011250503
09:59:57 [DEBUG] (50) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=354.845µs elapsed_secs=0.000354845
09:59:57 [DEBUG] (66) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.800811ms elapsed_secs=0.011800811
09:59:57 [DEBUG] (64) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.755106ms elapsed_secs=0.011755106
09:59:57 [DEBUG] (63) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=16.22953ms elapsed_secs=0.01622953
09:59:57 [DEBUG] (70) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.687825ms elapsed_secs=0.010687825
09:59:57 [DEBUG] (50) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.894µs elapsed_secs=9.3894e-5
09:59:57 [DEBUG] (65) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=266.435µs elapsed_secs=0.000266435
09:59:57 [DEBUG] (67) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.175815ms elapsed_secs=0.011175815
09:59:57 [DEBUG] (65) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=73.641µs elapsed_secs=7.3641e-5
09:59:57 [DEBUG] (77) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.79µs elapsed_secs=3.579e-5
09:59:57 [DEBUG] (67) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.205µs elapsed_secs=6.6205e-5
09:59:57 [DEBUG] (59) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.78935ms elapsed_secs=0.01778935
09:59:57 [DEBUG] (75) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=23.622µs elapsed_secs=2.3622e-5
09:59:57 [DEBUG] (76) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.641µs elapsed_secs=4.2641e-5
09:59:57 [DEBUG] (74) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.869µs elapsed_secs=8.5869e-5
09:59:57 [DEBUG] (67) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=51.445µs elapsed_secs=5.1445e-5
09:59:57 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=592.675µs elapsed_secs=0.000592675
09:59:57 [DEBUG] (69) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.496492ms elapsed_secs=0.013496492
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=772.04µs elapsed_secs=0.00077204
09:59:57 [DEBUG] (69) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=219.16µs elapsed_secs=0.00021916
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=121.714µs elapsed_secs=0.000121714
09:59:57 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=576.588µs elapsed_secs=0.000576588
09:59:57 [DEBUG] (69) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=232.903µs elapsed_secs=0.000232903
09:59:57 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.318389ms elapsed_secs=0.001318389
09:59:57 [DEBUG] (59) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.054802ms elapsed_secs=0.001054802
09:59:57 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.459µs elapsed_secs=7.4459e-5
09:59:57 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=751.786µs elapsed_secs=0.000751786
09:59:57 [DEBUG] (59) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.132µs elapsed_secs=4.2132e-5
09:59:57 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.127µs elapsed_secs=4.5127e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.208382ms elapsed_secs=0.010208382
09:59:57 [DEBUG] (71) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.364014ms elapsed_secs=0.012364014
09:59:57 [DEBUG] (72) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.744µs elapsed_secs=7.2744e-5
09:59:57 [DEBUG] (71) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=58.348µs elapsed_secs=5.8348e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=48.73µs elapsed_secs=4.873e-5
09:59:57 [DEBUG] (71) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=66.16µs elapsed_secs=6.616e-5
09:59:57 [DEBUG] (50) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.560752ms elapsed_secs=0.002560752
09:59:57 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=750.031µs elapsed_secs=0.000750031
09:59:57 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=995.6µs elapsed_secs=0.0009956
09:59:57 [DEBUG] (50) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=264.634µs elapsed_secs=0.000264634
09:59:57 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.746µs elapsed_secs=4.8746e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.432µs elapsed_secs=7.0432e-5
09:59:57 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.706103ms elapsed_secs=0.002706103
09:59:57 [DEBUG] (73) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.973198ms elapsed_secs=0.007973198
09:59:57 [DEBUG] (50) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.148µs elapsed_secs=0.000120148
09:59:57 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=333.667µs elapsed_secs=0.000333667
09:59:57 [DEBUG] (73) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=149.679µs elapsed_secs=0.000149679
09:59:57 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.805µs elapsed_secs=0.000204805
09:59:57 [DEBUG] (73) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=182.347µs elapsed_secs=0.000182347
09:59:57 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.751401ms elapsed_secs=0.002751401
09:59:57 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=301.188µs elapsed_secs=0.000301188
09:59:57 [DEBUG] (75) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.830327ms elapsed_secs=0.008830327
09:59:57 [DEBUG] (76) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.733107ms elapsed_secs=0.008733107
09:59:57 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=161.613µs elapsed_secs=0.000161613
09:59:57 [DEBUG] (76) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=80.052µs elapsed_secs=8.0052e-5
09:59:57 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=383.145µs elapsed_secs=0.000383145
09:59:57 [DEBUG] (75) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=169.479µs elapsed_secs=0.000169479
09:59:57 [DEBUG] (76) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=52.52µs elapsed_secs=5.252e-5
09:59:57 [DEBUG] (77) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.576295ms elapsed_secs=0.010576295
09:59:57 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.826µs elapsed_secs=5.0826e-5
09:59:57 [DEBUG] (75) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=83µs elapsed_secs=8.3e-5
09:59:57 [DEBUG] (77) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=302.48µs elapsed_secs=0.00030248
09:59:57 [DEBUG] (74) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.026065ms elapsed_secs=0.010026065
09:59:57 [DEBUG] (59) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.738212ms elapsed_secs=0.003738212
09:59:57 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.318552ms elapsed_secs=0.004318552
09:59:57 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=497.181µs elapsed_secs=0.000497181
09:59:57 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=548.229µs elapsed_secs=0.000548229
09:59:57 [DEBUG] (74) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=327.537µs elapsed_secs=0.000327537
09:59:57 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=391.622µs elapsed_secs=0.000391622
09:59:57 [DEBUG] (77) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=183.489µs elapsed_secs=0.000183489
09:59:57 [DEBUG] (74) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=147.519µs elapsed_secs=0.000147519
09:59:57 [DEBUG] (59) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=737.797µs elapsed_secs=0.000737797
09:59:57 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=593.059µs elapsed_secs=0.000593059
09:59:57 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=205.066µs elapsed_secs=0.000205066
09:59:57 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=142.374µs elapsed_secs=0.000142374
09:59:57 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=482.978µs elapsed_secs=0.000482978
09:59:57 [DEBUG] (59) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=503.174µs elapsed_secs=0.000503174
09:59:57 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.623µs elapsed_secs=8.8623e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.816261ms elapsed_secs=0.003816261
09:59:57 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=526.838µs elapsed_secs=0.000526838
09:59:57 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.228994ms elapsed_secs=0.004228994
09:59:57 [DEBUG] (50) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.337294ms elapsed_secs=0.004337294
09:59:57 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=143.135µs elapsed_secs=0.000143135
09:59:57 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.823µs elapsed_secs=0.000103823
09:59:57 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=129.017µs elapsed_secs=0.000129017
09:59:57 [DEBUG] (50) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=315.734µs elapsed_secs=0.000315734
09:59:57 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=372.629µs elapsed_secs=0.000372629
09:59:57 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.090457ms elapsed_secs=0.003090457
09:59:57 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.83µs elapsed_secs=7.683e-5
09:59:57 [DEBUG] (50) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.263µs elapsed_secs=4.8263e-5
09:59:57 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=233.363µs elapsed_secs=0.000233363
09:59:57 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.477µs elapsed_secs=5.2477e-5
09:59:57 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.122277ms elapsed_secs=0.003122277
09:59:57 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=102.95µs elapsed_secs=0.00010295
09:59:57 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.008µs elapsed_secs=5.0008e-5
09:59:57 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.401895ms elapsed_secs=0.003401895
09:59:57 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.871152ms elapsed_secs=0.002871152
09:59:57 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.841506ms elapsed_secs=0.002841506
09:59:57 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=240.269µs elapsed_secs=0.000240269
09:59:57 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=110.624µs elapsed_secs=0.000110624
09:59:57 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=111.906µs elapsed_secs=0.000111906
09:59:57 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.252µs elapsed_secs=4.9252e-5
09:59:57 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=38.26µs elapsed_secs=3.826e-5
09:59:57 [DEBUG] (59) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.538099ms elapsed_secs=0.002538099
09:59:57 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.520414ms elapsed_secs=0.002520414
09:59:57 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.623212ms elapsed_secs=0.002623212
09:59:57 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.274µs elapsed_secs=6.0274e-5
09:59:57 [DEBUG] (59) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=126.485µs elapsed_secs=0.000126485
09:59:57 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=148.911µs elapsed_secs=0.000148911
09:59:57 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=163.66µs elapsed_secs=0.00016366
09:59:57 [DEBUG] (59) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.752µs elapsed_secs=0.000118752
09:59:57 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.54µs elapsed_secs=5.254e-5
09:59:57 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=43.821µs elapsed_secs=4.3821e-5
09:59:57 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.221949ms elapsed_secs=0.003221949
09:59:57 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.245514ms elapsed_secs=0.003245514
09:59:57 [DEBUG] (50) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.254554ms elapsed_secs=0.003254554
09:59:57 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.275817ms elapsed_secs=0.003275817
09:59:57 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=432.113µs elapsed_secs=0.000432113
09:59:57 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=665.295µs elapsed_secs=0.000665295
09:59:57 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.327µs elapsed_secs=7.4327e-5
09:59:57 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.325838ms elapsed_secs=0.003325838
09:59:57 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=178.213µs elapsed_secs=0.000178213
09:59:57 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=630.1µs elapsed_secs=0.0006301
09:59:57 [DEBUG] (50) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=714.228µs elapsed_secs=0.000714228
09:59:57 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=148.343µs elapsed_secs=0.000148343
09:59:57 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.468996ms elapsed_secs=0.002468996
09:59:57 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=239.397µs elapsed_secs=0.000239397
09:59:57 [DEBUG] (50) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=226.716µs elapsed_secs=0.000226716
09:59:57 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=336.947µs elapsed_secs=0.000336947
09:59:57 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=270.833µs elapsed_secs=0.000270833
09:59:57 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.967µs elapsed_secs=0.000170967
09:59:57 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.252379ms elapsed_secs=0.003252379
09:59:57 [DEBUG] (59) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.687207ms elapsed_secs=0.002687207
09:59:57 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.65787ms elapsed_secs=0.00365787
09:59:57 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.397315ms elapsed_secs=0.003397315
09:59:57 [DEBUG] (59) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=505.83µs elapsed_secs=0.00050583
09:59:57 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=547.374µs elapsed_secs=0.000547374
09:59:57 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=403.062µs elapsed_secs=0.000403062
09:59:57 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=465.798µs elapsed_secs=0.000465798
09:59:57 [DEBUG] (59) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.056µs elapsed_secs=6.9056e-5
09:59:57 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.086µs elapsed_secs=7.1086e-5
09:59:57 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.965µs elapsed_secs=5.1965e-5
09:59:57 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.00987ms elapsed_secs=0.00400987
09:59:57 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.098302ms elapsed_secs=0.004098302
09:59:57 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.953µs elapsed_secs=5.5953e-5
09:59:57 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.074968ms elapsed_secs=0.003074968
09:59:57 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=483.782µs elapsed_secs=0.000483782
09:59:57 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=458.93µs elapsed_secs=0.00045893
09:59:57 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=226.074µs elapsed_secs=0.000226074
09:59:57 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=276.679µs elapsed_secs=0.000276679
09:59:57 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=411.536µs elapsed_secs=0.000411536
09:59:57 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.885917ms elapsed_secs=0.002885917
09:59:57 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.85841ms elapsed_secs=0.00285841
09:59:57 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.296µs elapsed_secs=9.5296e-5
09:59:57 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.848958ms elapsed_secs=0.002848958
09:59:57 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=120.574µs elapsed_secs=0.000120574
09:59:57 [DEBUG] (50) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.051479ms elapsed_secs=0.004051479
09:59:57 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.379µs elapsed_secs=9.1379e-5
09:59:57 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=314.89µs elapsed_secs=0.00031489
09:59:57 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.309845ms elapsed_secs=0.003309845
09:59:57 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=509.18µs elapsed_secs=0.00050918
09:59:57 [DEBUG] (50) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=167.193µs elapsed_secs=0.000167193
09:59:57 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.257µs elapsed_secs=4.7257e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.032µs elapsed_secs=0.000101032
09:59:57 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=161.439µs elapsed_secs=0.000161439
09:59:57 [DEBUG] (50) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.068µs elapsed_secs=5.4068e-5
09:59:57 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.977µs elapsed_secs=4.7977e-5
09:59:57 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.618568ms elapsed_secs=0.002618568
09:59:57 [DEBUG] (59) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.922934ms elapsed_secs=0.002922934
09:59:57 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.148169ms elapsed_secs=0.003148169
09:59:57 [DEBUG] (59) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=131.428µs elapsed_secs=0.000131428
09:59:57 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=103.703µs elapsed_secs=0.000103703
09:59:57 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=154.598µs elapsed_secs=0.000154598
09:59:57 [DEBUG] (59) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.249µs elapsed_secs=5.1249e-5
09:59:57 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.161µs elapsed_secs=7.6161e-5
09:59:57 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.398µs elapsed_secs=5.0398e-5
09:59:57 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.383515ms elapsed_secs=0.003383515
09:59:57 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=200.594µs elapsed_secs=0.000200594
09:59:57 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.956735ms elapsed_secs=0.002956735
09:59:57 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.796988ms elapsed_secs=0.002796988
09:59:57 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.432µs elapsed_secs=6.0432e-5
09:59:57 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.090186ms elapsed_secs=0.003090186
09:59:57 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=341.145µs elapsed_secs=0.000341145
09:59:57 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=432.154µs elapsed_secs=0.000432154
09:59:57 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.452µs elapsed_secs=5.7452e-5
09:59:57 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=250.945µs elapsed_secs=0.000250945
09:59:57 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.116387ms elapsed_secs=0.002116387
09:59:57 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.768827ms elapsed_secs=0.002768827
09:59:57 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.679223ms elapsed_secs=0.002679223
09:59:57 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.744µs elapsed_secs=4.9744e-5
09:59:57 [DEBUG] (50) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.789166ms elapsed_secs=0.002789166
09:59:57 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.853577ms elapsed_secs=0.002853577
09:59:57 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.252µs elapsed_secs=7.5252e-5
09:59:57 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=292.694µs elapsed_secs=0.000292694
09:59:57 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=150.716µs elapsed_secs=0.000150716
09:59:57 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=232.054µs elapsed_secs=0.000232054
09:59:57 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.667µs elapsed_secs=6.4667e-5
09:59:57 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.558µs elapsed_secs=9.4558e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.662µs elapsed_secs=7.3662e-5
09:59:57 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.273186ms elapsed_secs=0.003273186
09:59:57 [DEBUG] (59) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.244763ms elapsed_secs=0.003244763
09:59:57 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.128843ms elapsed_secs=0.003128843
09:59:57 [DEBUG] (75) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=304.909µs elapsed_secs=0.000304909
09:59:57 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.364999ms elapsed_secs=0.003364999
09:59:57 [DEBUG] (75) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.636µs elapsed_secs=0.000126636
09:59:57 [DEBUG] (76) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=239.649µs elapsed_secs=0.000239649
09:59:57 [DEBUG] (76) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.017µs elapsed_secs=7.7017e-5
09:59:57 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.970266ms elapsed_secs=0.002970266
09:59:57 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.142325ms elapsed_secs=0.003142325
09:59:57 [DEBUG] (77) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=176.907µs elapsed_secs=0.000176907
09:59:57 [DEBUG] (77) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.819µs elapsed_secs=6.0819e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.257856ms elapsed_secs=0.003257856
09:59:57 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.60509ms elapsed_secs=0.00360509
09:59:57 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.144274ms elapsed_secs=0.003144274
09:59:57 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.440908ms elapsed_secs=0.003440908
09:59:57 [DEBUG] (74) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=121.258µs elapsed_secs=0.000121258
09:59:57 [DEBUG] (74) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.381µs elapsed_secs=6.1381e-5
09:59:57 [DEBUG] (75) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.771348ms elapsed_secs=0.002771348
09:59:57 [DEBUG] (76) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.229689ms elapsed_secs=0.003229689
09:59:57 [DEBUG] (77) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.959486ms elapsed_secs=0.002959486
09:59:57 [DEBUG] (74) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.271785ms elapsed_secs=0.003271785
09:59:57 [DEBUG] (65) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=62.036401ms elapsed_secs=0.062036401
09:59:57 [DEBUG] (50) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=63.292265ms elapsed_secs=0.063292265
09:59:57 [ERROR] Error: BadRequest("[ProjectHandlerPathAndBodyIdMismatch] Path and body id mismatch: (path_id: 0, body_id: Some(1))")
09:59:57 [DEBUG] (38) menahel::handlers::project: No target specified. using default target: all
09:59:57 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: Some(1), page_size: Some(1000))")
09:59:57 [DEBUG] (59) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=62.070996ms elapsed_secs=0.062070996
09:59:57 [DEBUG] (67) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=62.152237ms elapsed_secs=0.062152237
09:59:57 [DEBUG] (40) menahel::handlers::project: No target specified. using default target: all
09:59:57 [DEBUG] (40) menahel::handlers::project: Getting projects with pagenation: page: Some(1), page_size: Some(4)
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=36.718µs elapsed_secs=3.6718e-5
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Got projects count: 10
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Get users with pagenation: offset: 0, limit: 4
09:59:57 [DEBUG] (69) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=60.298897ms elapsed_secs=0.060298897
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=148.693µs elapsed_secs=0.000148693
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }]
09:59:57 [DEBUG] (40) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }], count: 4, rc: 0, message: "OK", pagenation: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "4c6cada1-0efd-469f-83fe-811d122cf4e7", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (40) menahel::handlers::project: No target specified. using default target: all
09:59:57 [DEBUG] (40) menahel::handlers::project: Getting projects with pagenation: page: Some(2), page_size: Some(4)
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=433.853µs elapsed_secs=0.000433853
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Got projects count: 10
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Get users with pagenation: offset: 4, limit: 4
09:59:57 [DEBUG] (69) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=359.723µs elapsed_secs=0.000359723
09:59:57 [ERROR] Error: InternalServerError("[ProjectUpdateFailed] Failed to update project due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: projects.name)")
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=144.118µs elapsed_secs=0.000144118
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }]
09:59:57 [DEBUG] (40) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }], count: 4, rc: 0, message: "OK", pagenation: Some(Pagination { current_page: 2, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "0885d443-562c-43ab-b79e-a3f3188c98b3", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (71) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=61.621225ms elapsed_secs=0.061621225
09:59:57 [DEBUG] (40) menahel::handlers::project: No target specified. using default target: all
09:59:57 [DEBUG] (73) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=61.31239ms elapsed_secs=0.06131239
09:59:57 [DEBUG] (40) menahel::handlers::project: Getting projects with pagenation: page: Some(3), page_size: Some(4)
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=20.097µs elapsed_secs=2.0097e-5
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Got projects count: 10
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Get users with pagenation: offset: 8, limit: 4
09:59:57 [DEBUG] (59) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=2 elapsed=42.596µs elapsed_secs=4.2596e-5
09:59:57 [DEBUG] (72) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=63.406948ms elapsed_secs=0.063406948
09:59:57 [DEBUG] (40) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }]
09:59:57 [DEBUG] (75) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=60.615962ms elapsed_secs=0.060615962
09:59:57 [DEBUG] (73) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=375.409µs elapsed_secs=0.000375409
09:59:57 [ERROR] Error: InternalServerError("[UserCreateFailed] Failed to create user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
09:59:57 [DEBUG] (71) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=176.707µs elapsed_secs=0.000176707
09:59:57 [DEBUG] (67) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=4.141542ms elapsed_secs=0.004141542
09:59:57 [DEBUG] (40) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }], count: 2, rc: 0, message: "OK", pagenation: Some(Pagination { current_page: 3, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "d9740b15-9164-480a-a63e-d2297e622aa9", api_version: "0.1.0" }) }
09:59:57 [INFO] Updated project: None
09:59:57 [ERROR] Error: BadRequest("[UserEmailInvalid] Invalid email address: (Email = test11example.com)")
09:59:57 [ERROR] Error: NotFound("[ProjectUpdateFailed] Failed to update project due to database operation failure: (ID = Some(100))")
09:59:57 [INFO] Updated project: Some(Project { id: Some(0), name: "TestProject11" })
09:59:57 [ERROR] Error: BadRequest("[ProjectNameTooLong] Project name cannot be longer than 128 characters: (Name = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)")
09:59:57 [DEBUG] (76) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=61.12704ms elapsed_secs=0.06112704
09:59:57 [DEBUG] (67) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=293.747µs elapsed_secs=0.000293747
09:59:57 [DEBUG] (81) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.512164ms elapsed_secs=0.008512164
09:59:57 [DEBUG] (42) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(0), name: "TestProject11" })
09:59:57 [DEBUG] (42) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject11" }], count: 1, rc: 0, message: "OK", pagenation: None, metadata: Some(ResponseMetadata { request_id: "7aab5890-2497-4df0-9135-f4b9a73d6c77", api_version: "0.1.0" }) }
09:59:57 [ERROR] Error: BadRequest("[UserNameEmpty] Username cannot be empty: (Name = )")
09:59:57 [DEBUG] (80) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.250333ms elapsed_secs=0.010250333
09:59:57 [DEBUG] (97) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.948µs elapsed_secs=8.2948e-5
09:59:57 [DEBUG] (99) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.096µs elapsed_secs=6.3096e-5
09:59:57 [DEBUG] (77) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=63.804894ms elapsed_secs=0.063804894
09:59:57 [DEBUG] (74) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=63.454922ms elapsed_secs=0.063454922
09:59:57 [DEBUG] (77) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=306.791µs elapsed_secs=0.000306791
09:59:57 [ERROR] Error: InternalServerError("[UserCreateFailed] Failed to create user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
09:59:57 [DEBUG] (83) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.700552ms elapsed_secs=0.012700552
09:59:57 [DEBUG] (101) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.087µs elapsed_secs=4.7087e-5
09:59:57 [DEBUG] (89) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.01072ms elapsed_secs=0.01101072
09:59:57 [DEBUG] (103) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=142.971µs elapsed_secs=0.000142971
09:59:57 [DEBUG] (98) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.661888ms elapsed_secs=0.011661888
09:59:57 [DEBUG] (91) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.750015ms elapsed_secs=0.012750015
09:59:57 [DEBUG] (104) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.881µs elapsed_secs=8.4881e-5
09:59:57 [DEBUG] (105) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.153µs elapsed_secs=3.9153e-5
09:59:57 [DEBUG] (93) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.430908ms elapsed_secs=0.015430908
09:59:57 [DEBUG] (74) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=6.088844ms elapsed_secs=0.006088844
09:59:57 [INFO] Created user: User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" }
09:59:57 [DEBUG] (106) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.716µs elapsed_secs=5.5716e-5
09:59:57 [DEBUG] (99) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.918954ms elapsed_secs=0.013918954
09:59:57 [DEBUG] (97) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.547253ms elapsed_secs=0.014547253
09:59:57 [DEBUG] (74) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=97.393µs elapsed_secs=9.7393e-5
09:59:57 [DEBUG] (96) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.048212ms elapsed_secs=0.012048212
09:59:57 [DEBUG] (58) menahel::repository::user_repo: Get user by name: Some(User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" })
09:59:57 [DEBUG] (58) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "98569cbb-4fda-4bdc-8741-9c6d2269a5c5", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (90) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.264038ms elapsed_secs=0.015264038
09:59:57 [DEBUG] (92) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.279076ms elapsed_secs=0.015279076
09:59:57 [DEBUG] (99) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.014µs elapsed_secs=7.8014e-5
09:59:57 [DEBUG] (97) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=235.375µs elapsed_secs=0.000235375
09:59:57 [DEBUG] (99) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=100.238µs elapsed_secs=0.000100238
09:59:57 [DEBUG] (97) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.124µs elapsed_secs=5.6124e-5
09:59:57 [DEBUG] (107) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.972µs elapsed_secs=8.8972e-5
09:59:57 [DEBUG] (109) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.412µs elapsed_secs=3.0412e-5
09:59:57 [DEBUG] (110) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.875µs elapsed_secs=4.6875e-5
09:59:57 [DEBUG] (97) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.136037ms elapsed_secs=0.001136037
09:59:57 [DEBUG] (99) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.285366ms elapsed_secs=0.001285366
09:59:57 [DEBUG] (97) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.895µs elapsed_secs=5.7895e-5
09:59:57 [DEBUG] (99) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.323µs elapsed_secs=5.3323e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.685632ms elapsed_secs=0.010685632
09:59:57 [DEBUG] (102) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.226452ms elapsed_secs=0.012226452
09:59:57 [DEBUG] (101) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=73.583µs elapsed_secs=7.3583e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.967µs elapsed_secs=7.7967e-5
09:59:57 [DEBUG] (105) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.791019ms elapsed_secs=0.007791019
09:59:57 [DEBUG] (103) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.886159ms elapsed_secs=0.008886159
09:59:57 [DEBUG] (112) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.918µs elapsed_secs=4.3918e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=157.799µs elapsed_secs=0.000157799
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=63.207µs elapsed_secs=6.3207e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.935µs elapsed_secs=0.000107935
09:59:57 [DEBUG] (103) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=417.002µs elapsed_secs=0.000417002
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=111.47µs elapsed_secs=0.00011147
09:59:57 [DEBUG] (103) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.567µs elapsed_secs=7.8567e-5
09:59:57 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=669.737µs elapsed_secs=0.000669737
09:59:57 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=561.649µs elapsed_secs=0.000561649
09:59:57 [DEBUG] (104) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.582459ms elapsed_secs=0.010582459
09:59:57 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.72µs elapsed_secs=0.00010172
09:59:57 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.287µs elapsed_secs=7.0287e-5
09:59:57 [DEBUG] (104) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=243.674µs elapsed_secs=0.000243674
09:59:57 [DEBUG] (104) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=144.86µs elapsed_secs=0.00014486
09:59:57 [DEBUG] (99) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.302453ms elapsed_secs=0.004302453
09:59:57 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=286.54µs elapsed_secs=0.00028654
09:59:57 [DEBUG] (106) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.34345ms elapsed_secs=0.01034345
09:59:57 [DEBUG] (111) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.51602ms elapsed_secs=0.00851602
09:59:57 [DEBUG] (97) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.33073ms elapsed_secs=0.00433073
09:59:57 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.259µs elapsed_secs=0.000177259
09:59:57 [DEBUG] (99) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=254.499µs elapsed_secs=0.000254499
09:59:57 [DEBUG] (106) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=140.794µs elapsed_secs=0.000140794
09:59:57 [DEBUG] (107) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.241402ms elapsed_secs=0.010241402
09:59:57 [DEBUG] (113) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=136.806µs elapsed_secs=0.000136806
09:59:57 [DEBUG] (106) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=140.207µs elapsed_secs=0.000140207
09:59:57 [DEBUG] (99) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.826µs elapsed_secs=0.000122826
09:59:57 [DEBUG] (97) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=582.603µs elapsed_secs=0.000582603
09:59:57 [DEBUG] (107) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.865µs elapsed_secs=8.1865e-5
09:59:57 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=134.445µs elapsed_secs=0.000134445
09:59:57 [DEBUG] (97) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.411µs elapsed_secs=5.1411e-5
09:59:57 [DEBUG] (110) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.19085ms elapsed_secs=0.01219085
09:59:57 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.854872ms elapsed_secs=0.003854872
09:59:57 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=44.867µs elapsed_secs=4.4867e-5
09:59:57 [DEBUG] (109) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.607185ms elapsed_secs=0.012607185
09:59:57 [DEBUG] (110) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=70.651µs elapsed_secs=7.0651e-5
09:59:57 [DEBUG] (107) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.526µs elapsed_secs=6.3526e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=158.835µs elapsed_secs=0.000158835
09:59:57 [DEBUG] (109) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=110.071µs elapsed_secs=0.000110071
09:59:57 [DEBUG] (110) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=67µs elapsed_secs=6.7e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.203µs elapsed_secs=9.3203e-5
09:59:57 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.317408ms elapsed_secs=0.003317408
09:59:57 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.398279ms elapsed_secs=0.003398279
09:59:57 [DEBUG] (112) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.053251ms elapsed_secs=0.009053251
09:59:57 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=373.727µs elapsed_secs=0.000373727
09:59:57 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=170.181µs elapsed_secs=0.000170181
09:59:57 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=147.688µs elapsed_secs=0.000147688
09:59:57 [DEBUG] (109) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=321.236µs elapsed_secs=0.000321236
09:59:57 [DEBUG] (112) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=136.621µs elapsed_secs=0.000136621
09:59:57 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=334.915µs elapsed_secs=0.000334915
09:59:57 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=161.519µs elapsed_secs=0.000161519
09:59:57 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.176µs elapsed_secs=5.6176e-5
09:59:57 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.555µs elapsed_secs=7.0555e-5
09:59:57 [DEBUG] (112) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=113.824µs elapsed_secs=0.000113824
09:59:57 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=196.057µs elapsed_secs=0.000196057
09:59:57 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.788µs elapsed_secs=6.7788e-5
09:59:57 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.055µs elapsed_secs=7.7055e-5
09:59:57 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=187.001µs elapsed_secs=0.000187001
09:59:57 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.192µs elapsed_secs=6.3192e-5
09:59:57 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.290451ms elapsed_secs=0.003290451
09:59:57 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=148.153µs elapsed_secs=0.000148153
09:59:57 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.98µs elapsed_secs=5.698e-5
09:59:57 [DEBUG] (97) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.05726ms elapsed_secs=0.00305726
09:59:57 [DEBUG] (99) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.091873ms elapsed_secs=0.003091873
09:59:57 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.08112ms elapsed_secs=0.00308112
09:59:57 [DEBUG] (97) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=246.667µs elapsed_secs=0.000246667
09:59:57 [DEBUG] (99) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=250.322µs elapsed_secs=0.000250322
09:59:57 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=232.952µs elapsed_secs=0.000232952
09:59:57 [DEBUG] (97) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.144µs elapsed_secs=5.7144e-5
09:59:57 [DEBUG] (99) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.819µs elapsed_secs=5.6819e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.665969ms elapsed_secs=0.002665969
09:59:57 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.936µs elapsed_secs=5.9936e-5
09:59:57 [DEBUG] (113) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.027416ms elapsed_secs=0.008027416
09:59:57 [DEBUG] (113) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=127.826µs elapsed_secs=0.000127826
09:59:57 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=335.629µs elapsed_secs=0.000335629
09:59:57 [DEBUG] (113) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=67.552µs elapsed_secs=6.7552e-5
09:59:57 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.359382ms elapsed_secs=0.002359382
09:59:57 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.402471ms elapsed_secs=0.002402471
09:59:57 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.288606ms elapsed_secs=0.002288606
09:59:57 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=118.092µs elapsed_secs=0.000118092
09:59:57 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=221.402µs elapsed_secs=0.000221402
09:59:57 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.458µs elapsed_secs=7.7458e-5
09:59:57 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.015µs elapsed_secs=0.000110015
09:59:57 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=352.018µs elapsed_secs=0.000352018
09:59:57 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=163.67µs elapsed_secs=0.00016367
09:59:57 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.626µs elapsed_secs=8.6626e-5
09:59:57 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.120658ms elapsed_secs=0.003120658
09:59:57 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.219447ms elapsed_secs=0.003219447
09:59:57 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.12444ms elapsed_secs=0.00312444
09:59:57 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=478.939µs elapsed_secs=0.000478939
09:59:57 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=704.67µs elapsed_secs=0.00070467
09:59:57 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.299965ms elapsed_secs=0.003299965
09:59:57 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=662.119µs elapsed_secs=0.000662119
09:59:57 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.658µs elapsed_secs=0.000150658
09:59:57 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.733µs elapsed_secs=0.000150733
09:59:57 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=137.339µs elapsed_secs=0.000137339
09:59:57 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.895µs elapsed_secs=6.2895e-5
09:59:57 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=273.999µs elapsed_secs=0.000273999
09:59:57 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.26µs elapsed_secs=8.226e-5
09:59:57 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.987µs elapsed_secs=0.000121987
09:59:57 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.559159ms elapsed_secs=0.004559159
09:59:57 [DEBUG] (97) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.020366ms elapsed_secs=0.005020366
09:59:57 [DEBUG] (99) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.102722ms elapsed_secs=0.004102722
09:59:57 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=337.781µs elapsed_secs=0.000337781
09:59:57 [DEBUG] (99) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=227.594µs elapsed_secs=0.000227594
09:59:57 [DEBUG] (97) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=331.406µs elapsed_secs=0.000331406
09:59:57 [DEBUG] (99) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.656µs elapsed_secs=5.0656e-5
09:59:57 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.202µs elapsed_secs=4.8202e-5
09:59:57 [DEBUG] (97) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.952µs elapsed_secs=5.4952e-5
09:59:57 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.92038ms elapsed_secs=0.00392038
09:59:57 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.1079ms elapsed_secs=0.0041079
09:59:57 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=270.008µs elapsed_secs=0.000270008
09:59:57 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=280.876µs elapsed_secs=0.000280876
09:59:57 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.864835ms elapsed_secs=0.002864835
09:59:57 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=43.556µs elapsed_secs=4.3556e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.925962ms elapsed_secs=0.002925962
09:59:57 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.379µs elapsed_secs=0.000109379
09:59:57 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=162.424µs elapsed_secs=0.000162424
09:59:57 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=91.829µs elapsed_secs=9.1829e-5
09:59:57 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.503µs elapsed_secs=4.8503e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=34.671µs elapsed_secs=3.4671e-5
09:59:57 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.658747ms elapsed_secs=0.002658747
09:59:57 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.701913ms elapsed_secs=0.002701913
09:59:57 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.548441ms elapsed_secs=0.002548441
09:59:57 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.684157ms elapsed_secs=0.002684157
09:59:57 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.731486ms elapsed_secs=0.002731486
09:59:57 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=568.225µs elapsed_secs=0.000568225
09:59:57 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=729.534µs elapsed_secs=0.000729534
09:59:57 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=725.765µs elapsed_secs=0.000725765
09:59:57 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=692.626µs elapsed_secs=0.000692626
09:59:57 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.445µs elapsed_secs=0.000107445
09:59:57 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.047µs elapsed_secs=5.6047e-5
09:59:57 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=551.199µs elapsed_secs=0.000551199
09:59:57 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.345µs elapsed_secs=4.8345e-5
09:59:57 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.678µs elapsed_secs=5.3678e-5
09:59:57 [DEBUG] (99) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.494062ms elapsed_secs=0.002494062
09:59:57 [DEBUG] (97) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.442803ms elapsed_secs=0.002442803
09:59:57 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.715µs elapsed_secs=5.8715e-5
09:59:57 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.588314ms elapsed_secs=0.002588314
09:59:57 [DEBUG] (99) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=123.225µs elapsed_secs=0.000123225
09:59:57 [DEBUG] (97) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=115.773µs elapsed_secs=0.000115773
09:59:57 [DEBUG] (99) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.386µs elapsed_secs=0.000103386
09:59:57 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=129.689µs elapsed_secs=0.000129689
09:59:57 [DEBUG] (97) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.947µs elapsed_secs=4.8947e-5
09:59:57 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.982µs elapsed_secs=5.0982e-5
09:59:57 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.523511ms elapsed_secs=0.002523511
09:59:57 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.532837ms elapsed_secs=0.002532837
09:59:57 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=306.901µs elapsed_secs=0.000306901
09:59:57 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=110.374µs elapsed_secs=0.000110374
09:59:57 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=44.233µs elapsed_secs=4.4233e-5
09:59:57 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.579µs elapsed_secs=5.8579e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.431885ms elapsed_secs=0.002431885
09:59:57 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.398113ms elapsed_secs=0.002398113
09:59:57 [DEBUG] (101) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=184.421µs elapsed_secs=0.000184421
09:59:57 [DEBUG] (101) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.773µs elapsed_secs=0.000106773
09:59:57 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=172.659µs elapsed_secs=0.000172659
09:59:57 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.96µs elapsed_secs=5.996e-5
09:59:57 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.192421ms elapsed_secs=0.003192421
09:59:57 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=203.342µs elapsed_secs=0.000203342
09:59:57 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.534655ms elapsed_secs=0.003534655
09:59:57 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.01204ms elapsed_secs=0.00301204
09:59:57 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.601346ms elapsed_secs=0.003601346
09:59:57 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.33178ms elapsed_secs=0.00333178
09:59:57 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.511µs elapsed_secs=0.000147511
09:59:57 [DEBUG] (99) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.132348ms elapsed_secs=0.003132348
09:59:57 [DEBUG] (97) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.291414ms elapsed_secs=0.003291414
09:59:57 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.068267ms elapsed_secs=0.001068267
09:59:57 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=809.737µs elapsed_secs=0.000809737
09:59:57 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.397939ms elapsed_secs=0.003397939
09:59:57 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=936.448µs elapsed_secs=0.000936448
09:59:57 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=729.635µs elapsed_secs=0.000729635
09:59:57 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.02µs elapsed_secs=7.302e-5
09:59:57 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.016µs elapsed_secs=5.4016e-5
09:59:57 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=114.262µs elapsed_secs=0.000114262
09:59:57 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.9µs elapsed_secs=6.09e-5
09:59:57 [DEBUG] (101) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.19344ms elapsed_secs=0.00319344
09:59:57 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.241686ms elapsed_secs=0.003241686
09:59:57 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.191009ms elapsed_secs=0.003191009
09:59:57 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.118µs elapsed_secs=4.2118e-5
09:59:57 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.453µs elapsed_secs=0.000104453
09:59:57 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.487675ms elapsed_secs=0.002487675
09:59:57 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=499.187µs elapsed_secs=0.000499187
09:59:57 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=691.921µs elapsed_secs=0.000691921
09:59:57 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.635µs elapsed_secs=7.5635e-5
09:59:57 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.285µs elapsed_secs=6.5285e-5
09:59:57 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.557274ms elapsed_secs=0.002557274
09:59:57 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.212667ms elapsed_secs=0.002212667
09:59:57 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.251355ms elapsed_secs=0.002251355
09:59:57 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=199.668µs elapsed_secs=0.000199668
09:59:57 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=180.543µs elapsed_secs=0.000180543
09:59:57 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.112957ms elapsed_secs=0.002112957
09:59:57 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.090631ms elapsed_secs=0.002090631
09:59:57 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.135239ms elapsed_secs=0.002135239
09:59:57 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.125µs elapsed_secs=6.8125e-5
09:59:57 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=111.074µs elapsed_secs=0.000111074
09:59:57 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.152µs elapsed_secs=0.000170152
09:59:57 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.08024ms elapsed_secs=0.00208024
09:59:57 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=185.427µs elapsed_secs=0.000185427
09:59:57 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.24668ms elapsed_secs=0.00224668
09:59:57 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=96.671µs elapsed_secs=9.6671e-5
09:59:57 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=40.413µs elapsed_secs=4.0413e-5
09:59:57 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.437403ms elapsed_secs=0.002437403
09:59:57 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.08787ms elapsed_secs=0.00208787
09:59:57 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.257162ms elapsed_secs=0.002257162
09:59:57 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.277409ms elapsed_secs=0.002277409
09:59:57 [DEBUG] (99) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=49.940165ms elapsed_secs=0.049940165
09:59:57 [DEBUG] (97) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=49.978779ms elapsed_secs=0.049978779
09:59:57 [DEBUG] (79) menahel::handlers::user: No target specified, using default target: All
09:59:57 [DEBUG] (79) menahel::handlers::user: Getting all users
09:59:57 [DEBUG] (78) actix_web::types::json: Failed to deserialize Json from payload. Request path: /users
09:59:57 [ERROR] Error: BadRequest("[UserHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
09:59:57 [DEBUG] (99) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=1 rows_returned=10 elapsed=130.871µs elapsed_secs=0.000130871
09:59:57 [DEBUG] (79) menahel::repository::user_repo: Get all users: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }, User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }, User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }]
09:59:57 [DEBUG] (79) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }, User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }, User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }], count: 10, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "73c406b9-b92e-4bd0-8a51-908f6218bc65", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (105) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=50.166956ms elapsed_secs=0.050166956
09:59:57 [DEBUG] (101) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=51.222837ms elapsed_secs=0.051222837
09:59:57 [DEBUG] (95) menahel::handlers::user: No target specified, using default target: All
09:59:57 [DEBUG] (95) menahel::handlers::user: Getting users with pagenation: page: Some(1), page_size: Some(4)
09:59:57 [DEBUG] (101) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=49.885µs elapsed_secs=4.9885e-5
09:59:57 [DEBUG] (82) menahel::repository::user_repo: Get user by id: Some(User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" })
09:59:57 [DEBUG] (82) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "07baa4d1-31ac-4473-96a7-bf4f2ba67c0e", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=48.556µs elapsed_secs=4.8556e-5
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users count with transaction: 10
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users with pagenation: offset: 0, limit: 4
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=88.029µs elapsed_secs=8.8029e-5
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }]
09:59:57 [DEBUG] (95) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "06c56784-1405-4f56-b002-6c43d94512ea", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (95) menahel::handlers::user: No target specified, using default target: All
09:59:57 [DEBUG] (95) menahel::handlers::user: Getting users with pagenation: page: Some(2), page_size: Some(4)
09:59:57 [DEBUG] (104) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=50.890779ms elapsed_secs=0.050890779
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=19.484µs elapsed_secs=1.9484e-5
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users count with transaction: 10
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users with pagenation: offset: 4, limit: 4
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=90.622µs elapsed_secs=9.0622e-5
09:59:57 [DEBUG] (104) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=69.302µs elapsed_secs=6.9302e-5
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }]
09:59:57 [DEBUG] (87) menahel::repository::user_repo: Get user by name: Some(User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" })
09:59:57 [DEBUG] (87) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "1fb9b5b7-f266-4530-8ba4-9261425ff70d", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (95) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 2, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "5026853b-fd14-4ae0-999a-585b5168bf18", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (95) menahel::handlers::user: No target specified, using default target: All
09:59:57 [DEBUG] (95) menahel::handlers::user: Getting users with pagenation: page: Some(3), page_size: Some(4)
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=22.354µs elapsed_secs=2.2354e-5
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users count with transaction: 10
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users with pagenation: offset: 8, limit: 4
09:59:57 [DEBUG] (105) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=2 elapsed=42.751µs elapsed_secs=4.2751e-5
09:59:57 [DEBUG] (95) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }]
09:59:57 [DEBUG] (107) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=52.457071ms elapsed_secs=0.052457071
09:59:57 [DEBUG] (95) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }], count: 2, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 3, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "ddaa4397-4edd-4d6d-ab62-4164bfbc314a", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (115) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.244563ms elapsed_secs=0.009244563
09:59:57 [DEBUG] (107) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=82.369µs elapsed_secs=8.2369e-5
09:59:57 [DEBUG] (94) menahel::repository::user_repo: Get user by name: None
09:59:57 [ERROR] Error: NotFound("[UserGetByNameNotFound] User not found: (Name = not_exists)")
09:59:57 [DEBUG] (124) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=86.052µs elapsed_secs=8.6052e-5
09:59:57 [DEBUG] (103) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.778572ms elapsed_secs=0.053778572
09:59:57 [DEBUG] (106) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.589897ms elapsed_secs=0.054589897
09:59:57 [DEBUG] (117) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.221929ms elapsed_secs=0.009221929
09:59:57 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidTarget] Invalid target. Target must be 'all', 'name', or 'id': (target: \"invalid\")")
09:59:57 [DEBUG] (106) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=1 rows_returned=0 elapsed=82.297µs elapsed_secs=8.2297e-5
09:59:57 [DEBUG] (127) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=28.63µs elapsed_secs=2.863e-5
09:59:57 [DEBUG] (86) menahel::repository::user_repo: Get user by id: None
09:59:57 [ERROR] Error: NotFound("[UserGetByIdNotFound] User not found: (ID = 1000)")
09:59:57 [DEBUG] (119) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.297814ms elapsed_secs=0.010297814
09:59:57 [DEBUG] (132) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.31µs elapsed_secs=5.331e-5
09:59:57 [DEBUG] (110) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.749497ms elapsed_secs=0.054749497
09:59:57 [ERROR] Error: BadRequest("[UserHandlerGetUsersNoNameSpecified] Name is not specified: ()")
09:59:57 [DEBUG] (112) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.901782ms elapsed_secs=0.055901782
09:59:57 [DEBUG] (113) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.320229ms elapsed_secs=0.056320229
09:59:57 [DEBUG] (121) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.172719ms elapsed_secs=0.011172719
09:59:57 [DEBUG] (109) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.419719ms elapsed_secs=0.056419719
09:59:57 [DEBUG] (100) menahel::handlers::user: No target specified, using default target: All
09:59:57 [DEBUG] (108) menahel::handlers::user: No target specified, using default target: All
09:59:57 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(0), page_size: Some(4))")
09:59:57 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: None, page_size: Some(10))")
09:59:57 [DEBUG] (135) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=167.071µs elapsed_secs=0.000167071
09:59:57 [DEBUG] (126) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.862347ms elapsed_secs=0.008862347
09:59:57 [DEBUG] (123) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.765391ms elapsed_secs=0.010765391
09:59:57 [DEBUG] (124) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.458306ms elapsed_secs=0.010458306
09:59:57 [DEBUG] (124) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=89.546µs elapsed_secs=8.9546e-5
09:59:57 [DEBUG] (124) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=54.055µs elapsed_secs=5.4055e-5
09:59:57 [DEBUG] (141) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.814µs elapsed_secs=3.0814e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.411µs elapsed_secs=5.4411e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.929µs elapsed_secs=3.5929e-5
09:59:57 [DEBUG] (145) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.376µs elapsed_secs=3.8376e-5
09:59:57 [DEBUG] (124) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=601.995µs elapsed_secs=0.000601995
09:59:57 [DEBUG] (124) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.396µs elapsed_secs=0.000132396
09:59:57 [DEBUG] (131) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.234223ms elapsed_secs=0.010234223
09:59:57 [DEBUG] (129) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.036345ms elapsed_secs=0.012036345
09:59:57 [DEBUG] (127) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.773126ms elapsed_secs=0.011773126
09:59:57 [DEBUG] (127) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=214.147µs elapsed_secs=0.000214147
09:59:57 [DEBUG] (127) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.253µs elapsed_secs=9.0253e-5
09:59:57 [DEBUG] (146) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.662µs elapsed_secs=4.4662e-5
09:59:57 [DEBUG] (147) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.224µs elapsed_secs=4.2224e-5
09:59:57 [DEBUG] (127) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=216.394µs elapsed_secs=0.000216394
09:59:57 [DEBUG] (127) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.806µs elapsed_secs=0.000153806
09:59:57 [DEBUG] (132) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.075851ms elapsed_secs=0.013075851
09:59:57 [DEBUG] (134) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.89456ms elapsed_secs=0.01189456
09:59:57 [DEBUG] (132) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=238.963µs elapsed_secs=0.000238963
09:59:57 [DEBUG] (132) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=319.085µs elapsed_secs=0.000319085
09:59:57 [DEBUG] (148) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.914µs elapsed_secs=6.0914e-5
09:59:57 [DEBUG] (124) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.520391ms elapsed_secs=0.005520391
09:59:57 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=217.184µs elapsed_secs=0.000217184
09:59:57 [DEBUG] (124) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=99.615µs elapsed_secs=9.9615e-5
09:59:57 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.127µs elapsed_secs=0.000110127
09:59:57 [DEBUG] (124) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.912µs elapsed_secs=0.000104912
09:59:57 [DEBUG] (144) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.445081ms elapsed_secs=0.011445081
09:59:57 [DEBUG] (135) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.089933ms elapsed_secs=0.012089933
09:59:57 [DEBUG] (143) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.528933ms elapsed_secs=0.011528933
09:59:57 [DEBUG] (137) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.381543ms elapsed_secs=0.013381543
09:59:57 [DEBUG] (145) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.759555ms elapsed_secs=0.011759555
09:59:57 [DEBUG] (144) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=142.239µs elapsed_secs=0.000142239
09:59:57 [DEBUG] (135) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=101.068µs elapsed_secs=0.000101068
09:59:57 [DEBUG] (144) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.803µs elapsed_secs=5.6803e-5
09:59:57 [DEBUG] (145) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=117.988µs elapsed_secs=0.000117988
09:59:57 [DEBUG] (143) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.203µs elapsed_secs=8.1203e-5
09:59:57 [DEBUG] (135) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.75µs elapsed_secs=8.075e-5
09:59:57 [DEBUG] (127) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.389578ms elapsed_secs=0.003389578
09:59:57 [DEBUG] (149) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.649µs elapsed_secs=6.9649e-5
09:59:57 [DEBUG] (145) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=126.6µs elapsed_secs=0.0001266
09:59:57 [DEBUG] (143) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.067µs elapsed_secs=6.3067e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=389.648µs elapsed_secs=0.000389648
09:59:57 [DEBUG] (127) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=228.417µs elapsed_secs=0.000228417
09:59:57 [DEBUG] (141) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.046689ms elapsed_secs=0.014046689
09:59:57 [DEBUG] (135) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=337.198µs elapsed_secs=0.000337198
09:59:57 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=981.245µs elapsed_secs=0.000981245
09:59:57 [DEBUG] (127) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=520.38µs elapsed_secs=0.00052038
09:59:57 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.298µs elapsed_secs=6.7298e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=370.964µs elapsed_secs=0.000370964
09:59:57 [DEBUG] (141) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=88.48µs elapsed_secs=8.848e-5
09:59:57 [DEBUG] (135) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.816µs elapsed_secs=5.2816e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=737.025µs elapsed_secs=0.000737025
09:59:57 [DEBUG] (146) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.966141ms elapsed_secs=0.011966141
09:59:57 [DEBUG] (147) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.595096ms elapsed_secs=0.011595096
09:59:57 [DEBUG] (146) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.587µs elapsed_secs=6.6587e-5
09:59:57 [DEBUG] (141) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=97.114µs elapsed_secs=9.7114e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.791µs elapsed_secs=6.4791e-5
09:59:57 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.606291ms elapsed_secs=0.002606291
09:59:57 [DEBUG] (147) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=57.696µs elapsed_secs=5.7696e-5
09:59:57 [DEBUG] (146) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=44.573µs elapsed_secs=4.4573e-5
09:59:57 [DEBUG] (124) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.719175ms elapsed_secs=0.002719175
09:59:57 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=227.648µs elapsed_secs=0.000227648
09:59:57 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=264.938µs elapsed_secs=0.000264938
09:59:57 [DEBUG] (147) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=303.123µs elapsed_secs=0.000303123
09:59:57 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=372.495µs elapsed_secs=0.000372495
09:59:57 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.492µs elapsed_secs=5.4492e-5
09:59:57 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.125µs elapsed_secs=0.000170125
09:59:57 [DEBUG] (124) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=207.344µs elapsed_secs=0.000207344
09:59:57 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=280.773µs elapsed_secs=0.000280773
09:59:57 [DEBUG] (124) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=37.931µs elapsed_secs=3.7931e-5
09:59:57 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=376.017µs elapsed_secs=0.000376017
09:59:57 [DEBUG] (148) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.714677ms elapsed_secs=0.007714677
09:59:57 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.138µs elapsed_secs=7.4138e-5
09:59:57 [DEBUG] (148) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.152µs elapsed_secs=6.6152e-5
09:59:57 [DEBUG] (148) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.488µs elapsed_secs=5.7488e-5
09:59:57 [DEBUG] (127) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.292633ms elapsed_secs=0.002292633
09:59:57 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=229.319µs elapsed_secs=0.000229319
09:59:57 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.276µs elapsed_secs=8.8276e-5
09:59:57 [DEBUG] (127) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=188.986µs elapsed_secs=0.000188986
09:59:57 [DEBUG] (135) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.655472ms elapsed_secs=0.002655472
09:59:57 [DEBUG] (127) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.494µs elapsed_secs=9.2494e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.761879ms elapsed_secs=0.002761879
09:59:57 [DEBUG] (135) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=364.901µs elapsed_secs=0.000364901
09:59:57 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=215.312µs elapsed_secs=0.000215312
09:59:57 [DEBUG] (135) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.057µs elapsed_secs=0.000104057
09:59:57 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.119µs elapsed_secs=6.0119e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.392766ms elapsed_secs=0.003392766
09:59:57 [DEBUG] (149) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.40539ms elapsed_secs=0.00940539
09:59:57 [DEBUG] (149) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=380.205µs elapsed_secs=0.000380205
09:59:57 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=467.436µs elapsed_secs=0.000467436
09:59:57 [DEBUG] (149) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=146.46µs elapsed_secs=0.00014646
09:59:57 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.258µs elapsed_secs=9.7258e-5
09:59:57 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=135.176µs elapsed_secs=0.000135176
09:59:57 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.889423ms elapsed_secs=0.003889423
09:59:57 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.430586ms elapsed_secs=0.004430586
09:59:57 [DEBUG] (124) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.548259ms elapsed_secs=0.004548259
09:59:57 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.166369ms elapsed_secs=0.004166369
09:59:57 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=113.179µs elapsed_secs=0.000113179
09:59:57 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=114.142µs elapsed_secs=0.000114142
09:59:57 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.555µs elapsed_secs=0.000136555
09:59:57 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.221µs elapsed_secs=0.000122221
09:59:57 [DEBUG] (124) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=358.223µs elapsed_secs=0.000358223
09:59:57 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=249.656µs elapsed_secs=0.000249656
09:59:57 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.943µs elapsed_secs=8.6943e-5
09:59:57 [DEBUG] (124) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=208.529µs elapsed_secs=0.000208529
09:59:57 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=166.012µs elapsed_secs=0.000166012
09:59:57 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.298403ms elapsed_secs=0.007298403
09:59:57 [DEBUG] (127) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.054224ms elapsed_secs=0.003054224
09:59:57 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.068551ms elapsed_secs=0.003068551
09:59:57 [DEBUG] (127) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=121.013µs elapsed_secs=0.000121013
09:59:57 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=135.666µs elapsed_secs=0.000135666
09:59:57 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=675.294µs elapsed_secs=0.000675294
09:59:57 [DEBUG] (127) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.907µs elapsed_secs=7.1907e-5
09:59:57 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.624µs elapsed_secs=4.2624e-5
09:59:57 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.795µs elapsed_secs=6.4795e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.954853ms elapsed_secs=0.002954853
09:59:57 [DEBUG] (135) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.813295ms elapsed_secs=0.002813295
09:59:57 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=315.421µs elapsed_secs=0.000315421
09:59:57 [DEBUG] (135) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=365.282µs elapsed_secs=0.000365282
09:59:57 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.669µs elapsed_secs=4.7669e-5
09:59:57 [DEBUG] (135) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.806µs elapsed_secs=4.8806e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.117123ms elapsed_secs=0.003117123
09:59:57 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=92.195µs elapsed_secs=9.2195e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.765µs elapsed_secs=4.7765e-5
09:59:57 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.585715ms elapsed_secs=0.005585715
09:59:57 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.905943ms elapsed_secs=0.002905943
09:59:57 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.966958ms elapsed_secs=0.002966958
09:59:57 [DEBUG] (124) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.99478ms elapsed_secs=0.00299478
09:59:57 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.994961ms elapsed_secs=0.002994961
09:59:57 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.914493ms elapsed_secs=0.002914493
09:59:57 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=275.347µs elapsed_secs=0.000275347
09:59:57 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=335.594µs elapsed_secs=0.000335594
09:59:57 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=294.707µs elapsed_secs=0.000294707
09:59:57 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.622µs elapsed_secs=0.000150622
09:59:57 [DEBUG] (124) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=756.127µs elapsed_secs=0.000756127
09:59:57 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=233.065µs elapsed_secs=0.000233065
09:59:57 [DEBUG] (124) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.815µs elapsed_secs=4.7815e-5
09:59:57 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=568.235µs elapsed_secs=0.000568235
09:59:57 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=511.023µs elapsed_secs=0.000511023
09:59:57 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=543.523µs elapsed_secs=0.000543523
09:59:57 [DEBUG] (127) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.766379ms elapsed_secs=0.002766379
09:59:57 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.203µs elapsed_secs=0.000104203
09:59:57 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.201µs elapsed_secs=5.3201e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.512489ms elapsed_secs=0.002512489
09:59:57 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.584209ms elapsed_secs=0.002584209
09:59:57 [DEBUG] (135) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.606275ms elapsed_secs=0.002606275
09:59:57 [DEBUG] (127) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=152.58µs elapsed_secs=0.00015258
09:59:57 [DEBUG] (127) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=317.017µs elapsed_secs=0.000317017
09:59:57 [DEBUG] (135) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=420.356µs elapsed_secs=0.000420356
09:59:57 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=607.5µs elapsed_secs=0.0006075
09:59:57 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=565.154µs elapsed_secs=0.000565154
09:59:57 [DEBUG] (135) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.877µs elapsed_secs=8.1877e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.724µs elapsed_secs=0.000104724
09:59:57 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.512µs elapsed_secs=5.3512e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.544719ms elapsed_secs=0.003544719
09:59:57 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=192.029µs elapsed_secs=0.000192029
09:59:57 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.277µs elapsed_secs=8.4277e-5
09:59:57 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.846048ms elapsed_secs=0.003846048
09:59:57 [DEBUG] (124) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.884164ms elapsed_secs=0.003884164
09:59:57 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.776895ms elapsed_secs=0.003776895
09:59:57 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=532.765µs elapsed_secs=0.000532765
09:59:57 [DEBUG] (132) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=523.345µs elapsed_secs=0.000523345
09:59:57 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.599µs elapsed_secs=9.0599e-5
09:59:57 [DEBUG] (132) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.77µs elapsed_secs=5.877e-5
09:59:57 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.631928ms elapsed_secs=0.003631928
09:59:57 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.703575ms elapsed_secs=0.003703575
09:59:57 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=120.357µs elapsed_secs=0.000120357
09:59:57 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.849841ms elapsed_secs=0.007849841
09:59:57 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=113.049µs elapsed_secs=0.000113049
09:59:57 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=134.041µs elapsed_secs=0.000134041
09:59:57 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.096µs elapsed_secs=5.8096e-5
09:59:57 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.056µs elapsed_secs=4.1056e-5
09:59:57 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.218µs elapsed_secs=9.3218e-5
09:59:57 [DEBUG] (135) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.548673ms elapsed_secs=0.003548673
09:59:57 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.357226ms elapsed_secs=0.003357226
09:59:57 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.541978ms elapsed_secs=0.003541978
09:59:57 [DEBUG] (127) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.592502ms elapsed_secs=0.003592502
09:59:57 [DEBUG] (135) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=366.489µs elapsed_secs=0.000366489
09:59:57 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=410.163µs elapsed_secs=0.000410163
09:59:57 [DEBUG] (135) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.47µs elapsed_secs=4.547e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=211.859µs elapsed_secs=0.000211859
09:59:57 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.402µs elapsed_secs=4.1402e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.909µs elapsed_secs=7.3909e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.842942ms elapsed_secs=0.002842942
09:59:57 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=103.268µs elapsed_secs=0.000103268
09:59:57 [DEBUG] (132) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.105444ms elapsed_secs=0.002105444
09:59:57 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.353382ms elapsed_secs=0.002353382
09:59:57 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.180382ms elapsed_secs=0.002180382
09:59:57 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.774µs elapsed_secs=8.6774e-5
09:59:57 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=230.321µs elapsed_secs=0.000230321
09:59:57 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=226.902µs elapsed_secs=0.000226902
09:59:57 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.553µs elapsed_secs=7.0553e-5
09:59:57 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.540002ms elapsed_secs=0.002540002
09:59:57 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=232.295µs elapsed_secs=0.000232295
09:59:57 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=173.129µs elapsed_secs=0.000173129
09:59:57 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.442812ms elapsed_secs=0.005442812
09:59:57 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=38.545µs elapsed_secs=3.8545e-5
09:59:57 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=247.672µs elapsed_secs=0.000247672
09:59:57 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.856538ms elapsed_secs=0.002856538
09:59:57 [DEBUG] (135) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.896003ms elapsed_secs=0.002896003
09:59:57 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.316µs elapsed_secs=7.8316e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.067444ms elapsed_secs=0.003067444
09:59:57 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=177.216µs elapsed_secs=0.000177216
09:59:57 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.62µs elapsed_secs=6.062e-5
09:59:57 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.353328ms elapsed_secs=0.003353328
09:59:57 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.850864ms elapsed_secs=0.003850864
09:59:57 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.651428ms elapsed_secs=0.003651428
09:59:57 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.944876ms elapsed_secs=0.003944876
09:59:57 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=328.594µs elapsed_secs=0.000328594
09:59:57 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.629987ms elapsed_secs=0.006629987
09:59:57 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.109µs elapsed_secs=0.000123109
09:59:57 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.620595ms elapsed_secs=0.003620595
09:59:57 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=439.243µs elapsed_secs=0.000439243
09:59:57 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.733µs elapsed_secs=8.5733e-5
09:59:57 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.267ms elapsed_secs=0.002267
09:59:57 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.544911ms elapsed_secs=0.004544911
09:59:57 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=128.198µs elapsed_secs=0.000128198
09:59:57 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.751µs elapsed_secs=5.1751e-5
09:59:57 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.970022ms elapsed_secs=0.006970022
09:59:57 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=250.358µs elapsed_secs=0.000250358
09:59:57 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.823µs elapsed_secs=7.6823e-5
09:59:57 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.725772ms elapsed_secs=0.004725772
09:59:57 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=146.123µs elapsed_secs=0.000146123
09:59:57 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=171.252µs elapsed_secs=0.000171252
09:59:57 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.715668ms elapsed_secs=0.004715668
09:59:57 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.2506ms elapsed_secs=0.0042506
09:59:57 [DEBUG] (124) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.250775ms elapsed_secs=0.054250775
09:59:57 [DEBUG] (114) menahel::handlers::user: No target specified, using default target: All
09:59:57 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(1), page_size: None)")
09:59:57 [DEBUG] (152) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.181µs elapsed_secs=4.3181e-5
09:59:57 [DEBUG] (127) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=53.771927ms elapsed_secs=0.053771927
09:59:57 [DEBUG] (116) menahel::handlers::user: No target specified, using default target: All
09:59:57 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(1), page_size: Some(1000))")
09:59:57 [DEBUG] (155) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.367µs elapsed_secs=3.7367e-5
09:59:57 [DEBUG] (132) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.333475ms elapsed_secs=0.054333475
09:59:57 [ERROR] Error: BadRequest("[UserHandlerPathAndBodyIdMismatch] Path ID and body ID mismatch: (path.id: 1, user_data.id: Some(2))")
09:59:57 [DEBUG] (144) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.390905ms elapsed_secs=0.054390905
09:59:57 [DEBUG] (152) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.272156ms elapsed_secs=0.009272156
09:59:57 [DEBUG] (158) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.539µs elapsed_secs=4.7539e-5
09:59:57 [DEBUG] (152) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=126.195µs elapsed_secs=0.000126195
09:59:57 [DEBUG] (152) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.295µs elapsed_secs=5.8295e-5
09:59:57 [DEBUG] (135) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.176692ms elapsed_secs=0.056176692
09:59:57 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=574.188µs elapsed_secs=0.000574188
09:59:57 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=280.962µs elapsed_secs=0.000280962
09:59:57 [DEBUG] (144) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=132.412µs elapsed_secs=0.000132412
09:59:57 [DEBUG] (122) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" })
09:59:57 [DEBUG] (135) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=66.425µs elapsed_secs=6.6425e-5
09:59:57 [DEBUG] (144) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=112.032µs elapsed_secs=0.000112032
09:59:57 [DEBUG] (120) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" })
09:59:57 [ERROR] Error: InternalServerError("[UserUpdateFailed] Failed to update user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
09:59:57 [DEBUG] (143) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.296148ms elapsed_secs=0.056296148
09:59:57 [DEBUG] (155) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.842785ms elapsed_secs=0.011842785
09:59:57 [DEBUG] (135) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=194.387µs elapsed_secs=0.000194387
09:59:57 [DEBUG] (147) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=54.457585ms elapsed_secs=0.054457585
09:59:57 [DEBUG] (155) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=147.741µs elapsed_secs=0.000147741
09:59:57 [DEBUG] (155) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=181.29µs elapsed_secs=0.00018129
09:59:57 [DEBUG] (161) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.884µs elapsed_secs=5.5884e-5
09:59:57 [DEBUG] (146) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=56.696603ms elapsed_secs=0.056696603
09:59:57 [DEBUG] (148) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=55.785751ms elapsed_secs=0.055785751
09:59:57 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=431.205µs elapsed_secs=0.000431205
09:59:57 [ERROR] Error: BadRequest("[UserNameEmpty] Username cannot be empty: (Name = )")
09:59:57 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.861µs elapsed_secs=0.000147861
09:59:57 [INFO] Updated user: Some(User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" })
09:59:57 [DEBUG] (158) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.012942ms elapsed_secs=0.009012942
09:59:57 [DEBUG] (143) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=83.731µs elapsed_secs=8.3731e-5
09:59:57 [DEBUG] (125) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" })
09:59:57 [ERROR] Error: BadRequest("[UserEmailInvalid] Invalid email address: (Email = test1_xexample.com)")
09:59:57 [DEBUG] (158) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=281.932µs elapsed_secs=0.000281932
09:59:57 [DEBUG] (135) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=185.75µs elapsed_secs=0.00018575
09:59:57 [DEBUG] (143) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=211.304µs elapsed_secs=0.000211304
09:59:57 [ERROR] Error: InternalServerError("[UserUpdateFailed] Failed to update user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.username)")
09:59:57 [DEBUG] (120) menahel::repository::user_repo: Get user by name: Some(User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" })
09:59:57 [DEBUG] (120) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "1cbda730-1260-4b2b-8cb6-fa8362ed1b4c", api_version: "0.1.0" }) }
09:59:57 [DEBUG] (158) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=97.291µs elapsed_secs=9.7291e-5
09:59:57 [DEBUG] (148) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=1 rows_returned=0 elapsed=98.662µs elapsed_secs=9.8662e-5
09:59:57 [DEBUG] (166) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.842µs elapsed_secs=5.7842e-5
09:59:57 [DEBUG] (133) menahel::repository::user_repo: Get user by id with transaction: None
09:59:57 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=863.33µs elapsed_secs=0.00086333
09:59:57 [ERROR] Error: NotFound("[UserGetByIdNotFound] User not found: (ID = 100)")
09:59:57 [DEBUG] (167) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=182.986µs elapsed_secs=0.000182986
09:59:57 [DEBUG] (172) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.844µs elapsed_secs=5.4844e-5
09:59:57 [DEBUG] (173) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=341.585µs elapsed_secs=0.000341585
09:59:57 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.15µs elapsed_secs=9.015e-5
09:59:57 [DEBUG] (176) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.847µs elapsed_secs=8.1847e-5
09:59:57 [DEBUG] (149) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n" rows_affected=20 rows_returned=0 elapsed=59.331539ms elapsed_secs=0.059331539
09:59:57 [DEBUG] (136) actix_web::types::json: Failed to deserialize Json from payload. Request path: /users/1
09:59:57 [ERROR] Error: BadRequest("[UserHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
09:59:57 [DEBUG] (161) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.240844ms elapsed_secs=0.013240844
09:59:57 [DEBUG] (179) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.122µs elapsed_secs=4.3122e-5
09:59:57 [DEBUG] (161) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.212µs elapsed_secs=7.9212e-5
09:59:57 [DEBUG] (161) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=55.435µs elapsed_secs=5.5435e-5
09:59:57 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=388.219µs elapsed_secs=0.000388219
09:59:57 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.633µs elapsed_secs=0.000100633
09:59:57 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.99723ms elapsed_secs=0.00799723
09:59:57 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=631.606µs elapsed_secs=0.000631606
09:59:57 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.871µs elapsed_secs=7.2871e-5
09:59:57 [DEBUG] (173) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.647132ms elapsed_secs=0.011647132
09:59:57 [DEBUG] (173) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=127.529µs elapsed_secs=0.000127529
09:59:57 [DEBUG] (173) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=101.538µs elapsed_secs=0.000101538
09:59:57 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=486.054µs elapsed_secs=0.000486054
09:59:57 [DEBUG] (167) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.941437ms elapsed_secs=0.014941437
09:59:57 [DEBUG] (172) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.025134ms elapsed_secs=0.015025134
09:59:57 [DEBUG] (166) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.480788ms elapsed_secs=0.015480788
09:59:57 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=260.194µs elapsed_secs=0.000260194
09:59:57 [DEBUG] (167) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=142.045µs elapsed_secs=0.000142045
09:59:57 [DEBUG] (172) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=59.507µs elapsed_secs=5.9507e-5
09:59:57 [DEBUG] (166) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=84.264µs elapsed_secs=8.4264e-5
09:59:57 [DEBUG] (167) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=130.813µs elapsed_secs=0.000130813
09:59:57 [DEBUG] (172) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.778µs elapsed_secs=8.4778e-5
09:59:57 [DEBUG] (166) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.883µs elapsed_secs=7.4883e-5
09:59:57 [DEBUG] (176) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.516303ms elapsed_secs=0.012516303
09:59:57 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=910.562µs elapsed_secs=0.000910562
09:59:57 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=867.213µs elapsed_secs=0.000867213
09:59:57 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=356.454µs elapsed_secs=0.000356454
09:59:57 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.142µs elapsed_secs=9.1142e-5
09:59:57 [DEBUG] (176) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=253.131µs elapsed_secs=0.000253131
09:59:57 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.301µs elapsed_secs=0.000138301
09:59:57 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.945µs elapsed_secs=8.0945e-5
09:59:57 [DEBUG] (176) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=91.539µs elapsed_secs=9.1539e-5
09:59:57 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.058425ms elapsed_secs=0.008058425
09:59:57 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=343.651µs elapsed_secs=0.000343651
09:59:57 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=313.987µs elapsed_secs=0.000313987
09:59:57 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=737.077µs elapsed_secs=0.000737077
09:59:57 [DEBUG] (179) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.847626ms elapsed_secs=0.011847626
09:59:57 [DEBUG] (179) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=243.598µs elapsed_secs=0.000243598
09:59:57 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=417.498µs elapsed_secs=0.000417498
09:59:57 [DEBUG] (179) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=146.884µs elapsed_secs=0.000146884
09:59:57 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=409.876µs elapsed_secs=0.000409876
09:59:57 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.033µs elapsed_secs=0.000151033
09:59:57 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.32586ms elapsed_secs=0.01032586
09:59:57 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=292.097µs elapsed_secs=0.000292097
09:59:57 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.694µs elapsed_secs=0.000101694
09:59:57 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.448422ms elapsed_secs=0.009448422
09:59:57 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=210.265µs elapsed_secs=0.000210265
09:59:57 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.482µs elapsed_secs=7.1482e-5
09:59:57 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.4662ms elapsed_secs=0.0094662
09:59:57 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=528.246µs elapsed_secs=0.000528246
09:59:57 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.737µs elapsed_secs=0.000144737
09:59:57 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.057512ms elapsed_secs=0.008057512
09:59:57 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.809908ms elapsed_secs=0.010809908
09:59:57 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.570823ms elapsed_secs=0.010570823
09:59:57 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.873965ms elapsed_secs=0.010873965
09:59:57 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=333.163µs elapsed_secs=0.000333163
09:59:57 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=247.756µs elapsed_secs=0.000247756
09:59:57 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=309.114µs elapsed_secs=0.000309114
09:59:57 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=466.397µs elapsed_secs=0.000466397
09:59:57 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=190.082µs elapsed_secs=0.000190082
09:59:57 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=694.866µs elapsed_secs=0.000694866
09:59:57 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.664µs elapsed_secs=9.1664e-5
09:59:57 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.125µs elapsed_secs=0.000117125
09:59:57 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.746371ms elapsed_secs=0.012746371
09:59:57 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=482.773µs elapsed_secs=0.000482773
09:59:57 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.287µs elapsed_secs=0.000111287
09:59:57 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.91477ms elapsed_secs=0.01291477
09:59:57 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=346.135µs elapsed_secs=0.000346135
09:59:57 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.391µs elapsed_secs=6.5391e-5
09:59:57 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.099453ms elapsed_secs=0.013099453
09:59:57 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=342.085µs elapsed_secs=0.000342085
09:59:57 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.61µs elapsed_secs=0.00014661
09:59:57 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.339797ms elapsed_secs=0.009339797
09:59:57 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.785698ms elapsed_secs=0.008785698
09:59:57 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=512.502µs elapsed_secs=0.000512502
09:59:57 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=206.566µs elapsed_secs=0.000206566
09:59:57 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.206µs elapsed_secs=0.000117206
09:59:57 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.629µs elapsed_secs=5.4629e-5
09:59:57 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.08559ms elapsed_secs=0.00708559
09:59:57 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=289.037µs elapsed_secs=0.000289037
09:59:57 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.05µs elapsed_secs=0.00011405
09:59:57 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.791392ms elapsed_secs=0.008791392
09:59:57 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.091889ms elapsed_secs=0.009091889
09:59:57 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.195374ms elapsed_secs=0.009195374
09:59:57 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.28752ms elapsed_secs=0.00928752
09:59:57 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=446.675µs elapsed_secs=0.000446675
09:59:57 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=724.789µs elapsed_secs=0.000724789
09:59:57 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=716.073µs elapsed_secs=0.000716073
09:59:57 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=557.729µs elapsed_secs=0.000557729
09:59:57 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=329.142µs elapsed_secs=0.000329142
09:59:57 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.249µs elapsed_secs=8.5249e-5
09:59:57 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.203µs elapsed_secs=7.7203e-5
09:59:57 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.678427ms elapsed_secs=0.006678427
09:59:57 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.525µs elapsed_secs=6.2525e-5
09:59:57 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=201.762µs elapsed_secs=0.000201762
09:59:57 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.506µs elapsed_secs=0.000146506
09:59:57 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.547481ms elapsed_secs=0.008547481
09:59:57 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=390.021µs elapsed_secs=0.000390021
09:59:57 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.398µs elapsed_secs=0.000105398
09:59:57 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.503412ms elapsed_secs=0.007503412
09:59:57 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=175.175µs elapsed_secs=0.000175175
09:59:57 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.588µs elapsed_secs=5.7588e-5
09:59:58 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.73154ms elapsed_secs=0.00873154
09:59:58 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=164.965µs elapsed_secs=0.000164965
09:59:58 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=876.029µs elapsed_secs=0.000876029
09:59:58 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.456658ms elapsed_secs=0.007456658
09:59:58 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.375931ms elapsed_secs=0.009375931
09:59:58 [DEBUG] (152) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=177.904µs elapsed_secs=0.000177904
09:59:58 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=163.157µs elapsed_secs=0.000163157
09:59:58 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.794µs elapsed_secs=6.1794e-5
09:59:58 [DEBUG] (152) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.858µs elapsed_secs=8.5858e-5
09:59:58 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.457973ms elapsed_secs=0.007457973
09:59:58 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.882895ms elapsed_secs=0.007882895
09:59:58 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.669685ms elapsed_secs=0.007669685
09:59:58 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=208.296µs elapsed_secs=0.000208296
09:59:58 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=228.21µs elapsed_secs=0.00022821
09:59:58 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=125.372µs elapsed_secs=0.000125372
09:59:58 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.639µs elapsed_secs=0.000120639
09:59:58 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.447µs elapsed_secs=8.5447e-5
09:59:58 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.639µs elapsed_secs=5.8639e-5
09:59:58 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.778082ms elapsed_secs=0.010778082
09:59:58 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.727312ms elapsed_secs=0.007727312
09:59:58 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=167.617µs elapsed_secs=0.000167617
09:59:58 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=207.755µs elapsed_secs=0.000207755
09:59:58 [DEBUG] (155) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=207.826µs elapsed_secs=0.000207826
09:59:58 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.90137ms elapsed_secs=0.01190137
09:59:58 [DEBUG] (155) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.388µs elapsed_secs=7.1388e-5
09:59:58 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=254.33µs elapsed_secs=0.00025433
09:59:58 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.864µs elapsed_secs=0.000177864
09:59:58 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.485397ms elapsed_secs=0.009485397
09:59:58 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=173.027µs elapsed_secs=0.000173027
09:59:58 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.417µs elapsed_secs=6.2417e-5
09:59:58 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.449831ms elapsed_secs=0.007449831
09:59:58 [DEBUG] (161) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=462.631µs elapsed_secs=0.000462631
09:59:58 [DEBUG] (161) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.877µs elapsed_secs=6.6877e-5
09:59:58 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.932507ms elapsed_secs=0.007932507
09:59:58 [DEBUG] (152) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.08387ms elapsed_secs=0.00808387
09:59:58 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=188.395µs elapsed_secs=0.000188395
09:59:58 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.334µs elapsed_secs=6.1334e-5
09:59:58 [DEBUG] (155) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.603593ms elapsed_secs=0.005603593
09:59:58 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.875649ms elapsed_secs=0.007875649
09:59:58 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.295208ms elapsed_secs=0.008295208
09:59:58 [DEBUG] (173) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=177.946µs elapsed_secs=0.000177946
09:59:58 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=219.216µs elapsed_secs=0.000219216
09:59:58 [DEBUG] (173) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.39µs elapsed_secs=7.439e-5
09:59:58 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.579µs elapsed_secs=6.1579e-5
09:59:58 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.618187ms elapsed_secs=0.007618187
09:59:58 [DEBUG] (172) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=299.373µs elapsed_secs=0.000299373
09:59:58 [DEBUG] (172) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.39µs elapsed_secs=6.239e-5
09:59:58 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.171126ms elapsed_secs=0.008171126
09:59:58 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.252579ms elapsed_secs=0.008252579
09:59:58 [DEBUG] (176) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=367.189µs elapsed_secs=0.000367189
09:59:58 [DEBUG] (176) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.306µs elapsed_secs=8.1306e-5
09:59:58 [DEBUG] (167) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=232.194µs elapsed_secs=0.000232194
09:59:58 [DEBUG] (167) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.538µs elapsed_secs=8.2538e-5
09:59:58 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.338315ms elapsed_secs=0.008338315
09:59:58 [DEBUG] (179) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=552.021µs elapsed_secs=0.000552021
09:59:58 [DEBUG] (179) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.601µs elapsed_secs=6.9601e-5
09:59:58 [DEBUG] (161) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.897225ms elapsed_secs=0.008897225
09:59:58 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.31034ms elapsed_secs=0.00831034
09:59:58 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.642268ms elapsed_secs=0.006642268
09:59:58 [DEBUG] (173) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.771717ms elapsed_secs=0.007771717
09:59:58 [DEBUG] (176) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.030543ms elapsed_secs=0.008030543
09:59:58 [DEBUG] (172) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.959457ms elapsed_secs=0.008959457
09:59:58 [DEBUG] (167) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.46559ms elapsed_secs=0.00746559
09:59:58 [DEBUG] (179) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.447409ms elapsed_secs=0.007447409
09:59:58 [DEBUG] (145) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=235.249535ms elapsed_secs=0.235249535
09:59:58 [DEBUG] (180) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.205µs elapsed_secs=4.0205e-5
09:59:58 [DEBUG] (180) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=344.028µs elapsed_secs=0.000344028
09:59:58 [DEBUG] (140) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:58 [DEBUG] (180) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=75.915µs elapsed_secs=7.5915e-5
09:59:58 [DEBUG] (140) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:58 [DEBUG] (180) sqlx::query: summary="INSERT INTO comments (user_id, …" db.statement="\n\n\n                INSERT INTO comments (user_id, task_id, content, created_at)\n                VALUES ($1, $2, $3, $4)\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=160.37µs elapsed_secs=0.00016037
09:59:58 [DEBUG] (141) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=242.173184ms elapsed_secs=0.242173184
09:59:58 [DEBUG] (181) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.927µs elapsed_secs=5.3927e-5
09:59:58 [DEBUG] (181) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=262.257µs elapsed_secs=0.000262257
09:59:58 [DEBUG] (138) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:58 [DEBUG] (184) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.065µs elapsed_secs=6.7065e-5
09:59:58 [DEBUG] (181) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=92.345µs elapsed_secs=9.2345e-5
09:59:58 [DEBUG] (138) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
09:59:58 [DEBUG] (181) sqlx::query: summary="INSERT INTO comments (user_id, …" db.statement="\n\n\n                INSERT INTO comments (user_id, task_id, content, created_at)\n                VALUES ($1, $2, $3, $4)\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=378.89µs elapsed_secs=0.00037889
09:59:58 [DEBUG] (184) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.961124ms elapsed_secs=0.013961124
09:59:58 [DEBUG] (187) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=148.193µs elapsed_secs=0.000148193
09:59:58 [DEBUG] (184) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=183.309µs elapsed_secs=0.000183309
09:59:58 [DEBUG] (184) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=232.915µs elapsed_secs=0.000232915
09:59:58 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=323.869µs elapsed_secs=0.000323869
09:59:58 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.811µs elapsed_secs=0.000151811
09:59:58 [DEBUG] (187) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.417081ms elapsed_secs=0.011417081
09:59:58 [DEBUG] (187) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=108.837µs elapsed_secs=0.000108837
09:59:58 [DEBUG] (187) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.159µs elapsed_secs=7.0159e-5
09:59:58 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=237.589µs elapsed_secs=0.000237589
09:59:58 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.525µs elapsed_secs=0.000139525
09:59:58 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.674468ms elapsed_secs=0.009674468
09:59:58 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=466.627µs elapsed_secs=0.000466627
09:59:58 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=528.478µs elapsed_secs=0.000528478
09:59:58 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.252368ms elapsed_secs=0.009252368
09:59:58 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=476.356µs elapsed_secs=0.000476356
09:59:58 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.898µs elapsed_secs=6.8898e-5
09:59:58 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.728098ms elapsed_secs=0.006728098
09:59:58 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=156.399µs elapsed_secs=0.000156399
09:59:58 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.263µs elapsed_secs=0.000177263
09:59:58 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.765984ms elapsed_secs=0.011765984
09:59:58 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=272.27µs elapsed_secs=0.00027227
09:59:58 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=171.874µs elapsed_secs=0.000171874
09:59:58 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.276505ms elapsed_secs=0.008276505
09:59:58 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=645.781µs elapsed_secs=0.000645781
09:59:58 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.176µs elapsed_secs=8.1176e-5
09:59:58 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.174056ms elapsed_secs=0.010174056
09:59:58 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=172.577µs elapsed_secs=0.000172577
09:59:58 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.73µs elapsed_secs=8.973e-5
09:59:58 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.755075ms elapsed_secs=0.009755075
09:59:58 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=668.014µs elapsed_secs=0.000668014
09:59:58 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.046µs elapsed_secs=8.5046e-5
09:59:58 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.234361ms elapsed_secs=0.008234361
09:59:58 [DEBUG] (187) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=146.317µs elapsed_secs=0.000146317
09:59:58 [DEBUG] (187) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.863µs elapsed_secs=5.3863e-5
09:59:58 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.560298ms elapsed_secs=0.007560298
09:59:58 [DEBUG] (152) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=242.305731ms elapsed_secs=0.242305731
09:59:58 [DEBUG] (188) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.19µs elapsed_secs=3.619e-5
09:59:58 [DEBUG] (191) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.608µs elapsed_secs=3.8608e-5
09:59:58 [DEBUG] (155) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=241.417988ms elapsed_secs=0.241417988
09:59:58 [DEBUG] (192) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.804µs elapsed_secs=3.7804e-5
09:59:58 [DEBUG] (192) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=119.216µs elapsed_secs=0.000119216
09:59:58 [DEBUG] (153) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:58 [DEBUG] (192) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=67.871µs elapsed_secs=6.7871e-5
09:59:58 [DEBUG] (153) menahel::repository::task_repo: Get task by id with transaction: None
09:59:58 [DEBUG] (195) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.912µs elapsed_secs=5.7912e-5
09:59:58 [DEBUG] (187) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.997086ms elapsed_secs=0.008997086
09:59:58 [DEBUG] (191) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.331246ms elapsed_secs=0.010331246
09:59:58 [DEBUG] (191) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=128.943µs elapsed_secs=0.000128943
09:59:58 [DEBUG] (191) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=107.233µs elapsed_secs=0.000107233
09:59:58 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=847.876µs elapsed_secs=0.000847876
09:59:58 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=163.361µs elapsed_secs=0.000163361
09:59:58 [DEBUG] (176) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=235.417603ms elapsed_secs=0.235417603
09:59:58 [DEBUG] (166) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=241.038623ms elapsed_secs=0.241038623
09:59:58 [DEBUG] (196) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.39µs elapsed_secs=3.939e-5
09:59:58 [DEBUG] (196) sqlx::query: summary="DELETE FROM comments WHERE …" db.statement="\n\n\n                DELETE FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=363.924µs elapsed_secs=0.000363924
09:59:58 [DEBUG] (197) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.814µs elapsed_secs=5.0814e-5
09:59:58 [DEBUG] (197) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=154.896µs elapsed_secs=0.000154896
09:59:58 [DEBUG] (195) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.139232ms elapsed_secs=0.014139232
09:59:58 [DEBUG] (163) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:58 [DEBUG] (195) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=121.753µs elapsed_secs=0.000121753
09:59:58 [DEBUG] (197) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=51.616µs elapsed_secs=5.1616e-5
09:59:58 [DEBUG] (163) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:58 [DEBUG] (195) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.864µs elapsed_secs=5.6864e-5
09:59:58 [DEBUG] (200) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.27µs elapsed_secs=6.927e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=389.538µs elapsed_secs=0.000389538
09:59:58 [DEBUG] (195) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.666µs elapsed_secs=8.9666e-5
09:59:58 [DEBUG] (203) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.37µs elapsed_secs=4.237e-5
09:59:58 [DEBUG] (161) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=253.386836ms elapsed_secs=0.253386836
09:59:58 [DEBUG] (158) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=250.606449ms elapsed_secs=0.250606449
09:59:58 [DEBUG] (172) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=243.227003ms elapsed_secs=0.243227003
09:59:58 [DEBUG] (173) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=244.631829ms elapsed_secs=0.244631829
09:59:58 [DEBUG] (204) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.418µs elapsed_secs=8.2418e-5
09:59:58 [DEBUG] (205) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=119.259µs elapsed_secs=0.000119259
09:59:58 [DEBUG] (206) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.192µs elapsed_secs=7.4192e-5
09:59:58 [DEBUG] (207) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.566µs elapsed_secs=8.4566e-5
09:59:58 [DEBUG] (204) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=455.539µs elapsed_secs=0.000455539
09:59:58 [DEBUG] (159) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:58 [DEBUG] (204) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=237.519µs elapsed_secs=0.000237519
09:59:58 [DEBUG] (159) menahel::repository::task_repo: Get task by id with transaction: None
09:59:58 [DEBUG] (205) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=1.599608ms elapsed_secs=0.001599608
09:59:58 [DEBUG] (210) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.602µs elapsed_secs=5.2602e-5
09:59:58 [DEBUG] (156) menahel::repository::user_repo: Get user by id with transaction: None
09:59:58 [DEBUG] (200) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.248888ms elapsed_secs=0.012248888
09:59:58 [DEBUG] (213) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=96.298µs elapsed_secs=9.6298e-5
09:59:58 [DEBUG] (200) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=151.635µs elapsed_secs=0.000151635
09:59:58 [DEBUG] (200) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=151.634µs elapsed_secs=0.000151634
09:59:58 [DEBUG] (203) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.110857ms elapsed_secs=0.012110857
09:59:58 [DEBUG] (203) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.753µs elapsed_secs=6.6753e-5
09:59:58 [DEBUG] (216) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.004µs elapsed_secs=3.0004e-5
09:59:58 [DEBUG] (203) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.152µs elapsed_secs=8.4152e-5
09:59:58 [DEBUG] (200) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=371.218µs elapsed_secs=0.000371218
09:59:58 [DEBUG] (200) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=362.07µs elapsed_secs=0.00036207
09:59:58 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=434.477µs elapsed_secs=0.000434477
09:59:58 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.484µs elapsed_secs=0.000137484
09:59:58 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.510547ms elapsed_secs=0.012510547
09:59:58 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=347.616µs elapsed_secs=0.000347616
09:59:58 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.424µs elapsed_secs=9.2424e-5
09:59:58 [DEBUG] (207) sqlx::query: summary="DELETE FROM comments WHERE …" db.statement="\n\n\n                DELETE FROM comments\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=11.271987ms elapsed_secs=0.011271987
09:59:58 [DEBUG] (219) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.946µs elapsed_secs=7.5946e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.063794ms elapsed_secs=0.011063794
09:59:58 [DEBUG] (195) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=318.523µs elapsed_secs=0.000318523
09:59:58 [DEBUG] (195) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=261.215µs elapsed_secs=0.000261215
09:59:58 [DEBUG] (210) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.401475ms elapsed_secs=0.017401475
09:59:58 [DEBUG] (210) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=99.251µs elapsed_secs=9.9251e-5
09:59:58 [DEBUG] (210) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.924µs elapsed_secs=6.4924e-5
09:59:58 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=224.03µs elapsed_secs=0.00022403
09:59:58 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.515µs elapsed_secs=0.000102515
09:59:58 [DEBUG] (179) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=266.260084ms elapsed_secs=0.266260084
09:59:58 [DEBUG] (216) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.947982ms elapsed_secs=0.018947982
09:59:58 [DEBUG] (213) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=20.379048ms elapsed_secs=0.020379048
09:59:58 [DEBUG] (213) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=219.374µs elapsed_secs=0.000219374
09:59:58 [DEBUG] (216) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=277.429µs elapsed_secs=0.000277429
09:59:58 [DEBUG] (220) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=94.487µs elapsed_secs=9.4487e-5
09:59:58 [DEBUG] (213) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=336.291µs elapsed_secs=0.000336291
09:59:58 [DEBUG] (216) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=297.555µs elapsed_secs=0.000297555
09:59:58 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=504.197µs elapsed_secs=0.000504197
09:59:58 [DEBUG] (220) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=590.87µs elapsed_secs=0.00059087
09:59:58 [DEBUG] (216) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=324.501µs elapsed_secs=0.000324501
09:59:58 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.301µs elapsed_secs=8.5301e-5
09:59:58 [DEBUG] (216) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.968µs elapsed_secs=8.4968e-5
09:59:58 [DEBUG] (167) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=273.44631ms elapsed_secs=0.27344631
09:59:58 [DEBUG] (223) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=194.899µs elapsed_secs=0.000194899
09:59:58 [DEBUG] (224) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=76.75µs elapsed_secs=7.675e-5
09:59:58 [DEBUG] (224) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=165.874µs elapsed_secs=0.000165874
09:59:58 [DEBUG] (162) menahel::repository::user_repo: Get user by id with transaction: None
09:59:58 [DEBUG] (219) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.561966ms elapsed_secs=0.017561966
09:59:58 [DEBUG] (219) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=408.087µs elapsed_secs=0.000408087
09:59:58 [DEBUG] (219) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=249.677µs elapsed_secs=0.000249677
09:59:58 [DEBUG] (227) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.293µs elapsed_secs=4.5293e-5
09:59:58 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=386.062µs elapsed_secs=0.000386062
09:59:58 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.313µs elapsed_secs=0.000106313
09:59:58 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.415049ms elapsed_secs=0.011415049
09:59:58 [DEBUG] (200) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.82553ms elapsed_secs=0.01182553
09:59:58 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.405822ms elapsed_secs=0.009405822
09:59:58 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=176.336µs elapsed_secs=0.000176336
09:59:58 [DEBUG] (200) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=361.115µs elapsed_secs=0.000361115
09:59:58 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=357.347µs elapsed_secs=0.000357347
09:59:58 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=489.644µs elapsed_secs=0.000489644
09:59:58 [DEBUG] (200) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.455µs elapsed_secs=0.000136455
09:59:58 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.521µs elapsed_secs=6.8521e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.649601ms elapsed_secs=0.009649601
09:59:58 [DEBUG] (223) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.262912ms elapsed_secs=0.011262912
09:59:58 [DEBUG] (223) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=107.804µs elapsed_secs=0.000107804
09:59:58 [DEBUG] (195) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=481.033µs elapsed_secs=0.000481033
09:59:58 [DEBUG] (223) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.637µs elapsed_secs=7.7637e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.16µs elapsed_secs=0.00011116
09:59:58 [DEBUG] (223) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=408.86µs elapsed_secs=0.00040886
09:59:58 [DEBUG] (223) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.288µs elapsed_secs=9.4288e-5
09:59:58 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.657437ms elapsed_secs=0.008657437
09:59:58 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=159.074µs elapsed_secs=0.000159074
09:59:58 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=198.314µs elapsed_secs=0.000198314
09:59:58 [DEBUG] (227) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.781587ms elapsed_secs=0.010781587
09:59:58 [DEBUG] (227) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=146.624µs elapsed_secs=0.000146624
09:59:58 [DEBUG] (227) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=73.106µs elapsed_secs=7.3106e-5
09:59:58 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=227.721µs elapsed_secs=0.000227721
09:59:58 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=257.409µs elapsed_secs=0.000257409
09:59:58 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.327165ms elapsed_secs=0.009327165
09:59:58 [DEBUG] (216) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.549346ms elapsed_secs=0.009549346
09:59:58 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=305.477µs elapsed_secs=0.000305477
09:59:58 [DEBUG] (216) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=407.733µs elapsed_secs=0.000407733
09:59:58 [DEBUG] (216) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.368µs elapsed_secs=8.5368e-5
09:59:58 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.391µs elapsed_secs=0.000112391
09:59:58 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.015651ms elapsed_secs=0.010015651
09:59:58 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=176.175µs elapsed_secs=0.000176175
09:59:58 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.296µs elapsed_secs=7.1296e-5
09:59:58 [DEBUG] (200) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.4986ms elapsed_secs=0.0064986
09:59:58 [DEBUG] (200) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=169.661µs elapsed_secs=0.000169661
09:59:58 [DEBUG] (200) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.765µs elapsed_secs=0.000121765
09:59:58 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.990657ms elapsed_secs=0.007990657
09:59:58 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.20377ms elapsed_secs=0.00820377
09:59:58 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=363.391µs elapsed_secs=0.000363391
09:59:58 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=222.28µs elapsed_secs=0.00022228
09:59:58 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.994µs elapsed_secs=6.7994e-5
09:59:58 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.074µs elapsed_secs=6.2074e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.986429ms elapsed_secs=0.007986429
09:59:58 [DEBUG] (195) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=392.955µs elapsed_secs=0.000392955
09:59:58 [DEBUG] (195) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.804µs elapsed_secs=8.0804e-5
09:59:58 [DEBUG] (223) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.468107ms elapsed_secs=0.009468107
09:59:58 [DEBUG] (223) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=337.596µs elapsed_secs=0.000337596
09:59:58 [DEBUG] (223) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=298.249µs elapsed_secs=0.000298249
09:59:58 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.921487ms elapsed_secs=0.008921487
09:59:58 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=633.779µs elapsed_secs=0.000633779
09:59:58 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.582µs elapsed_secs=6.6582e-5
09:59:58 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.704426ms elapsed_secs=0.009704426
09:59:58 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=388.131µs elapsed_secs=0.000388131
09:59:58 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.026µs elapsed_secs=7.1026e-5
09:59:58 [DEBUG] (216) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.790338ms elapsed_secs=0.007790338
09:59:58 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.03812ms elapsed_secs=0.00803812
09:59:58 [DEBUG] (216) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=182.693µs elapsed_secs=0.000182693
09:59:58 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=356.652µs elapsed_secs=0.000356652
09:59:58 [DEBUG] (216) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.976µs elapsed_secs=0.000108976
09:59:58 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.323µs elapsed_secs=8.6323e-5
09:59:58 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.075258ms elapsed_secs=0.008075258
09:59:58 [DEBUG] (200) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.194391ms elapsed_secs=0.006194391
09:59:58 [DEBUG] (200) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=232.65µs elapsed_secs=0.00023265
09:59:58 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=381.273µs elapsed_secs=0.000381273
09:59:58 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.167µs elapsed_secs=0.000130167
09:59:58 [DEBUG] (200) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.56µs elapsed_secs=0.00012756
09:59:58 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.525444ms elapsed_secs=0.006525444
09:59:58 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.005523ms elapsed_secs=0.007005523
09:59:58 [DEBUG] (195) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.06788ms elapsed_secs=0.00706788
09:59:58 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=282.388µs elapsed_secs=0.000282388
09:59:58 [DEBUG] (191) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=472.752µs elapsed_secs=0.000472752
09:59:58 [DEBUG] (191) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.147µs elapsed_secs=9.8147e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=196.078µs elapsed_secs=0.000196078
09:59:58 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=199.628µs elapsed_secs=0.000199628
09:59:58 [DEBUG] (195) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.084µs elapsed_secs=7.6084e-5
09:59:58 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.520224ms elapsed_secs=0.006520224
09:59:58 [DEBUG] (223) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.296782ms elapsed_secs=0.008296782
09:59:58 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=335.266µs elapsed_secs=0.000335266
09:59:58 [DEBUG] (223) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=137.057µs elapsed_secs=0.000137057
09:59:58 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.914µs elapsed_secs=0.000106914
09:59:58 [DEBUG] (223) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.502µs elapsed_secs=7.6502e-5
09:59:58 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.709075ms elapsed_secs=0.005709075
09:59:58 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=559.89µs elapsed_secs=0.00055989
09:59:58 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.796µs elapsed_secs=6.7796e-5
09:59:58 [DEBUG] (216) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.091451ms elapsed_secs=0.007091451
09:59:58 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.388199ms elapsed_secs=0.007388199
09:59:58 [DEBUG] (216) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=430.155µs elapsed_secs=0.000430155
09:59:58 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=262.354µs elapsed_secs=0.000262354
09:59:58 [DEBUG] (216) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.386µs elapsed_secs=7.4386e-5
09:59:58 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.153µs elapsed_secs=7.1153e-5
09:59:58 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.530593ms elapsed_secs=0.007530593
09:59:58 [DEBUG] (200) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.711099ms elapsed_secs=0.007711099
09:59:58 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=376.065µs elapsed_secs=0.000376065
09:59:58 [DEBUG] (200) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=450.44µs elapsed_secs=0.00045044
09:59:58 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.724µs elapsed_secs=0.000104724
09:59:58 [DEBUG] (200) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.808µs elapsed_secs=0.000122808
09:59:58 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.974146ms elapsed_secs=0.008974146
09:59:58 [DEBUG] (191) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.233066ms elapsed_secs=0.009233066
09:59:58 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=365.851µs elapsed_secs=0.000365851
09:59:58 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.847µs elapsed_secs=9.8847e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.653749ms elapsed_secs=0.007653749
09:59:58 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.886483ms elapsed_secs=0.006886483
09:59:58 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=247.958µs elapsed_secs=0.000247958
09:59:58 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.975µs elapsed_secs=9.0975e-5
09:59:58 [DEBUG] (223) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.246092ms elapsed_secs=0.009246092
09:59:58 [DEBUG] (223) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=291.774µs elapsed_secs=0.000291774
09:59:58 [DEBUG] (223) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.225µs elapsed_secs=7.1225e-5
09:59:58 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.573126ms elapsed_secs=0.008573126
09:59:58 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.972953ms elapsed_secs=0.008972953
09:59:58 [DEBUG] (216) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.064896ms elapsed_secs=0.009064896
09:59:58 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=751.524µs elapsed_secs=0.000751524
09:59:58 [DEBUG] (213) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=463.642µs elapsed_secs=0.000463642
09:59:58 [DEBUG] (216) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=414.28µs elapsed_secs=0.00041428
09:59:58 [DEBUG] (213) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.732µs elapsed_secs=7.2732e-5
09:59:58 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.921µs elapsed_secs=6.7921e-5
09:59:58 [DEBUG] (216) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.525µs elapsed_secs=5.8525e-5
09:59:58 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.987481ms elapsed_secs=0.007987481
09:59:58 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=227.271µs elapsed_secs=0.000227271
09:59:58 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.844µs elapsed_secs=9.6844e-5
09:59:58 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.208879ms elapsed_secs=0.009208879
09:59:58 [DEBUG] (200) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.417246ms elapsed_secs=0.009417246
09:59:58 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.231094ms elapsed_secs=0.010231094
09:59:58 [DEBUG] (213) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.347345ms elapsed_secs=0.007347345
09:59:58 [DEBUG] (223) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.43929ms elapsed_secs=0.00943929
09:59:58 [DEBUG] (223) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=267.687µs elapsed_secs=0.000267687
09:59:58 [DEBUG] (223) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.317µs elapsed_secs=6.2317e-5
09:59:58 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.743018ms elapsed_secs=0.008743018
09:59:58 [DEBUG] (227) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=196.621µs elapsed_secs=0.000196621
09:59:58 [DEBUG] (216) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.46232ms elapsed_secs=0.00846232
09:59:58 [DEBUG] (227) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.411µs elapsed_secs=7.8411e-5
09:59:58 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.56815ms elapsed_secs=0.00856815
09:59:58 [DEBUG] (223) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.998942ms elapsed_secs=0.007998942
09:59:58 [DEBUG] (227) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.042149ms elapsed_secs=0.009042149
09:59:58 [DEBUG] (184) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=234.802305ms elapsed_secs=0.234802305
09:59:58 [DEBUG] (228) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.713µs elapsed_secs=5.9713e-5
09:59:58 [DEBUG] (228) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=262.903µs elapsed_secs=0.000262903
09:59:58 [DEBUG] (231) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.988µs elapsed_secs=5.1988e-5
09:59:58 [DEBUG] (187) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=232.139508ms elapsed_secs=0.232139508
09:59:58 [DEBUG] (232) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.724µs elapsed_secs=4.8724e-5
09:59:58 [DEBUG] (232) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n            SELECT id, user_id, task_id, content, created_at, updated_at\n            FROM comments\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=161.872µs elapsed_secs=0.000161872
09:59:58 [DEBUG] (235) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.489µs elapsed_secs=4.7489e-5
09:59:58 [DEBUG] (231) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.653661ms elapsed_secs=0.015653661
09:59:58 [DEBUG] (231) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=99.189µs elapsed_secs=9.9189e-5
09:59:58 [DEBUG] (231) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=125.3µs elapsed_secs=0.0001253
09:59:58 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=355.023µs elapsed_secs=0.000355023
09:59:58 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=321.307µs elapsed_secs=0.000321307
09:59:58 [DEBUG] (235) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.137819ms elapsed_secs=0.013137819
09:59:58 [DEBUG] (235) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=108.092µs elapsed_secs=0.000108092
09:59:58 [DEBUG] (235) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=120.635µs elapsed_secs=0.000120635
09:59:58 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=342.588µs elapsed_secs=0.000342588
09:59:58 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.659µs elapsed_secs=0.000116659
09:59:58 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.582431ms elapsed_secs=0.011582431
09:59:58 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=848.848µs elapsed_secs=0.000848848
09:59:58 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.262µs elapsed_secs=7.2262e-5
09:59:58 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.335931ms elapsed_secs=0.011335931
09:59:58 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=184.915µs elapsed_secs=0.000184915
09:59:58 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.791µs elapsed_secs=0.000101791
09:59:58 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.644688ms elapsed_secs=0.008644688
09:59:58 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=215.926µs elapsed_secs=0.000215926
09:59:58 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=355.512µs elapsed_secs=0.000355512
09:59:58 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.054497ms elapsed_secs=0.009054497
09:59:58 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=163.552µs elapsed_secs=0.000163552
09:59:58 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.282µs elapsed_secs=0.000141282
09:59:58 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.348307ms elapsed_secs=0.009348307
09:59:58 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=180.651µs elapsed_secs=0.000180651
09:59:58 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.549µs elapsed_secs=0.000104549
09:59:58 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.330199ms elapsed_secs=0.011330199
09:59:58 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=133.729µs elapsed_secs=0.000133729
09:59:58 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.543µs elapsed_secs=0.000151543
09:59:58 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.112785ms elapsed_secs=0.010112785
09:59:58 [DEBUG] (231) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=177.379µs elapsed_secs=0.000177379
09:59:58 [DEBUG] (231) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.306µs elapsed_secs=8.7306e-5
09:59:58 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.693007ms elapsed_secs=0.006693007
09:59:58 [DEBUG] (235) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=276.105µs elapsed_secs=0.000276105
09:59:58 [DEBUG] (235) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.215µs elapsed_secs=9.8215e-5
09:59:58 [DEBUG] (195) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=236.21153ms elapsed_secs=0.23621153
09:59:58 [DEBUG] (236) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.779µs elapsed_secs=3.6779e-5
09:59:58 [DEBUG] (236) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=254.34µs elapsed_secs=0.00025434
09:59:58 [DEBUG] (231) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.074019ms elapsed_secs=0.008074019
09:59:58 [DEBUG] (239) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.208µs elapsed_secs=4.3208e-5
09:59:58 [DEBUG] (239) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.126271ms elapsed_secs=0.014126271
09:59:58 [DEBUG] (239) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=106.021µs elapsed_secs=0.000106021
09:59:58 [DEBUG] (239) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.342µs elapsed_secs=7.8342e-5
09:59:58 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=243.355µs elapsed_secs=0.000243355
09:59:58 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=391.954µs elapsed_secs=0.000391954
09:59:58 [DEBUG] (235) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.693746ms elapsed_secs=0.010693746
09:59:58 [DEBUG] (191) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=258.668502ms elapsed_secs=0.258668502
09:59:58 [DEBUG] (240) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.135µs elapsed_secs=4.7135e-5
09:59:58 [DEBUG] (240) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n            SELECT id, user_id, task_id, content, created_at, updated_at\n            FROM comments\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=175.566µs elapsed_secs=0.000175566
09:59:58 [DEBUG] (200) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=243.922518ms elapsed_secs=0.243922518
09:59:58 [DEBUG] (243) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.201µs elapsed_secs=5.6201e-5
09:59:58 [DEBUG] (244) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.333µs elapsed_secs=4.5333e-5
09:59:58 [DEBUG] (244) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=240.387µs elapsed_secs=0.000240387
09:59:58 [DEBUG] (247) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=149.735µs elapsed_secs=0.000149735
09:59:58 [DEBUG] (203) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=254.227692ms elapsed_secs=0.254227692
09:59:58 [DEBUG] (248) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.84µs elapsed_secs=8.184e-5
09:59:58 [DEBUG] (243) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.308904ms elapsed_secs=0.011308904
09:59:58 [DEBUG] (248) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=3 elapsed=172.286µs elapsed_secs=0.000172286
09:59:58 [DEBUG] (243) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.235µs elapsed_secs=8.7235e-5
09:59:58 [DEBUG] (243) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=73.883µs elapsed_secs=7.3883e-5
09:59:58 [DEBUG] (243) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=265.111µs elapsed_secs=0.000265111
09:59:58 [DEBUG] (243) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.65µs elapsed_secs=9.165e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.428µs elapsed_secs=3.8428e-5
09:59:58 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.549138ms elapsed_secs=0.009549138
09:59:58 [DEBUG] (213) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=247.978529ms elapsed_secs=0.247978529
09:59:58 [DEBUG] (216) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=246.152014ms elapsed_secs=0.246152014
09:59:58 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=434.139µs elapsed_secs=0.000434139
09:59:58 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=158.793µs elapsed_secs=0.000158793
09:59:58 [DEBUG] (252) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.314µs elapsed_secs=3.0314e-5
09:59:58 [DEBUG] (253) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.333µs elapsed_secs=3.5333e-5
09:59:58 [DEBUG] (252) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=306.288µs elapsed_secs=0.000306288
09:59:58 [DEBUG] (247) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.362847ms elapsed_secs=0.011362847
09:59:58 [DEBUG] (211) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
09:59:58 [DEBUG] (253) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=299.555µs elapsed_secs=0.000299555
09:59:58 [DEBUG] (214) menahel::repository::user_repo: Get user by id with transaction: None
09:59:58 [DEBUG] (252) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=159.312µs elapsed_secs=0.000159312
09:59:58 [DEBUG] (247) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=180.692µs elapsed_secs=0.000180692
09:59:58 [DEBUG] (211) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:58 [DEBUG] (247) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=139.33µs elapsed_secs=0.00013933
09:59:58 [DEBUG] (252) sqlx::query: summary="UPDATE comments SET content …" db.statement="\n\n\n                UPDATE comments\n                SET content = $1, user_id = $2, task_id = $3, updated_at = $4\n                WHERE id = $5\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=211.934µs elapsed_secs=0.000211934
09:59:58 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=335.507µs elapsed_secs=0.000335507
09:59:58 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=190.066µs elapsed_secs=0.000190066
09:59:58 [DEBUG] (256) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.616µs elapsed_secs=4.7616e-5
09:59:58 [DEBUG] (219) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=250.483788ms elapsed_secs=0.250483788
09:59:58 [DEBUG] (257) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.411µs elapsed_secs=8.3411e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.519844ms elapsed_secs=0.012519844
09:59:58 [DEBUG] (251) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=178.864µs elapsed_secs=0.000178864
09:59:58 [DEBUG] (251) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=125.824µs elapsed_secs=0.000125824
09:59:58 [DEBUG] (251) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=222.859µs elapsed_secs=0.000222859
09:59:58 [DEBUG] (260) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.066µs elapsed_secs=3.9066e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=344.343µs elapsed_secs=0.000344343
09:59:58 [DEBUG] (210) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=264.171338ms elapsed_secs=0.264171338
09:59:58 [DEBUG] (261) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.156µs elapsed_secs=4.5156e-5
09:59:58 [DEBUG] (261) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=194.941µs elapsed_secs=0.000194941
09:59:58 [DEBUG] (264) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.413µs elapsed_secs=4.8413e-5
09:59:58 [DEBUG] (267) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=31.442µs elapsed_secs=3.1442e-5
09:59:58 [DEBUG] (256) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.010342ms elapsed_secs=0.013010342
09:59:58 [DEBUG] (256) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.312µs elapsed_secs=8.7312e-5
09:59:58 [DEBUG] (256) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.636µs elapsed_secs=6.2636e-5
09:59:58 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=261.82µs elapsed_secs=0.00026182
09:59:58 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.82µs elapsed_secs=0.00011982
09:59:58 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.867181ms elapsed_secs=0.009867181
09:59:58 [DEBUG] (243) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.16234ms elapsed_secs=0.01016234
09:59:58 [DEBUG] (227) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=248.288797ms elapsed_secs=0.248288797
09:59:58 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=725.174µs elapsed_secs=0.000725174
09:59:58 [DEBUG] (243) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=311.429µs elapsed_secs=0.000311429
09:59:58 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.604µs elapsed_secs=0.000136604
09:59:58 [DEBUG] (243) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.34µs elapsed_secs=9.934e-5
09:59:58 [DEBUG] (268) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=261.622µs elapsed_secs=0.000261622
09:59:58 [DEBUG] (260) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.270863ms elapsed_secs=0.011270863
09:59:58 [DEBUG] (268) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=384.757µs elapsed_secs=0.000384757
09:59:58 [DEBUG] (225) menahel::repository::user_repo: Get user by id with transaction: None
09:59:58 [DEBUG] (260) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=152.376µs elapsed_secs=0.000152376
09:59:58 [DEBUG] (260) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.967µs elapsed_secs=7.6967e-5
09:59:58 [DEBUG] (260) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=393.646µs elapsed_secs=0.000393646
09:59:58 [DEBUG] (260) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.329µs elapsed_secs=0.000108329
09:59:58 [DEBUG] (271) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.324µs elapsed_secs=7.7324e-5
09:59:58 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.965307ms elapsed_secs=0.011965307
09:59:58 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=324.057µs elapsed_secs=0.000324057
09:59:58 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.588µs elapsed_secs=5.8588e-5
09:59:58 [DEBUG] (223) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=257.800786ms elapsed_secs=0.257800786
09:59:58 [DEBUG] (267) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.50755ms elapsed_secs=0.01550755
09:59:58 [DEBUG] (264) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.945231ms elapsed_secs=0.015945231
09:59:58 [DEBUG] (272) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.551µs elapsed_secs=4.5551e-5
09:59:58 [DEBUG] (267) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.248µs elapsed_secs=0.000133248
09:59:58 [DEBUG] (264) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=67.648µs elapsed_secs=6.7648e-5
09:59:58 [DEBUG] (267) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.09µs elapsed_secs=8.209e-5
09:59:58 [DEBUG] (264) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=73.391µs elapsed_secs=7.3391e-5
09:59:58 [DEBUG] (272) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=212.214µs elapsed_secs=0.000212214
09:59:58 [DEBUG] (221) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:58 [DEBUG] (264) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=834.682µs elapsed_secs=0.000834682
09:59:58 [DEBUG] (272) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=226.643µs elapsed_secs=0.000226643
09:59:58 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.140797ms elapsed_secs=0.001140797
09:59:58 [DEBUG] (221) menahel::repository::task_repo: Get task by id with transaction: None
09:59:58 [DEBUG] (264) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.423µs elapsed_secs=9.4423e-5
09:59:58 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.692µs elapsed_secs=9.9692e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.442763ms elapsed_secs=0.009442763
09:59:58 [DEBUG] (251) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=555.928µs elapsed_secs=0.000555928
09:59:58 [DEBUG] (275) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.879µs elapsed_secs=5.0879e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.58µs elapsed_secs=9.958e-5
09:59:58 [DEBUG] (271) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.09487ms elapsed_secs=0.01109487
09:59:58 [DEBUG] (271) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.44µs elapsed_secs=0.00013344
09:59:58 [DEBUG] (271) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=118.11µs elapsed_secs=0.00011811
09:59:58 [DEBUG] (271) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.074867ms elapsed_secs=0.001074867
09:59:58 [DEBUG] (271) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.724µs elapsed_secs=0.000140724
09:59:58 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.431083ms elapsed_secs=0.010431083
09:59:58 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.726741ms elapsed_secs=0.008726741
09:59:58 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=653.527µs elapsed_secs=0.000653527
09:59:58 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=690.71µs elapsed_secs=0.00069071
09:59:58 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.947µs elapsed_secs=0.000127947
09:59:58 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.289µs elapsed_secs=8.2289e-5
09:59:58 [DEBUG] (243) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.115715ms elapsed_secs=0.011115715
09:59:58 [DEBUG] (243) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=391.795µs elapsed_secs=0.000391795
09:59:58 [DEBUG] (243) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.971µs elapsed_secs=8.8971e-5
09:59:58 [DEBUG] (260) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.852061ms elapsed_secs=0.009852061
09:59:58 [DEBUG] (275) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.168251ms elapsed_secs=0.011168251
09:59:58 [DEBUG] (275) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.654µs elapsed_secs=0.000104654
09:59:58 [DEBUG] (260) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=214.617µs elapsed_secs=0.000214617
09:59:58 [DEBUG] (275) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=89.996µs elapsed_secs=8.9996e-5
09:59:58 [DEBUG] (260) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.218µs elapsed_secs=7.8218e-5
09:59:58 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=287.455µs elapsed_secs=0.000287455
09:59:58 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.323µs elapsed_secs=9.3323e-5
09:59:58 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.085861ms elapsed_secs=0.008085861
09:59:58 [DEBUG] (264) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.651991ms elapsed_secs=0.006651991
09:59:58 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.618805ms elapsed_secs=0.006618805
09:59:58 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=225.276µs elapsed_secs=0.000225276
09:59:58 [DEBUG] (264) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=402.638µs elapsed_secs=0.000402638
09:59:58 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=635.502µs elapsed_secs=0.000635502
09:59:58 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.63µs elapsed_secs=0.00014663
09:59:58 [DEBUG] (264) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.217µs elapsed_secs=9.8217e-5
09:59:58 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.544µs elapsed_secs=7.7544e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.850252ms elapsed_secs=0.008850252
09:59:58 [DEBUG] (251) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=616.401µs elapsed_secs=0.000616401
09:59:58 [DEBUG] (251) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.339µs elapsed_secs=0.000101339
09:59:58 [DEBUG] (271) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.385123ms elapsed_secs=0.008385123
09:59:58 [DEBUG] (271) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=682.149µs elapsed_secs=0.000682149
09:59:58 [DEBUG] (271) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.369µs elapsed_secs=7.8369e-5
09:59:58 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.662133ms elapsed_secs=0.008662133
09:59:58 [DEBUG] (239) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=280.191µs elapsed_secs=0.000280191
09:59:58 [DEBUG] (239) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.761µs elapsed_secs=6.8761e-5
09:59:58 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.00565ms elapsed_secs=0.01000565
09:59:58 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=187.316µs elapsed_secs=0.000187316
09:59:58 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.083µs elapsed_secs=6.8083e-5
09:59:58 [DEBUG] (243) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.945843ms elapsed_secs=0.010945843
09:59:58 [DEBUG] (243) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=168.614µs elapsed_secs=0.000168614
09:59:58 [DEBUG] (243) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.537µs elapsed_secs=0.000102537
09:59:58 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.528764ms elapsed_secs=0.009528764
09:59:58 [DEBUG] (260) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.766262ms elapsed_secs=0.009766262
09:59:58 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.248031ms elapsed_secs=0.010248031
09:59:58 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=657.59µs elapsed_secs=0.00065759
09:59:58 [DEBUG] (260) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=674.662µs elapsed_secs=0.000674662
09:59:58 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=558.05µs elapsed_secs=0.00055805
09:59:58 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.668µs elapsed_secs=0.000159668
09:59:58 [DEBUG] (260) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.578µs elapsed_secs=7.3578e-5
09:59:58 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.432µs elapsed_secs=7.0432e-5
09:59:58 [DEBUG] (264) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.534554ms elapsed_secs=0.011534554
09:59:58 [DEBUG] (264) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=199.877µs elapsed_secs=0.000199877
09:59:58 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.352367ms elapsed_secs=0.012352367
09:59:58 [DEBUG] (264) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=229.495µs elapsed_secs=0.000229495
09:59:58 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=309.155µs elapsed_secs=0.000309155
09:59:58 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.695µs elapsed_secs=7.3695e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.216991ms elapsed_secs=0.010216991
09:59:58 [DEBUG] (271) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.730875ms elapsed_secs=0.008730875
09:59:58 [DEBUG] (239) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.907253ms elapsed_secs=0.008907253
09:59:58 [DEBUG] (251) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=575.969µs elapsed_secs=0.000575969
09:59:58 [DEBUG] (271) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=353.641µs elapsed_secs=0.000353641
09:59:58 [DEBUG] (251) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.886µs elapsed_secs=7.1886e-5
09:59:58 [DEBUG] (271) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.003µs elapsed_secs=9.0003e-5
09:59:58 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.855192ms elapsed_secs=0.010855192
09:59:58 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=379.703µs elapsed_secs=0.000379703
09:59:58 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.47µs elapsed_secs=7.347e-5
09:59:58 [DEBUG] (260) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.578222ms elapsed_secs=0.007578222
09:59:58 [DEBUG] (260) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=173.519µs elapsed_secs=0.000173519
09:59:58 [DEBUG] (260) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.954µs elapsed_secs=7.8954e-5
09:59:58 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.80514ms elapsed_secs=0.00880514
09:59:58 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=179.764µs elapsed_secs=0.000179764
09:59:58 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.131µs elapsed_secs=7.9131e-5
09:59:58 [DEBUG] (243) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.962865ms elapsed_secs=0.011962865
09:59:58 [DEBUG] (243) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=161.095µs elapsed_secs=0.000161095
09:59:58 [DEBUG] (243) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.83µs elapsed_secs=7.983e-5
09:59:58 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.102071ms elapsed_secs=0.014102071
09:59:58 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=205.835µs elapsed_secs=0.000205835
09:59:58 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.268µs elapsed_secs=0.000119268
09:59:58 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.413093ms elapsed_secs=0.012413093
09:59:58 [DEBUG] (247) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=314.076µs elapsed_secs=0.000314076
09:59:58 [DEBUG] (264) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.186737ms elapsed_secs=0.013186737
09:59:58 [DEBUG] (247) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=386.459µs elapsed_secs=0.000386459
09:59:58 [DEBUG] (264) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=367.788µs elapsed_secs=0.000367788
09:59:58 [DEBUG] (264) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.275µs elapsed_secs=7.8275e-5
09:59:58 [DEBUG] (271) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.894903ms elapsed_secs=0.008894903
09:59:58 [DEBUG] (271) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=210.318µs elapsed_secs=0.000210318
09:59:58 [DEBUG] (271) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.056µs elapsed_secs=8.0056e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.915392ms elapsed_secs=0.007915392
09:59:58 [DEBUG] (251) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=303.844µs elapsed_secs=0.000303844
09:59:58 [DEBUG] (251) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.084µs elapsed_secs=9.0084e-5
09:59:58 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.950699ms elapsed_secs=0.007950699
09:59:58 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=531.392µs elapsed_secs=0.000531392
09:59:58 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.342µs elapsed_secs=9.6342e-5
09:59:58 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.743121ms elapsed_secs=0.006743121
09:59:58 [DEBUG] (243) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.945703ms elapsed_secs=0.006945703
09:59:58 [DEBUG] (260) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.443344ms elapsed_secs=0.007443344
09:59:58 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=541.361µs elapsed_secs=0.000541361
09:59:58 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.87µs elapsed_secs=9.987e-5
09:59:58 [DEBUG] (260) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=211.183µs elapsed_secs=0.000211183
09:59:58 [DEBUG] (260) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.528µs elapsed_secs=8.5528e-5
09:59:58 [DEBUG] (264) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.966622ms elapsed_secs=0.005966622
09:59:58 [DEBUG] (247) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.246854ms elapsed_secs=0.006246854
09:59:58 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.059056ms elapsed_secs=0.008059056
09:59:58 [DEBUG] (264) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=217.834µs elapsed_secs=0.000217834
09:59:58 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=306.371µs elapsed_secs=0.000306371
09:59:58 [DEBUG] (264) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.746µs elapsed_secs=0.000172746
09:59:58 [DEBUG] (276) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.996µs elapsed_secs=3.6996e-5
09:59:58 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.207µs elapsed_secs=9.2207e-5
09:59:58 [DEBUG] (271) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.713901ms elapsed_secs=0.005713901
09:59:58 [DEBUG] (271) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=206.995µs elapsed_secs=0.000206995
09:59:58 [DEBUG] (271) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.221µs elapsed_secs=8.1221e-5
09:59:58 [DEBUG] (251) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.566826ms elapsed_secs=0.005566826
09:59:58 [DEBUG] (276) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=8.33876ms elapsed_secs=0.00833876
09:59:58 [INFO] Created project: Project { id: Some(1), name: "duplicate_test_1_20250609095958" }
09:59:58 [DEBUG] (277) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.327µs elapsed_secs=4.1327e-5
09:59:58 [DEBUG] (278) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=26.708µs elapsed_secs=2.6708e-5
09:59:58 [DEBUG] (278) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=172.372µs elapsed_secs=0.000172372
09:59:58 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.376379ms elapsed_secs=0.006376379
09:59:58 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.644406ms elapsed_secs=0.006644406
09:59:58 [DEBUG] (275) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=694.477µs elapsed_secs=0.000694477
09:59:58 [DEBUG] (281) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.271µs elapsed_secs=7.3271e-5
09:59:58 [DEBUG] (275) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.577µs elapsed_secs=9.8577e-5
09:59:58 [DEBUG] (282) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.459µs elapsed_secs=5.0459e-5
09:59:58 [DEBUG] (285) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.015µs elapsed_secs=5.6015e-5
09:59:58 [DEBUG] (260) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.304287ms elapsed_secs=0.008304287
09:59:58 [DEBUG] (286) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.457µs elapsed_secs=6.2457e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.411µs elapsed_secs=4.7411e-5
09:59:58 [DEBUG] (277) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=8.829363ms elapsed_secs=0.008829363
09:59:58 [INFO] Created project: Project { id: Some(1), name: "create_test_20250609095958" }
09:59:58 [DEBUG] (290) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=157.758µs elapsed_secs=0.000157758
09:59:58 [DEBUG] (290) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=155.055µs elapsed_secs=0.000155055
09:59:58 [DEBUG] (249) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "create_test_20250609095958" })
09:59:58 [DEBUG] (264) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.577711ms elapsed_secs=0.009577711
09:59:58 [DEBUG] (281) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.102523ms elapsed_secs=0.010102523
09:59:58 [DEBUG] (292) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=116.594µs elapsed_secs=0.000116594
09:59:58 [DEBUG] (281) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.464µs elapsed_secs=9.7464e-5
09:59:58 [DEBUG] (294) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.353µs elapsed_secs=3.5353e-5
09:59:58 [DEBUG] (281) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.418µs elapsed_secs=6.4418e-5
09:59:58 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=318.576µs elapsed_secs=0.000318576
09:59:58 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=373.469µs elapsed_secs=0.000373469
09:59:58 [DEBUG] (285) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.383342ms elapsed_secs=0.011383342
09:59:58 [DEBUG] (297) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.963µs elapsed_secs=5.0963e-5
09:59:58 [DEBUG] (285) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=270.919µs elapsed_secs=0.000270919
09:59:58 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.355944ms elapsed_secs=0.011355944
09:59:58 [DEBUG] (285) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=267.744µs elapsed_secs=0.000267744
09:59:58 [DEBUG] (285) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=702.816µs elapsed_secs=0.000702816
09:59:58 [DEBUG] (285) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.774µs elapsed_secs=0.000108774
09:59:58 [DEBUG] (298) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=95.139µs elapsed_secs=9.5139e-5
09:59:58 [DEBUG] (271) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.53737ms elapsed_secs=0.01253737
09:59:58 [DEBUG] (298) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=253.18µs elapsed_secs=0.00025318
09:59:58 [DEBUG] (299) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.238µs elapsed_secs=7.8238e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.824349ms elapsed_secs=0.012824349
09:59:58 [DEBUG] (289) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=306.76µs elapsed_secs=0.00030676
09:59:58 [DEBUG] (302) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.556µs elapsed_secs=6.7556e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=93.389µs elapsed_secs=9.3389e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=302.92µs elapsed_secs=0.00030292
09:59:58 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.159µs elapsed_secs=0.000177159
09:59:58 [DEBUG] (275) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.540525ms elapsed_secs=0.010540525
09:59:58 [DEBUG] (294) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.409815ms elapsed_secs=0.014409815
09:59:58 [DEBUG] (303) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.167µs elapsed_secs=8.2167e-5
09:59:58 [DEBUG] (294) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=152.037µs elapsed_secs=0.000152037
09:59:58 [DEBUG] (294) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=114.437µs elapsed_secs=0.000114437
09:59:58 [DEBUG] (297) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.958352ms elapsed_secs=0.012958352
09:59:58 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=366.471µs elapsed_secs=0.000366471
09:59:58 [DEBUG] (297) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=103.871µs elapsed_secs=0.000103871
09:59:58 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.978µs elapsed_secs=9.2978e-5
09:59:58 [DEBUG] (297) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.083µs elapsed_secs=8.5083e-5
09:59:58 [DEBUG] (297) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=218.635µs elapsed_secs=0.000218635
09:59:58 [DEBUG] (299) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=10.454065ms elapsed_secs=0.010454065
09:59:58 [DEBUG] (297) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.177µs elapsed_secs=8.1177e-5
09:59:58 [INFO] Created project: Project { id: Some(1), name: "delete_test_20250609095958" }
09:59:58 [DEBUG] (304) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=23.625µs elapsed_secs=2.3625e-5
09:59:58 [DEBUG] (304) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=136.807µs elapsed_secs=0.000136807
09:59:58 [DEBUG] (269) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "delete_test_20250609095958" })
09:59:58 [DEBUG] (302) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.797899ms elapsed_secs=0.011797899
09:59:58 [DEBUG] (302) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.724µs elapsed_secs=8.1724e-5
09:59:58 [DEBUG] (302) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.264µs elapsed_secs=6.3264e-5
09:59:58 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=160.322µs elapsed_secs=0.000160322
09:59:58 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.366µs elapsed_secs=7.7366e-5
09:59:58 [DEBUG] (285) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.621082ms elapsed_secs=0.006621082
09:59:58 [DEBUG] (303) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=7.886669ms elapsed_secs=0.007886669
09:59:58 [INFO] Created project: Project { id: Some(1), name: "get_all_projects_test_20250609095958_1" }
09:59:58 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.382086ms elapsed_secs=0.008382086
09:59:58 [DEBUG] (285) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.344056ms elapsed_secs=0.001344056
09:59:58 [DEBUG] (305) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.236µs elapsed_secs=6.9236e-5
09:59:58 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=175.238µs elapsed_secs=0.000175238
09:59:58 [DEBUG] (285) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.81µs elapsed_secs=9.981e-5
09:59:58 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=223.626µs elapsed_secs=0.000223626
09:59:58 [DEBUG] (299) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=12.181481ms elapsed_secs=0.012181481
09:59:58 [INFO] Deleted project: ID = 1
09:59:58 [DEBUG] (304) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=93.776µs elapsed_secs=9.3776e-5
09:59:58 [DEBUG] (269) menahel::repository::project_repo: Got project by id: None
09:59:58 [DEBUG] (308) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.58µs elapsed_secs=3.858e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.402488ms elapsed_secs=0.009402488
09:59:58 [DEBUG] (305) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=8.837713ms elapsed_secs=0.008837713
09:59:58 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=168.558µs elapsed_secs=0.000168558
09:59:58 [INFO] Created project: Project { id: Some(2), name: "get_all_projects_test_20250609095958_2" }
09:59:58 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=244.524µs elapsed_secs=0.000244524
09:59:58 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.568048ms elapsed_secs=0.008568048
09:59:58 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=321.881µs elapsed_secs=0.000321881
09:59:58 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.159µs elapsed_secs=6.5159e-5
09:59:58 [DEBUG] (297) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.746141ms elapsed_secs=0.006746141
09:59:58 [DEBUG] (297) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=447.77µs elapsed_secs=0.00044777
09:59:58 [DEBUG] (297) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.038µs elapsed_secs=9.5038e-5
09:59:58 [DEBUG] (303) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=6.370979ms elapsed_secs=0.006370979
09:59:58 [INFO] Created project: Project { id: Some(3), name: "get_all_projects_test_20250609095958_3" }
09:59:58 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.303083ms elapsed_secs=0.008303083
09:59:58 [DEBUG] (285) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.764223ms elapsed_secs=0.008764223
09:59:58 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.778979ms elapsed_secs=0.008778979
09:59:58 [DEBUG] (308) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.62235ms elapsed_secs=0.01162235
09:59:58 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=248.004µs elapsed_secs=0.000248004
09:59:58 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=660.469µs elapsed_secs=0.000660469
09:59:58 [DEBUG] (308) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=140.417µs elapsed_secs=0.000140417
09:59:58 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.701µs elapsed_secs=6.6701e-5
09:59:58 [DEBUG] (285) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=382.229µs elapsed_secs=0.000382229
09:59:58 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=168.48µs elapsed_secs=0.00016848
09:59:58 [DEBUG] (308) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.773µs elapsed_secs=6.2773e-5
09:59:58 [DEBUG] (285) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.517µs elapsed_secs=0.000113517
09:59:58 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=583.699µs elapsed_secs=0.000583699
09:59:58 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.192µs elapsed_secs=6.2192e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.552987ms elapsed_secs=0.006552987
09:59:58 [DEBUG] (305) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=10.464381ms elapsed_secs=0.010464381
09:59:58 [INFO] Created project: Project { id: Some(4), name: "get_all_projects_test_20250609095958_4" }
09:59:58 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=304.182µs elapsed_secs=0.000304182
09:59:58 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.639µs elapsed_secs=8.1639e-5
09:59:58 [DEBUG] (297) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.341834ms elapsed_secs=0.007341834
09:59:58 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.716916ms elapsed_secs=0.007716916
09:59:58 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=440.126µs elapsed_secs=0.000440126
09:59:58 [DEBUG] (297) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=538.198µs elapsed_secs=0.000538198
09:59:58 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.312µs elapsed_secs=9.7312e-5
09:59:58 [DEBUG] (297) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.453µs elapsed_secs=9.2453e-5
09:59:58 [DEBUG] (303) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=6.975069ms elapsed_secs=0.006975069
09:59:58 [INFO] Created project: Project { id: Some(5), name: "get_all_projects_test_20250609095958_5" }
09:59:58 [DEBUG] (305) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=1 rows_returned=5 elapsed=390.729µs elapsed_secs=0.000390729
09:59:58 [DEBUG] (273) menahel::repository::project_repo: Got all projects: [Project { id: Some(1), name: "get_all_projects_test_20250609095958_1" }, Project { id: Some(2), name: "get_all_projects_test_20250609095958_2" }, Project { id: Some(3), name: "get_all_projects_test_20250609095958_3" }, Project { id: Some(4), name: "get_all_projects_test_20250609095958_4" }, Project { id: Some(5), name: "get_all_projects_test_20250609095958_5" }]
09:59:58 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.481844ms elapsed_secs=0.009481844
09:59:58 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.707022ms elapsed_secs=0.009707022
09:59:58 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=233.108µs elapsed_secs=0.000233108
09:59:58 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=506.465µs elapsed_secs=0.000506465
09:59:58 [DEBUG] (311) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.803µs elapsed_secs=4.9803e-5
09:59:58 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=409.446µs elapsed_secs=0.000409446
09:59:58 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.235µs elapsed_secs=0.000113235
09:59:58 [DEBUG] (285) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.78292ms elapsed_secs=0.01078292
09:59:58 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.631378ms elapsed_secs=0.010631378
09:59:58 [DEBUG] (285) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=511.096µs elapsed_secs=0.000511096
09:59:58 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=308.086µs elapsed_secs=0.000308086
09:59:58 [DEBUG] (285) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.246µs elapsed_secs=0.000100246
09:59:58 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.674µs elapsed_secs=7.6674e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.838207ms elapsed_secs=0.009838207
09:59:58 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=270.371µs elapsed_secs=0.000270371
09:59:58 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.315µs elapsed_secs=0.000113315
09:59:58 [DEBUG] (231) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=260.541212ms elapsed_secs=0.260541212
09:59:58 [DEBUG] (311) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.4725ms elapsed_secs=0.0134725
09:59:58 [DEBUG] (311) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=179.842µs elapsed_secs=0.000179842
09:59:58 [DEBUG] (311) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=136.771µs elapsed_secs=0.000136771
09:59:58 [DEBUG] (312) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.228µs elapsed_secs=4.7228e-5
09:59:58 [DEBUG] (312) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=361.523µs elapsed_secs=0.000361523
09:59:58 [DEBUG] (311) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=863.817µs elapsed_secs=0.000863817
09:59:58 [DEBUG] (229) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:58 [DEBUG] (312) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=244.693µs elapsed_secs=0.000244693
09:59:58 [DEBUG] (311) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=248.846µs elapsed_secs=0.000248846
09:59:58 [DEBUG] (229) menahel::repository::task_repo: Get task by id with transaction: None
09:59:58 [DEBUG] (297) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.403387ms elapsed_secs=0.010403387
09:59:58 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.665871ms elapsed_secs=0.010665871
09:59:58 [DEBUG] (297) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=494.606µs elapsed_secs=0.000494606
09:59:58 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=172.746µs elapsed_secs=0.000172746
09:59:58 [DEBUG] (297) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.051µs elapsed_secs=9.5051e-5
09:59:58 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.689µs elapsed_secs=9.7689e-5
09:59:58 [DEBUG] (315) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.757µs elapsed_secs=7.4757e-5
09:59:58 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.527483ms elapsed_secs=0.007527483
09:59:58 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=219.082µs elapsed_secs=0.000219082
09:59:58 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.01µs elapsed_secs=8.001e-5
09:59:58 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.198956ms elapsed_secs=0.007198956
09:59:58 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.356637ms elapsed_secs=0.009356637
09:59:58 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=233.015µs elapsed_secs=0.000233015
09:59:58 [DEBUG] (285) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.543964ms elapsed_secs=0.007543964
09:59:58 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.239µs elapsed_secs=9.1239e-5
09:59:58 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=189.427µs elapsed_secs=0.000189427
09:59:58 [DEBUG] (285) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=167.072µs elapsed_secs=0.000167072
09:59:58 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=148.922µs elapsed_secs=0.000148922
09:59:58 [DEBUG] (285) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.739µs elapsed_secs=9.9739e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.411682ms elapsed_secs=0.010411682
09:59:58 [DEBUG] (289) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=250.645µs elapsed_secs=0.000250645
09:59:58 [DEBUG] (289) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.45µs elapsed_secs=0.00011545
09:59:58 [DEBUG] (315) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.486106ms elapsed_secs=0.013486106
09:59:58 [DEBUG] (315) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.487µs elapsed_secs=8.2487e-5
09:59:58 [DEBUG] (315) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.313µs elapsed_secs=6.8313e-5
09:59:58 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=361.935µs elapsed_secs=0.000361935
09:59:58 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.116µs elapsed_secs=6.9116e-5
09:59:58 [DEBUG] (311) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.866881ms elapsed_secs=0.009866881
09:59:58 [DEBUG] (311) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=344.717µs elapsed_secs=0.000344717
09:59:58 [DEBUG] (311) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.812µs elapsed_secs=0.000106812
09:59:58 [DEBUG] (235) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=269.744906ms elapsed_secs=0.269744906
09:59:58 [DEBUG] (297) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.097194ms elapsed_secs=0.009097194
09:59:58 [DEBUG] (297) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=781.121µs elapsed_secs=0.000781121
09:59:58 [DEBUG] (316) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.02µs elapsed_secs=4.602e-5
09:59:58 [DEBUG] (297) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.478µs elapsed_secs=8.3478e-5
09:59:58 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.843827ms elapsed_secs=0.010843827
09:59:58 [DEBUG] (316) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=140.324µs elapsed_secs=0.000140324
09:59:58 [DEBUG] (233) menahel::repository::user_repo: Get user by id with transaction: None
09:59:58 [DEBUG] (294) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=166.031µs elapsed_secs=0.000166031
09:59:58 [DEBUG] (294) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.046µs elapsed_secs=0.000138046
09:59:58 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.48623ms elapsed_secs=0.00848623
09:59:58 [DEBUG] (285) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.001874ms elapsed_secs=0.009001874
09:59:58 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.440355ms elapsed_secs=0.009440355
09:59:58 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.50723ms elapsed_secs=0.00950723
09:59:58 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=726.747µs elapsed_secs=0.000726747
09:59:58 [DEBUG] (319) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.013µs elapsed_secs=5.7013e-5
09:59:58 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.264µs elapsed_secs=0.000146264
09:59:58 [DEBUG] (320) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.233µs elapsed_secs=3.0233e-5
09:59:58 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=536.572µs elapsed_secs=0.000536572
09:59:58 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=359.595µs elapsed_secs=0.000359595
09:59:58 [DEBUG] (321) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=130.707µs elapsed_secs=0.000130707
09:59:58 [DEBUG] (321) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=0 rows_returned=0 elapsed=302.273µs elapsed_secs=0.000302273
09:59:58 [DEBUG] (279) menahel::repository::project_repo: Got all projects: []
09:59:58 [DEBUG] (324) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=92.749µs elapsed_secs=9.2749e-5
09:59:58 [DEBUG] (289) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.490591ms elapsed_secs=0.009490591
09:59:58 [DEBUG] (320) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=9.630908ms elapsed_secs=0.009630908
09:59:58 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.608479ms elapsed_secs=0.009608479
09:59:58 [INFO] Created project: Project { id: Some(1), name: "get_by_id_test_20250609095958" }
09:59:58 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=310.14µs elapsed_secs=0.00031014
09:59:58 [DEBUG] (325) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.561µs elapsed_secs=5.5561e-5
09:59:58 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.954µs elapsed_secs=0.000127954
09:59:58 [DEBUG] (319) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.617548ms elapsed_secs=0.012617548
09:59:58 [DEBUG] (325) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=172.58µs elapsed_secs=0.00017258
09:59:58 [DEBUG] (319) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.725µs elapsed_secs=0.000104725
09:59:58 [DEBUG] (283) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "get_by_id_test_20250609095958" })
09:59:58 [DEBUG] (319) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=137.034µs elapsed_secs=0.000137034
09:59:58 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=219.507µs elapsed_secs=0.000219507
09:59:58 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=164.174µs elapsed_secs=0.000164174
09:59:58 [DEBUG] (311) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.25759ms elapsed_secs=0.00925759
09:59:58 [DEBUG] (328) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=101.292µs elapsed_secs=0.000101292
09:59:58 [DEBUG] (311) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=454.918µs elapsed_secs=0.000454918
09:59:58 [DEBUG] (311) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.016µs elapsed_secs=0.000121016
09:59:58 [DEBUG] (324) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.491617ms elapsed_secs=0.011491617
09:59:58 [DEBUG] (324) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=296.26µs elapsed_secs=0.00029626
09:59:58 [DEBUG] (324) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=257.891µs elapsed_secs=0.000257891
09:59:58 [DEBUG] (294) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.549879ms elapsed_secs=0.010549879
09:59:58 [DEBUG] (297) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.536141ms elapsed_secs=0.010536141
09:59:58 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=477.764µs elapsed_secs=0.000477764
09:59:58 [DEBUG] (329) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.884µs elapsed_secs=4.8884e-5
09:59:58 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=154.465µs elapsed_secs=0.000154465
09:59:58 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.123568ms elapsed_secs=0.011123568
09:59:58 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.313177ms elapsed_secs=0.012313177
09:59:58 [DEBUG] (308) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=299.904µs elapsed_secs=0.000299904
09:59:58 [DEBUG] (308) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.336µs elapsed_secs=0.000114336
09:59:58 [DEBUG] (328) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.461949ms elapsed_secs=0.013461949
09:59:58 [DEBUG] (328) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=109.317µs elapsed_secs=0.000109317
09:59:58 [DEBUG] (328) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=55.991µs elapsed_secs=5.5991e-5
09:59:58 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=173.471µs elapsed_secs=0.000173471
09:59:58 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.898µs elapsed_secs=0.000105898
09:59:58 [DEBUG] (329) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=10.152356ms elapsed_secs=0.010152356
09:59:58 [INFO] Created project: Project { id: Some(1), name: "get_by_name_test_20250609095958" }
09:59:58 [DEBUG] (330) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.661µs elapsed_secs=5.9661e-5
09:59:58 [DEBUG] (330) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=194.785µs elapsed_secs=0.000194785
09:59:58 [DEBUG] (295) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(1), name: "get_by_name_test_20250609095958" })
09:59:58 [DEBUG] (333) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=64.031µs elapsed_secs=6.4031e-5
09:59:58 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.393035ms elapsed_secs=0.009393035
09:59:58 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.988077ms elapsed_secs=0.009988077
09:59:58 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=219.056µs elapsed_secs=0.000219056
09:59:58 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.459µs elapsed_secs=0.000109459
09:59:58 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=258.407µs elapsed_secs=0.000258407
09:59:58 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.854µs elapsed_secs=7.6854e-5
09:59:58 [DEBUG] (311) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.782168ms elapsed_secs=0.014782168
09:59:58 [DEBUG] (311) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=305.106µs elapsed_secs=0.000305106
09:59:58 [DEBUG] (311) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=260.01µs elapsed_secs=0.00026001
09:59:58 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.834041ms elapsed_secs=0.013834041
09:59:58 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=227.029µs elapsed_secs=0.000227029
09:59:58 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.408µs elapsed_secs=0.000110408
09:59:58 [DEBUG] (308) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.772832ms elapsed_secs=0.013772832
09:59:58 [DEBUG] (333) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.082353ms elapsed_secs=0.017082353
09:59:58 [DEBUG] (333) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=94.138µs elapsed_secs=9.4138e-5
09:59:58 [DEBUG] (333) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=120.897µs elapsed_secs=0.000120897
09:59:58 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=551.053µs elapsed_secs=0.000551053
09:59:58 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.748µs elapsed_secs=9.4748e-5
09:59:58 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.601171ms elapsed_secs=0.014601171
09:59:58 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=285.158µs elapsed_secs=0.000285158
09:59:58 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.11µs elapsed_secs=9.211e-5
09:59:58 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.333993ms elapsed_secs=0.011333993
09:59:58 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=693.513µs elapsed_secs=0.000693513
09:59:58 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=208.015µs elapsed_secs=0.000208015
09:59:58 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.758518ms elapsed_secs=0.012758518
09:59:58 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=296.396µs elapsed_secs=0.000296396
09:59:58 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.64µs elapsed_secs=8.364e-5
09:59:59 [DEBUG] (311) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.068851ms elapsed_secs=0.010068851
09:59:59 [DEBUG] (311) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=353.542µs elapsed_secs=0.000353542
09:59:59 [DEBUG] (311) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.557µs elapsed_secs=7.0557e-5
09:59:59 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.82409ms elapsed_secs=0.00982409
09:59:59 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=669.181µs elapsed_secs=0.000669181
09:59:59 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.607µs elapsed_secs=7.6607e-5
09:59:59 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.719525ms elapsed_secs=0.008719525
09:59:59 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=434.506µs elapsed_secs=0.000434506
09:59:59 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.914µs elapsed_secs=7.3914e-5
09:59:59 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.113145ms elapsed_secs=0.010113145
09:59:59 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=240.14µs elapsed_secs=0.00024014
09:59:59 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.909µs elapsed_secs=7.5909e-5
09:59:59 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.528798ms elapsed_secs=0.008528798
09:59:59 [DEBUG] (315) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=304.186µs elapsed_secs=0.000304186
09:59:59 [DEBUG] (315) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.359µs elapsed_secs=0.000103359
09:59:59 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.187766ms elapsed_secs=0.014187766
09:59:59 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=563.087µs elapsed_secs=0.000563087
09:59:59 [DEBUG] (311) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.524263ms elapsed_secs=0.013524263
09:59:59 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.723µs elapsed_secs=0.000104723
09:59:59 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.00772ms elapsed_secs=0.01300772
09:59:59 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=276.258µs elapsed_secs=0.000276258
09:59:59 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.089µs elapsed_secs=6.9089e-5
09:59:59 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.619317ms elapsed_secs=0.008619317
09:59:59 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=236.189µs elapsed_secs=0.000236189
09:59:59 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.793µs elapsed_secs=8.0793e-5
09:59:59 [DEBUG] (289) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=102.805684ms elapsed_secs=0.102805684
09:59:59 [DEBUG] (315) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.592568ms elapsed_secs=0.008592568
09:59:59 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.507437ms elapsed_secs=0.010507437
09:59:59 [DEBUG] (239) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=282.216454ms elapsed_secs=0.282216454
09:59:59 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=175.242µs elapsed_secs=0.000175242
09:59:59 [DEBUG] (334) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.791µs elapsed_secs=4.2791e-5
09:59:59 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.75µs elapsed_secs=7.675e-5
09:59:59 [DEBUG] (335) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.372µs elapsed_secs=4.4372e-5
09:59:59 [DEBUG] (334) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=194.654µs elapsed_secs=0.000194654
09:59:59 [DEBUG] (335) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=247.638µs elapsed_secs=0.000247638
09:59:59 [DEBUG] (237) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
09:59:59 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.306944ms elapsed_secs=0.007306944
09:59:59 [DEBUG] (335) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=82.006µs elapsed_secs=8.2006e-5
09:59:59 [DEBUG] (237) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:59 [DEBUG] (338) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.741µs elapsed_secs=4.6741e-5
09:59:59 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=496.597µs elapsed_secs=0.000496597
09:59:59 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.72µs elapsed_secs=9.272e-5
09:59:59 [DEBUG] (341) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.042µs elapsed_secs=4.9042e-5
09:59:59 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.110443ms elapsed_secs=0.008110443
09:59:59 [DEBUG] (294) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=102.156482ms elapsed_secs=0.102156482
09:59:59 [DEBUG] (324) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=200.976µs elapsed_secs=0.000200976
09:59:59 [DEBUG] (324) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.969µs elapsed_secs=0.000102969
09:59:59 [DEBUG] (342) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.227µs elapsed_secs=7.1227e-5
09:59:59 [DEBUG] (342) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=201.084µs elapsed_secs=0.000201084
09:59:59 [DEBUG] (345) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.498µs elapsed_secs=7.2498e-5
09:59:59 [DEBUG] (338) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.992289ms elapsed_secs=0.010992289
09:59:59 [DEBUG] (338) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=151.263µs elapsed_secs=0.000151263
09:59:59 [DEBUG] (338) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=122.054µs elapsed_secs=0.000122054
09:59:59 [DEBUG] (341) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.51656ms elapsed_secs=0.01151656
09:59:59 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.271952ms elapsed_secs=0.010271952
09:59:59 [DEBUG] (338) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=536.627µs elapsed_secs=0.000536627
09:59:59 [DEBUG] (341) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=144.587µs elapsed_secs=0.000144587
09:59:59 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=249.292µs elapsed_secs=0.000249292
09:59:59 [DEBUG] (341) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=94.632µs elapsed_secs=9.4632e-5
09:59:59 [DEBUG] (338) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=223.997µs elapsed_secs=0.000223997
09:59:59 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.69µs elapsed_secs=8.769e-5
09:59:59 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=377.261µs elapsed_secs=0.000377261
09:59:59 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.752µs elapsed_secs=7.4752e-5
09:59:59 [DEBUG] (243) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=270.802598ms elapsed_secs=0.270802598
09:59:59 [DEBUG] (302) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=111.186956ms elapsed_secs=0.111186956
09:59:59 [DEBUG] (347) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.792µs elapsed_secs=7.0792e-5
09:59:59 [DEBUG] (346) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=133.54µs elapsed_secs=0.00013354
09:59:59 [DEBUG] (347) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n                SELECT COUNT(*) FROM projects\n            \n" rows_affected=0 rows_returned=1 elapsed=128.794µs elapsed_secs=0.000128794
09:59:59 [DEBUG] (300) menahel::repository::project_repo: Got projects count: 10
09:59:59 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.072672ms elapsed_secs=0.013072672
09:59:59 [DEBUG] (350) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.667µs elapsed_secs=4.4667e-5
09:59:59 [DEBUG] (328) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=219.154µs elapsed_secs=0.000219154
09:59:59 [DEBUG] (353) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.682µs elapsed_secs=3.6682e-5
09:59:59 [DEBUG] (328) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=145.21µs elapsed_secs=0.00014521
09:59:59 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.110432ms elapsed_secs=0.010110432
09:59:59 [DEBUG] (345) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.382698ms elapsed_secs=0.014382698
09:59:59 [DEBUG] (345) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.391µs elapsed_secs=7.2391e-5
09:59:59 [DEBUG] (345) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.145µs elapsed_secs=6.3145e-5
09:59:59 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=188.526µs elapsed_secs=0.000188526
09:59:59 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.748µs elapsed_secs=7.6748e-5
09:59:59 [DEBUG] (324) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.402257ms elapsed_secs=0.009402257
09:59:59 [DEBUG] (354) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.389µs elapsed_secs=3.7389e-5
09:59:59 [DEBUG] (350) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.817858ms elapsed_secs=0.008817858
09:59:59 [DEBUG] (353) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.140897ms elapsed_secs=0.008140897
09:59:59 [DEBUG] (354) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=235.309µs elapsed_secs=0.000235309
09:59:59 [DEBUG] (350) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.846µs elapsed_secs=8.7846e-5
09:59:59 [DEBUG] (353) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=146.533µs elapsed_secs=0.000146533
09:59:59 [INFO] Updated project: None
09:59:59 [DEBUG] (350) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=233.005µs elapsed_secs=0.000233005
09:59:59 [DEBUG] (338) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.027068ms elapsed_secs=0.007027068
09:59:59 [DEBUG] (353) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=992.26µs elapsed_secs=0.00099226
09:59:59 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.136249ms elapsed_secs=0.008136249
09:59:59 [DEBUG] (338) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=694.807µs elapsed_secs=0.000694807
09:59:59 [DEBUG] (350) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=401.481µs elapsed_secs=0.000401481
09:59:59 [DEBUG] (338) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.455µs elapsed_secs=9.7455e-5
09:59:59 [DEBUG] (350) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.846µs elapsed_secs=0.000117846
09:59:59 [DEBUG] (333) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=188.734µs elapsed_secs=0.000188734
09:59:59 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=383.639µs elapsed_secs=0.000383639
09:59:59 [DEBUG] (333) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.703µs elapsed_secs=8.9703e-5
09:59:59 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=259.497µs elapsed_secs=0.000259497
09:59:59 [DEBUG] (357) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.065µs elapsed_secs=7.5065e-5
09:59:59 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.189768ms elapsed_secs=0.011189768
09:59:59 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=228.597µs elapsed_secs=0.000228597
09:59:59 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.282µs elapsed_secs=9.5282e-5
09:59:59 [DEBUG] (328) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.603166ms elapsed_secs=0.012603166
09:59:59 [DEBUG] (357) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.549205ms elapsed_secs=0.010549205
09:59:59 [DEBUG] (357) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=119.297µs elapsed_secs=0.000119297
09:59:59 [DEBUG] (357) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=163.79µs elapsed_secs=0.00016379
09:59:59 [DEBUG] (358) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=127.409µs elapsed_secs=0.000127409
09:59:59 [DEBUG] (308) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=110.342594ms elapsed_secs=0.110342594
09:59:59 [DEBUG] (359) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.954µs elapsed_secs=5.8954e-5
09:59:59 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=551.657µs elapsed_secs=0.000551657
09:59:59 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.917947ms elapsed_secs=0.009917947
09:59:59 [DEBUG] (359) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=267.318µs elapsed_secs=0.000267318
09:59:59 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=143.83µs elapsed_secs=0.00014383
09:59:59 [DEBUG] (306) menahel::repository::project_repo: Got projects count: 10
09:59:59 [DEBUG] (306) menahel::repository::project_repo: Get users with pagenation: offset: 0, limit: 5
09:59:59 [DEBUG] (359) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=149.108µs elapsed_secs=0.000149108
09:59:59 [DEBUG] (306) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(1), name: "Test Project 0" }, Project { id: Some(2), name: "Test Project 1" }, Project { id: Some(3), name: "Test Project 2" }, Project { id: Some(4), name: "Test Project 3" }, Project { id: Some(5), name: "Test Project 4" }]
09:59:59 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=799.489µs elapsed_secs=0.000799489
09:59:59 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.448µs elapsed_secs=0.000147448
09:59:59 [DEBUG] (360) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.282µs elapsed_secs=5.0282e-5
09:59:59 [DEBUG] (360) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=206.137µs elapsed_secs=0.000206137
09:59:59 [DEBUG] (306) menahel::repository::project_repo: Got projects count: 10
09:59:59 [DEBUG] (306) menahel::repository::project_repo: Get users with pagenation: offset: 5, limit: 5
09:59:59 [DEBUG] (360) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=240.904µs elapsed_secs=0.000240904
09:59:59 [DEBUG] (306) menahel::repository::project_repo: Got projects with pagenation: [Project { id: Some(6), name: "Test Project 5" }, Project { id: Some(7), name: "Test Project 6" }, Project { id: Some(8), name: "Test Project 7" }, Project { id: Some(9), name: "Test Project 8" }, Project { id: Some(10), name: "Test Project 9" }]
09:59:59 [DEBUG] (363) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.085µs elapsed_secs=4.7085e-5
09:59:59 [DEBUG] (338) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.464037ms elapsed_secs=0.009464037
09:59:59 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.78837ms elapsed_secs=0.01178837
09:59:59 [DEBUG] (338) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=247.347µs elapsed_secs=0.000247347
09:59:59 [DEBUG] (358) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=10.271781ms elapsed_secs=0.010271781
09:59:59 [INFO] Created project: Project { id: Some(1), name: "update_test_20250609095959" }
09:59:59 [DEBUG] (338) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.418µs elapsed_secs=8.3418e-5
09:59:59 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=382.695µs elapsed_secs=0.000382695
09:59:59 [DEBUG] (350) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.559173ms elapsed_secs=0.012559173
09:59:59 [DEBUG] (364) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.543µs elapsed_secs=3.4543e-5
09:59:59 [DEBUG] (333) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.109442ms elapsed_secs=0.010109442
09:59:59 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=156.91µs elapsed_secs=0.00015691
09:59:59 [DEBUG] (350) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=384.965µs elapsed_secs=0.000384965
09:59:59 [DEBUG] (350) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.503µs elapsed_secs=7.1503e-5
09:59:59 [DEBUG] (365) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.638µs elapsed_secs=7.1638e-5
09:59:59 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.899799ms elapsed_secs=0.008899799
09:59:59 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=149.483µs elapsed_secs=0.000149483
09:59:59 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.971µs elapsed_secs=5.4971e-5
09:59:59 [DEBUG] (364) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=9.536112ms elapsed_secs=0.009536112
09:59:59 [DEBUG] (363) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.382881ms elapsed_secs=0.012382881
09:59:59 [DEBUG] (365) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=9.037674ms elapsed_secs=0.009037674
09:59:59 [INFO] Updated project: Some(Project { id: Some(1), name: "update_test_20250609095959_updated" })
09:59:59 [INFO] Created project: Project { id: Some(1), name: "empty_name_test_20250609095959" }
09:59:59 [DEBUG] (363) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=115.09µs elapsed_secs=0.00011509
09:59:59 [DEBUG] (358) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=63.901µs elapsed_secs=6.3901e-5
09:59:59 [DEBUG] (326) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "update_test_20250609095959_updated" })
09:59:59 [DEBUG] (363) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.143µs elapsed_secs=7.5143e-5
09:59:59 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=223.034µs elapsed_secs=0.000223034
09:59:59 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.285µs elapsed_secs=9.7285e-5
09:59:59 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.89176ms elapsed_secs=0.00789176
09:59:59 [DEBUG] (369) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.473µs elapsed_secs=7.3473e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.949µs elapsed_secs=3.9949e-5
09:59:59 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=604.374µs elapsed_secs=0.000604374
09:59:59 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.156795ms elapsed_secs=0.009156795
09:59:59 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.85µs elapsed_secs=6.385e-5
09:59:59 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=128.458µs elapsed_secs=0.000128458
09:59:59 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.088µs elapsed_secs=5.2088e-5
09:59:59 [DEBUG] (311) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=96.648481ms elapsed_secs=0.096648481
09:59:59 [DEBUG] (372) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.329µs elapsed_secs=4.9329e-5
09:59:59 [DEBUG] (372) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=230.581µs elapsed_secs=0.000230581
09:59:59 [DEBUG] (309) menahel::repository::project_repo: Got projects count: 10
09:59:59 [DEBUG] (375) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.121µs elapsed_secs=7.7121e-5
09:59:59 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.215309ms elapsed_secs=0.011215309
09:59:59 [DEBUG] (350) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.008011ms elapsed_secs=0.012008011
09:59:59 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=319.222µs elapsed_secs=0.000319222
09:59:59 [DEBUG] (338) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.141371ms elapsed_secs=0.012141371
09:59:59 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=262.207µs elapsed_secs=0.000262207
09:59:59 [DEBUG] (350) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=671.967µs elapsed_secs=0.000671967
09:59:59 [DEBUG] (338) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=313.89µs elapsed_secs=0.00031389
09:59:59 [DEBUG] (350) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=222.602µs elapsed_secs=0.000222602
09:59:59 [DEBUG] (338) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.401µs elapsed_secs=0.000132401
09:59:59 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.464211ms elapsed_secs=0.009464211
09:59:59 [DEBUG] (371) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.996929ms elapsed_secs=0.014996929
09:59:59 [DEBUG] (369) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.417775ms elapsed_secs=0.015417775
09:59:59 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=819.389µs elapsed_secs=0.000819389
09:59:59 [DEBUG] (371) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=141.668µs elapsed_secs=0.000141668
09:59:59 [DEBUG] (369) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.627µs elapsed_secs=9.7627e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.28µs elapsed_secs=6.828e-5
09:59:59 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.778µs elapsed_secs=0.000108778
09:59:59 [DEBUG] (369) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.845µs elapsed_secs=7.8845e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=815.153µs elapsed_secs=0.000815153
09:59:59 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=598.538µs elapsed_secs=0.000598538
09:59:59 [DEBUG] (371) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.781µs elapsed_secs=8.4781e-5
09:59:59 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.084µs elapsed_secs=8.8084e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.065778ms elapsed_secs=0.010065778
09:59:59 [DEBUG] (375) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.896µs elapsed_secs=7.6896e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.067µs elapsed_secs=6.2067e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=165.389µs elapsed_secs=0.000165389
09:59:59 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.092µs elapsed_secs=8.3092e-5
09:59:59 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.25889ms elapsed_secs=0.00725889
09:59:59 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.511477ms elapsed_secs=0.007511477
09:59:59 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.565835ms elapsed_secs=0.007565835
09:59:59 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=209.385µs elapsed_secs=0.000209385
09:59:59 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=218.046µs elapsed_secs=0.000218046
09:59:59 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.146µs elapsed_secs=0.000155146
09:59:59 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=145.665µs elapsed_secs=0.000145665
09:59:59 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=382.941µs elapsed_secs=0.000382941
09:59:59 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.381µs elapsed_secs=6.8381e-5
09:59:59 [DEBUG] (338) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.748233ms elapsed_secs=0.008748233
09:59:59 [DEBUG] (315) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=106.695446ms elapsed_secs=0.106695446
09:59:59 [DEBUG] (338) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=393.167µs elapsed_secs=0.000393167
09:59:59 [DEBUG] (338) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.418µs elapsed_secs=0.000106418
09:59:59 [DEBUG] (376) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.801µs elapsed_secs=4.4801e-5
09:59:59 [DEBUG] (376) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=187.273µs elapsed_secs=0.000187273
09:59:59 [DEBUG] (350) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.400957ms elapsed_secs=0.009400957
09:59:59 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.740791ms elapsed_secs=0.009740791
09:59:59 [DEBUG] (350) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=229.292µs elapsed_secs=0.000229292
09:59:59 [DEBUG] (350) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.701µs elapsed_secs=0.000111701
09:59:59 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=361.858µs elapsed_secs=0.000361858
09:59:59 [DEBUG] (379) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=26.714µs elapsed_secs=2.6714e-5
09:59:59 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.025µs elapsed_secs=6.5025e-5
09:59:59 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.033437ms elapsed_secs=0.009033437
09:59:59 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=185.647µs elapsed_secs=0.000185647
09:59:59 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.098µs elapsed_secs=9.7098e-5
09:59:59 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.140891ms elapsed_secs=0.011140891
09:59:59 [DEBUG] (371) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.720125ms elapsed_secs=0.011720125
09:59:59 [DEBUG] (341) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=393.038µs elapsed_secs=0.000393038
09:59:59 [DEBUG] (341) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.647µs elapsed_secs=8.4647e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=245.918µs elapsed_secs=0.000245918
09:59:59 [DEBUG] (371) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.492µs elapsed_secs=9.6492e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.290563ms elapsed_secs=0.009290563
09:59:59 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=838.836µs elapsed_secs=0.000838836
09:59:59 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=158.217µs elapsed_secs=0.000158217
09:59:59 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.002048ms elapsed_secs=0.010002048
09:59:59 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.189527ms elapsed_secs=0.010189527
09:59:59 [DEBUG] (379) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.816505ms elapsed_secs=0.012816505
09:59:59 [DEBUG] (345) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=851.197µs elapsed_secs=0.000851197
09:59:59 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.394135ms elapsed_secs=0.001394135
09:59:59 [DEBUG] (379) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=241.126µs elapsed_secs=0.000241126
09:59:59 [DEBUG] (345) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.629µs elapsed_secs=0.000129629
09:59:59 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=164.808µs elapsed_secs=0.000164808
09:59:59 [DEBUG] (379) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=133.518µs elapsed_secs=0.000133518
09:59:59 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=349.205µs elapsed_secs=0.000349205
09:59:59 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.598889ms elapsed_secs=0.012598889
09:59:59 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.984µs elapsed_secs=9.1984e-5
09:59:59 [DEBUG] (319) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=99.218305ms elapsed_secs=0.099218305
09:59:59 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=227.618µs elapsed_secs=0.000227618
09:59:59 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.849µs elapsed_secs=0.000126849
09:59:59 [DEBUG] (380) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.583µs elapsed_secs=3.7583e-5
09:59:59 [DEBUG] (380) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n                SELECT COUNT(*) FROM projects\n            \n" rows_affected=0 rows_returned=1 elapsed=109.984µs elapsed_secs=0.000109984
09:59:59 [DEBUG] (317) menahel::repository::project_repo: Got projects count: 10
09:59:59 [DEBUG] (383) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=95.305µs elapsed_secs=9.5305e-5
09:59:59 [DEBUG] (338) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.07243ms elapsed_secs=0.01207243
09:59:59 [DEBUG] (384) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.726µs elapsed_secs=8.1726e-5
09:59:59 [DEBUG] (384) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=193.334µs elapsed_secs=0.000193334
09:59:59 [INFO] Updated project: None
09:59:59 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.284453ms elapsed_secs=0.009284453
09:59:59 [DEBUG] (387) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.654µs elapsed_secs=5.1654e-5
09:59:59 [DEBUG] (350) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.502327ms elapsed_secs=0.009502327
09:59:59 [DEBUG] (350) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=348.246µs elapsed_secs=0.000348246
09:59:59 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=775.283µs elapsed_secs=0.000775283
09:59:59 [DEBUG] (350) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.039µs elapsed_secs=0.000101039
09:59:59 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.436µs elapsed_secs=8.5436e-5
09:59:59 [DEBUG] (341) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.311729ms elapsed_secs=0.007311729
09:59:59 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.596743ms elapsed_secs=0.007596743
09:59:59 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=665.236µs elapsed_secs=0.000665236
09:59:59 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.539µs elapsed_secs=0.000129539
09:59:59 [DEBUG] (388) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.242µs elapsed_secs=5.2242e-5
09:59:59 [DEBUG] (383) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.489265ms elapsed_secs=0.011489265
09:59:59 [DEBUG] (383) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.575µs elapsed_secs=0.000104575
09:59:59 [DEBUG] (383) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.577µs elapsed_secs=6.3577e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.867995ms elapsed_secs=0.011867995
09:59:59 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=380.189µs elapsed_secs=0.000380189
09:59:59 [DEBUG] (371) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=169.238µs elapsed_secs=0.000169238
09:59:59 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.985µs elapsed_secs=7.9985e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.826µs elapsed_secs=6.6826e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.809455ms elapsed_secs=0.010809455
09:59:59 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.304742ms elapsed_secs=0.008304742
09:59:59 [DEBUG] (345) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.396922ms elapsed_secs=0.008396922
09:59:59 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.324077ms elapsed_secs=0.008324077
09:59:59 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=505.921µs elapsed_secs=0.000505921
09:59:59 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=724.607µs elapsed_secs=0.000724607
09:59:59 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.047µs elapsed_secs=7.6047e-5
09:59:59 [DEBUG] (357) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=277.974µs elapsed_secs=0.000277974
09:59:59 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.103µs elapsed_secs=0.000115103
09:59:59 [DEBUG] (357) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.249µs elapsed_secs=8.6249e-5
09:59:59 [DEBUG] (388) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=8.321408ms elapsed_secs=0.008321408
09:59:59 [INFO] Created project: Project { id: Some(1), name: "long_name_test_20250609095959" }
09:59:59 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.652187ms elapsed_secs=0.007652187
09:59:59 [DEBUG] (387) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.290013ms elapsed_secs=0.014290013
09:59:59 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=363.836µs elapsed_secs=0.000363836
09:59:59 [DEBUG] (387) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=69.509µs elapsed_secs=6.9509e-5
09:59:59 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.526µs elapsed_secs=7.0526e-5
09:59:59 [DEBUG] (387) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.38µs elapsed_secs=6.238e-5
09:59:59 [DEBUG] (387) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=502.625µs elapsed_secs=0.000502625
09:59:59 [DEBUG] (391) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.427µs elapsed_secs=3.5427e-5
09:59:59 [DEBUG] (387) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.227µs elapsed_secs=8.1227e-5
09:59:59 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.00582ms elapsed_secs=0.00700582
09:59:59 [DEBUG] (350) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.569692ms elapsed_secs=0.007569692
09:59:59 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.01534ms elapsed_secs=0.01001534
09:59:59 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=328.67µs elapsed_secs=0.00032867
09:59:59 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.995µs elapsed_secs=7.7995e-5
09:59:59 [DEBUG] (391) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.52806ms elapsed_secs=0.01152806
09:59:59 [DEBUG] (391) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=89.606µs elapsed_secs=8.9606e-5
09:59:59 [DEBUG] (391) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=72.11µs elapsed_secs=7.211e-5
09:59:59 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=181.05µs elapsed_secs=0.00018105
09:59:59 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.839µs elapsed_secs=7.6839e-5
09:59:59 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.993371ms elapsed_secs=0.006993371
09:59:59 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.26015ms elapsed_secs=0.00726015
09:59:59 [DEBUG] (363) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=233.521µs elapsed_secs=0.000233521
09:59:59 [DEBUG] (363) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.32µs elapsed_secs=8.232e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.849976ms elapsed_secs=0.007849976
09:59:59 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=251.297µs elapsed_secs=0.000251297
09:59:59 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.135µs elapsed_secs=0.000112135
09:59:59 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=206.054µs elapsed_secs=0.000206054
09:59:59 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.504µs elapsed_secs=8.3504e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.470174ms elapsed_secs=0.011470174
09:59:59 [DEBUG] (357) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.019081ms elapsed_secs=0.007019081
09:59:59 [DEBUG] (371) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=133.029µs elapsed_secs=0.000133029
09:59:59 [DEBUG] (371) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=337.158µs elapsed_secs=0.000337158
09:59:59 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.874985ms elapsed_secs=0.008874985
09:59:59 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=390.998µs elapsed_secs=0.000390998
09:59:59 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.127µs elapsed_secs=0.000131127
09:59:59 [DEBUG] (387) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.291156ms elapsed_secs=0.014291156
09:59:59 [DEBUG] (387) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=143.778µs elapsed_secs=0.000143778
09:59:59 [DEBUG] (387) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.696µs elapsed_secs=0.000105696
09:59:59 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.09373ms elapsed_secs=0.00809373
09:59:59 [DEBUG] (369) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=219.358µs elapsed_secs=0.000219358
09:59:59 [DEBUG] (369) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.803µs elapsed_secs=9.1803e-5
09:59:59 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.344307ms elapsed_secs=0.010344307
09:59:59 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=387.088µs elapsed_secs=0.000387088
09:59:59 [DEBUG] (363) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.198252ms elapsed_secs=0.009198252
09:59:59 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.782µs elapsed_secs=0.000113782
09:59:59 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.529767ms elapsed_secs=0.009529767
09:59:59 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.042366ms elapsed_secs=0.010042366
09:59:59 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=268.399µs elapsed_secs=0.000268399
09:59:59 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.23µs elapsed_secs=7.123e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=264.566µs elapsed_secs=0.000264566
09:59:59 [DEBUG] (371) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.578481ms elapsed_secs=0.009578481
09:59:59 [DEBUG] (375) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.038µs elapsed_secs=6.4038e-5
09:59:59 [DEBUG] (371) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=357.074µs elapsed_secs=0.000357074
09:59:59 [DEBUG] (371) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.286µs elapsed_secs=0.000103286
09:59:59 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.955054ms elapsed_secs=0.007955054
09:59:59 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=244.929µs elapsed_secs=0.000244929
09:59:59 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.223µs elapsed_secs=7.7223e-5
09:59:59 [DEBUG] (387) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.03637ms elapsed_secs=0.00803637
09:59:59 [DEBUG] (387) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=408.419µs elapsed_secs=0.000408419
09:59:59 [DEBUG] (387) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.292µs elapsed_secs=6.6292e-5
09:59:59 [DEBUG] (369) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.017332ms elapsed_secs=0.008017332
09:59:59 [DEBUG] (371) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.119193ms elapsed_secs=0.007119193
09:59:59 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.867664ms elapsed_secs=0.010867664
09:59:59 [DEBUG] (375) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.471076ms elapsed_secs=0.008471076
09:59:59 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.238939ms elapsed_secs=0.011238939
09:59:59 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=401.123µs elapsed_secs=0.000401123
09:59:59 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=280.248µs elapsed_secs=0.000280248
09:59:59 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.882µs elapsed_secs=8.6882e-5
09:59:59 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.419µs elapsed_secs=8.0419e-5
09:59:59 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.15289ms elapsed_secs=0.01015289
09:59:59 [DEBUG] (379) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=179.138µs elapsed_secs=0.000179138
09:59:59 [DEBUG] (379) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.21µs elapsed_secs=6.621e-5
09:59:59 [DEBUG] (387) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.03133ms elapsed_secs=0.00703133
09:59:59 [DEBUG] (387) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=217.322µs elapsed_secs=0.000217322
09:59:59 [DEBUG] (387) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.885µs elapsed_secs=0.000118885
09:59:59 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.144175ms elapsed_secs=0.008144175
09:59:59 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.224466ms elapsed_secs=0.008224466
09:59:59 [DEBUG] (379) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.019186ms elapsed_secs=0.007019186
09:59:59 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=283.489µs elapsed_secs=0.000283489
09:59:59 [DEBUG] (383) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=619.686µs elapsed_secs=0.000619686
09:59:59 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.179µs elapsed_secs=7.8179e-5
09:59:59 [DEBUG] (383) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.844µs elapsed_secs=6.6844e-5
09:59:59 [DEBUG] (387) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.648761ms elapsed_secs=0.008648761
09:59:59 [DEBUG] (387) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=248.451µs elapsed_secs=0.000248451
09:59:59 [DEBUG] (387) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.304µs elapsed_secs=9.1304e-5
09:59:59 [DEBUG] (383) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.092541ms elapsed_secs=0.009092541
09:59:59 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.080718ms elapsed_secs=0.009080718
09:59:59 [DEBUG] (391) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=212.182µs elapsed_secs=0.000212182
09:59:59 [DEBUG] (391) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.371µs elapsed_secs=0.000102371
09:59:59 [DEBUG] (387) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.702118ms elapsed_secs=0.007702118
09:59:59 [DEBUG] (391) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.067808ms elapsed_secs=0.007067808
09:59:59 [DEBUG] (345) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=165.22663ms elapsed_secs=0.16522663
09:59:59 [DEBUG] (392) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.232µs elapsed_secs=4.2232e-5
09:59:59 [DEBUG] (392) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=127.028µs elapsed_secs=0.000127028
09:59:59 [DEBUG] (392) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=169.638µs elapsed_secs=0.000169638
09:59:59 [INFO] Created task: Task { id: Some(18), project_id: 1, parent_id: None, level: 0, name: "Test Task", description: Some("Test Task Description"), status: 0, deadline: None, created_at: 1749463199, updated_at: Some(1749463199) }
09:59:59 [DEBUG] (393) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.3µs elapsed_secs=3.23e-5
09:59:59 [DEBUG] (393) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=154.977µs elapsed_secs=0.000154977
09:59:59 [DEBUG] (343) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(18), project_id: 1, parent_id: None, level: 0, name: "Test Task", description: Some("Test Task Description"), status: 0, deadline: None, created_at: 1749463199, updated_at: Some(1749463199) })
09:59:59 [DEBUG] (353) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=170.450354ms elapsed_secs=0.170450354
09:59:59 [DEBUG] (396) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.853µs elapsed_secs=4.3853e-5
09:59:59 [DEBUG] (397) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.177µs elapsed_secs=4.5177e-5
09:59:59 [DEBUG] (397) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=151.518µs elapsed_secs=0.000151518
09:59:59 [DEBUG] (400) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.035µs elapsed_secs=5.0035e-5
09:59:59 [DEBUG] (357) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=169.175909ms elapsed_secs=0.169175909
09:59:59 [DEBUG] (350) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=181.022146ms elapsed_secs=0.181022146
09:59:59 [DEBUG] (401) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=117.728µs elapsed_secs=0.000117728
09:59:59 [DEBUG] (402) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.513µs elapsed_secs=5.1513e-5
09:59:59 [DEBUG] (396) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.657227ms elapsed_secs=0.014657227
09:59:59 [DEBUG] (401) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=351.915µs elapsed_secs=0.000351915
09:59:59 [DEBUG] (402) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=244.033µs elapsed_secs=0.000244033
09:59:59 [DEBUG] (396) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=226.509µs elapsed_secs=0.000226509
09:59:59 [DEBUG] (401) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=293.408µs elapsed_secs=0.000293408
09:59:59 [DEBUG] (402) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=220.938µs elapsed_secs=0.000220938
09:59:59 [DEBUG] (396) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=163.28µs elapsed_secs=0.00016328
09:59:59 [DEBUG] (355) menahel::repository::task_repo: Get task by id with transaction: None
09:59:59 [DEBUG] (348) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:59 [DEBUG] (396) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=555.075µs elapsed_secs=0.000555075
09:59:59 [DEBUG] (396) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=245.251µs elapsed_secs=0.000245251
09:59:59 [DEBUG] (407) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.351µs elapsed_secs=3.9351e-5
09:59:59 [DEBUG] (408) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.095µs elapsed_secs=7.5095e-5
09:59:59 [DEBUG] (400) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.772255ms elapsed_secs=0.017772255
09:59:59 [DEBUG] (400) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=70.233µs elapsed_secs=7.0233e-5
09:59:59 [DEBUG] (400) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=42.184µs elapsed_secs=4.2184e-5
09:59:59 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=325.721µs elapsed_secs=0.000325721
09:59:59 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=191.471µs elapsed_secs=0.000191471
09:59:59 [DEBUG] (408) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.435102ms elapsed_secs=0.009435102
09:59:59 [DEBUG] (407) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.451289ms elapsed_secs=0.009451289
09:59:59 [DEBUG] (408) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=122.302µs elapsed_secs=0.000122302
09:59:59 [DEBUG] (407) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=86.409µs elapsed_secs=8.6409e-5
09:59:59 [DEBUG] (408) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=60.544µs elapsed_secs=6.0544e-5
09:59:59 [DEBUG] (407) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.822µs elapsed_secs=7.8822e-5
09:59:59 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=802.608µs elapsed_secs=0.000802608
09:59:59 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=800.821µs elapsed_secs=0.000800821
09:59:59 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.56µs elapsed_secs=0.00017256
09:59:59 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.269µs elapsed_secs=0.000136269
09:59:59 [DEBUG] (363) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=170.355452ms elapsed_secs=0.170355452
09:59:59 [DEBUG] (409) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.366µs elapsed_secs=4.0366e-5
09:59:59 [DEBUG] (409) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=148.671µs elapsed_secs=0.000148671
09:59:59 [DEBUG] (409) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=45.356µs elapsed_secs=4.5356e-5
09:59:59 [DEBUG] (361) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:59 [DEBUG] (409) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=290.178µs elapsed_secs=0.000290178
09:59:59 [DEBUG] (396) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.000829ms elapsed_secs=0.008000829
09:59:59 [DEBUG] (396) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=172.078µs elapsed_secs=0.000172078
09:59:59 [DEBUG] (396) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.859µs elapsed_secs=6.7859e-5
09:59:59 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.25016ms elapsed_secs=0.00925016
09:59:59 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=500.62µs elapsed_secs=0.00050062
09:59:59 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.585µs elapsed_secs=9.0585e-5
09:59:59 [INFO] Created task: Task { id: Some(18), project_id: 1, parent_id: Some(1), level: 1, name: "Test Task with Parent", description: Some("Test Task with Parent Description"), status: 0, deadline: None, created_at: 1749463199, updated_at: Some(1749463199) }
09:59:59 [DEBUG] (412) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.87µs elapsed_secs=5.887e-5
09:59:59 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.008688ms elapsed_secs=0.009008688
09:59:59 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.012793ms elapsed_secs=0.009012793
09:59:59 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=255.455µs elapsed_secs=0.000255455
09:59:59 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=238.514µs elapsed_secs=0.000238514
09:59:59 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.613µs elapsed_secs=0.000115613
09:59:59 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.748µs elapsed_secs=7.8748e-5
09:59:59 [DEBUG] (369) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.909116ms elapsed_secs=0.175909116
09:59:59 [DEBUG] (413) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.156µs elapsed_secs=5.9156e-5
09:59:59 [DEBUG] (413) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=212.242µs elapsed_secs=0.000212242
09:59:59 [DEBUG] (366) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) })
09:59:59 [DEBUG] (414) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.307µs elapsed_secs=5.5307e-5
09:59:59 [DEBUG] (396) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.136419ms elapsed_secs=0.007136419
09:59:59 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.331381ms elapsed_secs=0.007331381
09:59:59 [DEBUG] (412) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.171955ms elapsed_secs=0.011171955
09:59:59 [DEBUG] (396) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=689.842µs elapsed_secs=0.000689842
09:59:59 [DEBUG] (412) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=128.089µs elapsed_secs=0.000128089
09:59:59 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=568.9µs elapsed_secs=0.0005689
09:59:59 [DEBUG] (396) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.021µs elapsed_secs=0.000111021
09:59:59 [DEBUG] (412) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.549µs elapsed_secs=7.6549e-5
09:59:59 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.806µs elapsed_secs=9.6806e-5
09:59:59 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=275.427µs elapsed_secs=0.000275427
09:59:59 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=165.807µs elapsed_secs=0.000165807
09:59:59 [DEBUG] (371) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=178.971939ms elapsed_secs=0.178971939
09:59:59 [DEBUG] (415) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.059µs elapsed_secs=4.9059e-5
09:59:59 [DEBUG] (415) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=223.611µs elapsed_secs=0.000223611
09:59:59 [DEBUG] (418) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.789µs elapsed_secs=5.0789e-5
09:59:59 [DEBUG] (375) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=182.106704ms elapsed_secs=0.182106704
09:59:59 [DEBUG] (414) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=12.153005ms elapsed_secs=0.012153005
09:59:59 [INFO] Deleted task: 17
09:59:59 [DEBUG] (419) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.63µs elapsed_secs=5.163e-5
09:59:59 [DEBUG] (413) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=55.802µs elapsed_secs=5.5802e-5
09:59:59 [DEBUG] (366) menahel::repository::task_repo: Get task by id: None
09:59:59 [DEBUG] (419) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n            \n" rows_affected=0 rows_returned=17 elapsed=342.241µs elapsed_secs=0.000342241
09:59:59 [DEBUG] (373) menahel::repository::task_repo: Get all tasks: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
09:59:59 [DEBUG] (422) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.337µs elapsed_secs=6.3337e-5
09:59:59 [DEBUG] (425) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.27µs elapsed_secs=5.327e-5
09:59:59 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.963027ms elapsed_secs=0.009963027
09:59:59 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.609643ms elapsed_secs=0.010609643
09:59:59 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=280.518µs elapsed_secs=0.000280518
09:59:59 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=263.247µs elapsed_secs=0.000263247
09:59:59 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.986µs elapsed_secs=9.1986e-5
09:59:59 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.813µs elapsed_secs=0.000106813
09:59:59 [DEBUG] (396) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.185109ms elapsed_secs=0.009185109
09:59:59 [DEBUG] (418) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.110049ms elapsed_secs=0.013110049
09:59:59 [DEBUG] (396) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=516.131µs elapsed_secs=0.000516131
09:59:59 [DEBUG] (418) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.478µs elapsed_secs=0.000133478
09:59:59 [DEBUG] (396) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.336µs elapsed_secs=0.000153336
09:59:59 [DEBUG] (418) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.337µs elapsed_secs=7.8337e-5
09:59:59 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=259.672µs elapsed_secs=0.000259672
09:59:59 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.685µs elapsed_secs=0.000167685
09:59:59 [DEBUG] (379) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.841303ms elapsed_secs=0.175841303
09:59:59 [DEBUG] (426) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.187µs elapsed_secs=8.4187e-5
09:59:59 [DEBUG] (426) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=190.465µs elapsed_secs=0.000190465
09:59:59 [DEBUG] (377) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:59 [DEBUG] (429) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.348µs elapsed_secs=4.8348e-5
09:59:59 [DEBUG] (422) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.753183ms elapsed_secs=0.014753183
09:59:59 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.324037ms elapsed_secs=0.013324037
09:59:59 [DEBUG] (422) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=86.403µs elapsed_secs=8.6403e-5
09:59:59 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.611347ms elapsed_secs=0.013611347
09:59:59 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=163.62µs elapsed_secs=0.00016362
09:59:59 [DEBUG] (422) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=93.609µs elapsed_secs=9.3609e-5
09:59:59 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.682µs elapsed_secs=0.000121682
09:59:59 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=237.609µs elapsed_secs=0.000237609
09:59:59 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=215.291µs elapsed_secs=0.000215291
09:59:59 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.751µs elapsed_secs=0.000131751
09:59:59 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.821µs elapsed_secs=0.000118821
09:59:59 [DEBUG] (425) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.441556ms elapsed_secs=0.015441556
09:59:59 [DEBUG] (425) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.665µs elapsed_secs=8.5665e-5
09:59:59 [DEBUG] (425) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=79.04µs elapsed_secs=7.904e-5
09:59:59 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=261.814µs elapsed_secs=0.000261814
09:59:59 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.708µs elapsed_secs=0.000112708
09:59:59 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.44494ms elapsed_secs=0.01044494
09:59:59 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.757441ms elapsed_secs=0.010757441
09:59:59 [DEBUG] (429) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.385152ms elapsed_secs=0.013385152
09:59:59 [DEBUG] (429) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=92.55µs elapsed_secs=9.255e-5
09:59:59 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=632.722µs elapsed_secs=0.000632722
09:59:59 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=429.4µs elapsed_secs=0.0004294
09:59:59 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.376µs elapsed_secs=7.7376e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=71.488µs elapsed_secs=7.1488e-5
09:59:59 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.777µs elapsed_secs=7.0777e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=357.92µs elapsed_secs=0.00035792
09:59:59 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.331µs elapsed_secs=8.0331e-5
09:59:59 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.424498ms elapsed_secs=0.005424498
09:59:59 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.094955ms elapsed_secs=0.007094955
09:59:59 [DEBUG] (396) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.699395ms elapsed_secs=0.009699395
09:59:59 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.44558ms elapsed_secs=0.00644558
09:59:59 [DEBUG] (383) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=179.051673ms elapsed_secs=0.179051673
09:59:59 [DEBUG] (396) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=152.851µs elapsed_secs=0.000152851
09:59:59 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=586.291µs elapsed_secs=0.000586291
09:59:59 [DEBUG] (400) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=583.382µs elapsed_secs=0.000583382
09:59:59 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.301792ms elapsed_secs=0.010301792
09:59:59 [DEBUG] (396) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.717µs elapsed_secs=0.000167717
09:59:59 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=835.921µs elapsed_secs=0.000835921
09:59:59 [DEBUG] (400) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=767.171µs elapsed_secs=0.000767171
09:59:59 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=378.28µs elapsed_secs=0.00037828
09:59:59 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=1.11429ms elapsed_secs=0.00111429
09:59:59 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=173.208µs elapsed_secs=0.000173208
09:59:59 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.118µs elapsed_secs=9.2118e-5
09:59:59 [DEBUG] (430) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=134.983µs elapsed_secs=0.000134983
09:59:59 [DEBUG] (430) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=450.195µs elapsed_secs=0.000450195
09:59:59 [DEBUG] (381) menahel::repository::task_repo: Get task by id: None
09:59:59 [DEBUG] (433) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.158µs elapsed_secs=5.0158e-5
09:59:59 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.912201ms elapsed_secs=0.011912201
09:59:59 [DEBUG] (387) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=183.857434ms elapsed_secs=0.183857434
09:59:59 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=539.597µs elapsed_secs=0.000539597
09:59:59 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.649µs elapsed_secs=0.000114649
09:59:59 [DEBUG] (434) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.795µs elapsed_secs=3.8795e-5
09:59:59 [DEBUG] (434) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=142.967µs elapsed_secs=0.000142967
09:59:59 [DEBUG] (385) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
09:59:59 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.18298ms elapsed_secs=0.00818298
09:59:59 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.007887ms elapsed_secs=0.009007887
09:59:59 [DEBUG] (408) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=524.182µs elapsed_secs=0.000524182
09:59:59 [DEBUG] (408) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=199.923µs elapsed_secs=0.000199923
09:59:59 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=297.07µs elapsed_secs=0.00029707
09:59:59 [DEBUG] (437) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=91.113µs elapsed_secs=9.1113e-5
09:59:59 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.447µs elapsed_secs=9.1447e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.564624ms elapsed_secs=0.009564624
09:59:59 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=621.432µs elapsed_secs=0.000621432
09:59:59 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=497.776µs elapsed_secs=0.000497776
09:59:59 [DEBUG] (433) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.373587ms elapsed_secs=0.012373587
09:59:59 [DEBUG] (433) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=170.292µs elapsed_secs=0.000170292
09:59:59 [DEBUG] (433) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=98.16µs elapsed_secs=9.816e-5
09:59:59 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.767133ms elapsed_secs=0.008767133
09:59:59 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=496.724µs elapsed_secs=0.000496724
09:59:59 [DEBUG] (396) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.063606ms elapsed_secs=0.009063606
09:59:59 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=267.318µs elapsed_secs=0.000267318
09:59:59 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=823.943µs elapsed_secs=0.000823943
09:59:59 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=357.576µs elapsed_secs=0.000357576
09:59:59 [DEBUG] (400) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.870194ms elapsed_secs=0.010870194
09:59:59 [DEBUG] (437) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.326486ms elapsed_secs=0.013326486
09:59:59 [DEBUG] (437) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=172.857µs elapsed_secs=0.000172857
09:59:59 [DEBUG] (437) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=97.67µs elapsed_secs=9.767e-5
09:59:59 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.436918ms elapsed_secs=0.012436918
09:59:59 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=204.751µs elapsed_secs=0.000204751
09:59:59 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=161.946µs elapsed_secs=0.000161946
09:59:59 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.643µs elapsed_secs=0.000100643
09:59:59 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.386µs elapsed_secs=7.1386e-5
09:59:59 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.388752ms elapsed_secs=0.011388752
09:59:59 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=522.889µs elapsed_secs=0.000522889
09:59:59 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.787µs elapsed_secs=8.0787e-5
09:59:59 [DEBUG] (408) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.299176ms elapsed_secs=0.008299176
09:59:59 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.178164ms elapsed_secs=0.009178164
09:59:59 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.327305ms elapsed_secs=0.006327305
09:59:59 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=276.336µs elapsed_secs=0.000276336
09:59:59 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.467µs elapsed_secs=0.000112467
09:59:59 [DEBUG] (391) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=195.534934ms elapsed_secs=0.195534934
09:59:59 [DEBUG] (438) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.552µs elapsed_secs=5.5552e-5
09:59:59 [DEBUG] (438) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=722.853µs elapsed_secs=0.000722853
09:59:59 [DEBUG] (389) menahel::repository::task_repo: Get task by id with transaction: None
09:59:59 [DEBUG] (441) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.118µs elapsed_secs=4.1118e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.757564ms elapsed_secs=0.010757564
09:59:59 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=561.44µs elapsed_secs=0.00056144
09:59:59 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.706µs elapsed_secs=7.6706e-5
09:59:59 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.554342ms elapsed_secs=0.008554342
09:59:59 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.672503ms elapsed_secs=0.010672503
09:59:59 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=441.93µs elapsed_secs=0.00044193
09:59:59 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=252.047µs elapsed_secs=0.000252047
09:59:59 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.078µs elapsed_secs=8.9078e-5
09:59:59 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.698µs elapsed_secs=6.1698e-5
09:59:59 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.063314ms elapsed_secs=0.008063314
09:59:59 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.277765ms elapsed_secs=0.008277765
09:59:59 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=148.552µs elapsed_secs=0.000148552
09:59:59 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=270.83µs elapsed_secs=0.00027083
09:59:59 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=423.836µs elapsed_secs=0.000423836
09:59:59 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.42µs elapsed_secs=6.842e-5
09:59:59 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.812619ms elapsed_secs=0.008812619
09:59:59 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=890.46µs elapsed_secs=0.00089046
09:59:59 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=192.99µs elapsed_secs=0.00019299
09:59:59 [DEBUG] (441) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.858763ms elapsed_secs=0.012858763
09:59:59 [DEBUG] (441) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=160.37µs elapsed_secs=0.00016037
09:59:59 [DEBUG] (441) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.714µs elapsed_secs=9.0714e-5
09:59:59 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=182.253µs elapsed_secs=0.000182253
09:59:59 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.319104ms elapsed_secs=0.009319104
09:59:59 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.224µs elapsed_secs=7.5224e-5
09:59:59 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=297.83µs elapsed_secs=0.00029783
09:59:59 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.268µs elapsed_secs=9.2268e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.234809ms elapsed_secs=0.009234809
09:59:59 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=346.362µs elapsed_secs=0.000346362
09:59:59 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.316µs elapsed_secs=0.000138316
09:59:59 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.690799ms elapsed_secs=0.007690799
09:59:59 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=379.894µs elapsed_secs=0.000379894
09:59:59 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=589.73µs elapsed_secs=0.00058973
09:59:59 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.883685ms elapsed_secs=0.011883685
09:59:59 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.84158ms elapsed_secs=0.01184158
09:59:59 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.068906ms elapsed_secs=0.012068906
09:59:59 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=254.917µs elapsed_secs=0.000254917
09:59:59 [DEBUG] (422) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=186.469µs elapsed_secs=0.000186469
09:59:59 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.208µs elapsed_secs=9.6208e-5
09:59:59 [DEBUG] (422) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.717µs elapsed_secs=8.3717e-5
09:59:59 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.832622ms elapsed_secs=0.005832622
09:59:59 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.192351ms elapsed_secs=0.010192351
09:59:59 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.868393ms elapsed_secs=0.005868393
09:59:59 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=252.506µs elapsed_secs=0.000252506
09:59:59 [DEBUG] (418) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=195.346µs elapsed_secs=0.000195346
09:59:59 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=149.598µs elapsed_secs=0.000149598
09:59:59 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.63µs elapsed_secs=7.763e-5
09:59:59 [DEBUG] (418) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.992µs elapsed_secs=7.3992e-5
09:59:59 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.627µs elapsed_secs=6.2627e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.668298ms elapsed_secs=0.012668298
09:59:59 [DEBUG] (429) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=328.188µs elapsed_secs=0.000328188
09:59:59 [DEBUG] (429) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.092µs elapsed_secs=8.3092e-5
09:59:59 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.973417ms elapsed_secs=0.011973417
09:59:59 [DEBUG] (422) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.342101ms elapsed_secs=0.007342101
09:59:59 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=218.524µs elapsed_secs=0.000218524
09:59:59 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=188.663µs elapsed_secs=0.000188663
09:59:59 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.486352ms elapsed_secs=0.013486352
09:59:59 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=138.113µs elapsed_secs=0.000138113
09:59:59 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.517µs elapsed_secs=5.2517e-5
09:59:59 [DEBUG] (418) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.363667ms elapsed_secs=0.007363667
09:59:59 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.660924ms elapsed_secs=0.007660924
09:59:59 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.149019ms elapsed_secs=0.008149019
09:59:59 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=182.484µs elapsed_secs=0.000182484
09:59:59 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.462µs elapsed_secs=7.6462e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.076683ms elapsed_secs=0.010076683
09:59:59 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.202926ms elapsed_secs=0.008202926
09:59:59 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.185541ms elapsed_secs=0.010185541
09:59:59 [DEBUG] (433) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=289.495µs elapsed_secs=0.000289495
09:59:59 [DEBUG] (437) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=362.736µs elapsed_secs=0.000362736
09:59:59 [DEBUG] (433) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=995.065µs elapsed_secs=0.000995065
09:59:59 [DEBUG] (437) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=1.068024ms elapsed_secs=0.001068024
09:59:59 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.410589ms elapsed_secs=0.013410589
09:59:59 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=229.264µs elapsed_secs=0.000229264
09:59:59 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.684µs elapsed_secs=7.5684e-5
09:59:59 [DEBUG] (433) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.954498ms elapsed_secs=0.007954498
09:59:59 [DEBUG] (437) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.342889ms elapsed_secs=0.008342889
09:59:59 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.951532ms elapsed_secs=0.007951532
09:59:59 [DEBUG] (441) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=142.995µs elapsed_secs=0.000142995
09:59:59 [DEBUG] (441) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.555µs elapsed_secs=0.000172555
09:59:59 [DEBUG] (441) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.060612ms elapsed_secs=0.008060612
09:59:59 [DEBUG] (396) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=160.123884ms elapsed_secs=0.160123884
09:59:59 [DEBUG] (442) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.986µs elapsed_secs=4.7986e-5
09:59:59 [DEBUG] (442) sqlx::query: summary="SELECT COUNT(*) FROM tasks …" db.statement="\n\n\n        SELECT COUNT(*) FROM tasks\n      WHERE project_id = $1\n" rows_affected=0 rows_returned=1 elapsed=158.756µs elapsed_secs=0.000158756
09:59:59 [DEBUG] (394) menahel::repository::task_repo: Get tasks count with transaction: 14
09:59:59 [DEBUG] (442) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 LIMIT $2 OFFSET $3\n" rows_affected=0 rows_returned=4 elapsed=166.214µs elapsed_secs=0.000166214
09:59:59 [DEBUG] (394) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
09:59:59 [DEBUG] (445) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.387µs elapsed_secs=3.4387e-5
09:59:59 [DEBUG] (407) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=160.670459ms elapsed_secs=0.160670459
09:59:59 [DEBUG] (446) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.621µs elapsed_secs=4.8621e-5
09:59:59 [DEBUG] (446) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE deadline >= $1 AND deadline <= $2\n" rows_affected=0 rows_returned=1 elapsed=202.369µs elapsed_secs=0.000202369
09:59:59 [DEBUG] (403) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (447) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.611µs elapsed_secs=3.6611e-5
09:59:59 [DEBUG] (447) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE deadline >= $1\n" rows_affected=0 rows_returned=2 elapsed=193.589µs elapsed_secs=0.000193589
09:59:59 [DEBUG] (403) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
09:59:59 [DEBUG] (446) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE deadline <= $1\n" rows_affected=0 rows_returned=11 elapsed=185.539µs elapsed_secs=0.000185539
09:59:59 [DEBUG] (403) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (400) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.864ms elapsed_secs=0.175864
09:59:59 [DEBUG] (450) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=66.285µs elapsed_secs=6.6285e-5
09:59:59 [DEBUG] (451) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=139.24µs elapsed_secs=0.00013924
09:59:59 [DEBUG] (445) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.817049ms elapsed_secs=0.015817049
09:59:59 [DEBUG] (445) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=337.643µs elapsed_secs=0.000337643
09:59:59 [DEBUG] (445) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=215.519µs elapsed_secs=0.000215519
09:59:59 [DEBUG] (451) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE created_at >= $1 AND created_at <= $2\n" rows_affected=0 rows_returned=1 elapsed=694.506µs elapsed_secs=0.000694506
09:59:59 [DEBUG] (398) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }]
09:59:59 [DEBUG] (452) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=120.781µs elapsed_secs=0.000120781
09:59:59 [DEBUG] (445) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.029428ms elapsed_secs=0.001029428
09:59:59 [DEBUG] (445) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=362.685µs elapsed_secs=0.000362685
09:59:59 [DEBUG] (452) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE created_at >= $1\n" rows_affected=0 rows_returned=2 elapsed=314.308µs elapsed_secs=0.000314308
09:59:59 [DEBUG] (398) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
09:59:59 [DEBUG] (451) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE created_at <= $1\n" rows_affected=0 rows_returned=15 elapsed=185.818µs elapsed_secs=0.000185818
09:59:59 [DEBUG] (398) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }]
09:59:59 [DEBUG] (408) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=180.606699ms elapsed_secs=0.180606699
09:59:59 [DEBUG] (455) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.149µs elapsed_secs=4.2149e-5
09:59:59 [DEBUG] (456) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.262µs elapsed_secs=3.8262e-5
09:59:59 [DEBUG] (456) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE description LIKE '%' || $1 || '%'\n" rows_affected=0 rows_returned=1 elapsed=200.72µs elapsed_secs=0.00020072
09:59:59 [DEBUG] (404) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (450) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.384713ms elapsed_secs=0.011384713
09:59:59 [DEBUG] (450) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.876µs elapsed_secs=7.7876e-5
09:59:59 [DEBUG] (450) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.324µs elapsed_secs=8.0324e-5
09:59:59 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=283.773µs elapsed_secs=0.000283773
09:59:59 [DEBUG] (459) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=87.252µs elapsed_secs=8.7252e-5
09:59:59 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.441µs elapsed_secs=0.000204441
09:59:59 [DEBUG] (455) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.309661ms elapsed_secs=0.015309661
09:59:59 [DEBUG] (455) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=73.712µs elapsed_secs=7.3712e-5
09:59:59 [DEBUG] (455) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.876µs elapsed_secs=5.7876e-5
09:59:59 [DEBUG] (455) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=161.936µs elapsed_secs=0.000161936
09:59:59 [DEBUG] (455) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.472µs elapsed_secs=5.6472e-5
09:59:59 [DEBUG] (459) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.684131ms elapsed_secs=0.013684131
09:59:59 [DEBUG] (459) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=137.698µs elapsed_secs=0.000137698
09:59:59 [DEBUG] (459) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.11µs elapsed_secs=6.111e-5
09:59:59 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=165.956µs elapsed_secs=0.000165956
09:59:59 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.707µs elapsed_secs=6.8707e-5
09:59:59 [DEBUG] (445) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.309969ms elapsed_secs=0.009309969
09:59:59 [DEBUG] (445) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=290.725µs elapsed_secs=0.000290725
09:59:59 [DEBUG] (445) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.635µs elapsed_secs=7.0635e-5
09:59:59 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.011842ms elapsed_secs=0.011011842
09:59:59 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=170.262µs elapsed_secs=0.000170262
09:59:59 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.637µs elapsed_secs=9.4637e-5
09:59:59 [DEBUG] (412) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.195544ms elapsed_secs=0.175195544
09:59:59 [DEBUG] (460) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=297.726µs elapsed_secs=0.000297726
09:59:59 [DEBUG] (460) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE level = $1\n" rows_affected=0 rows_returned=2 elapsed=328.562µs elapsed_secs=0.000328562
09:59:59 [DEBUG] (410) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (455) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.696117ms elapsed_secs=0.012696117
09:59:59 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.968957ms elapsed_secs=0.012968957
09:59:59 [DEBUG] (455) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=501.781µs elapsed_secs=0.000501781
09:59:59 [DEBUG] (463) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.705µs elapsed_secs=3.3705e-5
09:59:59 [DEBUG] (455) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=309.926µs elapsed_secs=0.000309926
09:59:59 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=662.927µs elapsed_secs=0.000662927
09:59:59 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.036µs elapsed_secs=0.000106036
09:59:59 [DEBUG] (445) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.013545ms elapsed_secs=0.011013545
09:59:59 [DEBUG] (445) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=318.279µs elapsed_secs=0.000318279
09:59:59 [DEBUG] (445) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.017µs elapsed_secs=7.8017e-5
09:59:59 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.046223ms elapsed_secs=0.010046223
09:59:59 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=368.373µs elapsed_secs=0.000368373
09:59:59 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.37µs elapsed_secs=0.00012137
09:59:59 [DEBUG] (422) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=176.600138ms elapsed_secs=0.176600138
09:59:59 [DEBUG] (463) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.205856ms elapsed_secs=0.014205856
09:59:59 [DEBUG] (463) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=102.425µs elapsed_secs=0.000102425
09:59:59 [DEBUG] (463) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=92.385µs elapsed_secs=9.2385e-5
09:59:59 [DEBUG] (464) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.923µs elapsed_secs=6.1923e-5
09:59:59 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=239.714µs elapsed_secs=0.000239714
09:59:59 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=295.831µs elapsed_secs=0.000295831
09:59:59 [DEBUG] (464) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE name LIKE '%' || $1 || '%'\n" rows_affected=0 rows_returned=1 elapsed=487.161µs elapsed_secs=0.000487161
09:59:59 [DEBUG] (420) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (467) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.549µs elapsed_secs=4.5549e-5
09:59:59 [DEBUG] (418) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=178.069803ms elapsed_secs=0.178069803
09:59:59 [DEBUG] (468) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.012µs elapsed_secs=7.4012e-5
09:59:59 [DEBUG] (468) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 AND parent_id = $2 AND level = $3 AND name LIKE '%' || $4 || '%' AND description LIKE '%' || $5 || '%' AND status = $6 AND deadline >= $7 AND deadline <= $8 AND created_at >= $9 AND created_at <= $10 AND updated_at >= $11 AND updated_at <= $12\n" rows_affected=0 rows_returned=1 elapsed=341.662µs elapsed_secs=0.000341662
09:59:59 [DEBUG] (416) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
09:59:59 [DEBUG] (471) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.262µs elapsed_secs=3.8262e-5
09:59:59 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.365904ms elapsed_secs=0.011365904
09:59:59 [DEBUG] (425) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=179.772701ms elapsed_secs=0.179772701
09:59:59 [DEBUG] (455) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.610703ms elapsed_secs=0.012610703
09:59:59 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=445.718µs elapsed_secs=0.000445718
09:59:59 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=584.109µs elapsed_secs=0.000584109
09:59:59 [DEBUG] (472) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=229.585µs elapsed_secs=0.000229585
09:59:59 [DEBUG] (455) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=2.024353ms elapsed_secs=0.002024353
09:59:59 [DEBUG] (455) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=178.227µs elapsed_secs=0.000178227
09:59:59 [DEBUG] (472) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n         \n" rows_affected=0 rows_returned=17 elapsed=290.362µs elapsed_secs=0.000290362
09:59:59 [DEBUG] (423) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
09:59:59 [DEBUG] (445) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.395248ms elapsed_secs=0.014395248
09:59:59 [DEBUG] (445) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=324.341µs elapsed_secs=0.000324341
09:59:59 [DEBUG] (445) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.036µs elapsed_secs=0.000120036
09:59:59 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.96995ms elapsed_secs=0.01496995
09:59:59 [DEBUG] (475) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.533µs elapsed_secs=5.2533e-5
09:59:59 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=447.438µs elapsed_secs=0.000447438
09:59:59 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.757µs elapsed_secs=8.2757e-5
09:59:59 [DEBUG] (429) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=181.030019ms elapsed_secs=0.181030019
09:59:59 [DEBUG] (467) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.597421ms elapsed_secs=0.017597421
09:59:59 [DEBUG] (467) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=136.058µs elapsed_secs=0.000136058
09:59:59 [DEBUG] (476) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.128µs elapsed_secs=4.5128e-5
09:59:59 [DEBUG] (467) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=71.558µs elapsed_secs=7.1558e-5
09:59:59 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=281.603µs elapsed_secs=0.000281603
09:59:59 [DEBUG] (476) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n        \n" rows_affected=0 rows_returned=17 elapsed=256.944µs elapsed_secs=0.000256944
09:59:59 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.241µs elapsed_secs=0.000109241
09:59:59 [DEBUG] (427) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
09:59:59 [DEBUG] (471) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.222632ms elapsed_secs=0.015222632
09:59:59 [DEBUG] (471) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=121.949µs elapsed_secs=0.000121949
09:59:59 [DEBUG] (471) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=117.691µs elapsed_secs=0.000117691
09:59:59 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.919992ms elapsed_secs=0.010919992
09:59:59 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.105804ms elapsed_secs=0.001105804
09:59:59 [DEBUG] (479) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.22µs elapsed_secs=8.422e-5
09:59:59 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=345.535µs elapsed_secs=0.000345535
09:59:59 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.616µs elapsed_secs=0.000113616
09:59:59 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=316.909µs elapsed_secs=0.000316909
09:59:59 [DEBUG] (475) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.740635ms elapsed_secs=0.014740635
09:59:59 [DEBUG] (475) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=111.872µs elapsed_secs=0.000111872
09:59:59 [DEBUG] (475) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=105.389µs elapsed_secs=0.000105389
09:59:59 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=337.231µs elapsed_secs=0.000337231
09:59:59 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.742µs elapsed_secs=0.000110742
09:59:59 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.265382ms elapsed_secs=0.011265382
09:59:59 [DEBUG] (455) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.123866ms elapsed_secs=0.008123866
09:59:59 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=585.947µs elapsed_secs=0.000585947
09:59:59 [DEBUG] (455) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=385.428µs elapsed_secs=0.000385428
09:59:59 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.944µs elapsed_secs=0.000101944
09:59:59 [DEBUG] (455) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.924µs elapsed_secs=6.4924e-5
09:59:59 [DEBUG] (479) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.019485ms elapsed_secs=0.013019485
09:59:59 [DEBUG] (479) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.743µs elapsed_secs=7.6743e-5
09:59:59 [DEBUG] (479) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.657µs elapsed_secs=8.4657e-5
09:59:59 [DEBUG] (445) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.184826ms elapsed_secs=0.008184826
09:59:59 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.344882ms elapsed_secs=0.008344882
09:59:59 [DEBUG] (445) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=308.166µs elapsed_secs=0.000308166
09:59:59 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=482.368µs elapsed_secs=0.000482368
09:59:59 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=378.928µs elapsed_secs=0.000378928
09:59:59 [DEBUG] (445) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.975µs elapsed_secs=0.000129975
09:59:59 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.326µs elapsed_secs=7.9326e-5
09:59:59 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.013µs elapsed_secs=7.8013e-5
09:59:59 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.044046ms elapsed_secs=0.013044046
09:59:59 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.655792ms elapsed_secs=0.008655792
09:59:59 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.244329ms elapsed_secs=0.009244329
09:59:59 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=360.052µs elapsed_secs=0.000360052
09:59:59 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=465.692µs elapsed_secs=0.000465692
09:59:59 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=891.283µs elapsed_secs=0.000891283
09:59:59 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.433µs elapsed_secs=8.4433e-5
09:59:59 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.883µs elapsed_secs=8.7883e-5
09:59:59 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.862µs elapsed_secs=9.3862e-5
09:59:59 [DEBUG] (433) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=189.922608ms elapsed_secs=0.189922608
09:59:59 [DEBUG] (455) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.284041ms elapsed_secs=0.010284041
09:59:59 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=15.05427ms elapsed_secs=0.01505427
09:59:59 [DEBUG] (480) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=117.943µs elapsed_secs=0.000117943
09:59:59 [DEBUG] (455) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=475.24µs elapsed_secs=0.00047524
09:59:59 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=420.148µs elapsed_secs=0.000420148
09:59:59 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=824.932µs elapsed_secs=0.000824932
09:59:59 [DEBUG] (455) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=887.308µs elapsed_secs=0.000887308
09:59:59 [DEBUG] (480) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE parent_id = $1\n" rows_affected=0 rows_returned=1 elapsed=1.368393ms elapsed_secs=0.001368393
09:59:59 [DEBUG] (431) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.308395ms elapsed_secs=0.012308395
09:59:59 [DEBUG] (459) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=216.472µs elapsed_secs=0.000216472
09:59:59 [DEBUG] (459) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.159µs elapsed_secs=9.9159e-5
09:59:59 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.703167ms elapsed_secs=0.010703167
09:59:59 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.247711ms elapsed_secs=0.011247711
09:59:59 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=194.685µs elapsed_secs=0.000194685
09:59:59 [DEBUG] (483) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.39µs elapsed_secs=4.139e-5
09:59:59 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=195.536µs elapsed_secs=0.000195536
09:59:59 [DEBUG] (445) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.636267ms elapsed_secs=0.011636267
09:59:59 [DEBUG] (437) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=198.907826ms elapsed_secs=0.198907826
09:59:59 [DEBUG] (484) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.517µs elapsed_secs=4.4517e-5
09:59:59 [DEBUG] (484) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1\n" rows_affected=0 rows_returned=3 elapsed=382.331µs elapsed_secs=0.000382331
09:59:59 [DEBUG] (435) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.897091ms elapsed_secs=0.008897091
09:59:59 [DEBUG] (487) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.768µs elapsed_secs=5.4768e-5
09:59:59 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.381219ms elapsed_secs=0.010381219
09:59:59 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.506232ms elapsed_secs=0.010506232
09:59:59 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=608.131µs elapsed_secs=0.000608131
09:59:59 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.956µs elapsed_secs=0.000127956
09:59:59 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=370.71µs elapsed_secs=0.00037071
09:59:59 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=346.448µs elapsed_secs=0.000346448
09:59:59 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=949.575µs elapsed_secs=0.000949575
09:59:59 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=1.069823ms elapsed_secs=0.001069823
09:59:59 [DEBUG] (483) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.632127ms elapsed_secs=0.014632127
09:59:59 [DEBUG] (483) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=117.307µs elapsed_secs=0.000117307
09:59:59 [DEBUG] (483) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=112.295µs elapsed_secs=0.000112295
09:59:59 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=227.371µs elapsed_secs=0.000227371
09:59:59 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.601µs elapsed_secs=0.000130601
09:59:59 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.878628ms elapsed_secs=0.008878628
09:59:59 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=523.886µs elapsed_secs=0.000523886
09:59:59 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.678µs elapsed_secs=8.7678e-5
09:59:59 [DEBUG] (455) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.001409ms elapsed_secs=0.012001409
09:59:59 [DEBUG] (459) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.622438ms elapsed_secs=0.009622438
09:59:59 [DEBUG] (487) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.202089ms elapsed_secs=0.015202089
09:59:59 [DEBUG] (487) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.64µs elapsed_secs=7.864e-5
09:59:59 [DEBUG] (487) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.652µs elapsed_secs=6.2652e-5
09:59:59 [DEBUG] (487) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=221.204µs elapsed_secs=0.000221204
09:59:59 [DEBUG] (487) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=188.823µs elapsed_secs=0.000188823
09:59:59 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.28075ms elapsed_secs=0.00828075
09:59:59 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=366.346µs elapsed_secs=0.000366346
09:59:59 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.295µs elapsed_secs=0.000103295
09:59:59 [DEBUG] (441) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=199.927631ms elapsed_secs=0.199927631
09:59:59 [DEBUG] (488) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.443µs elapsed_secs=6.5443e-5
09:59:59 [DEBUG] (488) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE status = $1\n" rows_affected=0 rows_returned=6 elapsed=573.307µs elapsed_secs=0.000573307
09:59:59 [DEBUG] (439) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
09:59:59 [DEBUG] (491) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.961µs elapsed_secs=4.4961e-5
09:59:59 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.588266ms elapsed_secs=0.012588266
09:59:59 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.847192ms elapsed_secs=0.012847192
09:59:59 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.861983ms elapsed_secs=0.012861983
09:59:59 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=164.698µs elapsed_secs=0.000164698
09:59:59 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.661µs elapsed_secs=0.000102661
09:59:59 [DEBUG] (463) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=326.287µs elapsed_secs=0.000326287
09:59:59 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=154.826µs elapsed_secs=0.000154826
09:59:59 [DEBUG] (463) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.786µs elapsed_secs=0.000147786
09:59:59 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.191µs elapsed_secs=6.7191e-5
09:59:59 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.538454ms elapsed_secs=0.009538454
09:59:59 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=379.669µs elapsed_secs=0.000379669
09:59:59 [DEBUG] (491) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.358127ms elapsed_secs=0.011358127
09:59:59 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.576053ms elapsed_secs=0.010576053
09:59:59 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.734µs elapsed_secs=0.000140734
09:59:59 [DEBUG] (491) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=122.201µs elapsed_secs=0.000122201
09:59:59 [DEBUG] (491) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=159.464µs elapsed_secs=0.000159464
09:59:59 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=344.495µs elapsed_secs=0.000344495
09:59:59 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.421µs elapsed_secs=0.000159421
09:59:59 [DEBUG] (491) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=287.933µs elapsed_secs=0.000287933
09:59:59 [DEBUG] (491) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=424.473µs elapsed_secs=0.000424473
09:59:59 [DEBUG] (487) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.249341ms elapsed_secs=0.011249341
09:59:59 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.431575ms elapsed_secs=0.011431575
09:59:59 [DEBUG] (487) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=279.167µs elapsed_secs=0.000279167
09:59:59 [DEBUG] (487) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=157.51µs elapsed_secs=0.00015751
09:59:59 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=184.206µs elapsed_secs=0.000184206
09:59:59 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.386µs elapsed_secs=0.000135386
09:59:59 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.32004ms elapsed_secs=0.00832004
09:59:59 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=198.842µs elapsed_secs=0.000198842
09:59:59 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.693µs elapsed_secs=9.8693e-5
09:59:59 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.494367ms elapsed_secs=0.007494367
09:59:59 [DEBUG] (463) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.738273ms elapsed_secs=0.007738273
09:59:59 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=268.289µs elapsed_secs=0.000268289
09:59:59 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.473µs elapsed_secs=6.0473e-5
09:59:59 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.916172ms elapsed_secs=0.009916172
09:59:59 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=376.901µs elapsed_secs=0.000376901
09:59:59 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.85µs elapsed_secs=9.385e-5
09:59:59 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.794018ms elapsed_secs=0.009794018
09:59:59 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=411.525µs elapsed_secs=0.000411525
09:59:59 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.752µs elapsed_secs=6.5752e-5
09:59:59 [DEBUG] (491) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.570954ms elapsed_secs=0.010570954
09:59:59 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.134608ms elapsed_secs=0.011134608
09:59:59 [DEBUG] (491) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=171.764µs elapsed_secs=0.000171764
09:59:59 [DEBUG] (487) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.518326ms elapsed_secs=0.011518326
09:59:59 [DEBUG] (491) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.547µs elapsed_secs=8.5547e-5
09:59:59 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=168.055µs elapsed_secs=0.000168055
09:59:59 [DEBUG] (487) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=191.992µs elapsed_secs=0.000191992
09:59:59 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.186µs elapsed_secs=8.3186e-5
09:59:59 [DEBUG] (487) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.786µs elapsed_secs=8.3786e-5
09:59:59 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.472827ms elapsed_secs=0.009472827
09:59:59 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.44115ms elapsed_secs=0.01144115
09:59:59 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.339976ms elapsed_secs=0.008339976
09:59:59 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=186.142µs elapsed_secs=0.000186142
09:59:59 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.165µs elapsed_secs=6.5165e-5
09:59:59 [DEBUG] (491) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.368415ms elapsed_secs=0.007368415
09:59:59 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.361911ms elapsed_secs=0.009361911
09:59:59 [DEBUG] (491) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=258.902µs elapsed_secs=0.000258902
09:59:59 [DEBUG] (487) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.170729ms elapsed_secs=0.008170729
09:59:59 [DEBUG] (491) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.676µs elapsed_secs=8.4676e-5
09:59:59 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.557117ms elapsed_secs=0.008557117
09:59:59 [DEBUG] (487) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=207.935µs elapsed_secs=0.000207935
09:59:59 [DEBUG] (487) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=243.341µs elapsed_secs=0.000243341
09:59:59 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.937449ms elapsed_secs=0.006937449
09:59:59 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=162.386µs elapsed_secs=0.000162386
09:59:59 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.922µs elapsed_secs=6.4922e-5
09:59:59 [DEBUG] (491) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.011967ms elapsed_secs=0.009011967
09:59:59 [DEBUG] (491) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=221.964µs elapsed_secs=0.000221964
09:59:59 [DEBUG] (491) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.248µs elapsed_secs=7.6248e-5
09:59:59 [DEBUG] (487) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.891416ms elapsed_secs=0.010891416
09:59:59 [DEBUG] (487) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=186.67µs elapsed_secs=0.00018667
09:59:59 [DEBUG] (487) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.19µs elapsed_secs=9.419e-5
09:59:59 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.594569ms elapsed_secs=0.007594569
09:59:59 [DEBUG] (491) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.927218ms elapsed_secs=0.007927218
09:59:59 [DEBUG] (491) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=265.224µs elapsed_secs=0.000265224
09:59:59 [DEBUG] (491) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.665µs elapsed_secs=8.5665e-5
09:59:59 [DEBUG] (487) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.559233ms elapsed_secs=0.006559233
09:59:59 [DEBUG] (491) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.922742ms elapsed_secs=0.007922742
09:59:59 [DEBUG] (450) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=160.957837ms elapsed_secs=0.160957837
09:59:59 [DEBUG] (492) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.286µs elapsed_secs=5.1286e-5
09:59:59 [DEBUG] (495) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.137µs elapsed_secs=4.6137e-5
09:59:59 [DEBUG] (445) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.394947ms elapsed_secs=0.175394947
09:59:59 [DEBUG] (496) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.161µs elapsed_secs=6.7161e-5
09:59:59 [DEBUG] (495) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.331975ms elapsed_secs=0.016331975
09:59:59 [DEBUG] (495) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=168.371µs elapsed_secs=0.000168371
09:59:59 [DEBUG] (496) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE updated_at >= $1 AND updated_at <= $2\n" rows_affected=0 rows_returned=1 elapsed=331.733µs elapsed_secs=0.000331733
09:59:59 [DEBUG] (495) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=96.38µs elapsed_secs=9.638e-5
09:59:59 [DEBUG] (443) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }]
09:59:59 [DEBUG] (495) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=302.013µs elapsed_secs=0.000302013
09:59:59 [DEBUG] (497) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.74µs elapsed_secs=4.574e-5
10:00:00 [DEBUG] (495) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=193.479µs elapsed_secs=0.000193479
10:00:00 [DEBUG] (497) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE updated_at >= $1\n" rows_affected=0 rows_returned=2 elapsed=337.796µs elapsed_secs=0.000337796
10:00:00 [DEBUG] (443) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
10:00:00 [DEBUG] (496) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE updated_at <= $1\n" rows_affected=0 rows_returned=1 elapsed=112.144µs elapsed_secs=0.000112144
10:00:00 [DEBUG] (443) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }]
10:00:00 [DEBUG] (459) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.895376ms elapsed_secs=0.164895376
10:00:00 [DEBUG] (500) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.841µs elapsed_secs=5.8841e-5
10:00:00 [DEBUG] (455) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.032219ms elapsed_secs=0.166032219
10:00:00 [DEBUG] (501) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.615µs elapsed_secs=8.1615e-5
10:00:00 [DEBUG] (502) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.748µs elapsed_secs=3.3748e-5
10:00:00 [DEBUG] (505) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=103.723µs elapsed_secs=0.000103723
10:00:00 [DEBUG] (508) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.883µs elapsed_secs=3.9883e-5
10:00:00 [DEBUG] (500) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.913271ms elapsed_secs=0.015913271
10:00:00 [DEBUG] (500) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=131.991µs elapsed_secs=0.000131991
10:00:00 [DEBUG] (500) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.432µs elapsed_secs=8.0432e-5
10:00:00 [DEBUG] (508) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.947333ms elapsed_secs=0.012947333
10:00:00 [DEBUG] (505) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.875419ms elapsed_secs=0.013875419
10:00:00 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=266.454µs elapsed_secs=0.000266454
10:00:00 [DEBUG] (508) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=162.491µs elapsed_secs=0.000162491
10:00:00 [DEBUG] (505) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=96.373µs elapsed_secs=9.6373e-5
10:00:00 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.372µs elapsed_secs=0.000101372
10:00:00 [DEBUG] (508) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.962µs elapsed_secs=8.5962e-5
10:00:00 [DEBUG] (505) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=83.354µs elapsed_secs=8.3354e-5
10:00:00 [DEBUG] (495) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.299532ms elapsed_secs=0.009299532
10:00:00 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=651.226µs elapsed_secs=0.000651226
10:00:00 [DEBUG] (495) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=785.605µs elapsed_secs=0.000785605
10:00:00 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.002276ms elapsed_secs=0.001002276
10:00:00 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=174.193µs elapsed_secs=0.000174193
10:00:00 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.353µs elapsed_secs=9.7353e-5
10:00:00 [DEBUG] (495) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.984µs elapsed_secs=9.8984e-5
10:00:00 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.025805ms elapsed_secs=0.008025805
10:00:00 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=285.998µs elapsed_secs=0.000285998
10:00:00 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.645µs elapsed_secs=0.000114645
10:00:00 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.724852ms elapsed_secs=0.008724852
10:00:00 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.125636ms elapsed_secs=0.009125636
10:00:00 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=408.795µs elapsed_secs=0.000408795
10:00:00 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=502.794µs elapsed_secs=0.000502794
10:00:00 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=184.338µs elapsed_secs=0.000184338
10:00:00 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.73µs elapsed_secs=8.773e-5
10:00:00 [DEBUG] (495) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.485998ms elapsed_secs=0.010485998
10:00:00 [DEBUG] (495) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=269.324µs elapsed_secs=0.000269324
10:00:00 [DEBUG] (495) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=184.314µs elapsed_secs=0.000184314
10:00:00 [DEBUG] (463) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=183.841297ms elapsed_secs=0.183841297
10:00:00 [DEBUG] (509) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.08µs elapsed_secs=6.808e-5
10:00:00 [DEBUG] (512) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.133µs elapsed_secs=3.8133e-5
10:00:00 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=26.698037ms elapsed_secs=0.026698037
10:00:00 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=234.653µs elapsed_secs=0.000234653
10:00:00 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.121µs elapsed_secs=7.6121e-5
10:00:00 [DEBUG] (471) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=187.692059ms elapsed_secs=0.187692059
10:00:00 [DEBUG] (513) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.796µs elapsed_secs=3.4796e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.629µs elapsed_secs=3.3629e-5
10:00:00 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=42.636807ms elapsed_secs=0.042636807
10:00:00 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=212.14µs elapsed_secs=0.00021214
10:00:00 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.958µs elapsed_secs=7.5958e-5
10:00:00 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=46.333784ms elapsed_secs=0.046333784
10:00:00 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=151.927µs elapsed_secs=0.000151927
10:00:00 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.607µs elapsed_secs=6.8607e-5
10:00:00 [DEBUG] (467) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=212.639725ms elapsed_secs=0.212639725
10:00:00 [DEBUG] (517) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=157.898µs elapsed_secs=0.000157898
10:00:00 [DEBUG] (512) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=47.510848ms elapsed_secs=0.047510848
10:00:00 [DEBUG] (512) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=155.238µs elapsed_secs=0.000155238
10:00:00 [DEBUG] (512) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=91.58µs elapsed_secs=9.158e-5
10:00:00 [DEBUG] (520) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.253µs elapsed_secs=4.5253e-5
10:00:00 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=355.169µs elapsed_secs=0.000355169
10:00:00 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.511µs elapsed_secs=8.0511e-5
10:00:00 [DEBUG] (495) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=55.124745ms elapsed_secs=0.055124745
10:00:00 [DEBUG] (495) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=165.468µs elapsed_secs=0.000165468
10:00:00 [DEBUG] (495) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.579µs elapsed_secs=8.1579e-5
10:00:00 [DEBUG] (475) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=217.651144ms elapsed_secs=0.217651144
10:00:00 [DEBUG] (521) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=110.772µs elapsed_secs=0.000110772
10:00:00 [DEBUG] (524) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=139.763µs elapsed_secs=0.000139763
10:00:00 [DEBUG] (516) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=41.6101ms elapsed_secs=0.0416101
10:00:00 [DEBUG] (516) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=142.896µs elapsed_secs=0.000142896
10:00:00 [DEBUG] (516) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=127.893µs elapsed_secs=0.000127893
10:00:00 [DEBUG] (516) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=194.493µs elapsed_secs=0.000194493
10:00:00 [DEBUG] (516) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.936µs elapsed_secs=7.9936e-5
10:00:00 [DEBUG] (479) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=243.118802ms elapsed_secs=0.243118802
10:00:00 [DEBUG] (525) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.272µs elapsed_secs=3.8272e-5
10:00:00 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=22.60115ms elapsed_secs=0.02260115
10:00:00 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=170.526µs elapsed_secs=0.000170526
10:00:00 [DEBUG] (520) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=42.675492ms elapsed_secs=0.042675492
10:00:00 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=179.803µs elapsed_secs=0.000179803
10:00:00 [DEBUG] (520) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.705µs elapsed_secs=7.7705e-5
10:00:00 [DEBUG] (520) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=54.547µs elapsed_secs=5.4547e-5
10:00:00 [DEBUG] (528) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.249µs elapsed_secs=4.2249e-5
10:00:00 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=357.611µs elapsed_secs=0.000357611
10:00:00 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=213.655µs elapsed_secs=0.000213655
10:00:00 [DEBUG] (524) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=26.589145ms elapsed_secs=0.026589145
10:00:00 [DEBUG] (524) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.173µs elapsed_secs=8.5173e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.12µs elapsed_secs=7.012e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=242.491µs elapsed_secs=0.000242491
10:00:00 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=15.147225ms elapsed_secs=0.015147225
10:00:00 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.682µs elapsed_secs=7.7682e-5
10:00:00 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=15.376819ms elapsed_secs=0.015376819
10:00:00 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=164.1µs elapsed_secs=0.0001641
10:00:00 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=278.877µs elapsed_secs=0.000278877
10:00:00 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.182µs elapsed_secs=9.6182e-5
10:00:00 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.435µs elapsed_secs=8.2435e-5
10:00:00 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.41641ms elapsed_secs=0.01041641
10:00:00 [DEBUG] (495) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.13575ms elapsed_secs=0.01113575
10:00:00 [DEBUG] (495) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=344.001µs elapsed_secs=0.000344001
10:00:00 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=420.653µs elapsed_secs=0.000420653
10:00:00 [DEBUG] (495) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.454µs elapsed_secs=8.0454e-5
10:00:00 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.655µs elapsed_secs=6.5655e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.868917ms elapsed_secs=0.010868917
10:00:00 [DEBUG] (516) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=161.31µs elapsed_secs=0.00016131
10:00:00 [DEBUG] (516) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.78µs elapsed_secs=7.878e-5
10:00:00 [DEBUG] (528) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.178549ms elapsed_secs=0.013178549
10:00:00 [DEBUG] (528) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.05µs elapsed_secs=7.205e-5
10:00:00 [DEBUG] (528) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=44.246µs elapsed_secs=4.4246e-5
10:00:00 [DEBUG] (528) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=192.908µs elapsed_secs=0.000192908
10:00:00 [DEBUG] (528) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.038µs elapsed_secs=0.000132038
10:00:00 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.241044ms elapsed_secs=0.007241044
10:00:00 [DEBUG] (500) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=163.839µs elapsed_secs=0.000163839
10:00:00 [DEBUG] (500) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.248µs elapsed_secs=0.000117248
10:00:00 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.133127ms elapsed_secs=0.007133127
10:00:00 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.366617ms elapsed_secs=0.007366617
10:00:00 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=153.038µs elapsed_secs=0.000153038
10:00:00 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.981289ms elapsed_secs=0.007981289
10:00:00 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=269.095µs elapsed_secs=0.000269095
10:00:00 [DEBUG] (508) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=483.858µs elapsed_secs=0.000483858
10:00:00 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.974563ms elapsed_secs=0.008974563
10:00:00 [DEBUG] (508) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=380.22µs elapsed_secs=0.00038022
10:00:00 [DEBUG] (505) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=318.317µs elapsed_secs=0.000318317
10:00:00 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=682.277µs elapsed_secs=0.000682277
10:00:00 [DEBUG] (505) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.541µs elapsed_secs=9.6541e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.543µs elapsed_secs=6.8543e-5
10:00:00 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.942717ms elapsed_secs=0.010942717
10:00:00 [DEBUG] (495) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.873108ms elapsed_secs=0.007873108
10:00:00 [DEBUG] (483) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=245.5751ms elapsed_secs=0.2455751
10:00:00 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=269.485µs elapsed_secs=0.000269485
10:00:00 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.209µs elapsed_secs=9.9209e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.106449ms elapsed_secs=0.009106449
10:00:00 [DEBUG] (529) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.434µs elapsed_secs=4.7434e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=182.256µs elapsed_secs=0.000182256
10:00:00 [DEBUG] (516) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.897µs elapsed_secs=8.3897e-5
10:00:00 [DEBUG] (532) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.892µs elapsed_secs=5.5892e-5
10:00:00 [DEBUG] (528) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.486276ms elapsed_secs=0.009486276
10:00:00 [DEBUG] (528) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=569.643µs elapsed_secs=0.000569643
10:00:00 [DEBUG] (528) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.367µs elapsed_secs=8.6367e-5
10:00:00 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.617127ms elapsed_secs=0.010617127
10:00:00 [DEBUG] (500) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.840631ms elapsed_secs=0.012840631
10:00:00 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=172.167µs elapsed_secs=0.000172167
10:00:00 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.191µs elapsed_secs=7.8191e-5
10:00:00 [DEBUG] (487) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=253.499134ms elapsed_secs=0.253499134
10:00:00 [DEBUG] (533) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.29µs elapsed_secs=4.429e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.970819ms elapsed_secs=0.008970819
10:00:00 [DEBUG] (508) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.736124ms elapsed_secs=0.012736124
10:00:00 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=505.303µs elapsed_secs=0.000505303
10:00:00 [DEBUG] (532) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.050476ms elapsed_secs=0.014050476
10:00:00 [DEBUG] (505) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.733018ms elapsed_secs=0.009733018
10:00:00 [DEBUG] (536) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.044µs elapsed_secs=4.4044e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.095µs elapsed_secs=8.2095e-5
10:00:00 [DEBUG] (532) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.617µs elapsed_secs=8.1617e-5
10:00:00 [DEBUG] (532) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=100.9µs elapsed_secs=0.0001009
10:00:00 [DEBUG] (532) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=159.432µs elapsed_secs=0.000159432
10:00:00 [DEBUG] (532) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.149µs elapsed_secs=7.4149e-5
10:00:00 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.308142ms elapsed_secs=0.009308142
10:00:00 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=459.411µs elapsed_secs=0.000459411
10:00:00 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.83µs elapsed_secs=9.483e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.286612ms elapsed_secs=0.013286612
10:00:00 [DEBUG] (516) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=246.34µs elapsed_secs=0.00024634
10:00:00 [DEBUG] (516) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.25µs elapsed_secs=0.00015525
10:00:00 [DEBUG] (536) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.93032ms elapsed_secs=0.01493032
10:00:00 [DEBUG] (528) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.20052ms elapsed_secs=0.01420052
10:00:00 [DEBUG] (536) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=95.156µs elapsed_secs=9.5156e-5
10:00:00 [DEBUG] (528) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=148.518µs elapsed_secs=0.000148518
10:00:00 [DEBUG] (536) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.078µs elapsed_secs=6.1078e-5
10:00:00 [DEBUG] (528) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.769µs elapsed_secs=0.000136769
10:00:00 [DEBUG] (536) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=459.333µs elapsed_secs=0.000459333
10:00:00 [DEBUG] (536) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.324µs elapsed_secs=8.8324e-5
10:00:00 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.662497ms elapsed_secs=0.008662497
10:00:00 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=188.739µs elapsed_secs=0.000188739
10:00:00 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.257µs elapsed_secs=6.5257e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.932917ms elapsed_secs=0.005932917
10:00:00 [DEBUG] (491) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=263.176936ms elapsed_secs=0.263176936
10:00:00 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=212.252µs elapsed_secs=0.000212252
10:00:00 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.585µs elapsed_secs=0.000106585
10:00:00 [DEBUG] (537) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.625µs elapsed_secs=5.9625e-5
10:00:00 [DEBUG] (532) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.127292ms elapsed_secs=0.008127292
10:00:00 [DEBUG] (532) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=368.75µs elapsed_secs=0.00036875
10:00:00 [DEBUG] (540) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.547µs elapsed_secs=8.8547e-5
10:00:00 [DEBUG] (532) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.462µs elapsed_secs=0.000131462
10:00:00 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.193063ms elapsed_secs=0.009193063
10:00:00 [DEBUG] (512) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=128.63µs elapsed_secs=0.00012863
10:00:00 [DEBUG] (512) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.437µs elapsed_secs=7.9437e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.474518ms elapsed_secs=0.008474518
10:00:00 [DEBUG] (516) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=198.616µs elapsed_secs=0.000198616
10:00:00 [DEBUG] (516) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.837µs elapsed_secs=0.000123837
10:00:00 [DEBUG] (536) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.137395ms elapsed_secs=0.009137395
10:00:00 [DEBUG] (528) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.798174ms elapsed_secs=0.009798174
10:00:00 [DEBUG] (536) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=285.813µs elapsed_secs=0.000285813
10:00:00 [DEBUG] (536) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.732µs elapsed_secs=0.000167732
10:00:00 [DEBUG] (528) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=259.608µs elapsed_secs=0.000259608
10:00:00 [DEBUG] (528) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.525µs elapsed_secs=0.000141525
10:00:00 [DEBUG] (540) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.979323ms elapsed_secs=0.012979323
10:00:00 [DEBUG] (540) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=122.345µs elapsed_secs=0.000122345
10:00:00 [DEBUG] (540) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.59µs elapsed_secs=7.659e-5
10:00:00 [DEBUG] (540) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=292.987µs elapsed_secs=0.000292987
10:00:00 [DEBUG] (540) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=241.165µs elapsed_secs=0.000241165
10:00:00 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.332154ms elapsed_secs=0.010332154
10:00:00 [DEBUG] (520) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=411.929µs elapsed_secs=0.000411929
10:00:00 [DEBUG] (520) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.166µs elapsed_secs=0.000123166
10:00:00 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.827951ms elapsed_secs=0.011827951
10:00:00 [DEBUG] (524) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=244.473µs elapsed_secs=0.000244473
10:00:00 [DEBUG] (524) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.244µs elapsed_secs=0.000119244
10:00:00 [DEBUG] (532) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.333821ms elapsed_secs=0.009333821
10:00:00 [DEBUG] (532) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=182.165µs elapsed_secs=0.000182165
10:00:00 [DEBUG] (532) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.175µs elapsed_secs=8.8175e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.481188ms elapsed_secs=0.006481188
10:00:00 [DEBUG] (512) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.55907ms elapsed_secs=0.00955907
10:00:00 [DEBUG] (528) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.810109ms elapsed_secs=0.010810109
10:00:00 [DEBUG] (536) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.3777ms elapsed_secs=0.0113777
10:00:00 [DEBUG] (528) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=393.433µs elapsed_secs=0.000393433
10:00:00 [DEBUG] (528) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.427µs elapsed_secs=7.6427e-5
10:00:00 [DEBUG] (536) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=227.582µs elapsed_secs=0.000227582
10:00:00 [DEBUG] (536) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.403µs elapsed_secs=9.0403e-5
10:00:00 [DEBUG] (540) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.275752ms elapsed_secs=0.009275752
10:00:00 [DEBUG] (520) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.68938ms elapsed_secs=0.00968938
10:00:00 [DEBUG] (540) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=392.524µs elapsed_secs=0.000392524
10:00:00 [DEBUG] (540) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.219µs elapsed_secs=6.8219e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.857034ms elapsed_secs=0.008857034
10:00:00 [DEBUG] (532) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.187131ms elapsed_secs=0.007187131
10:00:00 [DEBUG] (532) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=761.906µs elapsed_secs=0.000761906
10:00:00 [DEBUG] (532) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.041µs elapsed_secs=0.000125041
10:00:00 [DEBUG] (528) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.657449ms elapsed_secs=0.005657449
10:00:00 [DEBUG] (536) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.483049ms elapsed_secs=0.008483049
10:00:00 [DEBUG] (540) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.621363ms elapsed_secs=0.007621363
10:00:00 [DEBUG] (536) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=406.283µs elapsed_secs=0.000406283
10:00:00 [DEBUG] (540) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=395.655µs elapsed_secs=0.000395655
10:00:00 [DEBUG] (536) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.66µs elapsed_secs=5.766e-5
10:00:00 [DEBUG] (540) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.202µs elapsed_secs=6.1202e-5
10:00:00 [DEBUG] (532) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.036634ms elapsed_secs=0.008036634
10:00:00 [DEBUG] (532) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=175.482µs elapsed_secs=0.000175482
10:00:00 [DEBUG] (532) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.996µs elapsed_secs=6.6996e-5
10:00:00 [DEBUG] (536) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.711506ms elapsed_secs=0.007711506
10:00:00 [DEBUG] (540) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.902373ms elapsed_secs=0.007902373
10:00:00 [DEBUG] (536) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=607.911µs elapsed_secs=0.000607911
10:00:00 [DEBUG] (540) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=519.266µs elapsed_secs=0.000519266
10:00:00 [DEBUG] (536) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.621µs elapsed_secs=9.5621e-5
10:00:00 [DEBUG] (540) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.449µs elapsed_secs=8.0449e-5
10:00:00 [DEBUG] (532) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.172901ms elapsed_secs=0.008172901
10:00:00 [DEBUG] (540) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.034533ms elapsed_secs=0.009034533
10:00:00 [DEBUG] (536) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.788439ms elapsed_secs=0.009788439
10:00:00 [DEBUG] (540) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=387.787µs elapsed_secs=0.000387787
10:00:00 [DEBUG] (540) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.017µs elapsed_secs=8.7017e-5
10:00:00 [DEBUG] (540) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.494118ms elapsed_secs=0.007494118
10:00:00 [DEBUG] (495) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.105271ms elapsed_secs=0.175105271
10:00:00 [DEBUG] (500) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=162.513043ms elapsed_secs=0.162513043
10:00:00 [DEBUG] (541) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.683µs elapsed_secs=7.1683e-5
10:00:00 [DEBUG] (542) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.728µs elapsed_secs=3.4728e-5
10:00:00 [DEBUG] (541) sqlx::query: summary="SELECT COUNT(*) FROM tasks …" db.statement="\n\n\n        SELECT COUNT(*) FROM tasks\n    \n" rows_affected=0 rows_returned=1 elapsed=282.048µs elapsed_secs=0.000282048
10:00:00 [DEBUG] (542) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 AND parent_id = $2 AND level = $3 AND name LIKE '%' || $4 || '%' AND description LIKE '%' || $5 || '%' AND status = $6 AND deadline >= $7 AND deadline <= $8 AND created_at >= $9 AND created_at <= $10 AND updated_at >= $11 AND updated_at <= $12\n" rows_affected=0 rows_returned=0 elapsed=206.731µs elapsed_secs=0.000206731
10:00:00 [DEBUG] (493) menahel::repository::task_repo: Get tasks count with transaction: 17
10:00:00 [DEBUG] (498) menahel::repository::task_repo: Get tasks by filter: []
10:00:00 [DEBUG] (541) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n         LIMIT $1 OFFSET $2\n" rows_affected=0 rows_returned=10 elapsed=91.388µs elapsed_secs=9.1388e-5
10:00:00 [DEBUG] (493) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }]
10:00:00 [DEBUG] (505) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=161.020049ms elapsed_secs=0.161020049
10:00:00 [DEBUG] (545) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.599µs elapsed_secs=5.3599e-5
10:00:00 [DEBUG] (546) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.355µs elapsed_secs=3.6355e-5
10:00:00 [DEBUG] (546) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=220.588µs elapsed_secs=0.000220588
10:00:00 [DEBUG] (549) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.851µs elapsed_secs=3.4851e-5
10:00:00 [DEBUG] (503) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:00 [DEBUG] (550) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.979µs elapsed_secs=3.9979e-5
10:00:00 [DEBUG] (550) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=107.427µs elapsed_secs=0.000107427
10:00:00 [DEBUG] (550) sqlx::query: summary="UPDATE tasks SET parent_id …" db.statement="\n\n\n                UPDATE tasks \n                SET parent_id = $1, level = $2, name = $3, description = $4, status = $5, deadline = $6, updated_at = $7\n                WHERE id = $8\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=157.114µs elapsed_secs=0.000157114
10:00:00 [DEBUG] (508) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=167.359617ms elapsed_secs=0.167359617
10:00:00 [DEBUG] (551) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.043µs elapsed_secs=6.0043e-5
10:00:00 [DEBUG] (551) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=180.072µs elapsed_secs=0.000180072
10:00:00 [DEBUG] (551) sqlx::query: summary="UPDATE tasks SET parent_id …" db.statement="\n\n\n                UPDATE tasks \n                SET parent_id = $1, level = $2, name = $3, description = $4, status = $5, deadline = $6, updated_at = $7\n                WHERE id = $8\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=0 elapsed=138.866µs elapsed_secs=0.000138866
10:00:00 [DEBUG] (554) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=109.605µs elapsed_secs=0.000109605
10:00:00 [DEBUG] (545) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.073856ms elapsed_secs=0.013073856
10:00:00 [DEBUG] (545) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=329.04µs elapsed_secs=0.00032904
10:00:00 [DEBUG] (545) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=120.447µs elapsed_secs=0.000120447
10:00:00 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=489.355µs elapsed_secs=0.000489355
10:00:00 [DEBUG] (549) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.686409ms elapsed_secs=0.015686409
10:00:00 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=221.557µs elapsed_secs=0.000221557
10:00:00 [DEBUG] (549) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=153.032µs elapsed_secs=0.000153032
10:00:00 [DEBUG] (549) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=97.791µs elapsed_secs=9.7791e-5
10:00:00 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=279.827µs elapsed_secs=0.000279827
10:00:00 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.441µs elapsed_secs=0.000121441
10:00:00 [INFO] Updated task: Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test Task", description: Some("Test Task Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: Some(1749463200) }
10:00:00 [DEBUG] (557) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.138µs elapsed_secs=8.1138e-5
10:00:00 [DEBUG] (554) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.496162ms elapsed_secs=0.013496162
10:00:00 [DEBUG] (554) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=148.925µs elapsed_secs=0.000148925
10:00:00 [DEBUG] (554) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=441.323µs elapsed_secs=0.000441323
10:00:00 [DEBUG] (554) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=507.665µs elapsed_secs=0.000507665
10:00:00 [DEBUG] (554) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.078µs elapsed_secs=9.6078e-5
10:00:00 [DEBUG] (557) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.047017ms elapsed_secs=0.015047017
10:00:00 [DEBUG] (557) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=100.393µs elapsed_secs=0.000100393
10:00:00 [DEBUG] (557) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.522µs elapsed_secs=7.0522e-5
10:00:00 [DEBUG] (557) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=221.341µs elapsed_secs=0.000221341
10:00:00 [DEBUG] (557) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=224.647µs elapsed_secs=0.000224647
10:00:00 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.537464ms elapsed_secs=0.009537464
10:00:00 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=341.958µs elapsed_secs=0.000341958
10:00:00 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.957µs elapsed_secs=0.000124957
10:00:00 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.549353ms elapsed_secs=0.011549353
10:00:00 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.001499ms elapsed_secs=0.001001499
10:00:00 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.65µs elapsed_secs=0.00012965
10:00:00 [DEBUG] (554) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.281713ms elapsed_secs=0.010281713
10:00:00 [DEBUG] (554) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=454.498µs elapsed_secs=0.000454498
10:00:00 [DEBUG] (554) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.949µs elapsed_secs=6.7949e-5
10:00:00 [DEBUG] (516) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.084289ms elapsed_secs=0.166084289
10:00:00 [DEBUG] (558) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.526µs elapsed_secs=4.4526e-5
10:00:00 [DEBUG] (558) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=143.209µs elapsed_secs=0.000143209
10:00:00 [DEBUG] (561) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=242.263µs elapsed_secs=0.000242263
10:00:00 [DEBUG] (557) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.525336ms elapsed_secs=0.011525336
10:00:00 [DEBUG] (557) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=709.546µs elapsed_secs=0.000709546
10:00:00 [DEBUG] (557) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.941µs elapsed_secs=8.3941e-5
10:00:00 [DEBUG] (512) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=173.355113ms elapsed_secs=0.173355113
10:00:00 [DEBUG] (562) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.564µs elapsed_secs=4.2564e-5
10:00:00 [DEBUG] (562) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=354.241µs elapsed_secs=0.000354241
10:00:00 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.23274ms elapsed_secs=0.01323274
10:00:00 [DEBUG] (562) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=104.87µs elapsed_secs=0.00010487
10:00:00 [DEBUG] (510) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:00 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=431.917µs elapsed_secs=0.000431917
10:00:00 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.252µs elapsed_secs=8.5252e-5
10:00:00 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.719616ms elapsed_secs=0.009719616
10:00:00 [DEBUG] (565) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=90.533µs elapsed_secs=9.0533e-5
10:00:00 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=485.909µs elapsed_secs=0.000485909
10:00:00 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.672µs elapsed_secs=7.2672e-5
10:00:00 [DEBUG] (561) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.941549ms elapsed_secs=0.009941549
10:00:00 [DEBUG] (561) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.99µs elapsed_secs=7.999e-5
10:00:00 [DEBUG] (561) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=44.037µs elapsed_secs=4.4037e-5
10:00:00 [DEBUG] (561) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=164.126µs elapsed_secs=0.000164126
10:00:00 [DEBUG] (561) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.773µs elapsed_secs=7.3773e-5
10:00:00 [DEBUG] (554) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.199885ms elapsed_secs=0.008199885
10:00:00 [DEBUG] (554) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.087006ms elapsed_secs=0.001087006
10:00:00 [DEBUG] (554) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.239µs elapsed_secs=0.000108239
10:00:00 [DEBUG] (565) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.157342ms elapsed_secs=0.012157342
10:00:00 [DEBUG] (565) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.892µs elapsed_secs=7.7892e-5
10:00:00 [DEBUG] (565) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=65.988µs elapsed_secs=6.5988e-5
10:00:00 [DEBUG] (565) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=226.852µs elapsed_secs=0.000226852
10:00:00 [DEBUG] (565) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.583µs elapsed_secs=8.5583e-5
10:00:00 [DEBUG] (524) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=177.956354ms elapsed_secs=0.177956354
10:00:00 [DEBUG] (566) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.312µs elapsed_secs=5.2312e-5
10:00:00 [DEBUG] (566) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=128.816µs elapsed_secs=0.000128816
10:00:00 [DEBUG] (566) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=64.001µs elapsed_secs=6.4001e-5
10:00:00 [DEBUG] (520) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=183.0073ms elapsed_secs=0.1830073
10:00:00 [DEBUG] (522) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:00 [DEBUG] (567) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.075µs elapsed_secs=4.2075e-5
10:00:00 [DEBUG] (567) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=159.732µs elapsed_secs=0.000159732
10:00:00 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.002677ms elapsed_secs=0.009002677
10:00:00 [DEBUG] (570) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.443µs elapsed_secs=4.0443e-5
10:00:00 [DEBUG] (567) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=83.773µs elapsed_secs=8.3773e-5
10:00:00 [DEBUG] (557) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.29422ms elapsed_secs=0.00929422
10:00:00 [DEBUG] (518) menahel::repository::task_repo: Get task by id with transaction: None
10:00:00 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=659.005µs elapsed_secs=0.000659005
10:00:00 [DEBUG] (557) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=338.695µs elapsed_secs=0.000338695
10:00:00 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.875µs elapsed_secs=7.9875e-5
10:00:00 [DEBUG] (557) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.92µs elapsed_secs=0.00010092
10:00:00 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.734828ms elapsed_secs=0.009734828
10:00:00 [DEBUG] (573) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.042µs elapsed_secs=8.3042e-5
10:00:00 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=341.408µs elapsed_secs=0.000341408
10:00:00 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.365µs elapsed_secs=0.000146365
10:00:00 [DEBUG] (561) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.966954ms elapsed_secs=0.011966954
10:00:00 [DEBUG] (561) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=332.338µs elapsed_secs=0.000332338
10:00:00 [DEBUG] (561) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.586µs elapsed_secs=7.3586e-5
10:00:00 [DEBUG] (570) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.400842ms elapsed_secs=0.012400842
10:00:00 [DEBUG] (570) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=80.594µs elapsed_secs=8.0594e-5
10:00:00 [DEBUG] (570) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=79.692µs elapsed_secs=7.9692e-5
10:00:00 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=176.266µs elapsed_secs=0.000176266
10:00:00 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.309µs elapsed_secs=5.8309e-5
10:00:00 [DEBUG] (554) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.243981ms elapsed_secs=0.010243981
10:00:00 [DEBUG] (554) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=470.185µs elapsed_secs=0.000470185
10:00:00 [DEBUG] (554) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.943µs elapsed_secs=5.2943e-5
10:00:00 [DEBUG] (573) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.786554ms elapsed_secs=0.013786554
10:00:00 [DEBUG] (573) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.651µs elapsed_secs=7.5651e-5
10:00:00 [DEBUG] (573) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.493µs elapsed_secs=5.7493e-5
10:00:00 [DEBUG] (573) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=218.678µs elapsed_secs=0.000218678
10:00:00 [DEBUG] (573) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.123µs elapsed_secs=8.0123e-5
10:00:00 [DEBUG] (565) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.105828ms elapsed_secs=0.007105828
10:00:00 [DEBUG] (565) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=244.683µs elapsed_secs=0.000244683
10:00:00 [DEBUG] (565) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.238µs elapsed_secs=0.000117238
10:00:00 [DEBUG] (557) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=58.347745ms elapsed_secs=0.058347745
10:00:00 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=58.183322ms elapsed_secs=0.058183322
10:00:00 [DEBUG] (557) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=175.205µs elapsed_secs=0.000175205
10:00:00 [DEBUG] (549) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=220.191µs elapsed_secs=0.000220191
10:00:00 [DEBUG] (557) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.965µs elapsed_secs=7.3965e-5
10:00:00 [DEBUG] (549) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.457µs elapsed_secs=6.5457e-5
10:00:00 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=58.589096ms elapsed_secs=0.058589096
10:00:00 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=132.468µs elapsed_secs=0.000132468
10:00:00 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.482µs elapsed_secs=8.2482e-5
10:00:00 [DEBUG] (561) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.642334ms elapsed_secs=0.006642334
10:00:00 [DEBUG] (561) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=237.288µs elapsed_secs=0.000237288
10:00:00 [DEBUG] (561) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.355µs elapsed_secs=7.2355e-5
10:00:00 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.505228ms elapsed_secs=0.009505228
10:00:00 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=295.031µs elapsed_secs=0.000295031
10:00:00 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.832µs elapsed_secs=7.4832e-5
10:00:00 [DEBUG] (554) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.542956ms elapsed_secs=0.010542956
10:00:00 [DEBUG] (554) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=338.58µs elapsed_secs=0.00033858
10:00:00 [DEBUG] (565) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.790855ms elapsed_secs=0.008790855
10:00:00 [DEBUG] (554) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.233µs elapsed_secs=7.0233e-5
10:00:00 [DEBUG] (565) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=253.581µs elapsed_secs=0.000253581
10:00:00 [DEBUG] (565) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.258µs elapsed_secs=8.8258e-5
10:00:00 [DEBUG] (573) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.996678ms elapsed_secs=0.009996678
10:00:00 [DEBUG] (573) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=311.376µs elapsed_secs=0.000311376
10:00:00 [DEBUG] (573) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.648µs elapsed_secs=8.3648e-5
10:00:00 [DEBUG] (549) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.849737ms elapsed_secs=0.007849737
10:00:00 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.463803ms elapsed_secs=0.007463803
10:00:00 [DEBUG] (557) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.687242ms elapsed_secs=0.007687242
10:00:00 [DEBUG] (557) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=395.653µs elapsed_secs=0.000395653
10:00:00 [DEBUG] (557) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.306µs elapsed_secs=0.000141306
10:00:00 [DEBUG] (561) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.383413ms elapsed_secs=0.009383413
10:00:00 [DEBUG] (561) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=192.198µs elapsed_secs=0.000192198
10:00:00 [DEBUG] (561) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=205.006µs elapsed_secs=0.000205006
10:00:00 [DEBUG] (528) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=278.686927ms elapsed_secs=0.278686927
10:00:00 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.399914ms elapsed_secs=0.012399914
10:00:00 [DEBUG] (554) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.093804ms elapsed_secs=0.011093804
10:00:00 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=404.444µs elapsed_secs=0.000404444
10:00:00 [DEBUG] (574) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.959µs elapsed_secs=3.7959e-5
10:00:00 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.646µs elapsed_secs=9.9646e-5
10:00:00 [DEBUG] (574) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=121.078µs elapsed_secs=0.000121078
10:00:00 [DEBUG] (526) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:00:00 [DEBUG] (574) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=49.12µs elapsed_secs=4.912e-5
10:00:00 [DEBUG] (526) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None })
10:00:00 [DEBUG] (574) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=11.882µs elapsed_secs=1.1882e-5
10:00:00 [DEBUG] (526) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None })
10:00:00 [DEBUG] (574) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=61.704µs elapsed_secs=6.1704e-5
10:00:00 [DEBUG] (565) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.079537ms elapsed_secs=0.011079537
10:00:00 [DEBUG] (574) sqlx::query: summary="INSERT INTO user_assign (user_id, …" db.statement="\n\n\n                INSERT INTO user_assign (user_id, task_id)\n                VALUES ($1, $2)\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=1 elapsed=143.698µs elapsed_secs=0.000143698
10:00:00 [DEBUG] (573) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.963666ms elapsed_secs=0.007963666
10:00:00 [DEBUG] (565) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=449.887µs elapsed_secs=0.000449887
10:00:00 [DEBUG] (573) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=128.157µs elapsed_secs=0.000128157
10:00:00 [DEBUG] (565) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.766µs elapsed_secs=7.1766e-5
10:00:00 [DEBUG] (573) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.409µs elapsed_secs=6.5409e-5
10:00:00 [DEBUG] (575) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.688µs elapsed_secs=4.3688e-5
10:00:00 [DEBUG] (575) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=114.758µs elapsed_secs=0.000114758
10:00:00 [DEBUG] (578) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.555µs elapsed_secs=7.0555e-5
10:00:00 [DEBUG] (557) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=37.615072ms elapsed_secs=0.037615072
10:00:00 [DEBUG] (561) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=60.639385ms elapsed_secs=0.060639385
10:00:00 [DEBUG] (561) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=207.488µs elapsed_secs=0.000207488
10:00:00 [DEBUG] (561) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.974µs elapsed_secs=6.3974e-5
10:00:00 [DEBUG] (565) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=49.170633ms elapsed_secs=0.049170633
10:00:00 [DEBUG] (532) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=319.008984ms elapsed_secs=0.319008984
10:00:00 [DEBUG] (565) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=330.642µs elapsed_secs=0.000330642
10:00:00 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=51.596119ms elapsed_secs=0.051596119
10:00:00 [DEBUG] (565) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=198.877µs elapsed_secs=0.000198877
10:00:00 [DEBUG] (578) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=51.775642ms elapsed_secs=0.051775642
10:00:00 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.69506ms elapsed_secs=0.00169506
10:00:00 [DEBUG] (579) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=502.178µs elapsed_secs=0.000502178
10:00:00 [DEBUG] (578) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=259.795µs elapsed_secs=0.000259795
10:00:00 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=216.623µs elapsed_secs=0.000216623
10:00:00 [DEBUG] (578) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=141.251µs elapsed_secs=0.000141251
10:00:00 [DEBUG] (573) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=29.370433ms elapsed_secs=0.029370433
10:00:00 [DEBUG] (579) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=432.972µs elapsed_secs=0.000432972
10:00:00 [DEBUG] (530) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:00:00 [DEBUG] (579) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=458.748µs elapsed_secs=0.000458748
10:00:00 [DEBUG] (573) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=628.671µs elapsed_secs=0.000628671
10:00:00 [DEBUG] (530) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:00 [DEBUG] (573) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.052µs elapsed_secs=0.000170052
10:00:00 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.558353ms elapsed_secs=0.001558353
10:00:00 [DEBUG] (579) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=47.059µs elapsed_secs=4.7059e-5
10:00:00 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=142.89µs elapsed_secs=0.00014289
10:00:00 [DEBUG] (530) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:00 [DEBUG] (582) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.647µs elapsed_secs=8.2647e-5
10:00:00 [DEBUG] (561) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=17.100848ms elapsed_secs=0.017100848
10:00:00 [DEBUG] (582) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=20.672512ms elapsed_secs=0.020672512
10:00:00 [DEBUG] (582) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=131.022µs elapsed_secs=0.000131022
10:00:00 [DEBUG] (582) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=214.544µs elapsed_secs=0.000214544
10:00:00 [DEBUG] (565) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.735964ms elapsed_secs=0.013735964
10:00:00 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.512782ms elapsed_secs=0.001512782
10:00:00 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=392.984µs elapsed_secs=0.000392984
10:00:00 [DEBUG] (573) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.234965ms elapsed_secs=0.014234965
10:00:00 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.904216ms elapsed_secs=0.014904216
10:00:00 [DEBUG] (573) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=342.871µs elapsed_secs=0.000342871
10:00:00 [DEBUG] (570) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=332.4µs elapsed_secs=0.0003324
10:00:00 [DEBUG] (573) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=193.582µs elapsed_secs=0.000193582
10:00:00 [DEBUG] (570) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=145.96µs elapsed_secs=0.00014596
10:00:00 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.416837ms elapsed_secs=0.014416837
10:00:00 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=263.098µs elapsed_secs=0.000263098
10:00:00 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.846µs elapsed_secs=0.000139846
10:00:00 [DEBUG] (536) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=362.897666ms elapsed_secs=0.362897666
10:00:00 [DEBUG] (583) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.047µs elapsed_secs=6.1047e-5
10:00:00 [DEBUG] (583) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=165.796µs elapsed_secs=0.000165796
10:00:00 [DEBUG] (534) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:00:00 [DEBUG] (583) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=93.623µs elapsed_secs=9.3623e-5
10:00:00 [DEBUG] (534) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
10:00:00 [DEBUG] (583) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=19.261µs elapsed_secs=1.9261e-5
10:00:00 [DEBUG] (534) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
10:00:00 [DEBUG] (583) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=91.824µs elapsed_secs=9.1824e-5
10:00:00 [DEBUG] (586) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.075µs elapsed_secs=7.0075e-5
10:00:00 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.831952ms elapsed_secs=0.007831952
10:00:00 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.10782ms elapsed_secs=0.00810782
10:00:00 [DEBUG] (570) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.327903ms elapsed_secs=0.008327903
10:00:00 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=212.1µs elapsed_secs=0.0002121
10:00:00 [DEBUG] (573) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.590094ms elapsed_secs=0.008590094
10:00:00 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=171.263µs elapsed_secs=0.000171263
10:00:00 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.897µs elapsed_secs=7.0897e-5
10:00:00 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=352.584µs elapsed_secs=0.000352584
10:00:00 [DEBUG] (586) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=29.604704ms elapsed_secs=0.029604704
10:00:00 [DEBUG] (586) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.068µs elapsed_secs=7.6068e-5
10:00:00 [DEBUG] (586) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.599µs elapsed_secs=6.3599e-5
10:00:00 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=241.97µs elapsed_secs=0.00024197
10:00:00 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=157.074µs elapsed_secs=0.000157074
10:00:00 [DEBUG] (540) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=395.132529ms elapsed_secs=0.395132529
10:00:00 [DEBUG] (587) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.407µs elapsed_secs=3.8407e-5
10:00:00 [DEBUG] (587) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=125.329µs elapsed_secs=0.000125329
10:00:00 [DEBUG] (538) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:00:00 [DEBUG] (587) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=66.189µs elapsed_secs=6.6189e-5
10:00:00 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.037682ms elapsed_secs=0.008037682
10:00:00 [DEBUG] (538) menahel::repository::task_repo: Get task by id with transaction: None
10:00:00 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=545.465µs elapsed_secs=0.000545465
10:00:00 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.951µs elapsed_secs=7.4951e-5
10:00:00 [DEBUG] (590) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.704µs elapsed_secs=6.1704e-5
10:00:00 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.898427ms elapsed_secs=0.010898427
10:00:00 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=131.155µs elapsed_secs=0.000131155
10:00:00 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=160.763µs elapsed_secs=0.000160763
10:00:00 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.350401ms elapsed_secs=0.010350401
10:00:00 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=139.084µs elapsed_secs=0.000139084
10:00:00 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=369.117µs elapsed_secs=0.000369117
10:00:00 [DEBUG] (590) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.799122ms elapsed_secs=0.009799122
10:00:00 [DEBUG] (590) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=94.095µs elapsed_secs=9.4095e-5
10:00:00 [DEBUG] (590) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.154µs elapsed_secs=6.3154e-5
10:00:00 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=207.602µs elapsed_secs=0.000207602
10:00:00 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.209µs elapsed_secs=8.1209e-5
10:00:00 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.938887ms elapsed_secs=0.009938887
10:00:00 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=467.842µs elapsed_secs=0.000467842
10:00:00 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.201µs elapsed_secs=0.000126201
10:00:00 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=16.485054ms elapsed_secs=0.016485054
10:00:00 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=16.837868ms elapsed_secs=0.016837868
10:00:00 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=614.882µs elapsed_secs=0.000614882
10:00:00 [DEBUG] (578) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=532.93µs elapsed_secs=0.00053293
10:00:00 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.406µs elapsed_secs=0.000136406
10:00:00 [DEBUG] (578) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.156µs elapsed_secs=9.8156e-5
10:00:00 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.01741ms elapsed_secs=0.01401741
10:00:00 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=224.486µs elapsed_secs=0.000224486
10:00:00 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=222.07µs elapsed_secs=0.00022207
10:00:00 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.21445ms elapsed_secs=0.00621445
10:00:00 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=136.52µs elapsed_secs=0.00013652
10:00:00 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.227µs elapsed_secs=0.000137227
10:00:00 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.588921ms elapsed_secs=0.008588921
10:00:00 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=179.414µs elapsed_secs=0.000179414
10:00:00 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.66µs elapsed_secs=5.866e-5
10:00:00 [DEBUG] (578) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.323529ms elapsed_secs=0.010323529
10:00:00 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.348103ms elapsed_secs=0.007348103
10:00:00 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=139.459µs elapsed_secs=0.000139459
10:00:00 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.795µs elapsed_secs=7.5795e-5
10:00:00 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.67995ms elapsed_secs=0.00967995
10:00:00 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=20.570546ms elapsed_secs=0.020570546
10:00:00 [DEBUG] (586) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=413.326µs elapsed_secs=0.000413326
10:00:00 [DEBUG] (586) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.868µs elapsed_secs=6.3868e-5
10:00:00 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.002707ms elapsed_secs=0.009002707
10:00:00 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=410.215µs elapsed_secs=0.000410215
10:00:00 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.928µs elapsed_secs=8.0928e-5
10:00:00 [DEBUG] (586) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.295586ms elapsed_secs=0.008295586
10:00:00 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.279502ms elapsed_secs=0.008279502
10:00:00 [DEBUG] (590) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=441.39µs elapsed_secs=0.00044139
10:00:00 [DEBUG] (590) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.779µs elapsed_secs=6.8779e-5
10:00:00 [DEBUG] (545) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=338.576291ms elapsed_secs=0.338576291
10:00:00 [DEBUG] (591) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.204µs elapsed_secs=3.9204e-5
10:00:00 [DEBUG] (590) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.736857ms elapsed_secs=0.008736857
10:00:00 [DEBUG] (591) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=124.137µs elapsed_secs=0.000124137
10:00:00 [DEBUG] (543) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:00:00 [DEBUG] (591) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=82.341µs elapsed_secs=8.2341e-5
10:00:00 [DEBUG] (543) menahel::repository::task_repo: Get task by id with transaction: None
10:00:00 [DEBUG] (549) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=343.844339ms elapsed_secs=0.343844339
10:00:00 [DEBUG] (594) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=29.431µs elapsed_secs=2.9431e-5
10:00:00 [DEBUG] (595) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.693µs elapsed_secs=4.8693e-5
10:00:00 [DEBUG] (595) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=124.068µs elapsed_secs=0.000124068
10:00:00 [DEBUG] (547) menahel::repository::user_repo: Get user by id with transaction: None
10:00:00 [DEBUG] (598) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.842µs elapsed_secs=3.6842e-5
10:00:00 [DEBUG] (594) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.349152ms elapsed_secs=0.010349152
10:00:00 [DEBUG] (594) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=364.264µs elapsed_secs=0.000364264
10:00:00 [DEBUG] (594) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=104.005µs elapsed_secs=0.000104005
10:00:00 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=274.62µs elapsed_secs=0.00027462
10:00:00 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.103µs elapsed_secs=9.8103e-5
10:00:00 [DEBUG] (598) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.103676ms elapsed_secs=0.015103676
10:00:00 [DEBUG] (598) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=121.069µs elapsed_secs=0.000121069
10:00:00 [DEBUG] (598) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.935µs elapsed_secs=7.7935e-5
10:00:00 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=319.402µs elapsed_secs=0.000319402
10:00:00 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=225.842µs elapsed_secs=0.000225842
10:00:00 [DEBUG] (557) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=339.804207ms elapsed_secs=0.339804207
10:00:00 [DEBUG] (599) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=31.735µs elapsed_secs=3.1735e-5
10:00:00 [DEBUG] (554) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=385.949983ms elapsed_secs=0.385949983
10:00:00 [DEBUG] (600) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.266µs elapsed_secs=3.6266e-5
10:00:00 [DEBUG] (600) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=201.313µs elapsed_secs=0.000201313
10:00:00 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=26.447592ms elapsed_secs=0.026447592
10:00:00 [DEBUG] (552) menahel::repository::user_repo: Get user by id with transaction: None
10:00:00 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=361.236µs elapsed_secs=0.000361236
10:00:00 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.444µs elapsed_secs=0.000129444
10:00:00 [DEBUG] (603) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.066µs elapsed_secs=4.0066e-5
10:00:00 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=27.836191ms elapsed_secs=0.027836191
10:00:00 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=177.227µs elapsed_secs=0.000177227
10:00:00 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.321µs elapsed_secs=5.9321e-5
10:00:00 [DEBUG] (599) sqlx::query: summary="DELETE FROM user_assign WHERE …" db.statement="\n\n\n                DELETE FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=12.008191ms elapsed_secs=0.012008191
10:00:00 [DEBUG] (606) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.012µs elapsed_secs=5.4012e-5
10:00:00 [DEBUG] (565) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=287.849196ms elapsed_secs=0.287849196
10:00:00 [DEBUG] (607) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=104.796µs elapsed_secs=0.000104796
10:00:00 [DEBUG] (607) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n            \n" rows_affected=0 rows_returned=4 elapsed=395.335µs elapsed_secs=0.000395335
10:00:00 [DEBUG] (603) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.05139ms elapsed_secs=0.01605139
10:00:00 [DEBUG] (603) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=89.584µs elapsed_secs=8.9584e-5
10:00:00 [DEBUG] (603) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=144.022µs elapsed_secs=0.000144022
10:00:00 [DEBUG] (610) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=90.271µs elapsed_secs=9.0271e-5
10:00:00 [DEBUG] (603) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=222.899µs elapsed_secs=0.000222899
10:00:00 [DEBUG] (603) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.025µs elapsed_secs=0.000109025
10:00:00 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.531497ms elapsed_secs=0.010531497
10:00:00 [DEBUG] (561) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=303.526623ms elapsed_secs=0.303526623
10:00:00 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=455.706µs elapsed_secs=0.000455706
10:00:00 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.674µs elapsed_secs=7.2674e-5
10:00:00 [DEBUG] (611) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=27.238µs elapsed_secs=2.7238e-5
10:00:00 [DEBUG] (611) sqlx::query: summary="DELETE FROM user_assign WHERE …" db.statement="\n\n\n                DELETE FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=241.623µs elapsed_secs=0.000241623
10:00:00 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.134351ms elapsed_secs=0.008134351
10:00:00 [DEBUG] (614) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.094µs elapsed_secs=8.4094e-5
10:00:00 [DEBUG] (606) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.387721ms elapsed_secs=0.015387721
10:00:00 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=678.558µs elapsed_secs=0.000678558
10:00:00 [DEBUG] (606) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=523.468µs elapsed_secs=0.000523468
10:00:00 [DEBUG] (606) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=294.658µs elapsed_secs=0.000294658
10:00:00 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=335.906µs elapsed_secs=0.000335906
10:00:00 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=219.665µs elapsed_secs=0.000219665
10:00:00 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.048µs elapsed_secs=8.6048e-5
10:00:00 [DEBUG] (610) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.71668ms elapsed_secs=0.01371668
10:00:00 [DEBUG] (610) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=110.63µs elapsed_secs=0.00011063
10:00:00 [DEBUG] (610) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.744µs elapsed_secs=6.4744e-5
10:00:00 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=191.557µs elapsed_secs=0.000191557
10:00:00 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=377.28µs elapsed_secs=0.00037728
10:00:01 [DEBUG] (614) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=36.896086ms elapsed_secs=0.036896086
10:00:01 [DEBUG] (614) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=114.105µs elapsed_secs=0.000114105
10:00:01 [DEBUG] (614) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=48.397µs elapsed_secs=4.8397e-5
10:00:01 [DEBUG] (614) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=622.772µs elapsed_secs=0.000622772
10:00:01 [DEBUG] (614) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.853µs elapsed_secs=7.9853e-5
10:00:01 [DEBUG] (603) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=33.50806ms elapsed_secs=0.03350806
10:00:01 [DEBUG] (603) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=230.13µs elapsed_secs=0.00023013
10:00:01 [DEBUG] (603) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.342µs elapsed_secs=6.8342e-5
10:00:01 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=33.007334ms elapsed_secs=0.033007334
10:00:01 [DEBUG] (570) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=296.75411ms elapsed_secs=0.29675411
10:00:01 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=352.682µs elapsed_secs=0.000352682
10:00:01 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.215µs elapsed_secs=6.5215e-5
10:00:01 [DEBUG] (615) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.572µs elapsed_secs=6.5572e-5
10:00:01 [DEBUG] (615) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=148.95µs elapsed_secs=0.00014895
10:00:01 [DEBUG] (618) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.044µs elapsed_secs=4.9044e-5
10:00:01 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.351128ms elapsed_secs=0.009351128
10:00:01 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=249.963µs elapsed_secs=0.000249963
10:00:01 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.186µs elapsed_secs=0.000114186
10:00:01 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.221119ms elapsed_secs=0.008221119
10:00:01 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=216.705µs elapsed_secs=0.000216705
10:00:01 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=171.385µs elapsed_secs=0.000171385
10:00:01 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.000495ms elapsed_secs=0.008000495
10:00:01 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=270.226µs elapsed_secs=0.000270226
10:00:01 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.438µs elapsed_secs=0.000104438
10:00:01 [DEBUG] (618) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.973999ms elapsed_secs=0.013973999
10:00:01 [DEBUG] (618) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=96.74µs elapsed_secs=9.674e-5
10:00:01 [DEBUG] (618) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.19µs elapsed_secs=5.919e-5
10:00:01 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=188.231µs elapsed_secs=0.000188231
10:00:01 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.179µs elapsed_secs=7.7179e-5
10:00:01 [DEBUG] (614) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.661774ms elapsed_secs=0.008661774
10:00:01 [DEBUG] (603) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.009484ms elapsed_secs=0.009009484
10:00:01 [DEBUG] (614) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=137.036µs elapsed_secs=0.000137036
10:00:01 [DEBUG] (614) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.079µs elapsed_secs=5.7079e-5
10:00:01 [DEBUG] (603) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=534.382µs elapsed_secs=0.000534382
10:00:01 [DEBUG] (603) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.876µs elapsed_secs=6.6876e-5
10:00:01 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.485751ms elapsed_secs=0.011485751
10:00:01 [DEBUG] (594) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=455.16µs elapsed_secs=0.00045516
10:00:01 [DEBUG] (594) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=395.508µs elapsed_secs=0.000395508
10:00:01 [DEBUG] (573) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=323.135726ms elapsed_secs=0.323135726
10:00:01 [DEBUG] (619) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.707µs elapsed_secs=3.0707e-5
10:00:01 [DEBUG] (619) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=137.113µs elapsed_secs=0.000137113
10:00:01 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.771748ms elapsed_secs=0.009771748
10:00:01 [DEBUG] (598) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=181.547µs elapsed_secs=0.000181547
10:00:01 [DEBUG] (622) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.728µs elapsed_secs=3.3728e-5
10:00:01 [DEBUG] (598) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.919µs elapsed_secs=9.1919e-5
10:00:01 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.512875ms elapsed_secs=0.010512875
10:00:01 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.820671ms elapsed_secs=0.010820671
10:00:01 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=129.708µs elapsed_secs=0.000129708
10:00:01 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=343.902µs elapsed_secs=0.000343902
10:00:01 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=433.084µs elapsed_secs=0.000433084
10:00:01 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.14µs elapsed_secs=7.314e-5
10:00:01 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=21.910552ms elapsed_secs=0.021910552
10:00:01 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=210.021µs elapsed_secs=0.000210021
10:00:01 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.651µs elapsed_secs=9.3651e-5
10:00:01 [DEBUG] (622) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=22.230246ms elapsed_secs=0.022230246
10:00:01 [DEBUG] (622) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=73.354µs elapsed_secs=7.3354e-5
10:00:01 [DEBUG] (622) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.832µs elapsed_secs=6.3832e-5
10:00:01 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=187.19µs elapsed_secs=0.00018719
10:00:01 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.325µs elapsed_secs=5.6325e-5
10:00:01 [DEBUG] (603) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=21.806211ms elapsed_secs=0.021806211
10:00:01 [DEBUG] (603) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=537.006µs elapsed_secs=0.000537006
10:00:01 [DEBUG] (603) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.922µs elapsed_secs=7.7922e-5
10:00:01 [DEBUG] (614) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=24.192914ms elapsed_secs=0.024192914
10:00:01 [DEBUG] (614) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.474827ms elapsed_secs=0.001474827
10:00:01 [DEBUG] (614) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.935µs elapsed_secs=9.1935e-5
10:00:01 [DEBUG] (594) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=25.443194ms elapsed_secs=0.025443194
10:00:01 [DEBUG] (598) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.933353ms elapsed_secs=0.009933353
10:00:01 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.096787ms elapsed_secs=0.008096787
10:00:01 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.040169ms elapsed_secs=0.009040169
10:00:01 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=371.719µs elapsed_secs=0.000371719
10:00:01 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=265.114µs elapsed_secs=0.000265114
10:00:01 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=288.307µs elapsed_secs=0.000288307
10:00:01 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.692µs elapsed_secs=0.000115692
10:00:01 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.857034ms elapsed_secs=0.006857034
10:00:01 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=301.559µs elapsed_secs=0.000301559
10:00:01 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.103µs elapsed_secs=5.9103e-5
10:00:01 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.4273ms elapsed_secs=0.0084273
10:00:01 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=281.264µs elapsed_secs=0.000281264
10:00:01 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.928µs elapsed_secs=7.4928e-5
10:00:01 [DEBUG] (614) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.855126ms elapsed_secs=0.008855126
10:00:01 [DEBUG] (603) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.10275ms elapsed_secs=0.00910275
10:00:01 [DEBUG] (614) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=159.204µs elapsed_secs=0.000159204
10:00:01 [DEBUG] (603) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=128.276µs elapsed_secs=0.000128276
10:00:01 [DEBUG] (614) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.711µs elapsed_secs=0.000124711
10:00:01 [DEBUG] (603) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=291.107µs elapsed_secs=0.000291107
10:00:01 [DEBUG] (578) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=300.27869ms elapsed_secs=0.30027869
10:00:01 [DEBUG] (623) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.28µs elapsed_secs=4.428e-5
10:00:01 [DEBUG] (623) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=346.545µs elapsed_secs=0.000346545
10:00:01 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.04857ms elapsed_secs=0.00704857
10:00:01 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.471775ms elapsed_secs=0.007471775
10:00:01 [DEBUG] (610) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=450.856µs elapsed_secs=0.000450856
10:00:01 [DEBUG] (606) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=583.806µs elapsed_secs=0.000583806
10:00:01 [DEBUG] (626) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=93.985µs elapsed_secs=9.3985e-5
10:00:01 [DEBUG] (610) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=196.376µs elapsed_secs=0.000196376
10:00:01 [DEBUG] (606) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=332.306µs elapsed_secs=0.000332306
10:00:01 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.169024ms elapsed_secs=0.009169024
10:00:01 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=821.73µs elapsed_secs=0.00082173
10:00:01 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.883µs elapsed_secs=0.000121883
10:00:01 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.971949ms elapsed_secs=0.010971949
10:00:01 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=162.402µs elapsed_secs=0.000162402
10:00:01 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=458.283µs elapsed_secs=0.000458283
10:00:01 [DEBUG] (603) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.44524ms elapsed_secs=0.01044524
10:00:01 [DEBUG] (614) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.075301ms elapsed_secs=0.011075301
10:00:01 [DEBUG] (614) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=141.895µs elapsed_secs=0.000141895
10:00:01 [DEBUG] (614) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.932µs elapsed_secs=7.0932e-5
10:00:01 [DEBUG] (626) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.821219ms elapsed_secs=0.012821219
10:00:01 [DEBUG] (626) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=64.672µs elapsed_secs=6.4672e-5
10:00:01 [DEBUG] (626) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=65.175µs elapsed_secs=6.5175e-5
10:00:01 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=146.147µs elapsed_secs=0.000146147
10:00:01 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.693µs elapsed_secs=6.4693e-5
10:00:01 [DEBUG] (582) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=335.691677ms elapsed_secs=0.335691677
10:00:01 [DEBUG] (627) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.228µs elapsed_secs=3.7228e-5
10:00:01 [DEBUG] (627) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=134.042µs elapsed_secs=0.000134042
10:00:01 [DEBUG] (630) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.355µs elapsed_secs=3.5355e-5
10:00:01 [DEBUG] (610) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=48.092091ms elapsed_secs=0.048092091
10:00:01 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=48.304263ms elapsed_secs=0.048304263
10:00:01 [DEBUG] (618) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=130.798µs elapsed_secs=0.000130798
10:00:01 [DEBUG] (618) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=241.808µs elapsed_secs=0.000241808
10:00:01 [DEBUG] (630) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=20.045976ms elapsed_secs=0.020045976
10:00:01 [DEBUG] (606) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.0123ms elapsed_secs=0.0130123
10:00:01 [DEBUG] (630) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=70.841µs elapsed_secs=7.0841e-5
10:00:01 [DEBUG] (630) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=54.238µs elapsed_secs=5.4238e-5
10:00:01 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=197.62µs elapsed_secs=0.00019762
10:00:01 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.038µs elapsed_secs=0.000141038
10:00:01 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.556785ms elapsed_secs=0.013556785
10:00:01 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=327.053µs elapsed_secs=0.000327053
10:00:01 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.672µs elapsed_secs=7.2672e-5
10:00:01 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.781701ms elapsed_secs=0.008781701
10:00:01 [DEBUG] (614) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.600893ms elapsed_secs=0.009600893
10:00:01 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=382.741µs elapsed_secs=0.000382741
10:00:01 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.45µs elapsed_secs=6.145e-5
10:00:01 [DEBUG] (618) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.102543ms elapsed_secs=0.007102543
10:00:01 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.267626ms elapsed_secs=0.009267626
10:00:01 [DEBUG] (586) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=341.298973ms elapsed_secs=0.341298973
10:00:01 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=470.877µs elapsed_secs=0.000470877
10:00:01 [DEBUG] (631) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.273µs elapsed_secs=7.1273e-5
10:00:01 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.397µs elapsed_secs=7.0397e-5
10:00:01 [DEBUG] (631) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=2 elapsed=279.598µs elapsed_secs=0.000279598
10:00:01 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.008188ms elapsed_secs=0.008008188
10:00:01 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.610895ms elapsed_secs=0.009610895
10:00:01 [DEBUG] (634) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.408µs elapsed_secs=6.8408e-5
10:00:01 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=354.158µs elapsed_secs=0.000354158
10:00:01 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.786µs elapsed_secs=0.000106786
10:00:01 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=340.415µs elapsed_secs=0.000340415
10:00:01 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.54µs elapsed_secs=7.054e-5
10:00:01 [DEBUG] (634) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=25.090573ms elapsed_secs=0.025090573
10:00:01 [DEBUG] (634) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=145.436µs elapsed_secs=0.000145436
10:00:01 [DEBUG] (634) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=65.467µs elapsed_secs=6.5467e-5
10:00:01 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=185.959µs elapsed_secs=0.000185959
10:00:01 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.15µs elapsed_secs=7.315e-5
10:00:01 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.558429ms elapsed_secs=0.010558429
10:00:01 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=154.672µs elapsed_secs=0.000154672
10:00:01 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.099µs elapsed_secs=6.9099e-5
10:00:01 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=19.592408ms elapsed_secs=0.019592408
10:00:01 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=27.788397ms elapsed_secs=0.027788397
10:00:01 [DEBUG] (590) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=365.39536ms elapsed_secs=0.36539536
10:00:01 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=136.795µs elapsed_secs=0.000136795
10:00:01 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=243.53µs elapsed_secs=0.00024353
10:00:01 [DEBUG] (635) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.715µs elapsed_secs=6.9715e-5
10:00:01 [DEBUG] (635) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=133.794µs elapsed_secs=0.000133794
10:00:01 [DEBUG] (638) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.89µs elapsed_secs=7.789e-5
10:00:01 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=23.852793ms elapsed_secs=0.023852793
10:00:01 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=250.148µs elapsed_secs=0.000250148
10:00:01 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.477µs elapsed_secs=5.7477e-5
10:00:01 [DEBUG] (638) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=25.490964ms elapsed_secs=0.025490964
10:00:01 [DEBUG] (638) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=74.668µs elapsed_secs=7.4668e-5
10:00:01 [DEBUG] (638) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=44.952µs elapsed_secs=4.4952e-5
10:00:01 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=205.225µs elapsed_secs=0.000205225
10:00:01 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=412.421µs elapsed_secs=0.000412421
10:00:01 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=20.85276ms elapsed_secs=0.02085276
10:00:01 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=175.264µs elapsed_secs=0.000175264
10:00:01 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.44µs elapsed_secs=6.744e-5
10:00:01 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.740943ms elapsed_secs=0.009740943
10:00:01 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=534.251µs elapsed_secs=0.000534251
10:00:01 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=336.033µs elapsed_secs=0.000336033
10:00:01 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.006259ms elapsed_secs=0.011006259
10:00:01 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=145.072µs elapsed_secs=0.000145072
10:00:01 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.846µs elapsed_secs=6.8846e-5
10:00:01 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=21.988115ms elapsed_secs=0.021988115
10:00:01 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=22.35428ms elapsed_secs=0.02235428
10:00:01 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=260.419µs elapsed_secs=0.000260419
10:00:01 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.749µs elapsed_secs=9.2749e-5
10:00:01 [DEBUG] (630) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=367.845µs elapsed_secs=0.000367845
10:00:01 [DEBUG] (630) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.326µs elapsed_secs=0.000135326
10:00:01 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=24.61316ms elapsed_secs=0.02461316
10:00:01 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=64.684617ms elapsed_secs=0.064684617
10:00:01 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=467.859µs elapsed_secs=0.000467859
10:00:01 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.938µs elapsed_secs=8.1938e-5
10:00:01 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=35.442473ms elapsed_secs=0.035442473
10:00:01 [DEBUG] (630) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=35.763748ms elapsed_secs=0.035763748
10:00:01 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=410.542µs elapsed_secs=0.000410542
10:00:01 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.075µs elapsed_secs=6.6075e-5
10:00:01 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=31.109158ms elapsed_secs=0.031109158
10:00:01 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=157.323µs elapsed_secs=0.000157323
10:00:01 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.053µs elapsed_secs=5.7053e-5
10:00:01 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=31.264979ms elapsed_secs=0.031264979
10:00:01 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=201.02µs elapsed_secs=0.00020102
10:00:01 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.701µs elapsed_secs=8.0701e-5
10:00:01 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=24.723897ms elapsed_secs=0.024723897
10:00:01 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.421883ms elapsed_secs=0.007421883
10:00:01 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=334.076µs elapsed_secs=0.000334076
10:00:01 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.012µs elapsed_secs=7.4012e-5
10:00:01 [DEBUG] (598) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=440.44554ms elapsed_secs=0.44044554
10:00:01 [DEBUG] (639) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.806µs elapsed_secs=5.2806e-5
10:00:01 [DEBUG] (594) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=444.21492ms elapsed_secs=0.44421492
10:00:01 [DEBUG] (639) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=154.257µs elapsed_secs=0.000154257
10:00:01 [DEBUG] (640) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.311µs elapsed_secs=4.5311e-5
10:00:01 [DEBUG] (640) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=209.781µs elapsed_secs=0.000209781
10:00:01 [DEBUG] (643) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.597µs elapsed_secs=4.4597e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.156µs elapsed_secs=8.3156e-5
10:00:01 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=33.184498ms elapsed_secs=0.033184498
10:00:01 [DEBUG] (643) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=33.06671ms elapsed_secs=0.03306671
10:00:01 [DEBUG] (646) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=31.940142ms elapsed_secs=0.031940142
10:00:01 [DEBUG] (643) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.651µs elapsed_secs=8.1651e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.857µs elapsed_secs=6.6857e-5
10:00:01 [DEBUG] (643) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=41.149µs elapsed_secs=4.1149e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=72.353µs elapsed_secs=7.2353e-5
10:00:01 [DEBUG] (643) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=317.467µs elapsed_secs=0.000317467
10:00:01 [DEBUG] (646) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=459.585µs elapsed_secs=0.000459585
10:00:01 [DEBUG] (643) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.507µs elapsed_secs=6.8507e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.261µs elapsed_secs=5.6261e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=23.986911ms elapsed_secs=0.023986911
10:00:01 [DEBUG] (646) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=274.543µs elapsed_secs=0.000274543
10:00:01 [DEBUG] (646) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.358µs elapsed_secs=7.8358e-5
10:00:01 [DEBUG] (643) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=24.061896ms elapsed_secs=0.024061896
10:00:01 [DEBUG] (643) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=152.807µs elapsed_secs=0.000152807
10:00:01 [DEBUG] (643) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.116µs elapsed_secs=7.3116e-5
10:00:01 [DEBUG] (603) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=501.651392ms elapsed_secs=0.501651392
10:00:01 [DEBUG] (647) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.157µs elapsed_secs=3.3157e-5
10:00:01 [DEBUG] (647) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=2 elapsed=140.21µs elapsed_secs=0.00014021
10:00:01 [DEBUG] (650) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.831µs elapsed_secs=7.8831e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.438145ms elapsed_secs=0.010438145
10:00:01 [DEBUG] (610) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=467.757494ms elapsed_secs=0.467757494
10:00:01 [DEBUG] (650) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.800031ms elapsed_secs=0.014800031
10:00:01 [DEBUG] (646) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.119705ms elapsed_secs=0.001119705
10:00:01 [DEBUG] (646) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.189µs elapsed_secs=9.6189e-5
10:00:01 [DEBUG] (650) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=448.186µs elapsed_secs=0.000448186
10:00:01 [DEBUG] (650) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.112µs elapsed_secs=7.5112e-5
10:00:01 [DEBUG] (651) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.822µs elapsed_secs=6.8822e-5
10:00:01 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=896.584µs elapsed_secs=0.000896584
10:00:01 [DEBUG] (651) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1 AND task_id = $2\n            \n" rows_affected=0 rows_returned=0 elapsed=770.392µs elapsed_secs=0.000770392
10:00:01 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.328µs elapsed_secs=9.2328e-5
10:00:01 [DEBUG] (606) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=468.220916ms elapsed_secs=0.468220916
10:00:01 [DEBUG] (654) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=309.787µs elapsed_secs=0.000309787
10:00:01 [DEBUG] (655) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=216.369µs elapsed_secs=0.000216369
10:00:01 [DEBUG] (643) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.870775ms elapsed_secs=0.013870775
10:00:01 [DEBUG] (655) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1 AND task_id = $2\n            \n" rows_affected=0 rows_returned=1 elapsed=433.141µs elapsed_secs=0.000433141
10:00:01 [DEBUG] (643) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=328.777µs elapsed_secs=0.000328777
10:00:01 [DEBUG] (643) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.614µs elapsed_secs=0.000102614
10:00:01 [DEBUG] (658) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.391µs elapsed_secs=7.2391e-5
10:00:01 [DEBUG] (618) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=465.451584ms elapsed_secs=0.465451584
10:00:01 [DEBUG] (659) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.504µs elapsed_secs=3.3504e-5
10:00:01 [DEBUG] (614) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=474.094983ms elapsed_secs=0.474094983
10:00:01 [DEBUG] (659) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE user_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=446.631µs elapsed_secs=0.000446631
10:00:01 [DEBUG] (660) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=25.654µs elapsed_secs=2.5654e-5
10:00:01 [DEBUG] (660) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=335.173µs elapsed_secs=0.000335173
10:00:01 [DEBUG] (654) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.274067ms elapsed_secs=0.013274067
10:00:01 [DEBUG] (663) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.894µs elapsed_secs=5.1894e-5
10:00:01 [DEBUG] (654) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=394.223µs elapsed_secs=0.000394223
10:00:01 [DEBUG] (666) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=97.87µs elapsed_secs=9.787e-5
10:00:01 [DEBUG] (654) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=112.05µs elapsed_secs=0.00011205
10:00:01 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=205.922µs elapsed_secs=0.000205922
10:00:01 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.558µs elapsed_secs=9.9558e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.274525ms elapsed_secs=0.013274525
10:00:01 [DEBUG] (646) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=335.28µs elapsed_secs=0.00033528
10:00:01 [DEBUG] (646) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.834µs elapsed_secs=0.000107834
10:00:01 [DEBUG] (658) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.657579ms elapsed_secs=0.015657579
10:00:01 [DEBUG] (658) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=115.232µs elapsed_secs=0.000115232
10:00:01 [DEBUG] (658) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=121.126µs elapsed_secs=0.000121126
10:00:01 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=174.173µs elapsed_secs=0.000174173
10:00:01 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.420478ms elapsed_secs=0.009420478
10:00:01 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.224µs elapsed_secs=6.0224e-5
10:00:01 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=426.301µs elapsed_secs=0.000426301
10:00:01 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.303µs elapsed_secs=8.9303e-5
10:00:01 [DEBUG] (643) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.194304ms elapsed_secs=0.011194304
10:00:01 [DEBUG] (663) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.150973ms elapsed_secs=0.013150973
10:00:01 [DEBUG] (643) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=352.112µs elapsed_secs=0.000352112
10:00:01 [DEBUG] (663) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.288µs elapsed_secs=8.2288e-5
10:00:01 [DEBUG] (643) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.924µs elapsed_secs=7.4924e-5
10:00:01 [DEBUG] (663) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=60.689µs elapsed_secs=6.0689e-5
10:00:01 [DEBUG] (663) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=207.827µs elapsed_secs=0.000207827
10:00:01 [DEBUG] (663) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.013µs elapsed_secs=6.1013e-5
10:00:01 [DEBUG] (666) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.981387ms elapsed_secs=0.013981387
10:00:01 [DEBUG] (622) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=428.236006ms elapsed_secs=0.428236006
10:00:01 [DEBUG] (666) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=171.232µs elapsed_secs=0.000171232
10:00:01 [DEBUG] (666) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=91.511µs elapsed_secs=9.1511e-5
10:00:01 [DEBUG] (667) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.771µs elapsed_secs=5.0771e-5
10:00:01 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=269.782µs elapsed_secs=0.000269782
10:00:01 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=282.05µs elapsed_secs=0.00028205
10:00:01 [DEBUG] (667) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE user_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=290.879µs elapsed_secs=0.000290879
10:00:01 [DEBUG] (670) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.107µs elapsed_secs=5.3107e-5
10:00:01 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.212008ms elapsed_secs=0.012212008
10:00:01 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=299.445µs elapsed_secs=0.000299445
10:00:01 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.337µs elapsed_secs=9.5337e-5
10:00:01 [DEBUG] (646) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.778516ms elapsed_secs=0.007778516
10:00:01 [DEBUG] (646) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=174.593µs elapsed_secs=0.000174593
10:00:01 [DEBUG] (646) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.735µs elapsed_secs=8.0735e-5
10:00:01 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.626223ms elapsed_secs=0.010626223
10:00:01 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.238596ms elapsed_secs=0.011238596
10:00:01 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=915.553µs elapsed_secs=0.000915553
10:00:01 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=494.547µs elapsed_secs=0.000494547
10:00:01 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=250.364µs elapsed_secs=0.000250364
10:00:01 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.719µs elapsed_secs=0.000103719
10:00:01 [DEBUG] (670) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.235591ms elapsed_secs=0.015235591
10:00:01 [DEBUG] (670) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=124.046µs elapsed_secs=0.000124046
10:00:01 [DEBUG] (670) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=128.844µs elapsed_secs=0.000128844
10:00:01 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=371.968µs elapsed_secs=0.000371968
10:00:01 [DEBUG] (643) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.186774ms elapsed_secs=0.012186774
10:00:01 [DEBUG] (663) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.214695ms elapsed_secs=0.012214695
10:00:01 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=381.93µs elapsed_secs=0.00038193
10:00:01 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.99009ms elapsed_secs=0.01099009
10:00:01 [DEBUG] (643) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=460.891µs elapsed_secs=0.000460891
10:00:01 [DEBUG] (663) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=603.587µs elapsed_secs=0.000603587
10:00:01 [DEBUG] (643) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.876µs elapsed_secs=9.9876e-5
10:00:01 [DEBUG] (663) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.051µs elapsed_secs=0.000126051
10:00:01 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=592.063µs elapsed_secs=0.000592063
10:00:01 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.626µs elapsed_secs=0.000100626
10:00:01 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.581599ms elapsed_secs=0.006581599
10:00:01 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=482.4µs elapsed_secs=0.0004824
10:00:01 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.838µs elapsed_secs=0.000100838
10:00:01 [DEBUG] (646) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.096996ms elapsed_secs=0.010096996
10:00:01 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.172593ms elapsed_secs=0.008172593
10:00:01 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.614041ms elapsed_secs=0.008614041
10:00:01 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.948218ms elapsed_secs=0.008948218
10:00:01 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=341.03µs elapsed_secs=0.00034103
10:00:01 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=242.201µs elapsed_secs=0.000242201
10:00:01 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=205.437µs elapsed_secs=0.000205437
10:00:01 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.715µs elapsed_secs=6.6715e-5
10:00:01 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=301.776µs elapsed_secs=0.000301776
10:00:01 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.83µs elapsed_secs=5.883e-5
10:00:01 [DEBUG] (643) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.062435ms elapsed_secs=0.010062435
10:00:01 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.22015ms elapsed_secs=0.01022015
10:00:01 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=289.548µs elapsed_secs=0.000289548
10:00:01 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.312µs elapsed_secs=6.9312e-5
10:00:01 [DEBUG] (663) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.596034ms elapsed_secs=0.008596034
10:00:01 [DEBUG] (663) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=185.817µs elapsed_secs=0.000185817
10:00:01 [DEBUG] (663) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.832µs elapsed_secs=7.9832e-5
10:00:01 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.473424ms elapsed_secs=0.009473424
10:00:01 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=212.834µs elapsed_secs=0.000212834
10:00:01 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.956µs elapsed_secs=8.8956e-5
10:00:01 [DEBUG] (626) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=403.925249ms elapsed_secs=0.403925249
10:00:01 [DEBUG] (671) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.504µs elapsed_secs=8.3504e-5
10:00:01 [DEBUG] (671) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=149.493µs elapsed_secs=0.000149493
10:00:01 [DEBUG] (624) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:00:01 [DEBUG] (671) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=60.13µs elapsed_secs=6.013e-5
10:00:01 [DEBUG] (624) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (671) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=14.018µs elapsed_secs=1.4018e-5
10:00:01 [DEBUG] (624) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (671) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=119.528µs elapsed_secs=0.000119528
10:00:01 [DEBUG] (671) sqlx::query: summary="UPDATE user_assign SET user_id …" db.statement="\n\n\n                UPDATE user_assign\n                SET user_id = $1, task_id = $2\n                WHERE id = $3\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=1 elapsed=132.696µs elapsed_secs=0.000132696
10:00:01 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.013243ms elapsed_secs=0.008013243
10:00:01 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.134892ms elapsed_secs=0.008134892
10:00:01 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.280407ms elapsed_secs=0.008280407
10:00:01 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.503305ms elapsed_secs=0.008503305
10:00:01 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=438.652µs elapsed_secs=0.000438652
10:00:01 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=499.043µs elapsed_secs=0.000499043
10:00:01 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=660.614µs elapsed_secs=0.000660614
10:00:01 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=332.015µs elapsed_secs=0.000332015
10:00:01 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=240.986µs elapsed_secs=0.000240986
10:00:01 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.232µs elapsed_secs=8.5232e-5
10:00:01 [DEBUG] (663) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.49518ms elapsed_secs=0.00849518
10:00:01 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.707µs elapsed_secs=0.000140707
10:00:01 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.844µs elapsed_secs=7.9844e-5
10:00:01 [DEBUG] (663) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=357.448µs elapsed_secs=0.000357448
10:00:01 [DEBUG] (663) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.194µs elapsed_secs=9.5194e-5
10:00:01 [DEBUG] (674) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.216µs elapsed_secs=5.3216e-5
10:00:01 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.103054ms elapsed_secs=0.010103054
10:00:01 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=335.869µs elapsed_secs=0.000335869
10:00:01 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.962µs elapsed_secs=7.6962e-5
10:00:01 [DEBUG] (630) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=333.454795ms elapsed_secs=0.333454795
10:00:01 [DEBUG] (675) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.403µs elapsed_secs=5.3403e-5
10:00:01 [DEBUG] (675) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=171.957µs elapsed_secs=0.000171957
10:00:01 [DEBUG] (628) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:00:01 [DEBUG] (675) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=93.431µs elapsed_secs=9.3431e-5
10:00:01 [DEBUG] (628) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (675) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=18.045µs elapsed_secs=1.8045e-5
10:00:01 [DEBUG] (628) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (675) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=95.718µs elapsed_secs=9.5718e-5
10:00:01 [DEBUG] (675) sqlx::query: summary="UPDATE user_assign SET user_id …" db.statement="\n\n\n                UPDATE user_assign\n                SET user_id = $1, task_id = $2\n                WHERE id = $3\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=0 elapsed=112.142µs elapsed_secs=0.000112142
10:00:01 [DEBUG] (678) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=168.149µs elapsed_secs=0.000168149
10:00:01 [DEBUG] (674) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.676844ms elapsed_secs=0.014676844
10:00:01 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.011556ms elapsed_secs=0.013011556
10:00:01 [DEBUG] (674) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=148.466µs elapsed_secs=0.000148466
10:00:01 [DEBUG] (674) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.499µs elapsed_secs=7.6499e-5
10:00:01 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=662.755µs elapsed_secs=0.000662755
10:00:01 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.901µs elapsed_secs=6.9901e-5
10:00:01 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.16091ms elapsed_secs=0.01116091
10:00:01 [DEBUG] (663) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.433068ms elapsed_secs=0.011433068
10:00:01 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.685172ms elapsed_secs=0.011685172
10:00:01 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=254.68µs elapsed_secs=0.00025468
10:00:01 [DEBUG] (663) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=113.335µs elapsed_secs=0.000113335
10:00:01 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=199.064µs elapsed_secs=0.000199064
10:00:01 [DEBUG] (663) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=183.384µs elapsed_secs=0.000183384
10:00:01 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=509.407µs elapsed_secs=0.000509407
10:00:01 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.499µs elapsed_secs=7.0499e-5
10:00:01 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.696193ms elapsed_secs=0.013696193
10:00:01 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=158.82µs elapsed_secs=0.00015882
10:00:01 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.459µs elapsed_secs=9.5459e-5
10:00:01 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.161158ms elapsed_secs=0.010161158
10:00:01 [DEBUG] (678) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.382333ms elapsed_secs=0.013382333
10:00:01 [DEBUG] (678) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=108.848µs elapsed_secs=0.000108848
10:00:01 [DEBUG] (678) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=99.055µs elapsed_secs=9.9055e-5
10:00:01 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=394.422µs elapsed_secs=0.000394422
10:00:01 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=319.298µs elapsed_secs=0.000319298
10:00:01 [DEBUG] (663) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.380588ms elapsed_secs=0.010380588
10:00:01 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.695755ms elapsed_secs=0.010695755
10:00:01 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.711626ms elapsed_secs=0.010711626
10:00:01 [DEBUG] (679) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.508µs elapsed_secs=4.8508e-5
10:00:01 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=366.94µs elapsed_secs=0.00036694
10:00:01 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=399.802µs elapsed_secs=0.000399802
10:00:01 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.308µs elapsed_secs=0.000111308
10:00:01 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.994µs elapsed_secs=8.8994e-5
10:00:01 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.565097ms elapsed_secs=0.010565097
10:00:01 [DEBUG] (680) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.387µs elapsed_secs=4.0387e-5
10:00:01 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.014841ms elapsed_secs=0.009014841
10:00:01 [DEBUG] (681) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.363µs elapsed_secs=4.2363e-5
10:00:01 [DEBUG] (634) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=301.389236ms elapsed_secs=0.301389236
10:00:01 [DEBUG] (682) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=103.194µs elapsed_secs=0.000103194
10:00:01 [DEBUG] (682) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=194.502µs elapsed_secs=0.000194502
10:00:01 [DEBUG] (632) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:00:01 [DEBUG] (682) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=134.885µs elapsed_secs=0.000134885
10:00:01 [DEBUG] (632) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (682) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=18.258µs elapsed_secs=1.8258e-5
10:00:01 [DEBUG] (632) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (679) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.93558ms elapsed_secs=0.01093558
10:00:01 [INFO] Created user: User { id: Some(1), username: "duplicate_test_20250609100001", email: "duplicate_test_1_20250609100001@test.com", password_hash: "128c1b976737243ba680f39f4007db92b4a28f4be8cc99a9cbfffb303b858564" }
10:00:01 [DEBUG] (685) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.79µs elapsed_secs=5.279e-5
10:00:01 [DEBUG] (686) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.208µs elapsed_secs=4.9208e-5
10:00:01 [DEBUG] (686) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=194.5µs elapsed_secs=0.0001945
10:00:01 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.391443ms elapsed_secs=0.011391443
10:00:01 [DEBUG] (680) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=11.940106ms elapsed_secs=0.011940106
10:00:01 [DEBUG] (681) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.289392ms elapsed_secs=0.010289392
10:00:01 [INFO] Created user: User { id: Some(1), username: "create_test_20250609100001", email: "create_test_20250609100001@test.com", password_hash: "128c1b976737243ba680f39f4007db92b4a28f4be8cc99a9cbfffb303b858564" }
10:00:01 [INFO] Created user: User { id: Some(1), username: "duplicate_test_1_20250609100001", email: "duplicate_test_20250609100001@test.com", password_hash: "128c1b976737243ba680f39f4007db92b4a28f4be8cc99a9cbfffb303b858564" }
10:00:01 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=316.345µs elapsed_secs=0.000316345
10:00:01 [DEBUG] (689) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.684µs elapsed_secs=4.4684e-5
10:00:01 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=202.724µs elapsed_secs=0.000202724
10:00:01 [DEBUG] (690) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.137µs elapsed_secs=4.6137e-5
10:00:01 [DEBUG] (690) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=242.083µs elapsed_secs=0.000242083
10:00:01 [DEBUG] (691) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=25.648µs elapsed_secs=2.5648e-5
10:00:01 [DEBUG] (664) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "create_test_20250609100001", email: "create_test_20250609100001@test.com", password_hash: "128c1b976737243ba680f39f4007db92b4a28f4be8cc99a9cbfffb303b858564" })
10:00:01 [DEBUG] (691) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=554.588µs elapsed_secs=0.000554588
10:00:01 [DEBUG] (697) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.507µs elapsed_secs=4.5507e-5
10:00:01 [DEBUG] (696) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.848µs elapsed_secs=6.1848e-5
10:00:01 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.771929ms elapsed_secs=0.007771929
10:00:01 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=417.813µs elapsed_secs=0.000417813
10:00:01 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.843µs elapsed_secs=0.000114843
10:00:01 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.615177ms elapsed_secs=0.009615177
10:00:01 [DEBUG] (685) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.013825ms elapsed_secs=0.010013825
10:00:01 [DEBUG] (698) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.214µs elapsed_secs=6.2214e-5
10:00:01 [DEBUG] (685) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=164.979µs elapsed_secs=0.000164979
10:00:01 [DEBUG] (685) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=505.824µs elapsed_secs=0.000505824
10:00:01 [DEBUG] (685) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.156379ms elapsed_secs=0.001156379
10:00:01 [DEBUG] (685) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=295.87µs elapsed_secs=0.00029587
10:00:01 [DEBUG] (689) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.537219ms elapsed_secs=0.014537219
10:00:01 [DEBUG] (689) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.595µs elapsed_secs=7.5595e-5
10:00:01 [DEBUG] (689) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.895µs elapsed_secs=5.8895e-5
10:00:01 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=174.447µs elapsed_secs=0.000174447
10:00:01 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.2µs elapsed_secs=7.32e-5
10:00:01 [DEBUG] (696) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.940811ms elapsed_secs=0.011940811
10:00:01 [DEBUG] (697) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.051797ms elapsed_secs=0.012051797
10:00:01 [DEBUG] (696) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.386µs elapsed_secs=8.1386e-5
10:00:01 [DEBUG] (697) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=65.714µs elapsed_secs=6.5714e-5
10:00:01 [DEBUG] (696) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.442µs elapsed_secs=7.5442e-5
10:00:01 [DEBUG] (697) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=53.648µs elapsed_secs=5.3648e-5
10:00:01 [DEBUG] (697) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=207.813µs elapsed_secs=0.000207813
10:00:01 [DEBUG] (696) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=303.489µs elapsed_secs=0.000303489
10:00:01 [DEBUG] (697) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=276.68µs elapsed_secs=0.00027668
10:00:01 [DEBUG] (696) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.49µs elapsed_secs=0.00015049
10:00:01 [DEBUG] (698) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.851154ms elapsed_secs=0.009851154
10:00:01 [INFO] Created user: User { id: Some(1), username: "dot.test.20250609100001", email: "dot_test_20250609100001@test.com", password_hash: "128c1b976737243ba680f39f4007db92b4a28f4be8cc99a9cbfffb303b858564" }
10:00:01 [DEBUG] (638) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=268.016268ms elapsed_secs=0.268016268
10:00:01 [DEBUG] (699) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.575µs elapsed_secs=4.9575e-5
10:00:01 [DEBUG] (702) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.02µs elapsed_secs=4.602e-5
10:00:01 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.740112ms elapsed_secs=0.008740112
10:00:01 [DEBUG] (699) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=438.555µs elapsed_secs=0.000438555
10:00:01 [DEBUG] (636) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
10:00:01 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=708.394µs elapsed_secs=0.000708394
10:00:01 [DEBUG] (699) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=217.48µs elapsed_secs=0.00021748
10:00:01 [DEBUG] (636) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (699) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=75.541µs elapsed_secs=7.5541e-5
10:00:01 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=623.865µs elapsed_secs=0.000623865
10:00:01 [DEBUG] (636) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
10:00:01 [DEBUG] (699) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=158.009µs elapsed_secs=0.000158009
10:00:01 [DEBUG] (705) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.253µs elapsed_secs=3.9253e-5
10:00:01 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.516658ms elapsed_secs=0.011516658
10:00:01 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=161.207µs elapsed_secs=0.000161207
10:00:01 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.137µs elapsed_secs=0.000103137
10:00:01 [DEBUG] (685) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.486117ms elapsed_secs=0.009486117
10:00:01 [DEBUG] (685) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=209.337µs elapsed_secs=0.000209337
10:00:01 [DEBUG] (685) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.285µs elapsed_secs=0.000120285
10:00:01 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.394931ms elapsed_secs=0.007394931
10:00:01 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=804.468µs elapsed_secs=0.000804468
10:00:01 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.181µs elapsed_secs=8.3181e-5
10:00:01 [DEBUG] (702) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.4064ms elapsed_secs=0.0134064
10:00:01 [DEBUG] (702) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=109.945µs elapsed_secs=0.000109945
10:00:01 [DEBUG] (702) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.192µs elapsed_secs=7.6192e-5
10:00:01 [DEBUG] (702) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=341.489µs elapsed_secs=0.000341489
10:00:01 [DEBUG] (702) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.92µs elapsed_secs=0.00014092
10:00:01 [DEBUG] (697) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.930748ms elapsed_secs=0.009930748
10:00:01 [DEBUG] (696) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.221648ms elapsed_secs=0.009221648
10:00:01 [DEBUG] (697) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=819.751µs elapsed_secs=0.000819751
10:00:01 [DEBUG] (696) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=330.879µs elapsed_secs=0.000330879
10:00:01 [DEBUG] (697) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=394.133µs elapsed_secs=0.000394133
10:00:01 [DEBUG] (696) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=604.492µs elapsed_secs=0.000604492
10:00:01 [DEBUG] (705) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.691687ms elapsed_secs=0.013691687
10:00:01 [DEBUG] (705) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=131.133µs elapsed_secs=0.000131133
10:00:01 [DEBUG] (705) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.018µs elapsed_secs=6.9018e-5
10:00:01 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=239.116µs elapsed_secs=0.000239116
10:00:01 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=197.066µs elapsed_secs=0.000197066
10:00:01 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.293455ms elapsed_secs=0.011293455
10:00:01 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=262.539µs elapsed_secs=0.000262539
10:00:01 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.139µs elapsed_secs=8.5139e-5
10:00:01 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.176318ms elapsed_secs=0.008176318
10:00:01 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=373.727µs elapsed_secs=0.000373727
10:00:01 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.337µs elapsed_secs=7.9337e-5
10:00:01 [DEBUG] (685) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.202781ms elapsed_secs=0.008202781
10:00:01 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.975633ms elapsed_secs=0.008975633
10:00:01 [DEBUG] (685) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=320.483µs elapsed_secs=0.000320483
10:00:01 [DEBUG] (685) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.557µs elapsed_secs=0.000110557
10:00:01 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=371.704µs elapsed_secs=0.000371704
10:00:01 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=308.513µs elapsed_secs=0.000308513
10:00:01 [DEBUG] (702) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.548007ms elapsed_secs=0.010548007
10:00:01 [DEBUG] (702) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=284.508µs elapsed_secs=0.000284508
10:00:01 [DEBUG] (702) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.748µs elapsed_secs=6.8748e-5
10:00:01 [DEBUG] (696) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.475177ms elapsed_secs=0.012475177
10:00:01 [DEBUG] (696) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=435.465µs elapsed_secs=0.000435465
10:00:01 [DEBUG] (696) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.462µs elapsed_secs=6.2462e-5
10:00:01 [DEBUG] (697) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.807962ms elapsed_secs=0.012807962
10:00:01 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.284997ms elapsed_secs=0.011284997
10:00:01 [DEBUG] (697) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=460.184µs elapsed_secs=0.000460184
10:00:01 [DEBUG] (697) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.661µs elapsed_secs=6.3661e-5
10:00:01 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=153.114µs elapsed_secs=0.000153114
10:00:01 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.501µs elapsed_secs=8.5501e-5
10:00:01 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.264351ms elapsed_secs=0.009264351
10:00:01 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=211.185µs elapsed_secs=0.000211185
10:00:01 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.742µs elapsed_secs=0.000114742
10:00:01 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.473122ms elapsed_secs=0.011473122
10:00:01 [DEBUG] (685) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.294673ms elapsed_secs=0.010294673
10:00:01 [DEBUG] (685) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=167.051µs elapsed_secs=0.000167051
10:00:01 [DEBUG] (706) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.029µs elapsed_secs=3.9029e-5
10:00:01 [DEBUG] (685) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.139µs elapsed_secs=9.3139e-5
10:00:01 [DEBUG] (709) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.835µs elapsed_secs=4.9835e-5
10:00:01 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.752167ms elapsed_secs=0.007752167
10:00:01 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=141.831µs elapsed_secs=0.000141831
10:00:01 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.757µs elapsed_secs=6.6757e-5
10:00:01 [DEBUG] (702) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.039354ms elapsed_secs=0.009039354
10:00:01 [DEBUG] (702) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=258.028µs elapsed_secs=0.000258028
10:00:01 [DEBUG] (702) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.451µs elapsed_secs=5.3451e-5
10:00:01 [DEBUG] (696) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.283325ms elapsed_secs=0.009283325
10:00:01 [DEBUG] (696) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=188.492µs elapsed_secs=0.000188492
10:00:01 [DEBUG] (696) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.769µs elapsed_secs=0.000105769
10:00:01 [DEBUG] (697) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.814923ms elapsed_secs=0.008814923
10:00:01 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.221092ms elapsed_secs=0.009221092
10:00:01 [DEBUG] (697) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=276.107µs elapsed_secs=0.000276107
10:00:01 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=241.825µs elapsed_secs=0.000241825
10:00:01 [DEBUG] (697) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.542µs elapsed_secs=9.6542e-5
10:00:01 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.531µs elapsed_secs=8.1531e-5
10:00:01 [DEBUG] (709) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.342798ms elapsed_secs=0.012342798
10:00:01 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.407929ms elapsed_secs=0.009407929
10:00:01 [DEBUG] (709) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=106.921µs elapsed_secs=0.000106921
10:00:01 [DEBUG] (709) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=53.183µs elapsed_secs=5.3183e-5
10:00:01 [DEBUG] (710) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.761µs elapsed_secs=5.8761e-5
10:00:01 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=399.033µs elapsed_secs=0.000399033
10:00:01 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=199.891µs elapsed_secs=0.000199891
10:00:01 [DEBUG] (713) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.331µs elapsed_secs=7.3331e-5
10:00:01 [DEBUG] (685) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.235378ms elapsed_secs=0.010235378
10:00:01 [DEBUG] (685) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=432.564µs elapsed_secs=0.000432564
10:00:01 [DEBUG] (685) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=325.319µs elapsed_secs=0.000325319
10:00:01 [DEBUG] (702) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.537623ms elapsed_secs=0.007537623
10:00:01 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.717136ms elapsed_secs=0.007717136
10:00:01 [DEBUG] (702) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=592.303µs elapsed_secs=0.000592303
10:00:01 [DEBUG] (689) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=435.364µs elapsed_secs=0.000435364
10:00:01 [DEBUG] (702) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.8µs elapsed_secs=0.0001218
10:00:01 [DEBUG] (689) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=775.495µs elapsed_secs=0.000775495
10:00:01 [DEBUG] (713) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.713298ms elapsed_secs=0.010713298
10:00:01 [DEBUG] (713) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=96.85µs elapsed_secs=9.685e-5
10:00:01 [DEBUG] (713) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.546µs elapsed_secs=8.4546e-5
10:00:01 [DEBUG] (713) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=277.526µs elapsed_secs=0.000277526
10:00:01 [DEBUG] (713) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.172µs elapsed_secs=8.5172e-5
10:00:01 [DEBUG] (696) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.532222ms elapsed_secs=0.012532222
10:00:01 [DEBUG] (696) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=149.93µs elapsed_secs=0.00014993
10:00:01 [DEBUG] (696) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.377µs elapsed_secs=6.6377e-5
10:00:01 [DEBUG] (697) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.286564ms elapsed_secs=0.011286564
10:00:01 [DEBUG] (697) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=158.485µs elapsed_secs=0.000158485
10:00:01 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.879183ms elapsed_secs=0.009879183
10:00:01 [DEBUG] (697) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.135µs elapsed_secs=0.000101135
10:00:01 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=326.33µs elapsed_secs=0.00032633
10:00:01 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.423µs elapsed_secs=6.6423e-5
10:00:01 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.918989ms elapsed_secs=0.007918989
10:00:01 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=136.806µs elapsed_secs=0.000136806
10:00:01 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.579µs elapsed_secs=8.2579e-5
10:00:01 [DEBUG] (685) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.241385ms elapsed_secs=0.007241385
10:00:01 [DEBUG] (714) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.224µs elapsed_secs=5.2224e-5
10:00:01 [DEBUG] (702) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.132176ms elapsed_secs=0.009132176
10:00:01 [DEBUG] (689) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.149971ms elapsed_secs=0.009149971
10:00:01 [DEBUG] (717) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.191µs elapsed_secs=7.2191e-5
10:00:01 [DEBUG] (702) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=314.294µs elapsed_secs=0.000314294
10:00:01 [DEBUG] (718) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.41µs elapsed_secs=3.841e-5
10:00:01 [DEBUG] (702) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.899µs elapsed_secs=0.000121899
10:00:01 [DEBUG] (721) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.916µs elapsed_secs=4.1916e-5
10:00:01 [DEBUG] (696) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.82941ms elapsed_secs=0.00982941
10:00:01 [DEBUG] (722) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.751µs elapsed_secs=4.2751e-5
10:00:01 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.419867ms elapsed_secs=0.010419867
10:00:01 [DEBUG] (725) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.164µs elapsed_secs=4.2164e-5
10:00:01 [DEBUG] (697) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.085484ms elapsed_secs=0.011085484
10:00:01 [DEBUG] (705) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=446.126µs elapsed_secs=0.000446126
10:00:01 [DEBUG] (713) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.103192ms elapsed_secs=0.011103192
10:00:01 [DEBUG] (705) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.454µs elapsed_secs=6.1454e-5
10:00:01 [DEBUG] (713) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=230.078µs elapsed_secs=0.000230078
10:00:01 [DEBUG] (726) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.966µs elapsed_secs=3.6966e-5
10:00:01 [DEBUG] (713) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.363µs elapsed_secs=9.7363e-5
10:00:01 [DEBUG] (729) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=79.832µs elapsed_secs=7.9832e-5
10:00:01 [DEBUG] (717) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.999641ms elapsed_secs=0.011999641
10:00:01 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.521263ms elapsed_secs=0.010521263
10:00:01 [DEBUG] (717) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=106.162µs elapsed_secs=0.000106162
10:00:01 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=157.625µs elapsed_secs=0.000157625
10:00:01 [DEBUG] (717) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=193.54µs elapsed_secs=0.00019354
10:00:01 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.577µs elapsed_secs=0.000125577
10:00:01 [DEBUG] (721) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.364653ms elapsed_secs=0.012364653
10:00:01 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.918804ms elapsed_secs=0.001918804
10:00:01 [DEBUG] (721) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=202.828µs elapsed_secs=0.000202828
10:00:01 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=256.901µs elapsed_secs=0.000256901
10:00:01 [DEBUG] (721) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=89.797µs elapsed_secs=8.9797e-5
10:00:01 [DEBUG] (721) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=656.213µs elapsed_secs=0.000656213
10:00:01 [DEBUG] (721) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.759µs elapsed_secs=0.000109759
10:00:01 [DEBUG] (702) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.906602ms elapsed_secs=0.009906602
10:00:01 [DEBUG] (646) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=235.625451ms elapsed_secs=0.235625451
10:00:01 [DEBUG] (730) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.22µs elapsed_secs=5.522e-5
10:00:01 [DEBUG] (731) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.193µs elapsed_secs=6.9193e-5
10:00:01 [DEBUG] (731) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=157.89µs elapsed_secs=0.00015789
10:00:01 [DEBUG] (644) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:00:01 [DEBUG] (731) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=182.923µs elapsed_secs=0.000182923
10:00:01 [DEBUG] (725) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.087401ms elapsed_secs=0.014087401
10:00:01 [DEBUG] (644) menahel::repository::task_repo: Get task by id with transaction: None
10:00:01 [DEBUG] (725) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=88.711µs elapsed_secs=8.8711e-5
10:00:01 [DEBUG] (734) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.436µs elapsed_secs=3.8436e-5
10:00:01 [DEBUG] (725) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.714µs elapsed_secs=6.9714e-5
10:00:01 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=220.73µs elapsed_secs=0.00022073
10:00:01 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.232µs elapsed_secs=0.000146232
10:00:01 [DEBUG] (737) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.601µs elapsed_secs=4.1601e-5
10:00:01 [DEBUG] (729) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.450268ms elapsed_secs=0.014450268
10:00:01 [DEBUG] (729) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.651µs elapsed_secs=7.6651e-5
10:00:01 [DEBUG] (729) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.979µs elapsed_secs=8.4979e-5
10:00:01 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=224.909µs elapsed_secs=0.000224909
10:00:01 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=281.379µs elapsed_secs=0.000281379
10:00:01 [DEBUG] (713) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.698276ms elapsed_secs=0.009698276
10:00:01 [DEBUG] (705) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.536704ms elapsed_secs=0.009536704
10:00:01 [DEBUG] (713) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=383.131µs elapsed_secs=0.000383131
10:00:01 [DEBUG] (713) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.484µs elapsed_secs=9.4484e-5
10:00:01 [DEBUG] (738) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.148µs elapsed_secs=8.3148e-5
10:00:01 [DEBUG] (734) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.392563ms elapsed_secs=0.011392563
10:00:01 [DEBUG] (734) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=153.515µs elapsed_secs=0.000153515
10:00:01 [DEBUG] (734) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=165.48µs elapsed_secs=0.00016548
10:00:01 [DEBUG] (734) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=238.134µs elapsed_secs=0.000238134
10:00:01 [DEBUG] (734) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=207.248µs elapsed_secs=0.000207248
10:00:01 [DEBUG] (741) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.541µs elapsed_secs=6.3541e-5
10:00:01 [DEBUG] (643) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=247.371567ms elapsed_secs=0.247371567
10:00:01 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.209886ms elapsed_secs=0.011209886
10:00:01 [DEBUG] (742) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.611µs elapsed_secs=5.2611e-5
10:00:01 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=275.442µs elapsed_secs=0.000275442
10:00:01 [DEBUG] (742) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=315.602µs elapsed_secs=0.000315602
10:00:01 [DEBUG] (641) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
10:00:01 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.445µs elapsed_secs=0.000100445
10:00:01 [DEBUG] (742) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=67.47µs elapsed_secs=6.747e-5
10:00:01 [DEBUG] (641) menahel::repository::task_repo: Get task by id with transaction: None
10:00:01 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.421367ms elapsed_secs=0.007421367
10:00:01 [DEBUG] (737) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.652482ms elapsed_secs=0.016652482
10:00:01 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=556.753µs elapsed_secs=0.000556753
10:00:01 [DEBUG] (737) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=56.324µs elapsed_secs=5.6324e-5
10:00:01 [DEBUG] (745) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=64.709µs elapsed_secs=6.4709e-5
10:00:01 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.584µs elapsed_secs=9.0584e-5
10:00:01 [DEBUG] (737) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=87.352µs elapsed_secs=8.7352e-5
10:00:01 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=268.883µs elapsed_secs=0.000268883
10:00:01 [DEBUG] (721) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.851122ms elapsed_secs=0.009851122
10:00:01 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.934µs elapsed_secs=0.000122934
10:00:01 [DEBUG] (721) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=195.191µs elapsed_secs=0.000195191
10:00:01 [DEBUG] (721) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.626µs elapsed_secs=0.000126626
10:00:01 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.951494ms elapsed_secs=0.009951494
10:00:01 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=309.364µs elapsed_secs=0.000309364
10:00:01 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.327µs elapsed_secs=0.000153327
10:00:01 [DEBUG] (745) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.215974ms elapsed_secs=0.010215974
10:00:01 [DEBUG] (741) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.64589ms elapsed_secs=0.01464589
10:00:01 [DEBUG] (745) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=146.015µs elapsed_secs=0.000146015
10:00:01 [DEBUG] (741) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.289µs elapsed_secs=7.2289e-5
10:00:01 [DEBUG] (745) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.003µs elapsed_secs=7.8003e-5
10:00:01 [DEBUG] (741) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.252µs elapsed_secs=7.4252e-5
10:00:01 [DEBUG] (745) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=298.758µs elapsed_secs=0.000298758
10:00:01 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=350.113µs elapsed_secs=0.000350113
10:00:01 [DEBUG] (745) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.932µs elapsed_secs=8.9932e-5
10:00:01 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.012µs elapsed_secs=8.5012e-5
10:00:01 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.885201ms elapsed_secs=0.011885201
10:00:01 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=164.453µs elapsed_secs=0.000164453
10:00:01 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.205µs elapsed_secs=6.6205e-5
10:00:01 [DEBUG] (713) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.379575ms elapsed_secs=0.009379575
10:00:01 [DEBUG] (734) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.846437ms elapsed_secs=0.009846437
10:00:01 [DEBUG] (713) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=302.442µs elapsed_secs=0.000302442
10:00:01 [DEBUG] (713) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.731µs elapsed_secs=8.0731e-5
10:00:01 [DEBUG] (734) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=181.897µs elapsed_secs=0.000181897
10:00:01 [DEBUG] (734) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.948µs elapsed_secs=6.8948e-5
10:00:02 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=15.798023ms elapsed_secs=0.015798023
10:00:02 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=191.027µs elapsed_secs=0.000191027
10:00:02 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.398µs elapsed_secs=8.1398e-5
10:00:02 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=29.106468ms elapsed_secs=0.029106468
10:00:02 [DEBUG] (709) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=141.239µs elapsed_secs=0.000141239
10:00:02 [DEBUG] (709) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.922µs elapsed_secs=9.6922e-5
10:00:02 [DEBUG] (721) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=32.889421ms elapsed_secs=0.032889421
10:00:02 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=33.206403ms elapsed_secs=0.033206403
10:00:02 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=33.361236ms elapsed_secs=0.033361236
10:00:02 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=209.749µs elapsed_secs=0.000209749
10:00:02 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=402.622µs elapsed_secs=0.000402622
10:00:02 [DEBUG] (721) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=730.962µs elapsed_secs=0.000730962
10:00:02 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.479µs elapsed_secs=9.3479e-5
10:00:02 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.297µs elapsed_secs=0.000129297
10:00:02 [DEBUG] (721) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.552µs elapsed_secs=0.000101552
10:00:02 [DEBUG] (650) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=270.99976ms elapsed_secs=0.27099976
10:00:02 [DEBUG] (746) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.852µs elapsed_secs=4.5852e-5
10:00:02 [DEBUG] (746) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=184.658µs elapsed_secs=0.000184658
10:00:02 [DEBUG] (745) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=22.489925ms elapsed_secs=0.022489925
10:00:02 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=22.755802ms elapsed_secs=0.022755802
10:00:02 [DEBUG] (648) menahel::repository::user_repo: Get user by id with transaction: None
10:00:02 [DEBUG] (745) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=624.715µs elapsed_secs=0.000624715
10:00:02 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=332.415µs elapsed_secs=0.000332415
10:00:02 [DEBUG] (745) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.547µs elapsed_secs=8.4547e-5
10:00:02 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.414µs elapsed_secs=9.0414e-5
10:00:02 [DEBUG] (749) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.083µs elapsed_secs=7.7083e-5
10:00:02 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=19.560878ms elapsed_secs=0.019560878
10:00:02 [DEBUG] (713) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=19.781791ms elapsed_secs=0.019781791
10:00:02 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=131.708µs elapsed_secs=0.000131708
10:00:02 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.973µs elapsed_secs=9.1973e-5
10:00:02 [DEBUG] (713) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=154.063µs elapsed_secs=0.000154063
10:00:02 [DEBUG] (713) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.157µs elapsed_secs=6.7157e-5
10:00:02 [DEBUG] (734) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=19.323512ms elapsed_secs=0.019323512
10:00:02 [DEBUG] (734) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=369.162µs elapsed_secs=0.000369162
10:00:02 [DEBUG] (734) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.446µs elapsed_secs=0.000100446
10:00:02 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.954196ms elapsed_secs=0.009954196
10:00:02 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=184.47µs elapsed_secs=0.00018447
10:00:02 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.336µs elapsed_secs=0.000137336
10:00:02 [DEBUG] (709) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.27966ms elapsed_secs=0.00727966
10:00:02 [DEBUG] (750) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.609µs elapsed_secs=3.9609e-5
10:00:02 [DEBUG] (749) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.499258ms elapsed_secs=0.009499258
10:00:02 [DEBUG] (749) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=100.866µs elapsed_secs=0.000100866
10:00:02 [DEBUG] (749) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=79.3µs elapsed_secs=7.93e-5
10:00:02 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=256.105µs elapsed_secs=0.000256105
10:00:02 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.023µs elapsed_secs=6.3023e-5
10:00:02 [DEBUG] (753) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.987µs elapsed_secs=3.6987e-5
10:00:02 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=37.084553ms elapsed_secs=0.037084553
10:00:02 [DEBUG] (654) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=306.06993ms elapsed_secs=0.30606993
10:00:02 [DEBUG] (721) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=37.45391ms elapsed_secs=0.03745391
10:00:02 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=38.37483ms elapsed_secs=0.03837483
10:00:02 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=932.575µs elapsed_secs=0.000932575
10:00:02 [DEBUG] (721) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=597.706µs elapsed_secs=0.000597706
10:00:02 [DEBUG] (754) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=114.283µs elapsed_secs=0.000114283
10:00:02 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=184.621µs elapsed_secs=0.000184621
10:00:02 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=254.329µs elapsed_secs=0.000254329
10:00:02 [DEBUG] (721) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=245.326µs elapsed_secs=0.000245326
10:00:02 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=351.923µs elapsed_secs=0.000351923
10:00:02 [DEBUG] (754) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=320.646µs elapsed_secs=0.000320646
10:00:02 [DEBUG] (652) menahel::repository::user_repo: Get user by id with transaction: None
10:00:02 [DEBUG] (757) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.406µs elapsed_secs=4.6406e-5
10:00:02 [DEBUG] (745) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=39.361023ms elapsed_secs=0.039361023
10:00:02 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=39.613283ms elapsed_secs=0.039613283
10:00:02 [DEBUG] (753) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=38.340877ms elapsed_secs=0.038340877
10:00:02 [DEBUG] (753) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.068µs elapsed_secs=0.000104068
10:00:02 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=579.989µs elapsed_secs=0.000579989
10:00:02 [DEBUG] (745) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=901.771µs elapsed_secs=0.000901771
10:00:02 [DEBUG] (753) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.155µs elapsed_secs=7.4155e-5
10:00:02 [DEBUG] (745) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.426µs elapsed_secs=7.1426e-5
10:00:02 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.298µs elapsed_secs=9.2298e-5
10:00:02 [DEBUG] (713) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.812501ms elapsed_secs=0.007812501
10:00:02 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=814.737µs elapsed_secs=0.000814737
10:00:02 [DEBUG] (758) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.799µs elapsed_secs=6.0799e-5
10:00:02 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=228.808µs elapsed_secs=0.000228808
10:00:02 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.552298ms elapsed_secs=0.009552298
10:00:02 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.345987ms elapsed_secs=0.008345987
10:00:02 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=234.87µs elapsed_secs=0.00023487
10:00:02 [DEBUG] (761) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=28.385µs elapsed_secs=2.8385e-5
10:00:02 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.757µs elapsed_secs=0.000100757
10:00:02 [DEBUG] (734) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.363407ms elapsed_secs=0.011363407
10:00:02 [DEBUG] (717) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=734.051µs elapsed_secs=0.000734051
10:00:02 [DEBUG] (717) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=215.36µs elapsed_secs=0.00021536
10:00:02 [DEBUG] (734) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=265.234µs elapsed_secs=0.000265234
10:00:02 [DEBUG] (734) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.822µs elapsed_secs=0.000103822
10:00:02 [DEBUG] (757) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=33.916997ms elapsed_secs=0.033916997
10:00:02 [DEBUG] (757) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=146.043µs elapsed_secs=0.000146043
10:00:02 [DEBUG] (757) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=103.351µs elapsed_secs=0.000103351
10:00:02 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=323.773µs elapsed_secs=0.000323773
10:00:02 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=30.466185ms elapsed_secs=0.030466185
10:00:02 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.784µs elapsed_secs=0.000102784
10:00:02 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=223.421µs elapsed_secs=0.000223421
10:00:02 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.975µs elapsed_secs=8.8975e-5
10:00:02 [DEBUG] (721) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.576109ms elapsed_secs=0.009576109
10:00:02 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.774245ms elapsed_secs=0.009774245
10:00:02 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.118865ms elapsed_secs=0.010118865
10:00:02 [DEBUG] (761) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=34.11129ms elapsed_secs=0.03411129
10:00:02 [DEBUG] (761) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=197.773µs elapsed_secs=0.000197773
10:00:02 [DEBUG] (725) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=878.037µs elapsed_secs=0.000878037
10:00:02 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=872.948µs elapsed_secs=0.000872948
10:00:02 [DEBUG] (721) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.201948ms elapsed_secs=0.001201948
10:00:02 [DEBUG] (761) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.295µs elapsed_secs=8.2295e-5
10:00:02 [DEBUG] (725) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=216.224µs elapsed_secs=0.000216224
10:00:02 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=302.623µs elapsed_secs=0.000302623
10:00:02 [DEBUG] (721) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=246.342µs elapsed_secs=0.000246342
10:00:02 [DEBUG] (761) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=213.711µs elapsed_secs=0.000213711
10:00:02 [DEBUG] (761) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=463.738µs elapsed_secs=0.000463738
10:00:02 [DEBUG] (717) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.478988ms elapsed_secs=0.008478988
10:00:02 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.737249ms elapsed_secs=0.010737249
10:00:02 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.840428ms elapsed_secs=0.010840428
10:00:02 [DEBUG] (745) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.79205ms elapsed_secs=0.00879205
10:00:02 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=558.098µs elapsed_secs=0.000558098
10:00:02 [DEBUG] (762) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.458µs elapsed_secs=6.0458e-5
10:00:02 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=506.425µs elapsed_secs=0.000506425
10:00:02 [DEBUG] (745) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=362.476µs elapsed_secs=0.000362476
10:00:02 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.636µs elapsed_secs=8.2636e-5
10:00:02 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.149µs elapsed_secs=9.7149e-5
10:00:02 [DEBUG] (745) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.909µs elapsed_secs=8.3909e-5
10:00:02 [DEBUG] (734) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=23.645841ms elapsed_secs=0.023645841
10:00:02 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=24.095837ms elapsed_secs=0.024095837
10:00:02 [DEBUG] (734) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=493.946µs elapsed_secs=0.000493946
10:00:02 [DEBUG] (734) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.661µs elapsed_secs=7.6661e-5
10:00:02 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=143.088µs elapsed_secs=0.000143088
10:00:02 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.882µs elapsed_secs=9.0882e-5
10:00:02 [DEBUG] (762) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=24.718522ms elapsed_secs=0.024718522
10:00:02 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=26.447206ms elapsed_secs=0.026447206
10:00:02 [INFO] Created user: User { id: Some(1), username: "1234567890_20250609100002", email: "numeric_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.888908ms elapsed_secs=0.008888908
10:00:02 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=339.878µs elapsed_secs=0.000339878
10:00:02 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.492µs elapsed_secs=0.000106492
10:00:02 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=170.627µs elapsed_secs=0.000170627
10:00:02 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.647416ms elapsed_secs=0.007647416
10:00:02 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.356µs elapsed_secs=8.6356e-5
10:00:02 [DEBUG] (725) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.203832ms elapsed_secs=0.008203832
10:00:02 [DEBUG] (765) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.73µs elapsed_secs=7.073e-5
10:00:02 [DEBUG] (737) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=387.318µs elapsed_secs=0.000387318
10:00:02 [DEBUG] (737) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.98µs elapsed_secs=0.00012698
10:00:02 [DEBUG] (766) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.361µs elapsed_secs=4.6361e-5
10:00:02 [DEBUG] (769) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.446µs elapsed_secs=3.8446e-5
10:00:02 [DEBUG] (721) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.950252ms elapsed_secs=0.008950252
10:00:02 [DEBUG] (761) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.260574ms elapsed_secs=0.009260574
10:00:02 [DEBUG] (770) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.3µs elapsed_secs=4.13e-5
10:00:02 [DEBUG] (761) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=183.336µs elapsed_secs=0.000183336
10:00:02 [DEBUG] (761) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.619µs elapsed_secs=9.2619e-5
10:00:02 [DEBUG] (773) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.172µs elapsed_secs=4.8172e-5
10:00:02 [DEBUG] (734) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=16.44819ms elapsed_secs=0.01644819
10:00:02 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=16.37447ms elapsed_secs=0.01637447
10:00:02 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=16.476651ms elapsed_secs=0.016476651
10:00:02 [DEBUG] (741) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=379.656µs elapsed_secs=0.000379656
10:00:02 [DEBUG] (774) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=260.821µs elapsed_secs=0.000260821
10:00:02 [DEBUG] (741) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.13µs elapsed_secs=0.00010513
10:00:02 [DEBUG] (765) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.096879ms elapsed_secs=0.018096879
10:00:02 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=834.053µs elapsed_secs=0.000834053
10:00:02 [DEBUG] (765) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=161.965µs elapsed_secs=0.000161965
10:00:02 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.767µs elapsed_secs=0.000111767
10:00:02 [DEBUG] (765) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=93.733µs elapsed_secs=9.3733e-5
10:00:02 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=17.806761ms elapsed_secs=0.017806761
10:00:02 [DEBUG] (765) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=237.114µs elapsed_secs=0.000237114
10:00:02 [DEBUG] (745) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=18.123519ms elapsed_secs=0.018123519
10:00:02 [DEBUG] (765) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=385.804µs elapsed_secs=0.000385804
10:00:02 [DEBUG] (777) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.646µs elapsed_secs=5.7646e-5
10:00:02 [DEBUG] (778) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.499µs elapsed_secs=6.5499e-5
10:00:02 [DEBUG] (745) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=239.051µs elapsed_secs=0.000239051
10:00:02 [DEBUG] (745) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.705µs elapsed_secs=8.0705e-5
10:00:02 [DEBUG] (769) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=20.376339ms elapsed_secs=0.020376339
10:00:02 [DEBUG] (769) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=90.651µs elapsed_secs=9.0651e-5
10:00:02 [DEBUG] (769) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.433µs elapsed_secs=7.8433e-5
10:00:02 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=248.577µs elapsed_secs=0.000248577
10:00:02 [DEBUG] (773) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.66206ms elapsed_secs=0.01766206
10:00:02 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.841µs elapsed_secs=8.9841e-5
10:00:02 [DEBUG] (773) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.748µs elapsed_secs=8.1748e-5
10:00:02 [DEBUG] (773) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.923µs elapsed_secs=6.3923e-5
10:00:02 [DEBUG] (773) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=181.207µs elapsed_secs=0.000181207
10:00:02 [DEBUG] (773) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.95µs elapsed_secs=9.895e-5
10:00:02 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.511919ms elapsed_secs=0.009511919
10:00:02 [DEBUG] (737) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.811402ms elapsed_secs=0.007811402
10:00:02 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.794455ms elapsed_secs=0.008794455
10:00:02 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=509.157µs elapsed_secs=0.000509157
10:00:02 [DEBUG] (779) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.925µs elapsed_secs=5.8925e-5
10:00:02 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=467.865µs elapsed_secs=0.000467865
10:00:02 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.959µs elapsed_secs=0.000108959
10:00:02 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.676µs elapsed_secs=8.4676e-5
10:00:02 [DEBUG] (779) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=404.913µs elapsed_secs=0.000404913
10:00:02 [DEBUG] (777) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.447451ms elapsed_secs=0.010447451
10:00:02 [INFO] Created user: User { id: Some(1), username: "underscore_test_20250609100002", email: "underscore_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (778) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.550342ms elapsed_secs=0.014550342
10:00:02 [DEBUG] (782) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.26µs elapsed_secs=5.626e-5
10:00:02 [DEBUG] (778) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=201.372µs elapsed_secs=0.000201372
10:00:02 [DEBUG] (785) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=253.197µs elapsed_secs=0.000253197
10:00:02 [DEBUG] (778) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=79.997µs elapsed_secs=7.9997e-5
10:00:02 [DEBUG] (761) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.329449ms elapsed_secs=0.011329449
10:00:02 [DEBUG] (778) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=518.441µs elapsed_secs=0.000518441
10:00:02 [DEBUG] (761) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=376.162µs elapsed_secs=0.000376162
10:00:02 [DEBUG] (778) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.275µs elapsed_secs=8.5275e-5
10:00:02 [DEBUG] (761) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.824µs elapsed_secs=6.7824e-5
10:00:02 [DEBUG] (741) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.1754ms elapsed_secs=0.0081754
10:00:02 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.40518ms elapsed_secs=0.00840518
10:00:02 [DEBUG] (786) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.872µs elapsed_secs=3.4872e-5
10:00:02 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=155.078µs elapsed_secs=0.000155078
10:00:02 [DEBUG] (745) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.077484ms elapsed_secs=0.009077484
10:00:02 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.703µs elapsed_secs=0.000115703
10:00:02 [DEBUG] (787) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=104.729µs elapsed_secs=0.000104729
10:00:02 [DEBUG] (765) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.099984ms elapsed_secs=0.010099984
10:00:02 [DEBUG] (765) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=198.15µs elapsed_secs=0.00019815
10:00:02 [DEBUG] (765) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.486µs elapsed_secs=0.000113486
10:00:02 [DEBUG] (782) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.834484ms elapsed_secs=0.011834484
10:00:02 [DEBUG] (785) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.127208ms elapsed_secs=0.011127208
10:00:02 [DEBUG] (782) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=265.159µs elapsed_secs=0.000265159
10:00:02 [DEBUG] (782) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=164.481µs elapsed_secs=0.000164481
10:00:02 [DEBUG] (785) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=103.567µs elapsed_secs=0.000103567
10:00:02 [DEBUG] (785) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.883µs elapsed_secs=6.8883e-5
10:00:02 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=200.661µs elapsed_secs=0.000200661
10:00:02 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.834µs elapsed_secs=9.9834e-5
10:00:02 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.102613ms elapsed_secs=0.010102613
10:00:02 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=374.74µs elapsed_secs=0.00037474
10:00:02 [DEBUG] (773) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.398874ms elapsed_secs=0.010398874
10:00:02 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=174.492µs elapsed_secs=0.000174492
10:00:02 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=287.532µs elapsed_secs=0.000287532
10:00:02 [DEBUG] (786) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.637702ms elapsed_secs=0.010637702
10:00:02 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.978078ms elapsed_secs=0.009978078
10:00:02 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=192.957µs elapsed_secs=0.000192957
10:00:02 [DEBUG] (773) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=337.857µs elapsed_secs=0.000337857
10:00:02 [INFO] Created user: User { id: Some(1), username: "delete_user_test_20250609100002", email: "delete_user_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (773) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.04µs elapsed_secs=0.00011604
10:00:02 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=191.951µs elapsed_secs=0.000191951
10:00:02 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.754µs elapsed_secs=7.0754e-5
10:00:02 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.091932ms elapsed_secs=0.009091932
10:00:02 [DEBUG] (788) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=94.56µs elapsed_secs=9.456e-5
10:00:02 [DEBUG] (788) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=126.021µs elapsed_secs=0.000126021
10:00:02 [DEBUG] (739) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "delete_user_test_20250609100002", email: "delete_user_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" })
10:00:02 [DEBUG] (787) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.972949ms elapsed_secs=0.010972949
10:00:02 [DEBUG] (749) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=493.258µs elapsed_secs=0.000493258
10:00:02 [INFO] Created user: User { id: Some(1), username: "get_all_users_test_20250609100002_1", email: "get_all_users_test_20250609100002_1@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (749) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.546µs elapsed_secs=9.6546e-5
10:00:02 [DEBUG] (789) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.463µs elapsed_secs=3.8463e-5
10:00:02 [DEBUG] (778) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.509788ms elapsed_secs=0.007509788
10:00:02 [DEBUG] (761) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.75086ms elapsed_secs=0.00775086
10:00:02 [DEBUG] (778) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=355.848µs elapsed_secs=0.000355848
10:00:02 [DEBUG] (778) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.28µs elapsed_secs=0.00010528
10:00:02 [DEBUG] (761) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=433.88µs elapsed_secs=0.00043388
10:00:02 [DEBUG] (761) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.413µs elapsed_secs=5.6413e-5
10:00:02 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.868422ms elapsed_secs=0.007868422
10:00:02 [DEBUG] (786) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=8.029433ms elapsed_secs=0.008029433
10:00:02 [INFO] Deleted user: SqliteQueryResult { changes: 1, last_insert_rowid: 1 }
10:00:02 [DEBUG] (753) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=384.333µs elapsed_secs=0.000384333
10:00:02 [DEBUG] (788) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=0 elapsed=89.122µs elapsed_secs=8.9122e-5
10:00:02 [DEBUG] (739) menahel::repository::user_repo: Get user by id: None
10:00:02 [DEBUG] (753) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.749µs elapsed_secs=0.000140749
10:00:02 [DEBUG] (765) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.412882ms elapsed_secs=0.009412882
10:00:02 [DEBUG] (789) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.949149ms elapsed_secs=0.010949149
10:00:02 [DEBUG] (765) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=704.5µs elapsed_secs=0.0007045
10:00:02 [INFO] Created user: User { id: Some(2), username: "get_all_users_test_20250609100002_2", email: "get_all_users_test_20250609100002_2@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (765) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.238µs elapsed_secs=9.7238e-5
10:00:02 [DEBUG] (792) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=125.346µs elapsed_secs=0.000125346
10:00:02 [DEBUG] (773) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.984293ms elapsed_secs=0.009984293
10:00:02 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.165255ms elapsed_secs=0.012165255
10:00:02 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.460748ms elapsed_secs=0.010460748
10:00:02 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.506721ms elapsed_secs=0.010506721
10:00:02 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.633127ms elapsed_secs=0.010633127
10:00:02 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=499.646µs elapsed_secs=0.000499646
10:00:02 [DEBUG] (773) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=523.639µs elapsed_secs=0.000523639
10:00:02 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.452µs elapsed_secs=0.000115452
10:00:02 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=409.163µs elapsed_secs=0.000409163
10:00:02 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=680.994µs elapsed_secs=0.000680994
10:00:02 [DEBUG] (757) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=355.627µs elapsed_secs=0.000355627
10:00:02 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.853µs elapsed_secs=7.6853e-5
10:00:02 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.355µs elapsed_secs=0.000110355
10:00:02 [DEBUG] (773) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=409.441µs elapsed_secs=0.000409441
10:00:02 [DEBUG] (757) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.563µs elapsed_secs=0.000118563
10:00:02 [DEBUG] (787) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=7.606745ms elapsed_secs=0.007606745
10:00:02 [DEBUG] (778) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.701153ms elapsed_secs=0.007701153
10:00:02 [DEBUG] (749) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.511312ms elapsed_secs=0.010511312
10:00:02 [INFO] Created user: User { id: Some(3), username: "get_all_users_test_20250609100002_3", email: "get_all_users_test_20250609100002_3@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (778) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=229.722µs elapsed_secs=0.000229722
10:00:02 [DEBUG] (793) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.063µs elapsed_secs=4.9063e-5
10:00:02 [DEBUG] (778) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=157.505µs elapsed_secs=0.000157505
10:00:02 [DEBUG] (793) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=0 rows_returned=0 elapsed=271.732µs elapsed_secs=0.000271732
10:00:02 [DEBUG] (761) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.689995ms elapsed_secs=0.007689995
10:00:02 [DEBUG] (747) menahel::repository::user_repo: Get all users: []
10:00:02 [DEBUG] (792) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.221471ms elapsed_secs=0.011221471
10:00:02 [DEBUG] (792) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=93.939µs elapsed_secs=9.3939e-5
10:00:02 [DEBUG] (761) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=339.182µs elapsed_secs=0.000339182
10:00:02 [DEBUG] (792) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=108.005µs elapsed_secs=0.000108005
10:00:02 [DEBUG] (761) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.106µs elapsed_secs=0.000120106
10:00:02 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=664.899µs elapsed_secs=0.000664899
10:00:02 [DEBUG] (796) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.815µs elapsed_secs=5.7815e-5
10:00:02 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.64µs elapsed_secs=0.00010864
10:00:02 [DEBUG] (753) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.729556ms elapsed_secs=0.011729556
10:00:02 [DEBUG] (797) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.085µs elapsed_secs=6.7085e-5
10:00:02 [DEBUG] (765) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.445987ms elapsed_secs=0.009445987
10:00:02 [DEBUG] (789) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.658002ms elapsed_secs=0.009658002
10:00:02 [INFO] Created user: User { id: Some(4), username: "get_all_users_test_20250609100002_4", email: "get_all_users_test_20250609100002_4@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (765) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=295.16µs elapsed_secs=0.00029516
10:00:02 [DEBUG] (765) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.948µs elapsed_secs=7.2948e-5
10:00:02 [DEBUG] (796) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.583584ms elapsed_secs=0.011583584
10:00:02 [DEBUG] (796) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.114µs elapsed_secs=7.9114e-5
10:00:02 [DEBUG] (796) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.003µs elapsed_secs=6.3003e-5
10:00:02 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=166.545µs elapsed_secs=0.000166545
10:00:02 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.603µs elapsed_secs=9.4603e-5
10:00:02 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.878423ms elapsed_secs=0.005878423
10:00:02 [DEBUG] (773) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.658757ms elapsed_secs=0.006658757
10:00:02 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=244.465µs elapsed_secs=0.000244465
10:00:02 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.355565ms elapsed_secs=0.007355565
10:00:02 [DEBUG] (757) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.674836ms elapsed_secs=0.007674836
10:00:02 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=276.202µs elapsed_secs=0.000276202
10:00:02 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.401867ms elapsed_secs=0.007401867
10:00:02 [DEBUG] (797) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=7.067067ms elapsed_secs=0.007067067
10:00:02 [DEBUG] (773) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=471.139µs elapsed_secs=0.000471139
10:00:02 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=168.292µs elapsed_secs=0.000168292
10:00:02 [DEBUG] (773) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.219µs elapsed_secs=0.000129219
10:00:02 [INFO] Created user: User { id: Some(1), username: "get_user_by_id_test_20250609100002", email: "get_user_by_id_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (778) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.195846ms elapsed_secs=0.008195846
10:00:02 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=220.913µs elapsed_secs=0.000220913
10:00:02 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=188.122µs elapsed_secs=0.000188122
10:00:02 [DEBUG] (787) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.214815ms elapsed_secs=0.008214815
10:00:02 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=187.863µs elapsed_secs=0.000187863
10:00:02 [DEBUG] (798) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.225µs elapsed_secs=7.0225e-5
10:00:02 [DEBUG] (778) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=542.824µs elapsed_secs=0.000542824
10:00:02 [INFO] Created user: User { id: Some(5), username: "get_all_users_test_20250609100002_5", email: "get_all_users_test_20250609100002_5@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (778) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=499.323µs elapsed_secs=0.000499323
10:00:02 [DEBUG] (798) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=737.108µs elapsed_secs=0.000737108
10:00:02 [DEBUG] (789) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=1 rows_returned=5 elapsed=368.114µs elapsed_secs=0.000368114
10:00:02 [DEBUG] (751) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "get_user_by_id_test_20250609100002", email: "get_user_by_id_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" })
10:00:02 [DEBUG] (743) menahel::repository::user_repo: Get all users: [User { id: Some(1), username: "get_all_users_test_20250609100002_1", email: "get_all_users_test_20250609100002_1@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }, User { id: Some(2), username: "get_all_users_test_20250609100002_2", email: "get_all_users_test_20250609100002_2@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }, User { id: Some(3), username: "get_all_users_test_20250609100002_3", email: "get_all_users_test_20250609100002_3@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }, User { id: Some(4), username: "get_all_users_test_20250609100002_4", email: "get_all_users_test_20250609100002_4@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }, User { id: Some(5), username: "get_all_users_test_20250609100002_5", email: "get_all_users_test_20250609100002_5@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }]
10:00:02 [DEBUG] (797) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=1 rows_returned=0 elapsed=142.251µs elapsed_secs=0.000142251
10:00:02 [DEBUG] (751) menahel::repository::user_repo: Get user by id: None
10:00:02 [DEBUG] (801) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=131.084µs elapsed_secs=0.000131084
10:00:02 [DEBUG] (804) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.829µs elapsed_secs=3.2829e-5
10:00:02 [DEBUG] (761) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.972741ms elapsed_secs=0.010972741
10:00:02 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.209424ms elapsed_secs=0.011209424
10:00:02 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=311.449µs elapsed_secs=0.000311449
10:00:02 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.626µs elapsed_secs=9.7626e-5
10:00:02 [DEBUG] (765) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.976464ms elapsed_secs=0.009976464
10:00:02 [DEBUG] (765) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=281.863µs elapsed_secs=0.000281863
10:00:02 [DEBUG] (765) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.019µs elapsed_secs=0.000100019
10:00:02 [DEBUG] (801) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.165862ms elapsed_secs=0.010165862
10:00:02 [DEBUG] (804) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.05681ms elapsed_secs=0.01005681
10:00:02 [DEBUG] (801) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.761µs elapsed_secs=0.000133761
10:00:02 [DEBUG] (804) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=84.053µs elapsed_secs=8.4053e-5
10:00:02 [DEBUG] (804) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=119.215µs elapsed_secs=0.000119215
10:00:02 [DEBUG] (801) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=138.695µs elapsed_secs=0.000138695
10:00:02 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.657199ms elapsed_secs=0.008657199
10:00:02 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.484487ms elapsed_secs=0.007484487
10:00:02 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.354093ms elapsed_secs=0.001354093
10:00:02 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.415036ms elapsed_secs=0.001415036
10:00:02 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=400.883µs elapsed_secs=0.000400883
10:00:02 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=314.313µs elapsed_secs=0.000314313
10:00:02 [DEBUG] (769) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=868.199µs elapsed_secs=0.000868199
10:00:02 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.385844ms elapsed_secs=0.001385844
10:00:02 [DEBUG] (769) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=173.253µs elapsed_secs=0.000173253
10:00:02 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.506µs elapsed_secs=7.6506e-5
10:00:02 [DEBUG] (778) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.155607ms elapsed_secs=0.009155607
10:00:02 [DEBUG] (773) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.61653ms elapsed_secs=0.01161653
10:00:02 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.839614ms elapsed_secs=0.011839614
10:00:02 [DEBUG] (778) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=291.033µs elapsed_secs=0.000291033
10:00:02 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.916158ms elapsed_secs=0.011916158
10:00:02 [DEBUG] (773) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=466.893µs elapsed_secs=0.000466893
10:00:02 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=172.54µs elapsed_secs=0.00017254
10:00:02 [DEBUG] (773) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.494µs elapsed_secs=6.3494e-5
10:00:02 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=136.864µs elapsed_secs=0.000136864
10:00:02 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.623µs elapsed_secs=8.4623e-5
10:00:02 [DEBUG] (778) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.365µs elapsed_secs=7.5365e-5
10:00:02 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.163µs elapsed_secs=5.9163e-5
10:00:02 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.574813ms elapsed_secs=0.009574813
10:00:02 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=165.728µs elapsed_secs=0.000165728
10:00:02 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.534µs elapsed_secs=6.4534e-5
10:00:02 [DEBUG] (765) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.896154ms elapsed_secs=0.009896154
10:00:02 [DEBUG] (805) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.454µs elapsed_secs=6.0454e-5
10:00:02 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.971038ms elapsed_secs=0.007971038
10:00:02 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=465.717µs elapsed_secs=0.000465717
10:00:02 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.816µs elapsed_secs=0.000150816
10:00:02 [DEBUG] (769) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.798449ms elapsed_secs=0.009798449
10:00:02 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.83486ms elapsed_secs=0.00983486
10:00:02 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.215525ms elapsed_secs=0.010215525
10:00:02 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=270.774µs elapsed_secs=0.000270774
10:00:02 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=379.994µs elapsed_secs=0.000379994
10:00:02 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.533µs elapsed_secs=8.9533e-5
10:00:02 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.504µs elapsed_secs=9.9504e-5
10:00:02 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.962553ms elapsed_secs=0.006962553
10:00:02 [DEBUG] (778) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.65281ms elapsed_secs=0.00765281
10:00:02 [DEBUG] (785) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=221.396µs elapsed_secs=0.000221396
10:00:02 [DEBUG] (773) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.783412ms elapsed_secs=0.009783412
10:00:02 [DEBUG] (785) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.81µs elapsed_secs=0.00012081
10:00:02 [DEBUG] (805) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.837462ms elapsed_secs=0.008837462
10:00:02 [INFO] Created user: User { id: Some(1), username: "get_user_by_name_test_20250609100002", email: "get_user_by_name_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.353345ms elapsed_secs=0.009353345
10:00:02 [DEBUG] (806) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=87.477µs elapsed_secs=8.7477e-5
10:00:02 [DEBUG] (782) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=243.517µs elapsed_secs=0.000243517
10:00:02 [DEBUG] (806) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=209.618µs elapsed_secs=0.000209618
10:00:02 [DEBUG] (782) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.594µs elapsed_secs=8.4594e-5
10:00:02 [DEBUG] (763) menahel::repository::user_repo: Get user by name: Some(User { id: Some(1), username: "get_user_by_name_test_20250609100002", email: "get_user_by_name_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" })
10:00:02 [DEBUG] (805) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=102.297µs elapsed_secs=0.000102297
10:00:02 [DEBUG] (763) menahel::repository::user_repo: Get user by name: None
10:00:02 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.271601ms elapsed_secs=0.010271601
10:00:02 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=187.847µs elapsed_secs=0.000187847
10:00:02 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=463.654µs elapsed_secs=0.000463654
10:00:02 [DEBUG] (809) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.856µs elapsed_secs=5.1856e-5
10:00:02 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.991132ms elapsed_secs=0.006991132
10:00:02 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=274.738µs elapsed_secs=0.000274738
10:00:02 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.374µs elapsed_secs=0.000112374
10:00:02 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.748596ms elapsed_secs=0.010748596
10:00:02 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=763.25µs elapsed_secs=0.00076325
10:00:02 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.819µs elapsed_secs=8.3819e-5
10:00:02 [DEBUG] (809) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.550471ms elapsed_secs=0.013550471
10:00:02 [DEBUG] (809) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=124.055µs elapsed_secs=0.000124055
10:00:02 [DEBUG] (809) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=108.386µs elapsed_secs=0.000108386
10:00:02 [DEBUG] (809) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=436.194µs elapsed_secs=0.000436194
10:00:02 [DEBUG] (782) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.280845ms elapsed_secs=0.010280845
10:00:02 [DEBUG] (785) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.806454ms elapsed_secs=0.011806454
10:00:02 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.032622ms elapsed_secs=0.012032622
10:00:02 [DEBUG] (809) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=1.440714ms elapsed_secs=0.001440714
10:00:02 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=801.864µs elapsed_secs=0.000801864
10:00:02 [DEBUG] (810) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=136.79µs elapsed_secs=0.00013679
10:00:02 [DEBUG] (811) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=149.465µs elapsed_secs=0.000149465
10:00:02 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=257.647µs elapsed_secs=0.000257647
10:00:02 [DEBUG] (810) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=210.845µs elapsed_secs=0.000210845
10:00:02 [DEBUG] (780) menahel::repository::user_repo: Get user by id with transaction: None
10:00:02 [DEBUG] (814) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.342µs elapsed_secs=6.1342e-5
10:00:02 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.879477ms elapsed_secs=0.012879477
10:00:02 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=232.404µs elapsed_secs=0.000232404
10:00:02 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.589µs elapsed_secs=0.000101589
10:00:02 [DEBUG] (811) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.700514ms elapsed_secs=0.009700514
10:00:02 [INFO] Created user: User { id: Some(1), username: "update_user_test_20250609100002", email: "update_user_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (815) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.481µs elapsed_secs=6.5481e-5
10:00:02 [DEBUG] (815) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=456.989µs elapsed_secs=0.000456989
10:00:02 [DEBUG] (783) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "update_user_test_20250609100002", email: "update_user_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" })
10:00:02 [DEBUG] (815) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=677.029µs elapsed_secs=0.000677029
10:00:02 [DEBUG] (814) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.982049ms elapsed_secs=0.013982049
10:00:02 [DEBUG] (814) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=102.207µs elapsed_secs=0.000102207
10:00:02 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.294333ms elapsed_secs=0.013294333
10:00:02 [DEBUG] (814) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.27µs elapsed_secs=9.027e-5
10:00:02 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=174.857µs elapsed_secs=0.000174857
10:00:02 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.274µs elapsed_secs=9.7274e-5
10:00:02 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=227.659µs elapsed_secs=0.000227659
10:00:02 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.847287ms elapsed_secs=0.009847287
10:00:02 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=203.018µs elapsed_secs=0.000203018
10:00:02 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=158.057µs elapsed_secs=0.000158057
10:00:02 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.686µs elapsed_secs=7.8686e-5
10:00:02 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.403053ms elapsed_secs=0.009403053
10:00:02 [DEBUG] (809) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.82273ms elapsed_secs=0.00982273
10:00:02 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=222.614µs elapsed_secs=0.000222614
10:00:02 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.896µs elapsed_secs=9.0896e-5
10:00:02 [DEBUG] (809) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=151.473µs elapsed_secs=0.000151473
10:00:02 [DEBUG] (809) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.719µs elapsed_secs=6.2719e-5
10:00:02 [INFO] Updated user: Some(User { id: Some(1), username: "update_user_test_20250609100002_updated", email: "update_user_test_20250609100002@test.com_updated", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" })
10:00:02 [DEBUG] (757) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=97.324402ms elapsed_secs=0.097324402
10:00:02 [DEBUG] (811) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=106.012µs elapsed_secs=0.000106012
10:00:02 [DEBUG] (783) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "update_user_test_20250609100002_updated", email: "update_user_test_20250609100002@test.com_updated", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" })
10:00:02 [DEBUG] (816) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=213.894µs elapsed_secs=0.000213894
10:00:02 [DEBUG] (819) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=79.351µs elapsed_secs=7.9351e-5
10:00:02 [DEBUG] (816) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=327.325µs elapsed_secs=0.000327325
10:00:02 [DEBUG] (755) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "Test User 0", email: "test0@example.com", password_hash: "password0" })
10:00:02 [DEBUG] (822) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.618µs elapsed_secs=7.2618e-5
10:00:02 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.225379ms elapsed_secs=0.014225379
10:00:02 [DEBUG] (823) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.489µs elapsed_secs=4.4489e-5
10:00:02 [DEBUG] (761) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=103.947246ms elapsed_secs=0.103947246
10:00:02 [DEBUG] (824) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.228µs elapsed_secs=4.7228e-5
10:00:02 [DEBUG] (824) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=141.941µs elapsed_secs=0.000141941
10:00:02 [DEBUG] (759) menahel::repository::user_repo: Get user by id with transaction: None
10:00:02 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.4194ms elapsed_secs=0.0084194
10:00:02 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.275529ms elapsed_secs=0.012275529
10:00:02 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.594686ms elapsed_secs=0.012594686
10:00:02 [DEBUG] (819) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.184116ms elapsed_secs=0.016184116
10:00:02 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=226.13µs elapsed_secs=0.00022613
10:00:02 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=197.579µs elapsed_secs=0.000197579
10:00:02 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=191.571µs elapsed_secs=0.000191571
10:00:02 [DEBUG] (819) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=134.407µs elapsed_secs=0.000134407
10:00:02 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.931µs elapsed_secs=0.000147931
10:00:02 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=224.709µs elapsed_secs=0.000224709
10:00:02 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=161.14µs elapsed_secs=0.00016114
10:00:02 [DEBUG] (819) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=418.529µs elapsed_secs=0.000418529
10:00:02 [DEBUG] (809) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.381167ms elapsed_secs=0.009381167
10:00:02 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.876126ms elapsed_secs=0.009876126
10:00:02 [DEBUG] (822) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.107718ms elapsed_secs=0.016107718
10:00:02 [DEBUG] (822) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=225.167µs elapsed_secs=0.000225167
10:00:02 [DEBUG] (809) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.450375ms elapsed_secs=0.001450375
10:00:02 [DEBUG] (825) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.228µs elapsed_secs=4.9228e-5
10:00:02 [DEBUG] (819) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.653887ms elapsed_secs=0.001653887
10:00:02 [DEBUG] (822) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=66.965µs elapsed_secs=6.6965e-5
10:00:02 [DEBUG] (809) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.977µs elapsed_secs=8.0977e-5
10:00:02 [DEBUG] (823) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=12.410669ms elapsed_secs=0.012410669
10:00:02 [DEBUG] (819) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.971µs elapsed_secs=0.000140971
10:00:02 [INFO] Created user: User { id: Some(1), username: "empty_email_test_20250609100002", email: "empty_email_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (822) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=419.26µs elapsed_secs=0.00041926
10:00:02 [DEBUG] (822) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.267µs elapsed_secs=8.3267e-5
10:00:02 [DEBUG] (825) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=7.365197ms elapsed_secs=0.007365197
10:00:02 [INFO] Created user: User { id: Some(1), username: "empty_field_test_20250609100002", email: "empty_field_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (769) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=93.81368ms elapsed_secs=0.09381368
10:00:02 [DEBUG] (826) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.957µs elapsed_secs=5.9957e-5
10:00:02 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.414019ms elapsed_secs=0.009414019
10:00:02 [DEBUG] (826) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n                SELECT COUNT(*) FROM users\n            \n" rows_affected=0 rows_returned=1 elapsed=212.73µs elapsed_secs=0.00021273
10:00:02 [DEBUG] (767) menahel::repository::user_repo: Get users count: 10
10:00:02 [DEBUG] (827) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.964µs elapsed_secs=5.7964e-5
10:00:02 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.749227ms elapsed_secs=0.010749227
10:00:02 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.207513ms elapsed_secs=0.011207513
10:00:02 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=273.705µs elapsed_secs=0.000273705
10:00:02 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=295.868µs elapsed_secs=0.000295868
10:00:02 [DEBUG] (828) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.098µs elapsed_secs=4.8098e-5
10:00:02 [DEBUG] (819) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.534975ms elapsed_secs=0.008534975
10:00:02 [DEBUG] (809) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.860923ms elapsed_secs=0.008860923
10:00:02 [DEBUG] (778) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=96.692466ms elapsed_secs=0.096692466
10:00:02 [DEBUG] (819) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=227.571µs elapsed_secs=0.000227571
10:00:02 [DEBUG] (809) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=155.225µs elapsed_secs=0.000155225
10:00:02 [DEBUG] (773) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=96.797771ms elapsed_secs=0.096797771
10:00:02 [DEBUG] (822) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.205889ms elapsed_secs=0.010205889
10:00:02 [DEBUG] (819) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=174.124µs elapsed_secs=0.000174124
10:00:02 [DEBUG] (809) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=277.76µs elapsed_secs=0.00027776
10:00:02 [DEBUG] (829) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.013µs elapsed_secs=4.3013e-5
10:00:02 [DEBUG] (822) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=327.754µs elapsed_secs=0.000327754
10:00:02 [DEBUG] (830) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.471µs elapsed_secs=4.0471e-5
10:00:02 [DEBUG] (822) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.482µs elapsed_secs=9.5482e-5
10:00:02 [DEBUG] (829) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=270.878µs elapsed_secs=0.000270878
10:00:02 [DEBUG] (830) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=172.958µs elapsed_secs=0.000172958
10:00:02 [DEBUG] (775) menahel::repository::user_repo: Get users count with transaction: 10
10:00:02 [DEBUG] (771) menahel::repository::user_repo: Get users count with transaction: 10
10:00:02 [DEBUG] (771) menahel::repository::user_repo: Get users with pagenation: offset: 0, limit: 5
10:00:02 [DEBUG] (830) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=88.645µs elapsed_secs=8.8645e-5
10:00:02 [DEBUG] (771) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(1), username: "Test User 0", email: "test0@example.com", password_hash: "password0" }, User { id: Some(2), username: "Test User 1", email: "test1@example.com", password_hash: "password1" }, User { id: Some(3), username: "Test User 2", email: "test2@example.com", password_hash: "password2" }, User { id: Some(4), username: "Test User 3", email: "test3@example.com", password_hash: "password3" }, User { id: Some(5), username: "Test User 4", email: "test4@example.com", password_hash: "password4" }]
10:00:02 [DEBUG] (831) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.914µs elapsed_secs=5.5914e-5
10:00:02 [DEBUG] (827) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=6.694354ms elapsed_secs=0.006694354
10:00:02 [DEBUG] (831) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=223.249µs elapsed_secs=0.000223249
10:00:02 [DEBUG] (771) menahel::repository::user_repo: Get users count with transaction: 10
10:00:02 [DEBUG] (771) menahel::repository::user_repo: Get users with pagenation: offset: 5, limit: 5
10:00:02 [INFO] Created user: User { id: Some(1), username: "invalid_email_test_20250609100002", email: "invalid_email_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (831) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=147.716µs elapsed_secs=0.000147716
10:00:02 [DEBUG] (771) menahel::repository::user_repo: Get users with pagenation: [User { id: Some(6), username: "Test User 5", email: "test5@example.com", password_hash: "password5" }, User { id: Some(7), username: "Test User 6", email: "test6@example.com", password_hash: "password6" }, User { id: Some(8), username: "Test User 7", email: "test7@example.com", password_hash: "password7" }, User { id: Some(9), username: "Test User 8", email: "test8@example.com", password_hash: "password8" }, User { id: Some(10), username: "Test User 9", email: "test9@example.com", password_hash: "password9" }]
10:00:02 [DEBUG] (828) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.740033ms elapsed_secs=0.008740033
10:00:02 [INFO] Created user: User { id: Some(1), username: "empty_password_test_20250609100002", email: "empty_password_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.796995ms elapsed_secs=0.006796995
10:00:02 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=176.749µs elapsed_secs=0.000176749
10:00:02 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.539µs elapsed_secs=9.4539e-5
10:00:02 [DEBUG] (819) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.849677ms elapsed_secs=0.003849677
10:00:02 [DEBUG] (819) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=201.055µs elapsed_secs=0.000201055
10:00:02 [DEBUG] (819) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.074µs elapsed_secs=9.4074e-5
10:00:02 [DEBUG] (809) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.146053ms elapsed_secs=0.004146053
10:00:02 [DEBUG] (822) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.56904ms elapsed_secs=0.00456904
10:00:02 [DEBUG] (809) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=233.819µs elapsed_secs=0.000233819
10:00:02 [DEBUG] (809) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.214µs elapsed_secs=9.0214e-5
10:00:02 [DEBUG] (822) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=188.691µs elapsed_secs=0.000188691
10:00:02 [DEBUG] (822) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.062µs elapsed_secs=0.000125062
10:00:02 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.469657ms elapsed_secs=0.006469657
10:00:02 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=149.882µs elapsed_secs=0.000149882
10:00:02 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.047µs elapsed_secs=8.1047e-5
10:00:02 [DEBUG] (819) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.040855ms elapsed_secs=0.004040855
10:00:02 [DEBUG] (809) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.37593ms elapsed_secs=0.00437593
10:00:02 [DEBUG] (819) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=154.83µs elapsed_secs=0.00015483
10:00:02 [DEBUG] (819) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.585µs elapsed_secs=0.000113585
10:00:02 [DEBUG] (832) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.852µs elapsed_secs=7.4852e-5
10:00:02 [DEBUG] (822) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.381583ms elapsed_secs=0.004381583
10:00:02 [DEBUG] (822) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=166.886µs elapsed_secs=0.000166886
10:00:02 [DEBUG] (822) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.342µs elapsed_secs=0.000111342
10:00:02 [DEBUG] (832) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=3.540452ms elapsed_secs=0.003540452
10:00:02 [INFO] Created user: User { id: Some(1), username: "invalid_password_test_20250609100002", email: "invalid_password_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.983477ms elapsed_secs=0.003983477
10:00:02 [DEBUG] (833) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=101.053µs elapsed_secs=0.000101053
10:00:02 [DEBUG] (819) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.40865ms elapsed_secs=0.00640865
10:00:02 [DEBUG] (822) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.581512ms elapsed_secs=0.006581512
10:00:02 [DEBUG] (822) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=189.385µs elapsed_secs=0.000189385
10:00:02 [DEBUG] (819) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=316.132µs elapsed_secs=0.000316132
10:00:02 [DEBUG] (819) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.788µs elapsed_secs=0.000121788
10:00:02 [DEBUG] (822) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=254.701µs elapsed_secs=0.000254701
10:00:02 [DEBUG] (833) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=4.46639ms elapsed_secs=0.00446639
10:00:02 [INFO] Created user: User { id: Some(1), username: "long_email_test_20250609100002", email: "long_email_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (822) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.660012ms elapsed_secs=0.003660012
10:00:02 [DEBUG] (819) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.80845ms elapsed_secs=0.00380845
10:00:02 [DEBUG] (834) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=103.495µs elapsed_secs=0.000103495
10:00:02 [DEBUG] (835) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.375µs elapsed_secs=6.0375e-5
10:00:02 [DEBUG] (834) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=5.823754ms elapsed_secs=0.005823754
10:00:02 [INFO] Created user: User { id: Some(1), username: "special_chars_test_20250609100002", email: "special_chars_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
10:00:02 [DEBUG] (835) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=5.339775ms elapsed_secs=0.005339775
10:00:02 [INFO] Created user: User { id: Some(1), username: "long_username_test_20250609100002", email: "long_username_test_20250609100002@test.com", password_hash: "bdbee9f6ea0a1cdeef47aa67761f8fa6a6989167e65ca68c084ed41e66e218f4" }
