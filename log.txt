08:31:00 [DEBUG] (21) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=64.440696ms elapsed_secs=0.064440696
08:31:00 [DEBUG] (15) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=69.837805ms elapsed_secs=0.069837805
08:31:00 [DEBUG] (16) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=69.980482ms elapsed_secs=0.069980482
08:31:00 [DEBUG] (19) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=71.077939ms elapsed_secs=0.071077939
08:31:00 [DEBUG] (20) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=23.262479ms elapsed_secs=0.023262479
08:31:00 [DEBUG] (18) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=21.23919ms elapsed_secs=0.02123919
08:31:00 [DEBUG] (22) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=70.913569ms elapsed_secs=0.070913569
08:31:00 [DEBUG] (17) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=19.731116ms elapsed_secs=0.019731116
08:31:00 [DEBUG] (24) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=21.394595ms elapsed_secs=0.021394595
08:31:00 [DEBUG] (14) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=72.130846ms elapsed_secs=0.072130846
08:31:00 [DEBUG] (23) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=70.152376ms elapsed_secs=0.070152376
08:31:00 [DEBUG] (25) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=23.449958ms elapsed_secs=0.023449958
08:31:00 [DEBUG] (26) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=224.388µs elapsed_secs=0.000224388
08:31:00 [DEBUG] (34) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=362.17µs elapsed_secs=0.00036217
08:31:00 [DEBUG] (28) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=146.403µs elapsed_secs=0.000146403
08:31:00 [DEBUG] (29) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=124.594µs elapsed_secs=0.000124594
08:31:00 [DEBUG] (27) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=441.28µs elapsed_secs=0.00044128
08:31:00 [DEBUG] (36) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=632.797µs elapsed_secs=0.000632797
08:31:00 [DEBUG] (30) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=288.352µs elapsed_secs=0.000288352
08:31:00 [DEBUG] (33) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=236.474µs elapsed_secs=0.000236474
08:31:00 [DEBUG] (35) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.677µs elapsed_secs=5.4677e-5
08:31:00 [DEBUG] (31) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=1.239945ms elapsed_secs=0.001239945
08:31:00 [DEBUG] (32) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=650.944µs elapsed_secs=0.000650944
08:31:00 [DEBUG] (37) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=208.47µs elapsed_secs=0.00020847
08:31:00 [DEBUG] (28) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=25.459221ms elapsed_secs=0.025459221
08:31:00 [DEBUG] (35) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=23.026479ms elapsed_secs=0.023026479
08:31:00 [DEBUG] (33) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=23.362359ms elapsed_secs=0.023362359
08:31:00 [DEBUG] (34) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=25.589351ms elapsed_secs=0.025589351
08:31:00 [DEBUG] (26) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=25.486897ms elapsed_secs=0.025486897
08:31:00 [DEBUG] (29) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=25.622775ms elapsed_secs=0.025622775
08:31:00 [DEBUG] (36) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=24.834043ms elapsed_secs=0.024834043
08:31:00 [DEBUG] (28) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=242.139µs elapsed_secs=0.000242139
08:31:00 [DEBUG] (35) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=173.631µs elapsed_secs=0.000173631
08:31:00 [DEBUG] (33) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=150.913µs elapsed_secs=0.000150913
08:31:00 [DEBUG] (34) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=172.209µs elapsed_secs=0.000172209
08:31:00 [DEBUG] (31) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=25.024201ms elapsed_secs=0.025024201
08:31:00 [DEBUG] (34) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=146.516µs elapsed_secs=0.000146516
08:31:00 [DEBUG] (27) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=27.00361ms elapsed_secs=0.02700361
08:31:00 [DEBUG] (31) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.374µs elapsed_secs=0.000133374
08:31:00 [DEBUG] (30) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=26.475699ms elapsed_secs=0.026475699
08:31:00 [DEBUG] (27) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=273.64µs elapsed_secs=0.00027364
08:31:00 [DEBUG] (29) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=143.898µs elapsed_secs=0.000143898
08:31:00 [DEBUG] (36) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=150.263µs elapsed_secs=0.000150263
08:31:00 [DEBUG] (27) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=166.891µs elapsed_secs=0.000166891
08:31:00 [DEBUG] (29) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=117.289µs elapsed_secs=0.000117289
08:31:00 [DEBUG] (36) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=119.251µs elapsed_secs=0.000119251
08:31:00 [DEBUG] (26) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=248.923µs elapsed_secs=0.000248923
08:31:00 [DEBUG] (32) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=24.392966ms elapsed_secs=0.024392966
08:31:00 [DEBUG] (37) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=23.987616ms elapsed_secs=0.023987616
08:31:00 [DEBUG] (31) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=380.165µs elapsed_secs=0.000380165
08:31:00 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=502.879µs elapsed_secs=0.000502879
08:31:00 [DEBUG] (30) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=200.5µs elapsed_secs=0.0002005
08:31:00 [DEBUG] (28) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=206.419µs elapsed_secs=0.000206419
08:31:00 [DEBUG] (35) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=103.848µs elapsed_secs=0.000103848
08:31:00 [DEBUG] (33) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=135.551µs elapsed_secs=0.000135551
08:31:00 [DEBUG] (32) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=216.303µs elapsed_secs=0.000216303
08:31:00 [DEBUG] (26) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=696.762µs elapsed_secs=0.000696762
08:31:00 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=401.498µs elapsed_secs=0.000401498
08:31:00 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=2.004504ms elapsed_secs=0.002004504
08:31:00 [DEBUG] (30) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=387.087µs elapsed_secs=0.000387087
08:31:00 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=2.233902ms elapsed_secs=0.002233902
08:31:00 [DEBUG] (37) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=1.428411ms elapsed_secs=0.001428411
08:31:00 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=2.526771ms elapsed_secs=0.002526771
08:31:00 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.40196ms elapsed_secs=0.00140196
08:31:00 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=1.027061ms elapsed_secs=0.001027061
08:31:00 [DEBUG] (32) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=556.353µs elapsed_secs=0.000556353
08:31:00 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=400.297µs elapsed_secs=0.000400297
08:31:00 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=2.054763ms elapsed_secs=0.002054763
08:31:00 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=642.376µs elapsed_secs=0.000642376
08:31:00 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=192.284µs elapsed_secs=0.000192284
08:31:00 [DEBUG] (37) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=537.779µs elapsed_secs=0.000537779
08:31:00 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=2.073843ms elapsed_secs=0.002073843
08:31:00 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=749.67µs elapsed_secs=0.00074967
08:31:00 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=2.186953ms elapsed_secs=0.002186953
08:31:00 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.836575ms elapsed_secs=0.001836575
08:31:00 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=333.982µs elapsed_secs=0.000333982
08:31:00 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=322.295µs elapsed_secs=0.000322295
08:31:00 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=212.991µs elapsed_secs=0.000212991
08:31:00 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=301.859µs elapsed_secs=0.000301859
08:31:00 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.565µs elapsed_secs=0.000105565
08:31:00 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=791.032µs elapsed_secs=0.000791032
08:31:00 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=229.005µs elapsed_secs=0.000229005
08:31:00 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.188µs elapsed_secs=0.000121188
08:31:00 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.100416ms elapsed_secs=0.003100416
08:31:00 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.044µs elapsed_secs=9.8044e-5
08:31:00 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=171.505µs elapsed_secs=0.000171505
08:31:00 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.059µs elapsed_secs=7.2059e-5
08:31:00 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.282487ms elapsed_secs=0.003282487
08:31:00 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=158.615µs elapsed_secs=0.000158615
08:31:00 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.93µs elapsed_secs=6.793e-5
08:31:00 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.281372ms elapsed_secs=0.003281372
08:31:00 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.208368ms elapsed_secs=0.003208368
08:31:00 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.211942ms elapsed_secs=0.003211942
08:31:00 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=361.311µs elapsed_secs=0.000361311
08:31:00 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.72µs elapsed_secs=9.372e-5
08:31:00 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=743.162µs elapsed_secs=0.000743162
08:31:00 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=705.934µs elapsed_secs=0.000705934
08:31:00 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.464306ms elapsed_secs=0.003464306
08:31:00 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.005µs elapsed_secs=5.3005e-5
08:31:00 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.239902ms elapsed_secs=0.003239902
08:31:00 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.54µs elapsed_secs=7.654e-5
08:31:00 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=198.76µs elapsed_secs=0.00019876
08:31:00 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.48661ms elapsed_secs=0.00348661
08:31:00 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=166.072µs elapsed_secs=0.000166072
08:31:00 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.762µs elapsed_secs=5.8762e-5
08:31:00 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.044µs elapsed_secs=0.000135044
08:31:00 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.460817ms elapsed_secs=0.003460817
08:31:00 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.420088ms elapsed_secs=0.003420088
08:31:00 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.481348ms elapsed_secs=0.003481348
08:31:00 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.461718ms elapsed_secs=0.003461718
08:31:00 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=166.161µs elapsed_secs=0.000166161
08:31:00 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=130.898µs elapsed_secs=0.000130898
08:31:00 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=220.11µs elapsed_secs=0.00022011
08:31:00 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=268.236µs elapsed_secs=0.000268236
08:31:00 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=154.048µs elapsed_secs=0.000154048
08:31:00 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.836µs elapsed_secs=7.1836e-5
08:31:00 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=194.527µs elapsed_secs=0.000194527
08:31:00 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.017454ms elapsed_secs=0.003017454
08:31:00 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.972µs elapsed_secs=0.000119972
08:31:00 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=246.716µs elapsed_secs=0.000246716
08:31:00 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.819µs elapsed_secs=0.000103819
08:31:00 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=145.067µs elapsed_secs=0.000145067
08:31:00 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.422µs elapsed_secs=6.3422e-5
08:31:00 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.793816ms elapsed_secs=0.002793816
08:31:00 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.264718ms elapsed_secs=0.003264718
08:31:00 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.880542ms elapsed_secs=0.002880542
08:31:00 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=511.406µs elapsed_secs=0.000511406
08:31:00 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=389.899µs elapsed_secs=0.000389899
08:31:00 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.426µs elapsed_secs=0.000147426
08:31:00 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.475482ms elapsed_secs=0.002475482
08:31:00 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.96µs elapsed_secs=7.396e-5
08:31:00 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.347972ms elapsed_secs=0.002347972
08:31:00 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.465364ms elapsed_secs=0.002465364
08:31:00 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=317.35µs elapsed_secs=0.00031735
08:31:00 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=191.252µs elapsed_secs=0.000191252
08:31:00 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.613919ms elapsed_secs=0.002613919
08:31:00 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.520781ms elapsed_secs=0.002520781
08:31:00 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=422.465µs elapsed_secs=0.000422465
08:31:00 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=157.913µs elapsed_secs=0.000157913
08:31:00 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.484µs elapsed_secs=4.9484e-5
08:31:00 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=356.044µs elapsed_secs=0.000356044
08:31:00 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=97.34µs elapsed_secs=9.734e-5
08:31:00 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.914µs elapsed_secs=0.000120914
08:31:00 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=458.726µs elapsed_secs=0.000458726
08:31:00 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.735µs elapsed_secs=6.3735e-5
08:31:00 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.371501ms elapsed_secs=0.002371501
08:31:00 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.40934ms elapsed_secs=0.00240934
08:31:00 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.315µs elapsed_secs=0.000144315
08:31:00 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.798µs elapsed_secs=4.5798e-5
08:31:00 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.438939ms elapsed_secs=0.002438939
08:31:00 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.492635ms elapsed_secs=0.002492635
08:31:00 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=594.241µs elapsed_secs=0.000594241
08:31:00 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=232.9µs elapsed_secs=0.0002329
08:31:00 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=656.697µs elapsed_secs=0.000656697
08:31:00 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.658µs elapsed_secs=0.000122658
08:31:00 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.325µs elapsed_secs=6.3325e-5
08:31:00 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=213.175µs elapsed_secs=0.000213175
08:31:00 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.696µs elapsed_secs=7.5696e-5
08:31:00 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=33.632µs elapsed_secs=3.3632e-5
08:31:00 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.085126ms elapsed_secs=0.003085126
08:31:00 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=120.849µs elapsed_secs=0.000120849
08:31:00 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.107µs elapsed_secs=6.1107e-5
08:31:00 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.696568ms elapsed_secs=0.002696568
08:31:00 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=87.643µs elapsed_secs=8.7643e-5
08:31:00 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.445µs elapsed_secs=6.1445e-5
08:31:00 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.166826ms elapsed_secs=0.002166826
08:31:00 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.126294ms elapsed_secs=0.002126294
08:31:00 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.155163ms elapsed_secs=0.002155163
08:31:00 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.054553ms elapsed_secs=0.002054553
08:31:00 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.242488ms elapsed_secs=0.002242488
08:31:00 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=352.457µs elapsed_secs=0.000352457
08:31:00 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=290.123µs elapsed_secs=0.000290123
08:31:00 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=235.521µs elapsed_secs=0.000235521
08:31:00 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=235.335µs elapsed_secs=0.000235335
08:31:00 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.097µs elapsed_secs=6.2097e-5
08:31:00 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=104.104µs elapsed_secs=0.000104104
08:31:00 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.853µs elapsed_secs=8.6853e-5
08:31:00 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.23578ms elapsed_secs=0.00223578
08:31:00 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.203617ms elapsed_secs=0.002203617
08:31:00 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.265027ms elapsed_secs=0.002265027
08:31:00 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.303544ms elapsed_secs=0.002303544
08:31:00 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.367181ms elapsed_secs=0.002367181
08:31:00 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.224µs elapsed_secs=8.0224e-5
08:31:00 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.263µs elapsed_secs=5.9263e-5
08:31:00 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.822µs elapsed_secs=5.7822e-5
08:31:00 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=336.98µs elapsed_secs=0.00033698
08:31:00 [DEBUG] (34) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=267.616µs elapsed_secs=0.000267616
08:31:00 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=342.076µs elapsed_secs=0.000342076
08:31:00 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=574.42µs elapsed_secs=0.00057442
08:31:00 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=226.384µs elapsed_secs=0.000226384
08:31:00 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.328µs elapsed_secs=0.000102328
08:31:00 [DEBUG] (34) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.268µs elapsed_secs=5.0268e-5
08:31:00 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.530198ms elapsed_secs=0.002530198
08:31:00 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.832µs elapsed_secs=7.5832e-5
08:31:00 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.78µs elapsed_secs=0.00010778
08:31:00 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.196µs elapsed_secs=7.5196e-5
08:31:00 [DEBUG] (29) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=166.504µs elapsed_secs=0.000166504
08:31:00 [DEBUG] (29) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.887µs elapsed_secs=6.0887e-5
08:31:00 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.46507ms elapsed_secs=0.00246507
08:31:00 [DEBUG] (27) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=99.153µs elapsed_secs=9.9153e-5
08:31:00 [DEBUG] (27) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.956µs elapsed_secs=5.0956e-5
08:31:00 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.5883ms elapsed_secs=0.0025883
08:31:00 [DEBUG] (26) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=97.689µs elapsed_secs=9.7689e-5
08:31:00 [DEBUG] (26) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.325µs elapsed_secs=4.7325e-5
08:31:00 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.540233ms elapsed_secs=0.002540233
08:31:00 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.612066ms elapsed_secs=0.002612066
08:31:00 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.482378ms elapsed_secs=0.002482378
08:31:00 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.588739ms elapsed_secs=0.002588739
08:31:00 [DEBUG] (31) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=117.284µs elapsed_secs=0.000117284
08:31:00 [DEBUG] (36) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=374.909µs elapsed_secs=0.000374909
08:31:00 [DEBUG] (33) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=401.426µs elapsed_secs=0.000401426
08:31:00 [DEBUG] (31) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.125µs elapsed_secs=5.8125e-5
08:31:00 [DEBUG] (33) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.466µs elapsed_secs=5.4466e-5
08:31:00 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.305669ms elapsed_secs=0.002305669
08:31:00 [DEBUG] (34) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.345667ms elapsed_secs=0.002345667
08:31:00 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.396022ms elapsed_secs=0.002396022
08:31:00 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.437136ms elapsed_secs=0.002437136
08:31:00 [DEBUG] (36) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.377µs elapsed_secs=5.4377e-5
08:31:00 [DEBUG] (35) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=107.758µs elapsed_secs=0.000107758
08:31:00 [DEBUG] (29) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.367771ms elapsed_secs=0.002367771
08:31:00 [DEBUG] (32) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=103.38µs elapsed_secs=0.00010338
08:31:00 [DEBUG] (35) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=389.52µs elapsed_secs=0.00038952
08:31:00 [DEBUG] (30) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=486.569µs elapsed_secs=0.000486569
08:31:00 [DEBUG] (28) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=519.641µs elapsed_secs=0.000519641
08:31:00 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.4986ms elapsed_secs=0.0024986
08:31:00 [DEBUG] (32) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.414µs elapsed_secs=5.6414e-5
08:31:00 [DEBUG] (30) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.184µs elapsed_secs=9.0184e-5
08:31:00 [DEBUG] (28) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.506µs elapsed_secs=4.2506e-5
08:31:00 [DEBUG] (27) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.248872ms elapsed_secs=0.002248872
08:31:00 [DEBUG] (37) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=334.422µs elapsed_secs=0.000334422
08:31:00 [DEBUG] (37) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.486µs elapsed_secs=4.9486e-5
08:31:00 [DEBUG] (26) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.796478ms elapsed_secs=0.002796478
08:31:00 [DEBUG] (33) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.163213ms elapsed_secs=0.003163213
08:31:00 [DEBUG] (31) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.189659ms elapsed_secs=0.003189659
08:31:00 [DEBUG] (35) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.405548ms elapsed_secs=0.002405548
08:31:00 [DEBUG] (36) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.491301ms elapsed_secs=0.002491301
08:31:00 [DEBUG] (28) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.157813ms elapsed_secs=0.002157813
08:31:00 [DEBUG] (32) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.180129ms elapsed_secs=0.002180129
08:31:00 [DEBUG] (30) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.142148ms elapsed_secs=0.002142148
08:31:00 [DEBUG] (37) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.213029ms elapsed_secs=0.002213029
08:31:00 [DEBUG] (34) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.123241ms elapsed_secs=0.076123241
08:31:00 [DEBUG] (27) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.247592ms elapsed_secs=0.075247592
08:31:00 [DEBUG] (29) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.666806ms elapsed_secs=0.076666806
08:31:00 [DEBUG] (26) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.165127ms elapsed_secs=0.075165127
08:31:00 [DEBUG] (5) actix_web::types::json: Failed to deserialize Json from payload. Request path: /projects
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
08:31:00 [DEBUG] (33) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.278272ms elapsed_secs=0.075278272
08:31:00 [DEBUG] (31) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.137858ms elapsed_secs=0.075137858
08:31:00 [DEBUG] (27) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=304.343µs elapsed_secs=0.000304343
08:31:00 [DEBUG] (26) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=63.175µs elapsed_secs=6.3175e-5
08:31:00 [ERROR] Error: BadRequest("[ProjectNameEmpty] Project name cannot be empty: (Name = )")
08:31:00 [DEBUG] (11) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(0), name: "TestProject0" })
08:31:00 [DEBUG] (33) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=183.395µs elapsed_secs=0.000183395
08:31:00 [DEBUG] (11) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "d3e23c8d-996b-4df1-a731-9224425a213c", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (13) menahel::repository::project_repo: Got project by id: None
08:31:00 [ERROR] Error: InternalServerError("[ProjectCreateFailed] Failed to create project due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: projects.name)")
08:31:00 [DEBUG] (36) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.321478ms elapsed_secs=0.075321478
08:31:00 [ERROR] Error: NotFound("[ProjectGetByIdNotFound] Project ID not found: (ID = 100)")
08:31:00 [DEBUG] (30) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.74359ms elapsed_secs=0.07574359
08:31:00 [DEBUG] (28) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.01135ms elapsed_secs=0.07601135
08:31:00 [DEBUG] (9) actix_web::types::query: Failed during Query extractor deserialization. Request path: "/projects"
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerInvalidQuery] Invalid query: (ActixWebError: Query deserialize error: invalid digit found in string)")
08:31:00 [DEBUG] (29) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=4.744654ms elapsed_secs=0.004744654
08:31:00 [DEBUG] (37) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.699504ms elapsed_secs=0.077699504
08:31:00 [DEBUG] (35) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=79.321962ms elapsed_secs=0.079321962
08:31:00 [INFO] Created project: Project { id: Some(10), name: "TestProject10" }
08:31:00 [DEBUG] (10) menahel::handlers::project: No target specified. using default target: all
08:31:00 [DEBUG] (10) menahel::handlers::project: Getting all projects
08:31:00 [DEBUG] (29) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=676.027µs elapsed_secs=0.000676027
08:31:00 [DEBUG] (32) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=79.980374ms elapsed_secs=0.079980374
08:31:00 [DEBUG] (37) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=1 rows_returned=10 elapsed=548.026µs elapsed_secs=0.000548026
08:31:00 [DEBUG] (2) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(10), name: "TestProject10" })
08:31:00 [DEBUG] (2) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(10), name: "TestProject10" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "9845f8c2-4af7-4856-8379-25729a093cd6", api_version: "0.1.0" }) }
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsNoIdSpecified] No id specified: ()")
08:31:00 [DEBUG] (10) menahel::repository::project_repo: Got all projects: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }, Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }, Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }]
08:31:00 [DEBUG] (10) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }, Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }, Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }], count: 10, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "0cf86ac8-ace5-4e05-bd07-4be15f32248c", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (7) actix_web::types::path: Failed during Path extractor deserialization. Request path: "/projects/abc"
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerInvalidPath] Invalid path: (ActixWebError: can not parse \"abc\" to a i64)")
08:31:00 [DEBUG] (36) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=116.738µs elapsed_secs=0.000116738
08:31:00 [ERROR] Error: BadRequest("[ProjectDeleteFailedByIdNotFound] Failed to delete project becouse project does not exist: (ID = 100)")
08:31:00 [DEBUG] (35) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=3.852072ms elapsed_secs=0.003852072
08:31:00 [DEBUG] (39) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.855553ms elapsed_secs=0.011855553
08:31:00 [DEBUG] (46) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.742734ms elapsed_secs=0.009742734
08:31:00 [INFO] Deleted project: ID = 9
08:31:00 [DEBUG] (60) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.678µs elapsed_secs=6.1678e-5
08:31:00 [DEBUG] (45) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.568226ms elapsed_secs=0.011568226
08:31:00 [DEBUG] (47) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.200986ms elapsed_secs=0.011200986
08:31:00 [DEBUG] (43) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.359761ms elapsed_secs=0.012359761
08:31:00 [DEBUG] (61) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.749µs elapsed_secs=6.5749e-5
08:31:00 [DEBUG] (49) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.028824ms elapsed_secs=0.011028824
08:31:00 [DEBUG] (66) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=111.302µs elapsed_secs=0.000111302
08:31:00 [DEBUG] (65) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=92.844µs elapsed_secs=9.2844e-5
08:31:00 [DEBUG] (64) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=267.758µs elapsed_secs=0.000267758
08:31:00 [DEBUG] (67) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=100.52µs elapsed_secs=0.00010052
08:31:00 [DEBUG] (52) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.279366ms elapsed_secs=0.013279366
08:31:00 [DEBUG] (57) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=21.004857ms elapsed_secs=0.021004857
08:31:00 [DEBUG] (59) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=20.729038ms elapsed_secs=0.020729038
08:31:00 [DEBUG] (54) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=21.508608ms elapsed_secs=0.021508608
08:31:00 [DEBUG] (56) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=22.286186ms elapsed_secs=0.022286186
08:31:00 [DEBUG] (68) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.808µs elapsed_secs=6.5808e-5
08:31:00 [DEBUG] (69) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.956µs elapsed_secs=7.5956e-5
08:31:00 [DEBUG] (70) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.205µs elapsed_secs=6.8205e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=98.792µs elapsed_secs=9.8792e-5
08:31:00 [DEBUG] (71) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.299µs elapsed_secs=8.5299e-5
08:31:00 [DEBUG] (60) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=60.347872ms elapsed_secs=0.060347872
08:31:00 [DEBUG] (61) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=59.91594ms elapsed_secs=0.05991594
08:31:00 [DEBUG] (63) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=58.805574ms elapsed_secs=0.058805574
08:31:00 [DEBUG] (60) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=162.759µs elapsed_secs=0.000162759
08:31:00 [DEBUG] (61) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=131.41µs elapsed_secs=0.00013141
08:31:00 [DEBUG] (60) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=97.857µs elapsed_secs=9.7857e-5
08:31:00 [DEBUG] (61) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.44µs elapsed_secs=6.944e-5
08:31:00 [DEBUG] (73) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=121.034µs elapsed_secs=0.000121034
08:31:00 [DEBUG] (60) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=253.357µs elapsed_secs=0.000253357
08:31:00 [DEBUG] (66) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=59.623003ms elapsed_secs=0.059623003
08:31:00 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=421.443µs elapsed_secs=0.000421443
08:31:00 [DEBUG] (60) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=166.221µs elapsed_secs=0.000166221
08:31:00 [DEBUG] (65) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=61.079355ms elapsed_secs=0.061079355
08:31:00 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=326.186µs elapsed_secs=0.000326186
08:31:00 [DEBUG] (64) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=61.204121ms elapsed_secs=0.061204121
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=133.642µs elapsed_secs=0.000133642
08:31:00 [DEBUG] (67) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=60.513285ms elapsed_secs=0.060513285
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=72.021µs elapsed_secs=7.2021e-5
08:31:00 [DEBUG] (64) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=149.004µs elapsed_secs=0.000149004
08:31:00 [DEBUG] (65) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=167.082µs elapsed_secs=0.000167082
08:31:00 [DEBUG] (67) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.916µs elapsed_secs=7.7916e-5
08:31:00 [DEBUG] (66) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=268.921µs elapsed_secs=0.000268921
08:31:00 [DEBUG] (67) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.873µs elapsed_secs=7.6873e-5
08:31:00 [DEBUG] (66) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.583µs elapsed_secs=6.0583e-5
08:31:00 [DEBUG] (64) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.841µs elapsed_secs=6.9841e-5
08:31:00 [DEBUG] (65) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=220.767µs elapsed_secs=0.000220767
08:31:00 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=476.949µs elapsed_secs=0.000476949
08:31:00 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=698.87µs elapsed_secs=0.00069887
08:31:00 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.527µs elapsed_secs=0.000133527
08:31:00 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=592.383µs elapsed_secs=0.000592383
08:31:00 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.735µs elapsed_secs=7.4735e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=47.572324ms elapsed_secs=0.047572324
08:31:00 [DEBUG] (72) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=27.324386ms elapsed_secs=0.027324386
08:31:00 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.261µs elapsed_secs=6.7261e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=55µs elapsed_secs=5.5e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=144.384µs elapsed_secs=0.000144384
08:31:00 [DEBUG] (72) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=73.257µs elapsed_secs=7.3257e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.639µs elapsed_secs=5.8639e-5
08:31:00 [DEBUG] (69) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=33.539496ms elapsed_secs=0.033539496
08:31:00 [DEBUG] (71) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=27.629417ms elapsed_secs=0.027629417
08:31:00 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=289.088µs elapsed_secs=0.000289088
08:31:00 [DEBUG] (69) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=98.231µs elapsed_secs=9.8231e-5
08:31:00 [DEBUG] (70) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=33.428987ms elapsed_secs=0.033428987
08:31:00 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.036µs elapsed_secs=6.4036e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=268.257µs elapsed_secs=0.000268257
08:31:00 [DEBUG] (71) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=94.316µs elapsed_secs=9.4316e-5
08:31:00 [DEBUG] (69) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.171µs elapsed_secs=6.2171e-5
08:31:00 [DEBUG] (70) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=59.974µs elapsed_secs=5.9974e-5
08:31:00 [DEBUG] (71) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=86.228µs elapsed_secs=8.6228e-5
08:31:00 [DEBUG] (70) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=92.126µs elapsed_secs=9.2126e-5
08:31:00 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=247.791µs elapsed_secs=0.000247791
08:31:00 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=157.133µs elapsed_secs=0.000157133
08:31:00 [DEBUG] (60) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.077794ms elapsed_secs=0.003077794
08:31:00 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=43.76µs elapsed_secs=4.376e-5
08:31:00 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.363968ms elapsed_secs=0.003363968
08:31:00 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=170.628µs elapsed_secs=0.000170628
08:31:00 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.555µs elapsed_secs=6.6555e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.377µs elapsed_secs=6.4377e-5
08:31:00 [DEBUG] (60) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=183.149µs elapsed_secs=0.000183149
08:31:00 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.396µs elapsed_secs=6.5396e-5
08:31:00 [DEBUG] (66) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.03371ms elapsed_secs=0.00303371
08:31:00 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=318.513µs elapsed_secs=0.000318513
08:31:00 [DEBUG] (73) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.919641ms elapsed_secs=0.009919641
08:31:00 [DEBUG] (60) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.895µs elapsed_secs=0.000115895
08:31:00 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.393µs elapsed_secs=0.000136393
08:31:00 [DEBUG] (73) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=128.297µs elapsed_secs=0.000128297
08:31:00 [DEBUG] (66) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=305.678µs elapsed_secs=0.000305678
08:31:00 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.576191ms elapsed_secs=0.002576191
08:31:00 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.633367ms elapsed_secs=0.002633367
08:31:00 [DEBUG] (66) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.56µs elapsed_secs=8.856e-5
08:31:00 [DEBUG] (73) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=109.774µs elapsed_secs=0.000109774
08:31:00 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=384.354µs elapsed_secs=0.000384354
08:31:00 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=250.048µs elapsed_secs=0.000250048
08:31:00 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.454801ms elapsed_secs=0.003454801
08:31:00 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.046599ms elapsed_secs=0.001046599
08:31:00 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.002µs elapsed_secs=7.8002e-5
08:31:00 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.769µs elapsed_secs=0.000189769
08:31:00 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.09µs elapsed_secs=8.809e-5
08:31:00 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=249.67µs elapsed_secs=0.00024967
08:31:00 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.544µs elapsed_secs=9.2544e-5
08:31:00 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.942855ms elapsed_secs=0.003942855
08:31:00 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.7275ms elapsed_secs=0.0037275
08:31:00 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=196.893µs elapsed_secs=0.000196893
08:31:00 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=276.016µs elapsed_secs=0.000276016
08:31:00 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.027µs elapsed_secs=6.0027e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.257µs elapsed_secs=5.2257e-5
08:31:00 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.132562ms elapsed_secs=0.003132562
08:31:00 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.448872ms elapsed_secs=0.003448872
08:31:00 [DEBUG] (68) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.455873ms elapsed_secs=0.003455873
08:31:00 [DEBUG] (68) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=297.306µs elapsed_secs=0.000297306
08:31:00 [DEBUG] (68) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.248µs elapsed_secs=0.000115248
08:31:00 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=660.248µs elapsed_secs=0.000660248
08:31:00 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.362µs elapsed_secs=0.000127362
08:31:00 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=399.947µs elapsed_secs=0.000399947
08:31:00 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.408324ms elapsed_secs=0.009408324
08:31:00 [DEBUG] (60) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.413073ms elapsed_secs=0.009413073
08:31:00 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.555861ms elapsed_secs=0.009555861
08:31:00 [DEBUG] (60) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=318.085µs elapsed_secs=0.000318085
08:31:00 [DEBUG] (66) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.008938ms elapsed_secs=0.010008938
08:31:00 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=381.113µs elapsed_secs=0.000381113
08:31:00 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=201.166µs elapsed_secs=0.000201166
08:31:00 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=142.437µs elapsed_secs=0.000142437
08:31:00 [DEBUG] (60) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.627µs elapsed_secs=6.5627e-5
08:31:00 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.326µs elapsed_secs=0.000177326
08:31:00 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.506085ms elapsed_secs=0.003506085
08:31:00 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.157662ms elapsed_secs=0.004157662
08:31:00 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.986738ms elapsed_secs=0.003986738
08:31:00 [DEBUG] (66) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=183.238µs elapsed_secs=0.000183238
08:31:00 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.27µs elapsed_secs=5.627e-5
08:31:00 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.879007ms elapsed_secs=0.002879007
08:31:00 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=287.021µs elapsed_secs=0.000287021
08:31:00 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=211.905µs elapsed_secs=0.000211905
08:31:00 [DEBUG] (66) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=213.677µs elapsed_secs=0.000213677
08:31:00 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=263.58µs elapsed_secs=0.00026358
08:31:00 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.579µs elapsed_secs=9.8579e-5
08:31:00 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=183.61µs elapsed_secs=0.00018361
08:31:00 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.487µs elapsed_secs=5.0487e-5
08:31:00 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.55µs elapsed_secs=8.055e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.227448ms elapsed_secs=0.004227448
08:31:00 [DEBUG] (68) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.245122ms elapsed_secs=0.003245122
08:31:00 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.719µs elapsed_secs=9.5719e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=191.78µs elapsed_secs=0.00019178
08:31:00 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=316.726µs elapsed_secs=0.000316726
08:31:00 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.241µs elapsed_secs=5.8241e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.692µs elapsed_secs=9.9692e-5
08:31:00 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.373844ms elapsed_secs=0.003373844
08:31:00 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=156.353µs elapsed_secs=0.000156353
08:31:00 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.647µs elapsed_secs=6.5647e-5
08:31:00 [DEBUG] (60) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.259017ms elapsed_secs=0.003259017
08:31:00 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.248012ms elapsed_secs=0.003248012
08:31:00 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.184644ms elapsed_secs=0.003184644
08:31:00 [DEBUG] (60) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=177.876µs elapsed_secs=0.000177876
08:31:00 [DEBUG] (60) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.854µs elapsed_secs=0.000116854
08:31:00 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=223.655µs elapsed_secs=0.000223655
08:31:00 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=317.263µs elapsed_secs=0.000317263
08:31:00 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.264µs elapsed_secs=5.1264e-5
08:31:00 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.266212ms elapsed_secs=0.003266212
08:31:00 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=40.15µs elapsed_secs=4.015e-5
08:31:00 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.197953ms elapsed_secs=0.003197953
08:31:00 [DEBUG] (66) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.213285ms elapsed_secs=0.003213285
08:31:00 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=153.875µs elapsed_secs=0.000153875
08:31:00 [DEBUG] (66) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=139.482µs elapsed_secs=0.000139482
08:31:00 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.409µs elapsed_secs=0.000112409
08:31:00 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=210.784µs elapsed_secs=0.000210784
08:31:00 [DEBUG] (66) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.541µs elapsed_secs=5.5541e-5
08:31:00 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.393µs elapsed_secs=5.3393e-5
08:31:00 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.731324ms elapsed_secs=0.002731324
08:31:00 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.666389ms elapsed_secs=0.002666389
08:31:00 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.744232ms elapsed_secs=0.002744232
08:31:00 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=152.759µs elapsed_secs=0.000152759
08:31:00 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=237.969µs elapsed_secs=0.000237969
08:31:00 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=260.722µs elapsed_secs=0.000260722
08:31:00 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.729µs elapsed_secs=4.8729e-5
08:31:00 [DEBUG] (68) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.462848ms elapsed_secs=0.002462848
08:31:00 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.547142ms elapsed_secs=0.002547142
08:31:00 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.432066ms elapsed_secs=0.002432066
08:31:00 [DEBUG] (68) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=102.424µs elapsed_secs=0.000102424
08:31:00 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.674µs elapsed_secs=5.0674e-5
08:31:00 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.317µs elapsed_secs=7.9317e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=111.376µs elapsed_secs=0.000111376
08:31:00 [DEBUG] (68) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.968µs elapsed_secs=6.0968e-5
08:31:00 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=152.524µs elapsed_secs=0.000152524
08:31:00 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.669µs elapsed_secs=8.2669e-5
08:31:00 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.527µs elapsed_secs=5.5527e-5
08:31:00 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.551914ms elapsed_secs=0.002551914
08:31:00 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.589401ms elapsed_secs=0.002589401
08:31:00 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.553126ms elapsed_secs=0.002553126
08:31:00 [DEBUG] (60) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.615544ms elapsed_secs=0.002615544
08:31:00 [DEBUG] (61) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=284.535µs elapsed_secs=0.000284535
08:31:00 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=374.179µs elapsed_secs=0.000374179
08:31:00 [DEBUG] (61) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.28µs elapsed_secs=8.128e-5
08:31:00 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.815µs elapsed_secs=4.5815e-5
08:31:00 [DEBUG] (65) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=330.241µs elapsed_secs=0.000330241
08:31:00 [DEBUG] (60) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=235.285µs elapsed_secs=0.000235285
08:31:00 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.686969ms elapsed_secs=0.002686969
08:31:00 [DEBUG] (60) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.827µs elapsed_secs=5.4827e-5
08:31:00 [DEBUG] (65) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.589µs elapsed_secs=9.2589e-5
08:31:00 [DEBUG] (66) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.293846ms elapsed_secs=0.002293846
08:31:00 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=203.551µs elapsed_secs=0.000203551
08:31:00 [DEBUG] (66) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=88.495µs elapsed_secs=8.8495e-5
08:31:00 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.61532ms elapsed_secs=0.00261532
08:31:00 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.82µs elapsed_secs=9.182e-5
08:31:00 [DEBUG] (66) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.729µs elapsed_secs=5.0729e-5
08:31:00 [DEBUG] (67) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=110.684µs elapsed_secs=0.000110684
08:31:00 [DEBUG] (67) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.974µs elapsed_secs=5.2974e-5
08:31:00 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.482664ms elapsed_secs=0.002482664
08:31:00 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.7645ms elapsed_secs=0.0017645
08:31:00 [DEBUG] (68) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.491022ms elapsed_secs=0.002491022
08:31:00 [DEBUG] (71) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=155.375µs elapsed_secs=0.000155375
08:31:00 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.503577ms elapsed_secs=0.002503577
08:31:00 [DEBUG] (64) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=201.323µs elapsed_secs=0.000201323
08:31:00 [DEBUG] (71) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=314.975µs elapsed_secs=0.000314975
08:31:00 [DEBUG] (64) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.594µs elapsed_secs=5.8594e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.473307ms elapsed_secs=0.002473307
08:31:00 [DEBUG] (68) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=442.936µs elapsed_secs=0.000442936
08:31:00 [DEBUG] (70) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=339.05µs elapsed_secs=0.00033905
08:31:00 [DEBUG] (68) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.243µs elapsed_secs=9.3243e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=106.531µs elapsed_secs=0.000106531
08:31:00 [DEBUG] (70) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.919µs elapsed_secs=5.4919e-5
08:31:00 [DEBUG] (72) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.264µs elapsed_secs=4.7264e-5
08:31:00 [DEBUG] (61) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.622432ms elapsed_secs=0.002622432
08:31:00 [DEBUG] (60) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.491011ms elapsed_secs=0.002491011
08:31:00 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.620413ms elapsed_secs=0.002620413
08:31:00 [DEBUG] (65) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.642293ms elapsed_secs=0.002642293
08:31:00 [DEBUG] (69) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=206.159µs elapsed_secs=0.000206159
08:31:00 [DEBUG] (69) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.771µs elapsed_secs=4.9771e-5
08:31:00 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.881879ms elapsed_secs=0.002881879
08:31:00 [DEBUG] (66) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.903975ms elapsed_secs=0.002903975
08:31:00 [DEBUG] (73) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=114.467µs elapsed_secs=0.000114467
08:31:00 [DEBUG] (73) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.363µs elapsed_secs=4.6363e-5
08:31:00 [DEBUG] (67) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.602142ms elapsed_secs=0.002602142
08:31:00 [DEBUG] (68) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.128878ms elapsed_secs=0.002128878
08:31:00 [DEBUG] (64) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.196027ms elapsed_secs=0.002196027
08:31:00 [DEBUG] (71) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.241261ms elapsed_secs=0.002241261
08:31:00 [DEBUG] (70) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.255587ms elapsed_secs=0.002255587
08:31:00 [DEBUG] (72) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.364278ms elapsed_secs=0.002364278
08:31:00 [DEBUG] (69) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.529658ms elapsed_secs=0.002529658
08:31:00 [DEBUG] (73) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.29056ms elapsed_secs=0.00229056
08:31:00 [DEBUG] (65) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=72.756033ms elapsed_secs=0.072756033
08:31:00 [DEBUG] (60) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.088226ms elapsed_secs=0.073088226
08:31:00 [DEBUG] (65) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=75.669µs elapsed_secs=7.5669e-5
08:31:00 [DEBUG] (41) menahel::repository::project_repo: Got project by name: None
08:31:00 [DEBUG] (60) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=67.947µs elapsed_secs=6.7947e-5
08:31:00 [ERROR] Error: NotFound("[ProjectGetByNameNotFound] Project name not found: (Name = NotExists)")
08:31:00 [DEBUG] (38) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(0), name: "TestProject0" })
08:31:00 [DEBUG] (38) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "33c32032-615e-4542-9336-14db410e5b5f", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (66) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=74.292474ms elapsed_secs=0.074292474
08:31:00 [DEBUG] (61) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.2628ms elapsed_secs=0.0762628
08:31:00 [DEBUG] (42) menahel::handlers::project: No target specified. using default target: all
08:31:00 [DEBUG] (42) menahel::handlers::project: Getting projects with pagination: page: Some(1), page_size: Some(4)
08:31:00 [DEBUG] (44) menahel::handlers::project: No target specified. using default target: all
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: None, page_size: Some(10))")
08:31:00 [DEBUG] (71) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.404746ms elapsed_secs=0.073404746
08:31:00 [DEBUG] (67) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=74.94364ms elapsed_secs=0.07494364
08:31:00 [DEBUG] (64) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.934432ms elapsed_secs=0.073934432
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=354.784µs elapsed_secs=0.000354784
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsNoNameSpecified] No name specified: ()")
08:31:00 [DEBUG] (68) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.109608ms elapsed_secs=0.075109608
08:31:00 [DEBUG] (48) menahel::handlers::project: No target specified. using default target: all
08:31:00 [DEBUG] (72) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.864468ms elapsed_secs=0.073864468
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Got projects count: 10
08:31:00 [DEBUG] (70) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=74.363097ms elapsed_secs=0.074363097
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerGetProjectsInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: Some(1), page_size: Some(1000))")
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Get users with pagination: offset: 0, limit: 4
08:31:00 [DEBUG] (71) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=181.688µs elapsed_secs=0.000181688
08:31:00 [INFO] Updated project: None
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=65.056µs elapsed_secs=6.5056e-5
08:31:00 [ERROR] Error: NotFound("[ProjectUpdateFailed] Failed to update project due to database operation failure: (ID = Some(100))")
08:31:00 [DEBUG] (69) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=74.529893ms elapsed_secs=0.074529893
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Got projects with pagination: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }]
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerPathAndBodyIdMismatch] Path and body id mismatch: (path_id: 0, body_id: Some(1))")
08:31:00 [DEBUG] (42) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject0" }, Project { id: Some(1), name: "TestProject1" }, Project { id: Some(2), name: "TestProject2" }, Project { id: Some(3), name: "TestProject3" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "33f2640e-d295-46a6-8d02-8e418f0b8094", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (42) menahel::handlers::project: No target specified. using default target: all
08:31:00 [DEBUG] (42) menahel::handlers::project: Getting projects with pagination: page: Some(2), page_size: Some(4)
08:31:00 [DEBUG] (70) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=407.649µs elapsed_secs=0.000407649
08:31:00 [ERROR] Error: InternalServerError("[ProjectUpdateFailed] Failed to update project due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: projects.name)")
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=20.307µs elapsed_secs=2.0307e-5
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Got projects count: 10
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Get users with pagination: offset: 4, limit: 4
08:31:00 [ERROR] Error: BadRequest("[ProjectNameTooLong] Project name cannot be longer than 128 characters: (Name = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)")
08:31:00 [DEBUG] (73) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.595861ms elapsed_secs=0.075595861
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=58.262µs elapsed_secs=5.8262e-5
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Got projects with pagination: [Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }]
08:31:00 [DEBUG] (42) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(4), name: "TestProject4" }, Project { id: Some(5), name: "TestProject5" }, Project { id: Some(6), name: "TestProject6" }, Project { id: Some(7), name: "TestProject7" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 2, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "f5ece583-0344-43fc-9883-41bcefc3f928", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (42) menahel::handlers::project: No target specified. using default target: all
08:31:00 [DEBUG] (42) menahel::handlers::project: Getting projects with pagination: page: Some(3), page_size: Some(4)
08:31:00 [DEBUG] (68) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=4.258415ms elapsed_secs=0.004258415
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=25.2µs elapsed_secs=2.52e-5
08:31:00 [DEBUG] (62) actix_web::types::path: Failed during Path extractor deserialization. Request path: "/projects/abc"
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Got projects count: 10
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Get users with pagination: offset: 8, limit: 4
08:31:00 [INFO] Updated project: Some(Project { id: Some(0), name: "TestProject11" })
08:31:00 [DEBUG] (66) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=2 elapsed=61.523µs elapsed_secs=6.1523e-5
08:31:00 [DEBUG] (62) actix_web::types::json: Failed to deserialize Json from payload. Request path: /projects/abc
08:31:00 [DEBUG] (42) menahel::repository::project_repo: Got projects with pagination: [Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }]
08:31:00 [ERROR] Error: BadRequest("[ProjectHandlerInvalidPath] Invalid path: (ActixWebError: can not parse \"abc\" to a i64)")
08:31:00 [DEBUG] (42) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(8), name: "TestProject8" }, Project { id: Some(9), name: "TestProject9" }], count: 2, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 3, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "af5aac64-0301-4a3b-a571-9983b44a9a0e", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (83) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.932105ms elapsed_secs=0.009932105
08:31:00 [DEBUG] (68) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=1.111769ms elapsed_secs=0.001111769
08:31:00 [DEBUG] (50) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(0), name: "TestProject11" })
08:31:00 [DEBUG] (50) menahel::handlers::project: Response: ProjectResponse { results: [Project { id: Some(0), name: "TestProject11" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "1256cf10-3bda-4580-9bc6-f52901a98035", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (100) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.372µs elapsed_secs=7.1372e-5
08:31:00 [DEBUG] (79) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.210713ms elapsed_secs=0.014210713
08:31:00 [DEBUG] (81) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.313741ms elapsed_secs=0.014313741
08:31:00 [DEBUG] (104) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.512µs elapsed_secs=6.2512e-5
08:31:00 [DEBUG] (103) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=125.782µs elapsed_secs=0.000125782
08:31:00 [DEBUG] (85) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.047496ms elapsed_secs=0.013047496
08:31:00 [DEBUG] (87) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.630534ms elapsed_secs=0.011630534
08:31:00 [DEBUG] (89) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.421357ms elapsed_secs=0.011421357
08:31:00 [DEBUG] (106) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=162.802µs elapsed_secs=0.000162802
08:31:00 [DEBUG] (107) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.86µs elapsed_secs=4.686e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=212.382µs elapsed_secs=0.000212382
08:31:00 [DEBUG] (91) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=16.606412ms elapsed_secs=0.016606412
08:31:00 [DEBUG] (93) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.084804ms elapsed_secs=0.015084804
08:31:00 [DEBUG] (109) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.595µs elapsed_secs=6.9595e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.723µs elapsed_secs=4.2723e-5
08:31:00 [DEBUG] (98) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.864067ms elapsed_secs=0.012864067
08:31:00 [DEBUG] (95) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=16.964872ms elapsed_secs=0.016964872
08:31:00 [DEBUG] (111) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.894µs elapsed_secs=7.3894e-5
08:31:00 [DEBUG] (110) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=111.138µs elapsed_secs=0.000111138
08:31:00 [DEBUG] (100) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.696604ms elapsed_secs=0.012696604
08:31:00 [DEBUG] (99) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.501315ms elapsed_secs=0.014501315
08:31:00 [DEBUG] (102) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.171959ms elapsed_secs=0.013171959
08:31:00 [DEBUG] (100) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=143.072µs elapsed_secs=0.000143072
08:31:00 [DEBUG] (100) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=146.182µs elapsed_secs=0.000146182
08:31:00 [DEBUG] (112) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.014µs elapsed_secs=4.3014e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=250.057µs elapsed_secs=0.000250057
08:31:00 [DEBUG] (113) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.914µs elapsed_secs=5.6914e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.089µs elapsed_secs=6.4089e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.198213ms elapsed_secs=0.010198213
08:31:00 [DEBUG] (104) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.571903ms elapsed_secs=0.012571903
08:31:00 [DEBUG] (107) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.38339ms elapsed_secs=0.01038339
08:31:00 [DEBUG] (105) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=136.134µs elapsed_secs=0.000136134
08:31:00 [DEBUG] (104) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.885µs elapsed_secs=8.3885e-5
08:31:00 [DEBUG] (107) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.352µs elapsed_secs=7.9352e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.363µs elapsed_secs=9.0363e-5
08:31:00 [DEBUG] (104) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.087µs elapsed_secs=5.9087e-5
08:31:00 [DEBUG] (107) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.74µs elapsed_secs=5.874e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=195.694µs elapsed_secs=0.000195694
08:31:00 [DEBUG] (103) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.880826ms elapsed_secs=0.013880826
08:31:00 [DEBUG] (106) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.358126ms elapsed_secs=0.012358126
08:31:00 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=336.007µs elapsed_secs=0.000336007
08:31:00 [DEBUG] (103) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=140.565µs elapsed_secs=0.000140565
08:31:00 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.979µs elapsed_secs=0.000170979
08:31:00 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=866µs elapsed_secs=0.000866
08:31:00 [DEBUG] (106) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.555µs elapsed_secs=8.3555e-5
08:31:00 [DEBUG] (103) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=125.679µs elapsed_secs=0.000125679
08:31:00 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=207.496µs elapsed_secs=0.000207496
08:31:00 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.458µs elapsed_secs=0.000106458
08:31:00 [DEBUG] (106) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=88.457µs elapsed_secs=8.8457e-5
08:31:00 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=318.797µs elapsed_secs=0.000318797
08:31:00 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=238.994µs elapsed_secs=0.000238994
08:31:00 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.353µs elapsed_secs=8.6353e-5
08:31:00 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.952µs elapsed_secs=5.0952e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.983921ms elapsed_secs=0.003983921
08:31:00 [DEBUG] (109) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.720574ms elapsed_secs=0.011720574
08:31:00 [DEBUG] (108) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.551008ms elapsed_secs=0.011551008
08:31:00 [DEBUG] (109) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=85.871µs elapsed_secs=8.5871e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=151.457µs elapsed_secs=0.000151457
08:31:00 [DEBUG] (109) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.184µs elapsed_secs=6.2184e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.865µs elapsed_secs=5.9865e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=149.309µs elapsed_secs=0.000149309
08:31:00 [DEBUG] (113) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.760786ms elapsed_secs=0.008760786
08:31:00 [DEBUG] (110) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.482622ms elapsed_secs=0.010482622
08:31:00 [DEBUG] (108) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=227µs elapsed_secs=0.000227
08:31:00 [DEBUG] (112) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.015958ms elapsed_secs=0.009015958
08:31:00 [DEBUG] (111) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.656838ms elapsed_secs=0.010656838
08:31:00 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=737.388µs elapsed_secs=0.000737388
08:31:00 [DEBUG] (110) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=355.468µs elapsed_secs=0.000355468
08:31:00 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=426.314µs elapsed_secs=0.000426314
08:31:00 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.482µs elapsed_secs=5.6482e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=583.025µs elapsed_secs=0.000583025
08:31:00 [DEBUG] (112) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=373.713µs elapsed_secs=0.000373713
08:31:00 [DEBUG] (111) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=117.525µs elapsed_secs=0.000117525
08:31:00 [DEBUG] (113) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=88.75µs elapsed_secs=8.875e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.611µs elapsed_secs=6.0611e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.944155ms elapsed_secs=0.002944155
08:31:00 [DEBUG] (110) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=89.821µs elapsed_secs=8.9821e-5
08:31:00 [DEBUG] (112) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=91.602µs elapsed_secs=9.1602e-5
08:31:00 [DEBUG] (111) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.54µs elapsed_secs=9.054e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=173.917µs elapsed_secs=0.000173917
08:31:00 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=206.75µs elapsed_secs=0.00020675
08:31:00 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.110843ms elapsed_secs=0.003110843
08:31:00 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=667.417µs elapsed_secs=0.000667417
08:31:00 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.058µs elapsed_secs=9.5058e-5
08:31:00 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=127.876µs elapsed_secs=0.000127876
08:31:00 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=293.378µs elapsed_secs=0.000293378
08:31:00 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.212µs elapsed_secs=8.2212e-5
08:31:00 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=716.988µs elapsed_secs=0.000716988
08:31:00 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=853.94µs elapsed_secs=0.00085394
08:31:00 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.273242ms elapsed_secs=0.003273242
08:31:00 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.997947ms elapsed_secs=0.002997947
08:31:00 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.54µs elapsed_secs=6.354e-5
08:31:00 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.120188ms elapsed_secs=0.003120188
08:31:00 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=312.359µs elapsed_secs=0.000312359
08:31:00 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=148.748µs elapsed_secs=0.000148748
08:31:00 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=247.26µs elapsed_secs=0.00024726
08:31:00 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=405.912µs elapsed_secs=0.000405912
08:31:00 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.574µs elapsed_secs=0.000135574
08:31:00 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.208µs elapsed_secs=7.4208e-5
08:31:00 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=149.129µs elapsed_secs=0.000149129
08:31:00 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.604µs elapsed_secs=0.000130604
08:31:00 [DEBUG] (100) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.268441ms elapsed_secs=0.004268441
08:31:00 [DEBUG] (100) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=109.676µs elapsed_secs=0.000109676
08:31:00 [DEBUG] (100) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.337µs elapsed_secs=4.7337e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.348911ms elapsed_secs=0.003348911
08:31:00 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.468228ms elapsed_secs=0.003468228
08:31:00 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=111.123µs elapsed_secs=0.000111123
08:31:00 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.993µs elapsed_secs=0.000109993
08:31:00 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=187.159µs elapsed_secs=0.000187159
08:31:00 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.357µs elapsed_secs=4.8357e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.573585ms elapsed_secs=0.002573585
08:31:00 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.045993ms elapsed_secs=0.002045993
08:31:00 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=152.966µs elapsed_secs=0.000152966
08:31:00 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=126.782µs elapsed_secs=0.000126782
08:31:00 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.938µs elapsed_secs=5.2938e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.519µs elapsed_secs=4.5519e-5
08:31:00 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.904512ms elapsed_secs=0.002904512
08:31:00 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.915358ms elapsed_secs=0.002915358
08:31:00 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.908294ms elapsed_secs=0.002908294
08:31:00 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.910426ms elapsed_secs=0.002910426
08:31:00 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.933596ms elapsed_secs=0.002933596
08:31:00 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=373.649µs elapsed_secs=0.000373649
08:31:00 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=344.683µs elapsed_secs=0.000344683
08:31:00 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=709.615µs elapsed_secs=0.000709615
08:31:00 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=422.286µs elapsed_secs=0.000422286
08:31:00 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=447.638µs elapsed_secs=0.000447638
08:31:00 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=202.471µs elapsed_secs=0.000202471
08:31:00 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.288µs elapsed_secs=0.000109288
08:31:00 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.025158ms elapsed_secs=0.003025158
08:31:00 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.46µs elapsed_secs=0.00012246
08:31:00 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.072006ms elapsed_secs=0.003072006
08:31:00 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=140.026µs elapsed_secs=0.000140026
08:31:00 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.357µs elapsed_secs=5.5357e-5
08:31:00 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=170.015µs elapsed_secs=0.000170015
08:31:00 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=152.309µs elapsed_secs=0.000152309
08:31:00 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.136µs elapsed_secs=5.7136e-5
08:31:00 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.746µs elapsed_secs=5.8746e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.749902ms elapsed_secs=0.002749902
08:31:00 [DEBUG] (100) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=206.111µs elapsed_secs=0.000206111
08:31:00 [DEBUG] (100) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.704µs elapsed_secs=0.000100704
08:31:00 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.827691ms elapsed_secs=0.002827691
08:31:00 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.842907ms elapsed_secs=0.002842907
08:31:00 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.913362ms elapsed_secs=0.002913362
08:31:00 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=305.762µs elapsed_secs=0.000305762
08:31:00 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=799.821µs elapsed_secs=0.000799821
08:31:00 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=704.624µs elapsed_secs=0.000704624
08:31:00 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.403µs elapsed_secs=6.0403e-5
08:31:00 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.322µs elapsed_secs=0.000182322
08:31:00 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.132µs elapsed_secs=6.2132e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.694039ms elapsed_secs=0.003694039
08:31:00 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=210.105µs elapsed_secs=0.000210105
08:31:00 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.498µs elapsed_secs=7.8498e-5
08:31:00 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.171224ms elapsed_secs=0.004171224
08:31:00 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.987192ms elapsed_secs=0.003987192
08:31:00 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.935325ms elapsed_secs=0.003935325
08:31:00 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.19732ms elapsed_secs=0.00419732
08:31:00 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.274254ms elapsed_secs=0.004274254
08:31:00 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=471.726µs elapsed_secs=0.000471726
08:31:00 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=557.77µs elapsed_secs=0.00055777
08:31:00 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.686µs elapsed_secs=0.000132686
08:31:00 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.7256ms elapsed_secs=0.0037256
08:31:00 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.683103ms elapsed_secs=0.003683103
08:31:00 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=196.125µs elapsed_secs=0.000196125
08:31:00 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=731.085µs elapsed_secs=0.000731085
08:31:00 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=663.84µs elapsed_secs=0.00066384
08:31:00 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.67µs elapsed_secs=6.067e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.086272ms elapsed_secs=0.003086272
08:31:00 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=148.79µs elapsed_secs=0.00014879
08:31:00 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=919.315µs elapsed_secs=0.000919315
08:31:00 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=151.275µs elapsed_secs=0.000151275
08:31:00 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.071µs elapsed_secs=7.0071e-5
08:31:00 [DEBUG] (100) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=90.021µs elapsed_secs=9.0021e-5
08:31:00 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.317µs elapsed_secs=5.2317e-5
08:31:00 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.156µs elapsed_secs=8.6156e-5
08:31:00 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=44.956µs elapsed_secs=4.4956e-5
08:31:00 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.558959ms elapsed_secs=0.002558959
08:31:00 [DEBUG] (100) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.428µs elapsed_secs=6.7428e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.538861ms elapsed_secs=0.002538861
08:31:00 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.615626ms elapsed_secs=0.002615626
08:31:00 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=164.04µs elapsed_secs=0.00016404
08:31:00 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=173.126µs elapsed_secs=0.000173126
08:31:00 [DEBUG] (105) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=196.971µs elapsed_secs=0.000196971
08:31:00 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.349µs elapsed_secs=5.8349e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=43.009µs elapsed_secs=4.3009e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.586755ms elapsed_secs=0.002586755
08:31:00 [DEBUG] (105) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.249µs elapsed_secs=8.1249e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=159.231µs elapsed_secs=0.000159231
08:31:00 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.096µs elapsed_secs=4.9096e-5
08:31:00 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.835777ms elapsed_secs=0.002835777
08:31:00 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.760825ms elapsed_secs=0.002760825
08:31:00 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=181.596µs elapsed_secs=0.000181596
08:31:00 [DEBUG] (107) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=282.629µs elapsed_secs=0.000282629
08:31:00 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.911µs elapsed_secs=5.0911e-5
08:31:00 [DEBUG] (107) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=40.758µs elapsed_secs=4.0758e-5
08:31:00 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.441749ms elapsed_secs=0.003441749
08:31:00 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=90.258µs elapsed_secs=9.0258e-5
08:31:00 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.719955ms elapsed_secs=0.002719955
08:31:00 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.728186ms elapsed_secs=0.002728186
08:31:00 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.68247ms elapsed_secs=0.00268247
08:31:00 [DEBUG] (100) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.717548ms elapsed_secs=0.002717548
08:31:00 [DEBUG] (104) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=191.216µs elapsed_secs=0.000191216
08:31:00 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.999µs elapsed_secs=5.4999e-5
08:31:00 [DEBUG] (103) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=104.842µs elapsed_secs=0.000104842
08:31:00 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.162295ms elapsed_secs=0.002162295
08:31:00 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=126.34µs elapsed_secs=0.00012634
08:31:00 [DEBUG] (104) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=40.478µs elapsed_secs=4.0478e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.569312ms elapsed_secs=0.002569312
08:31:00 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.478872ms elapsed_secs=0.002478872
08:31:00 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.534947ms elapsed_secs=0.002534947
08:31:00 [DEBUG] (103) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=178.638µs elapsed_secs=0.000178638
08:31:00 [DEBUG] (106) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=169.723µs elapsed_secs=0.000169723
08:31:00 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.969µs elapsed_secs=6.8969e-5
08:31:00 [DEBUG] (109) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=126.401µs elapsed_secs=0.000126401
08:31:00 [DEBUG] (108) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=235.176µs elapsed_secs=0.000235176
08:31:00 [DEBUG] (106) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=142.712µs elapsed_secs=0.000142712
08:31:00 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.177065ms elapsed_secs=0.003177065
08:31:00 [DEBUG] (109) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.93µs elapsed_secs=6.793e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.249µs elapsed_secs=6.2249e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=87.024µs elapsed_secs=8.7024e-5
08:31:00 [DEBUG] (113) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.857µs elapsed_secs=5.3857e-5
08:31:00 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.123505ms elapsed_secs=0.003123505
08:31:00 [DEBUG] (107) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.054997ms elapsed_secs=0.003054997
08:31:00 [DEBUG] (112) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=105.422µs elapsed_secs=0.000105422
08:31:00 [DEBUG] (112) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=43.967µs elapsed_secs=4.3967e-5
08:31:00 [DEBUG] (104) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.29633ms elapsed_secs=0.00229633
08:31:00 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.273738ms elapsed_secs=0.002273738
08:31:00 [DEBUG] (111) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=313.33µs elapsed_secs=0.00031333
08:31:00 [DEBUG] (111) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.72µs elapsed_secs=5.972e-5
08:31:00 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.306512ms elapsed_secs=0.002306512
08:31:00 [DEBUG] (113) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.350779ms elapsed_secs=0.002350779
08:31:00 [DEBUG] (108) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.324764ms elapsed_secs=0.002324764
08:31:00 [DEBUG] (103) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.29211ms elapsed_secs=0.00229211
08:31:00 [DEBUG] (109) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.366528ms elapsed_secs=0.002366528
08:31:00 [DEBUG] (106) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.419502ms elapsed_secs=0.002419502
08:31:00 [DEBUG] (110) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=172.666µs elapsed_secs=0.000172666
08:31:00 [DEBUG] (112) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.291538ms elapsed_secs=0.002291538
08:31:00 [DEBUG] (110) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=190.521µs elapsed_secs=0.000190521
08:31:00 [DEBUG] (111) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.956683ms elapsed_secs=0.002956683
08:31:00 [DEBUG] (110) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.574959ms elapsed_secs=0.002574959
08:31:00 [DEBUG] (100) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.436995ms elapsed_secs=0.081436995
08:31:00 [DEBUG] (100) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=61.377µs elapsed_secs=6.1377e-5
08:31:00 [DEBUG] (105) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.419691ms elapsed_secs=0.081419691
08:31:00 [DEBUG] (100) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=90.894µs elapsed_secs=9.0894e-5
08:31:00 [DEBUG] (82) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) })
08:31:00 [ERROR] Error: BadRequest("[TaskParentLevelInvalid] Parent task level is not one level higher: (Level = 1, Parent Level = 2)")
08:31:00 [ERROR] Error: BadRequest("[TaskProjectIdInvalid] Project ID must be greater than 0: (ID = -1)")
08:31:00 [DEBUG] (107) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=80.429993ms elapsed_secs=0.080429993
08:31:00 [DEBUG] (107) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=1 rows_returned=0 elapsed=99.229µs elapsed_secs=9.9229e-5
08:31:00 [ERROR] Error: BadRequest("[TaskProjectIdNotFound] Project not found.: (ID = 100)")
08:31:00 [DEBUG] (104) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.455815ms elapsed_secs=0.081455815
08:31:00 [DEBUG] (104) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=74.622µs elapsed_secs=7.4622e-5
08:31:00 [DEBUG] (104) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=298.394µs elapsed_secs=0.000298394
08:31:00 [DEBUG] (113) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.682609ms elapsed_secs=0.081682609
08:31:00 [DEBUG] (106) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=82.093548ms elapsed_secs=0.082093548
08:31:00 [DEBUG] (112) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.724715ms elapsed_secs=0.081724715
08:31:00 [DEBUG] (109) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=82.350612ms elapsed_secs=0.082350612
08:31:00 [DEBUG] (113) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n        \n" rows_affected=1 rows_returned=11 elapsed=386.708µs elapsed_secs=0.000386708
08:31:00 [DEBUG] (97) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "TestMajorTask0", description: Some("TestTask0Description"), status: 0, deadline: Some(1000), created_at: 1000, updated_at: Some(1000) }, Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(6), project_id: 0, parent_id: Some(2), level: 2, name: "TestCancelledTask6", description: Some("TestTask6Description"), status: 3, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(7), project_id: 0, parent_id: Some(2), level: 2, name: "TestDoneTask7", description: Some("TestTask7Description"), status: 4, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(8), project_id: 2, parent_id: Some(0), level: 0, name: "TestMajorTaskProject2", description: Some("TestTask8Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(9), project_id: 2, parent_id: Some(0), level: 1, name: "TestMinorTaskProject2", description: Some("TestTask9Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(10), project_id: 2, parent_id: Some(0), level: 2, name: "TestTrivialTaskProject2", description: Some("TestTask10Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }]
08:31:00 [DEBUG] (97) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "TestMajorTask0", description: Some("TestTask0Description"), status: 0, deadline: Some(1000), created_at: 1000, updated_at: Some(1000) }, Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(6), project_id: 0, parent_id: Some(2), level: 2, name: "TestCancelledTask6", description: Some("TestTask6Description"), status: 3, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(7), project_id: 0, parent_id: Some(2), level: 2, name: "TestDoneTask7", description: Some("TestTask7Description"), status: 4, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(8), project_id: 2, parent_id: Some(0), level: 0, name: "TestMajorTaskProject2", description: Some("TestTask8Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(9), project_id: 2, parent_id: Some(0), level: 1, name: "TestMinorTaskProject2", description: Some("TestTask9Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(10), project_id: 2, parent_id: Some(0), level: 2, name: "TestTrivialTaskProject2", description: Some("TestTask10Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }], count: 11, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "66f85e3d-8331-47ad-af4b-2440a9a7a50c", api_version: "0.1.0" }) }
08:31:00 [INFO] Created task: Task { id: Some(11), project_id: 0, parent_id: None, level: 0, name: "CREATE_Major_task", description: Some("CREATE_Major_task_description"), status: 0, deadline: None, created_at: 1749544260, updated_at: Some(1749544260) }
08:31:00 [DEBUG] (78) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(11), project_id: 0, parent_id: None, level: 0, name: "CREATE_Major_task", description: Some("CREATE_Major_task_description"), status: 0, deadline: None, created_at: 1749544260, updated_at: Some(1749544260) }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "b34e952f-c201-434e-b3db-370b5668aabf", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (109) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=69.248µs elapsed_secs=6.9248e-5
08:31:00 [DEBUG] (103) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=84.337853ms elapsed_secs=0.084337853
08:31:00 [DEBUG] (116) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.803659ms elapsed_secs=0.008803659
08:31:00 [DEBUG] (112) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 AND level = $2\n" rows_affected=1 rows_returned=6 elapsed=320.924µs elapsed_secs=0.000320924
08:31:00 [DEBUG] (108) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=85.821773ms elapsed_secs=0.085821773
08:31:00 [DEBUG] (106) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=223.94µs elapsed_secs=0.00022394
08:31:00 [DEBUG] (101) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(6), project_id: 0, parent_id: Some(2), level: 2, name: "TestCancelledTask6", description: Some("TestTask6Description"), status: 3, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(7), project_id: 0, parent_id: Some(2), level: 2, name: "TestDoneTask7", description: Some("TestTask7Description"), status: 4, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }]
08:31:00 [DEBUG] (80) actix_web::types::json: Failed to deserialize Json from payload. Request path: /tasks
08:31:00 [DEBUG] (109) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=349.075µs elapsed_secs=0.000349075
08:31:00 [DEBUG] (104) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=134.037µs elapsed_secs=0.000134037
08:31:00 [DEBUG] (122) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.027µs elapsed_secs=4.8027e-5
08:31:00 [DEBUG] (106) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=1 rows_returned=0 elapsed=371.122µs elapsed_secs=0.000371122
08:31:00 [DEBUG] (101) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(6), project_id: 0, parent_id: Some(2), level: 2, name: "TestCancelledTask6", description: Some("TestTask6Description"), status: 3, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(7), project_id: 0, parent_id: Some(2), level: 2, name: "TestDoneTask7", description: Some("TestTask7Description"), status: 4, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }], count: 6, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "c58df8af-0338-43a9-873b-c65d5e5f246d", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (119) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=7.055523ms elapsed_secs=0.007055523
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerInvalidJsonPost] Invalid JSON format in request body: (ActixWebError: Content type error)")
08:31:00 [DEBUG] (117) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.026657ms elapsed_secs=0.010026657
08:31:00 [DEBUG] (90) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) })
08:31:00 [DEBUG] (78) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(11), project_id: 0, parent_id: None, level: 0, name: "CREATE_Major_task", description: Some("CREATE_Major_task_description"), status: 0, deadline: None, created_at: 1749544260, updated_at: Some(1749544260) })
08:31:00 [DEBUG] (86) menahel::repository::task_repo: Get task by id with transaction: None
08:31:00 [DEBUG] (110) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=83.296605ms elapsed_secs=0.083296605
08:31:00 [DEBUG] (111) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=84.335309ms elapsed_secs=0.084335309
08:31:00 [DEBUG] (78) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(11), project_id: 0, parent_id: None, level: 0, name: "CREATE_Major_task", description: Some("CREATE_Major_task_description"), status: 0, deadline: None, created_at: 1749544260, updated_at: Some(1749544260) }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "1fbeaf57-d97a-433a-9490-add1fac698a0", api_version: "0.1.0" }) }
08:31:00 [ERROR] Error: NotFound("[TaskGetByIdNotFound] Task not found: (ID = 100)")
08:31:00 [DEBUG] (126) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.152µs elapsed_secs=8.4152e-5
08:31:00 [DEBUG] (108) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=3.474386ms elapsed_secs=0.003474386
08:31:00 [DEBUG] (109) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=1.02958ms elapsed_secs=0.00102958
08:31:00 [INFO] Deleted task: 10
08:31:00 [DEBUG] (125) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=305.589µs elapsed_secs=0.000305589
08:31:00 [DEBUG] (96) actix_web::types::path: Failed during Path extractor deserialization. Request path: "/tasks/abc"
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerInvalidPath] Invalid path: (ActixWebError: can not parse \"abc\" to a i64)")
08:31:00 [DEBUG] (111) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=372.823µs elapsed_secs=0.000372823
08:31:00 [ERROR] Error: BadRequest("[TaskDeleteFailedByIdNotFound] Failed to delete task becouse task does not exist: (ID = 100)")
08:31:00 [INFO] Created task: Task { id: Some(11), project_id: 0, parent_id: Some(1), level: 2, name: "CREATE_trivial_level_task_1", description: Some("CREATE_trivial_level_task_1_description"), status: 0, deadline: None, created_at: 1749544260, updated_at: Some(1749544260) }
08:31:00 [DEBUG] (90) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(11), project_id: 0, parent_id: Some(1), level: 2, name: "CREATE_trivial_level_task_1", description: Some("CREATE_trivial_level_task_1_description"), status: 0, deadline: None, created_at: 1749544260, updated_at: Some(1749544260) }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "e5ebc793-9108-45ab-866a-31530f754157", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (122) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.101961ms elapsed_secs=0.010101961
08:31:00 [DEBUG] (121) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.329496ms elapsed_secs=0.012329496
08:31:00 [DEBUG] (122) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=116.371µs elapsed_secs=0.000116371
08:31:00 [DEBUG] (122) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.714µs elapsed_secs=7.5714e-5
08:31:00 [DEBUG] (141) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=125.148µs elapsed_secs=0.000125148
08:31:00 [DEBUG] (122) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=551.923µs elapsed_secs=0.000551923
08:31:00 [DEBUG] (122) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.758µs elapsed_secs=0.000146758
08:31:00 [DEBUG] (124) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=16.233535ms elapsed_secs=0.016233535
08:31:00 [DEBUG] (142) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=55.27µs elapsed_secs=5.527e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.227225ms elapsed_secs=0.015227225
08:31:00 [DEBUG] (130) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.336863ms elapsed_secs=0.015336863
08:31:00 [DEBUG] (135) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.473928ms elapsed_secs=0.012473928
08:31:00 [DEBUG] (136) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.385339ms elapsed_secs=0.013385339
08:31:00 [DEBUG] (138) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.808087ms elapsed_secs=0.011808087
08:31:00 [DEBUG] (126) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=398.929µs elapsed_secs=0.000398929
08:31:00 [DEBUG] (126) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=87.171µs elapsed_secs=8.7171e-5
08:31:00 [DEBUG] (143) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.789µs elapsed_secs=5.3789e-5
08:31:00 [DEBUG] (125) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.562502ms elapsed_secs=0.016562502
08:31:00 [DEBUG] (145) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.863µs elapsed_secs=3.7863e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.455µs elapsed_secs=4.2455e-5
08:31:00 [DEBUG] (122) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.620696ms elapsed_secs=0.003620696
08:31:00 [DEBUG] (125) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=129.61µs elapsed_secs=0.00012961
08:31:00 [DEBUG] (134) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=15.643176ms elapsed_secs=0.015643176
08:31:00 [DEBUG] (131) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.318058ms elapsed_secs=0.014318058
08:31:00 [DEBUG] (146) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=278.405µs elapsed_secs=0.000278405
08:31:00 [DEBUG] (125) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=388.811µs elapsed_secs=0.000388811
08:31:00 [DEBUG] (126) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.315965ms elapsed_secs=0.001315965
08:31:00 [DEBUG] (122) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.168887ms elapsed_secs=0.001168887
08:31:00 [DEBUG] (140) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.270999ms elapsed_secs=0.014270999
08:31:00 [DEBUG] (126) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=506.715µs elapsed_secs=0.000506715
08:31:00 [DEBUG] (122) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=350.077µs elapsed_secs=0.000350077
08:31:00 [DEBUG] (148) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=87.669µs elapsed_secs=8.7669e-5
08:31:00 [DEBUG] (125) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.245456ms elapsed_secs=0.001245456
08:31:00 [DEBUG] (147) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=224.55µs elapsed_secs=0.00022455
08:31:00 [DEBUG] (149) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.49µs elapsed_secs=4.149e-5
08:31:00 [DEBUG] (125) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=253.899µs elapsed_secs=0.000253899
08:31:00 [DEBUG] (141) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.87547ms elapsed_secs=0.01487547
08:31:00 [DEBUG] (141) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=135.911µs elapsed_secs=0.000135911
08:31:00 [DEBUG] (141) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=81.244µs elapsed_secs=8.1244e-5
08:31:00 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=206.368µs elapsed_secs=0.000206368
08:31:00 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.359µs elapsed_secs=5.5359e-5
08:31:00 [DEBUG] (142) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.515996ms elapsed_secs=0.009515996
08:31:00 [DEBUG] (142) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.575µs elapsed_secs=7.2575e-5
08:31:00 [DEBUG] (142) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.532µs elapsed_secs=5.8532e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.25335ms elapsed_secs=0.00225335
08:31:00 [DEBUG] (122) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.286344ms elapsed_secs=0.002286344
08:31:00 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=132.252µs elapsed_secs=0.000132252
08:31:00 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=152.386µs elapsed_secs=0.000152386
08:31:00 [DEBUG] (126) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=262.061µs elapsed_secs=0.000262061
08:31:00 [DEBUG] (125) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.184342ms elapsed_secs=0.002184342
08:31:00 [DEBUG] (126) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.75µs elapsed_secs=7.275e-5
08:31:00 [DEBUG] (146) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.624699ms elapsed_secs=0.008624699
08:31:00 [DEBUG] (145) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.359423ms elapsed_secs=0.009359423
08:31:00 [DEBUG] (122) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=171.667µs elapsed_secs=0.000171667
08:31:00 [DEBUG] (143) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.553406ms elapsed_secs=0.009553406
08:31:00 [DEBUG] (144) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.376869ms elapsed_secs=0.009376869
08:31:00 [DEBUG] (125) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=155.897µs elapsed_secs=0.000155897
08:31:00 [DEBUG] (143) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=63.626µs elapsed_secs=6.3626e-5
08:31:00 [DEBUG] (145) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=57.011µs elapsed_secs=5.7011e-5
08:31:00 [DEBUG] (122) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.341µs elapsed_secs=4.8341e-5
08:31:00 [DEBUG] (146) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.949µs elapsed_secs=8.1949e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=56.521µs elapsed_secs=5.6521e-5
08:31:00 [DEBUG] (125) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.59µs elapsed_secs=6.259e-5
08:31:00 [DEBUG] (143) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=42.959µs elapsed_secs=4.2959e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.617934ms elapsed_secs=0.007617934
08:31:00 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.447459ms elapsed_secs=0.002447459
08:31:00 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=140.642µs elapsed_secs=0.000140642
08:31:00 [DEBUG] (148) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=69.049µs elapsed_secs=6.9049e-5
08:31:00 [DEBUG] (146) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.641µs elapsed_secs=7.8641e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=111.852µs elapsed_secs=0.000111852
08:31:00 [DEBUG] (145) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=112.591µs elapsed_secs=0.000112591
08:31:00 [DEBUG] (147) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.545412ms elapsed_secs=0.007545412
08:31:00 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.963µs elapsed_secs=0.000109963
08:31:00 [DEBUG] (149) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.132346ms elapsed_secs=0.008132346
08:31:00 [DEBUG] (147) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=131.872µs elapsed_secs=0.000131872
08:31:00 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=156.725µs elapsed_secs=0.000156725
08:31:00 [DEBUG] (144) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.886µs elapsed_secs=5.6886e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=441.247µs elapsed_secs=0.000441247
08:31:00 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=171.145µs elapsed_secs=0.000171145
08:31:00 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=867.472µs elapsed_secs=0.000867472
08:31:00 [DEBUG] (147) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=133.79µs elapsed_secs=0.00013379
08:31:00 [DEBUG] (149) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=448.409µs elapsed_secs=0.000448409
08:31:00 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.072µs elapsed_secs=9.0072e-5
08:31:00 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=854.651µs elapsed_secs=0.000854651
08:31:00 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.838µs elapsed_secs=0.000127838
08:31:00 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=410.448µs elapsed_secs=0.000410448
08:31:00 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=190.236µs elapsed_secs=0.000190236
08:31:00 [DEBUG] (149) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.337µs elapsed_secs=8.0337e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.427µs elapsed_secs=9.7427e-5
08:31:00 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.072µs elapsed_secs=7.4072e-5
08:31:00 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.3234ms elapsed_secs=0.0023234
08:31:00 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.631µs elapsed_secs=9.7631e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.58458ms elapsed_secs=0.00258458
08:31:00 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=310.539µs elapsed_secs=0.000310539
08:31:00 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=120.162µs elapsed_secs=0.000120162
08:31:00 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.063µs elapsed_secs=9.1063e-5
08:31:00 [DEBUG] (122) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.304293ms elapsed_secs=0.003304293
08:31:00 [DEBUG] (125) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.24832ms elapsed_secs=0.00324832
08:31:00 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.236µs elapsed_secs=5.9236e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=343.604µs elapsed_secs=0.000343604
08:31:00 [DEBUG] (122) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=284.631µs elapsed_secs=0.000284631
08:31:00 [DEBUG] (125) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=158.705µs elapsed_secs=0.000158705
08:31:00 [DEBUG] (126) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.869µs elapsed_secs=0.000112869
08:31:00 [DEBUG] (122) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.411µs elapsed_secs=0.000104411
08:31:00 [DEBUG] (125) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=175.784µs elapsed_secs=0.000175784
08:31:00 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.168008ms elapsed_secs=0.004168008
08:31:00 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=188.808µs elapsed_secs=0.000188808
08:31:00 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.367µs elapsed_secs=7.0367e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.705501ms elapsed_secs=0.003705501
08:31:00 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.01108ms elapsed_secs=0.00401108
08:31:00 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=353.385µs elapsed_secs=0.000353385
08:31:00 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=406.214µs elapsed_secs=0.000406214
08:31:00 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.948µs elapsed_secs=6.4948e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.93µs elapsed_secs=4.693e-5
08:31:00 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.057178ms elapsed_secs=0.003057178
08:31:00 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.076521ms elapsed_secs=0.003076521
08:31:00 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.125951ms elapsed_secs=0.003125951
08:31:00 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.127334ms elapsed_secs=0.003127334
08:31:00 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=508.452µs elapsed_secs=0.000508452
08:31:00 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.853362ms elapsed_secs=0.002853362
08:31:00 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.88048ms elapsed_secs=0.00288048
08:31:00 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=371.602µs elapsed_secs=0.000371602
08:31:00 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=664.787µs elapsed_secs=0.000664787
08:31:00 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=511.694µs elapsed_secs=0.000511694
08:31:00 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.573µs elapsed_secs=0.000130573
08:31:00 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.422µs elapsed_secs=0.000121422
08:31:00 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.683µs elapsed_secs=5.8683e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=202.189µs elapsed_secs=0.000202189
08:31:00 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=429.358µs elapsed_secs=0.000429358
08:31:00 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=440.793µs elapsed_secs=0.000440793
08:31:00 [DEBUG] (122) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.58122ms elapsed_secs=0.00258122
08:31:00 [DEBUG] (126) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.52956ms elapsed_secs=0.00252956
08:31:00 [DEBUG] (125) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.522843ms elapsed_secs=0.002522843
08:31:00 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.562µs elapsed_secs=7.4562e-5
08:31:00 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.293µs elapsed_secs=0.000102293
08:31:00 [DEBUG] (122) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=148.167µs elapsed_secs=0.000148167
08:31:00 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.571391ms elapsed_secs=0.002571391
08:31:00 [DEBUG] (122) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.713µs elapsed_secs=6.4713e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=338.381µs elapsed_secs=0.000338381
08:31:00 [DEBUG] (125) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=271.305µs elapsed_secs=0.000271305
08:31:00 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=96.123µs elapsed_secs=9.6123e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.145µs elapsed_secs=9.6145e-5
08:31:00 [DEBUG] (125) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.027µs elapsed_secs=6.2027e-5
08:31:00 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.115µs elapsed_secs=5.7115e-5
08:31:00 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.785544ms elapsed_secs=0.002785544
08:31:00 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.789468ms elapsed_secs=0.002789468
08:31:00 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=155.831µs elapsed_secs=0.000155831
08:31:00 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=210.013µs elapsed_secs=0.000210013
08:31:00 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.663µs elapsed_secs=5.2663e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.776µs elapsed_secs=4.5776e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.692009ms elapsed_secs=0.002692009
08:31:00 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.697529ms elapsed_secs=0.002697529
08:31:00 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.838852ms elapsed_secs=0.002838852
08:31:00 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.903398ms elapsed_secs=0.002903398
08:31:00 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=399.881µs elapsed_secs=0.000399881
08:31:00 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=279.407µs elapsed_secs=0.000279407
08:31:00 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=94.323µs elapsed_secs=9.4323e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.952µs elapsed_secs=0.000170952
08:31:00 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.369µs elapsed_secs=5.9369e-5
08:31:00 [DEBUG] (122) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.809046ms elapsed_secs=0.002809046
08:31:00 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.752772ms elapsed_secs=0.002752772
08:31:00 [DEBUG] (125) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.808802ms elapsed_secs=0.002808802
08:31:00 [DEBUG] (126) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.788769ms elapsed_secs=0.002788769
08:31:00 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=276.547µs elapsed_secs=0.000276547
08:31:00 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=538.445µs elapsed_secs=0.000538445
08:31:00 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=387.366µs elapsed_secs=0.000387366
08:31:00 [DEBUG] (126) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=303.988µs elapsed_secs=0.000303988
08:31:00 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.30421ms elapsed_secs=0.00230421
08:31:00 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.959532ms elapsed_secs=0.002959532
08:31:00 [DEBUG] (125) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=224.571µs elapsed_secs=0.000224571
08:31:00 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.47µs elapsed_secs=6.147e-5
08:31:00 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.396µs elapsed_secs=5.4396e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=45.688µs elapsed_secs=4.5688e-5
08:31:00 [DEBUG] (125) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=287.575µs elapsed_secs=0.000287575
08:31:00 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.238341ms elapsed_secs=0.002238341
08:31:00 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=403.229µs elapsed_secs=0.000403229
08:31:00 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=407.203µs elapsed_secs=0.000407203
08:31:00 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.348589ms elapsed_secs=0.002348589
08:31:00 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.122µs elapsed_secs=7.1122e-5
08:31:00 [DEBUG] (141) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=97.461µs elapsed_secs=9.7461e-5
08:31:00 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.994µs elapsed_secs=4.7994e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=379.489µs elapsed_secs=0.000379489
08:31:00 [DEBUG] (141) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.096µs elapsed_secs=7.1096e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.631µs elapsed_secs=9.6631e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.518668ms elapsed_secs=0.002518668
08:31:00 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.514106ms elapsed_secs=0.002514106
08:31:00 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=102.087µs elapsed_secs=0.000102087
08:31:00 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=79µs elapsed_secs=7.9e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.823µs elapsed_secs=5.9823e-5
08:31:00 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.448µs elapsed_secs=5.3448e-5
08:31:00 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.648442ms elapsed_secs=0.002648442
08:31:00 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.605648ms elapsed_secs=0.002605648
08:31:00 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=155.698µs elapsed_secs=0.000155698
08:31:00 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=106.042µs elapsed_secs=0.000106042
08:31:00 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.467µs elapsed_secs=5.5467e-5
08:31:00 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.517µs elapsed_secs=4.9517e-5
08:31:00 [DEBUG] (126) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.916744ms elapsed_secs=0.002916744
08:31:00 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.966991ms elapsed_secs=0.002966991
08:31:00 [DEBUG] (125) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.908951ms elapsed_secs=0.002908951
08:31:00 [DEBUG] (142) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=186.504µs elapsed_secs=0.000186504
08:31:00 [DEBUG] (142) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.311µs elapsed_secs=6.7311e-5
08:31:00 [DEBUG] (141) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.668393ms elapsed_secs=0.002668393
08:31:00 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.995139ms elapsed_secs=0.002995139
08:31:00 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.007312ms elapsed_secs=0.003007312
08:31:00 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.016653ms elapsed_secs=0.003016653
08:31:00 [DEBUG] (143) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=330.527µs elapsed_secs=0.000330527
08:31:00 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.761307ms elapsed_secs=0.002761307
08:31:00 [DEBUG] (148) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=234.591µs elapsed_secs=0.000234591
08:31:00 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=151.629µs elapsed_secs=0.000151629
08:31:00 [DEBUG] (143) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.8µs elapsed_secs=0.0001898
08:31:00 [DEBUG] (144) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=99.911µs elapsed_secs=9.9911e-5
08:31:00 [DEBUG] (148) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.264µs elapsed_secs=6.0264e-5
08:31:00 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.314µs elapsed_secs=7.1314e-5
08:31:00 [DEBUG] (144) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.037µs elapsed_secs=9.2037e-5
08:31:00 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.583006ms elapsed_secs=0.002583006
08:31:00 [DEBUG] (146) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=124.455µs elapsed_secs=0.000124455
08:31:00 [DEBUG] (146) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.32µs elapsed_secs=5.032e-5
08:31:00 [DEBUG] (142) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.339581ms elapsed_secs=0.002339581
08:31:00 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.507312ms elapsed_secs=0.002507312
08:31:00 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.479219ms elapsed_secs=0.002479219
08:31:00 [DEBUG] (145) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=144.901µs elapsed_secs=0.000144901
08:31:00 [DEBUG] (147) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=210.993µs elapsed_secs=0.000210993
08:31:00 [DEBUG] (147) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.003µs elapsed_secs=9.5003e-5
08:31:00 [DEBUG] (145) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=687.361µs elapsed_secs=0.000687361
08:31:00 [DEBUG] (143) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.293353ms elapsed_secs=0.003293353
08:31:00 [DEBUG] (144) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.190245ms elapsed_secs=0.003190245
08:31:00 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.470984ms elapsed_secs=0.003470984
08:31:00 [DEBUG] (148) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.44573ms elapsed_secs=0.00344573
08:31:00 [DEBUG] (149) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=212.435µs elapsed_secs=0.000212435
08:31:00 [DEBUG] (146) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.622486ms elapsed_secs=0.002622486
08:31:00 [DEBUG] (149) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.957µs elapsed_secs=7.2957e-5
08:31:00 [DEBUG] (147) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.421907ms elapsed_secs=0.002421907
08:31:00 [DEBUG] (145) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.352746ms elapsed_secs=0.002352746
08:31:00 [DEBUG] (149) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.264758ms elapsed_secs=0.002264758
08:31:00 [DEBUG] (122) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=78.376432ms elapsed_secs=0.078376432
08:31:00 [DEBUG] (115) menahel::handlers::task: No target specified, using default target: All
08:31:00 [DEBUG] (122) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n        \n" rows_affected=1 rows_returned=11 elapsed=95.825µs elapsed_secs=9.5825e-5
08:31:00 [DEBUG] (115) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "TestMajorTask0", description: Some("TestTask0Description"), status: 0, deadline: Some(1000), created_at: 1000, updated_at: Some(1000) }, Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(6), project_id: 0, parent_id: Some(2), level: 2, name: "TestCancelledTask6", description: Some("TestTask6Description"), status: 3, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(7), project_id: 0, parent_id: Some(2), level: 2, name: "TestDoneTask7", description: Some("TestTask7Description"), status: 4, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(8), project_id: 2, parent_id: Some(0), level: 0, name: "TestMajorTaskProject2", description: Some("TestTask8Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(9), project_id: 2, parent_id: Some(0), level: 1, name: "TestMinorTaskProject2", description: Some("TestTask9Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(10), project_id: 2, parent_id: Some(0), level: 2, name: "TestTrivialTaskProject2", description: Some("TestTask10Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }]
08:31:00 [DEBUG] (115) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "TestMajorTask0", description: Some("TestTask0Description"), status: 0, deadline: Some(1000), created_at: 1000, updated_at: Some(1000) }, Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(6), project_id: 0, parent_id: Some(2), level: 2, name: "TestCancelledTask6", description: Some("TestTask6Description"), status: 3, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(7), project_id: 0, parent_id: Some(2), level: 2, name: "TestDoneTask7", description: Some("TestTask7Description"), status: 4, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(8), project_id: 2, parent_id: Some(0), level: 0, name: "TestMajorTaskProject2", description: Some("TestTask8Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(9), project_id: 2, parent_id: Some(0), level: 1, name: "TestMinorTaskProject2", description: Some("TestTask9Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(10), project_id: 2, parent_id: Some(0), level: 2, name: "TestTrivialTaskProject2", description: Some("TestTask10Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }], count: 11, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "e9e5235b-c14d-45bf-981f-5cc487ac7e1f", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (126) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.772363ms elapsed_secs=0.076772363
08:31:00 [DEBUG] (125) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.671471ms elapsed_secs=0.077671471
08:31:00 [DEBUG] (126) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 AND parent_id = $2 AND level = $3 AND name LIKE '%' || $4 || '%' AND description LIKE '%' || $5 || '%' AND status = $6 AND deadline >= $7 AND deadline <= $8 AND created_at >= $9 AND created_at <= $10 AND updated_at >= $11 AND updated_at <= $12\n" rows_affected=1 rows_returned=1 elapsed=298.993µs elapsed_secs=0.000298993
08:31:00 [DEBUG] (118) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }]
08:31:00 [DEBUG] (118) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "33bd1e9f-f0a8-46bf-a1be-7f6f828c8754", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (125) sqlx::query: summary="SELECT COUNT(*) FROM tasks …" db.statement="\n\n\n        SELECT COUNT(*) FROM tasks\n      WHERE project_id = $1 AND level = $2\n" rows_affected=0 rows_returned=1 elapsed=201.575µs elapsed_secs=0.000201575
08:31:00 [DEBUG] (114) menahel::repository::task_repo: Get tasks count with transaction: 6
08:31:00 [DEBUG] (141) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.697922ms elapsed_secs=0.077697922
08:31:00 [DEBUG] (125) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 AND level = $2 LIMIT $3 OFFSET $4\n" rows_affected=1 rows_returned=4 elapsed=635.728µs elapsed_secs=0.000635728
08:31:00 [DEBUG] (114) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }]
08:31:00 [DEBUG] (114) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(4), project_id: 0, parent_id: Some(2), level: 2, name: "TestInProgressTask4", description: Some("TestTask4Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }, Task { id: Some(5), project_id: 0, parent_id: Some(2), level: 2, name: "TestReviewingTask5", description: Some("TestTask5Description"), status: 2, deadline: Some(2000), created_at: 3000, updated_at: Some(3000) }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "43a9bbb4-18fe-46e8-8fb5-1b8cda13eecf", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (141) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=99.715µs elapsed_secs=9.9715e-5
08:31:00 [DEBUG] (120) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) })
08:31:00 [DEBUG] (120) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "ce777773-e201-49f7-b5c3-772a0c0f94b0", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (151) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=7.882269ms elapsed_secs=0.007882269
08:31:00 [DEBUG] (158) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.209µs elapsed_secs=4.3209e-5
08:31:00 [DEBUG] (142) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=79.311632ms elapsed_secs=0.079311632
08:31:00 [DEBUG] (123) menahel::handlers::task: Response: TaskResponse { results: [], count: 0, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "0ad92387-b46a-47cb-b920-a0e951e5c066", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (143) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.511389ms elapsed_secs=0.077511389
08:31:00 [ERROR] Error: BadRequest("[TaskIdInvalid] Task ID must be greater than 0: (ID = -1)")
08:31:00 [DEBUG] (144) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=79.115552ms elapsed_secs=0.079115552
08:31:00 [DEBUG] (153) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.547355ms elapsed_secs=0.010547355
08:31:00 [DEBUG] (132) menahel::handlers::task: No target specified, using default target: All
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerGetTasksInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: Some(1), page_size: None)")
08:31:00 [DEBUG] (132) menahel::handlers::task: No target specified, using default target: All
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerGetTasksInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: None, page_size: Some(10))")
08:31:00 [DEBUG] (163) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=100.006µs elapsed_secs=0.000100006
08:31:00 [DEBUG] (148) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=82.696283ms elapsed_secs=0.082696283
08:31:00 [DEBUG] (146) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=82.129457ms elapsed_secs=0.082129457
08:31:00 [DEBUG] (133) menahel::handlers::task: No target specified, using default target: All
08:31:00 [DEBUG] (137) menahel::handlers::task: No target specified, using default target: All
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerGetTasksInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: Some(0), page_size: Some(10))")
08:31:00 [DEBUG] (133) menahel::handlers::task: No target specified, using default target: All
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerGetTasksInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: Some(1), page_size: Some(0))")
08:31:00 [DEBUG] (155) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.712068ms elapsed_secs=0.012712068
08:31:00 [DEBUG] (157) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.499891ms elapsed_secs=0.012499891
08:31:00 [DEBUG] (146) sqlx::query: summary="SELECT COUNT(*) FROM tasks …" db.statement="\n\n\n        SELECT COUNT(*) FROM tasks\n    \n" rows_affected=0 rows_returned=1 elapsed=333.607µs elapsed_secs=0.000333607
08:31:00 [DEBUG] (166) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=80.852µs elapsed_secs=8.0852e-5
08:31:00 [DEBUG] (137) menahel::repository::task_repo: Get tasks count with transaction: 11
08:31:00 [DEBUG] (168) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.338µs elapsed_secs=6.2338e-5
08:31:00 [DEBUG] (146) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n         LIMIT $1 OFFSET $2\n" rows_affected=1 rows_returned=4 elapsed=205.575µs elapsed_secs=0.000205575
08:31:00 [DEBUG] (145) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=86.022918ms elapsed_secs=0.086022918
08:31:00 [DEBUG] (158) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.475277ms elapsed_secs=0.014475277
08:31:00 [DEBUG] (137) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "TestMajorTask0", description: Some("TestTask0Description"), status: 0, deadline: Some(1000), created_at: 1000, updated_at: Some(1000) }, Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }]
08:31:00 [DEBUG] (137) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "TestMajorTask0", description: Some("TestTask0Description"), status: 0, deadline: Some(1000), created_at: 1000, updated_at: Some(1000) }, Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) }, Task { id: Some(3), project_id: 0, parent_id: Some(2), level: 2, name: "TestNotStartedTask3", description: Some("TestTask3Description"), status: 1, deadline: Some(1500), created_at: 3000, updated_at: Some(3000) }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "d2e5f4c5-f64b-4e9a-a8a1-0b57540749a2", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (128) actix_web::types::query: Failed during Query extractor deserialization. Request path: "/tasks"
08:31:00 [DEBUG] (158) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=172.73µs elapsed_secs=0.00017273
08:31:00 [DEBUG] (147) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=86.265904ms elapsed_secs=0.086265904
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerInvalidQuery] Invalid query: (ActixWebError: Query deserialize error: invalid digit found in string)")
08:31:00 [DEBUG] (137) menahel::handlers::task: No target specified, using default target: All
08:31:00 [DEBUG] (158) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=81.457µs elapsed_secs=8.1457e-5
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerGetTasksInvalidTarget] Invalid target. Target must be 'all' or 'id'.: (invalid)")
08:31:00 [DEBUG] (149) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=85.506038ms elapsed_secs=0.085506038
08:31:00 [DEBUG] (160) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.080676ms elapsed_secs=0.013080676
08:31:00 [DEBUG] (139) menahel::handlers::task: No target specified, using default target: All
08:31:00 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=422.052µs elapsed_secs=0.000422052
08:31:00 [DEBUG] (146) sqlx::query: summary="SELECT COUNT(*) FROM tasks …" db.statement="\n\n\n        SELECT COUNT(*) FROM tasks\n    \n" rows_affected=0 rows_returned=1 elapsed=27.828µs elapsed_secs=2.7828e-5
08:31:00 [ERROR] Error: BadRequest("[TaskHandlerGetTasksInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be less than 100.: (page: Some(1), page_size: Some(1000))")
08:31:00 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.624µs elapsed_secs=8.0624e-5
08:31:00 [DEBUG] (137) menahel::repository::task_repo: Get tasks count with transaction: 11
08:31:00 [DEBUG] (174) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.735µs elapsed_secs=5.0735e-5
08:31:00 [DEBUG] (162) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.131864ms elapsed_secs=0.013131864
08:31:00 [DEBUG] (146) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n         LIMIT $1 OFFSET $2\n" rows_affected=1 rows_returned=3 elapsed=129.076µs elapsed_secs=0.000129076
08:31:00 [DEBUG] (137) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(8), project_id: 2, parent_id: Some(0), level: 0, name: "TestMajorTaskProject2", description: Some("TestTask8Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(9), project_id: 2, parent_id: Some(0), level: 1, name: "TestMinorTaskProject2", description: Some("TestTask9Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(10), project_id: 2, parent_id: Some(0), level: 2, name: "TestTrivialTaskProject2", description: Some("TestTask10Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }]
08:31:00 [DEBUG] (137) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(8), project_id: 2, parent_id: Some(0), level: 0, name: "TestMajorTaskProject2", description: Some("TestTask8Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(9), project_id: 2, parent_id: Some(0), level: 1, name: "TestMinorTaskProject2", description: Some("TestTask9Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }, Task { id: Some(10), project_id: 2, parent_id: Some(0), level: 2, name: "TestTrivialTaskProject2", description: Some("TestTask10Description"), status: 0, deadline: Some(1000000000), created_at: 1000000000, updated_at: Some(1000000000) }], count: 3, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 3, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "736f61a9-3a63-4b39-b82c-fbdc9ae837a1", api_version: "0.1.0" }) }
08:31:00 [DEBUG] (177) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.523µs elapsed_secs=7.0523e-5
08:31:00 [DEBUG] (163) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.396809ms elapsed_secs=0.014396809
08:31:00 [DEBUG] (163) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=151.493µs elapsed_secs=0.000151493
08:31:00 [DEBUG] (163) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.266µs elapsed_secs=5.6266e-5
08:31:00 [DEBUG] (169) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.458279ms elapsed_secs=0.011458279
08:31:00 [DEBUG] (166) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.084097ms elapsed_secs=0.011084097
08:31:00 [DEBUG] (165) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.469225ms elapsed_secs=0.014469225
08:31:00 [DEBUG] (168) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.041095ms elapsed_secs=0.011041095
08:31:00 [DEBUG] (163) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.504543ms elapsed_secs=0.001504543
08:31:00 [DEBUG] (166) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=495.311µs elapsed_secs=0.000495311
08:31:00 [DEBUG] (168) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=254.494µs elapsed_secs=0.000254494
08:31:00 [DEBUG] (166) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.574µs elapsed_secs=7.4574e-5
08:31:00 [DEBUG] (180) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.599µs elapsed_secs=5.3599e-5
08:31:00 [DEBUG] (163) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.148µs elapsed_secs=0.000113148
08:31:00 [DEBUG] (181) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.674µs elapsed_secs=7.4674e-5
08:31:00 [DEBUG] (168) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=194.661µs elapsed_secs=0.000194661
08:31:00 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=569.243µs elapsed_secs=0.000569243
08:31:00 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=181.641µs elapsed_secs=0.000181641
08:31:00 [DEBUG] (168) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=595.104µs elapsed_secs=0.000595104
08:31:00 [DEBUG] (168) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.459µs elapsed_secs=0.000132459
08:31:00 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.086522ms elapsed_secs=0.007086522
08:31:00 [DEBUG] (171) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.32684ms elapsed_secs=0.01332684
08:31:00 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=192.269µs elapsed_secs=0.000192269
08:31:00 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.047µs elapsed_secs=7.2047e-5
08:31:00 [DEBUG] (177) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.926014ms elapsed_secs=0.011926014
08:31:00 [DEBUG] (182) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=107.428µs elapsed_secs=0.000107428
08:31:00 [DEBUG] (174) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.98987ms elapsed_secs=0.01298987
08:31:00 [DEBUG] (179) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.370355ms elapsed_secs=0.011370355
08:31:00 [DEBUG] (173) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.170423ms elapsed_secs=0.014170423
08:31:00 [DEBUG] (176) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.34627ms elapsed_secs=0.01334627
08:31:00 [DEBUG] (177) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=71.216µs elapsed_secs=7.1216e-5
08:31:00 [DEBUG] (174) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=46.484µs elapsed_secs=4.6484e-5
08:31:00 [DEBUG] (177) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.728µs elapsed_secs=7.5728e-5
08:31:00 [DEBUG] (163) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.47794ms elapsed_secs=0.00247794
08:31:00 [DEBUG] (174) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=192.841µs elapsed_secs=0.000192841
08:31:00 [DEBUG] (183) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.472µs elapsed_secs=4.4472e-5
08:31:00 [DEBUG] (185) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.976µs elapsed_secs=5.0976e-5
08:31:00 [DEBUG] (184) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=95.452µs elapsed_secs=9.5452e-5
08:31:00 [DEBUG] (177) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=218.482µs elapsed_secs=0.000218482
08:31:00 [DEBUG] (163) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=270.356µs elapsed_secs=0.000270356
08:31:00 [DEBUG] (174) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=251.95µs elapsed_secs=0.00025195
08:31:00 [DEBUG] (177) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=210.877µs elapsed_secs=0.000210877
08:31:00 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.794678ms elapsed_secs=0.002794678
08:31:00 [DEBUG] (168) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.719577ms elapsed_secs=0.002719577
08:31:00 [DEBUG] (163) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=236.048µs elapsed_secs=0.000236048
08:31:00 [DEBUG] (174) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=156.436µs elapsed_secs=0.000156436
08:31:00 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=129.599µs elapsed_secs=0.000129599
08:31:00 [DEBUG] (168) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=132.952µs elapsed_secs=0.000132952
08:31:00 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.019µs elapsed_secs=5.4019e-5
08:31:00 [DEBUG] (168) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.592µs elapsed_secs=5.1592e-5
08:31:00 [DEBUG] (181) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.354597ms elapsed_secs=0.009354597
08:31:00 [DEBUG] (180) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.958416ms elapsed_secs=0.009958416
08:31:00 [DEBUG] (181) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.415µs elapsed_secs=6.6415e-5
08:31:00 [DEBUG] (180) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=54.781µs elapsed_secs=5.4781e-5
08:31:00 [DEBUG] (181) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=51.224µs elapsed_secs=5.1224e-5
08:31:00 [DEBUG] (180) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=60.749µs elapsed_secs=6.0749e-5
08:31:00 [DEBUG] (181) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=125.415µs elapsed_secs=0.000125415
08:31:00 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.801382ms elapsed_secs=0.002801382
08:31:00 [DEBUG] (181) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=260.715µs elapsed_secs=0.000260715
08:31:00 [DEBUG] (180) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=537.553µs elapsed_secs=0.000537553
08:31:00 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=228.974µs elapsed_secs=0.000228974
08:31:00 [DEBUG] (180) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.76µs elapsed_secs=8.076e-5
08:31:00 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.59µs elapsed_secs=9.459e-5
08:31:00 [DEBUG] (182) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=6.990412ms elapsed_secs=0.006990412
08:31:01 [DEBUG] (182) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=100.444µs elapsed_secs=0.000100444
08:31:01 [DEBUG] (182) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=71.466µs elapsed_secs=7.1466e-5
08:31:01 [DEBUG] (182) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=133.216µs elapsed_secs=0.000133216
08:31:01 [DEBUG] (182) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.164µs elapsed_secs=5.6164e-5
08:31:01 [DEBUG] (177) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.272886ms elapsed_secs=0.003272886
08:31:01 [DEBUG] (174) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.195488ms elapsed_secs=0.003195488
08:31:01 [DEBUG] (185) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=6.989611ms elapsed_secs=0.006989611
08:31:01 [DEBUG] (163) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.288707ms elapsed_secs=0.003288707
08:31:01 [DEBUG] (177) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=161.407µs elapsed_secs=0.000161407
08:31:01 [DEBUG] (174) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=162.694µs elapsed_secs=0.000162694
08:31:01 [DEBUG] (177) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.901µs elapsed_secs=8.0901e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=159.61µs elapsed_secs=0.00015961
08:31:01 [DEBUG] (174) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.788µs elapsed_secs=8.2788e-5
08:31:01 [DEBUG] (163) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=198.156µs elapsed_secs=0.000198156
08:31:01 [DEBUG] (185) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=108.587µs elapsed_secs=0.000108587
08:31:01 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.042744ms elapsed_secs=0.003042744
08:31:01 [DEBUG] (168) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.150624ms elapsed_secs=0.003150624
08:31:01 [DEBUG] (163) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.222µs elapsed_secs=0.000116222
08:31:01 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=225.137µs elapsed_secs=0.000225137
08:31:01 [DEBUG] (185) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=479.456µs elapsed_secs=0.000479456
08:31:01 [DEBUG] (168) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=327.357µs elapsed_secs=0.000327357
08:31:01 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.986µs elapsed_secs=0.000104986
08:31:01 [DEBUG] (185) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.087µs elapsed_secs=5.7087e-5
08:31:01 [DEBUG] (168) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.107µs elapsed_secs=5.2107e-5
08:31:01 [DEBUG] (181) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.595147ms elapsed_secs=0.003595147
08:31:01 [DEBUG] (184) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.821498ms elapsed_secs=0.010821498
08:31:01 [DEBUG] (183) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.151779ms elapsed_secs=0.011151779
08:31:01 [DEBUG] (184) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=156.878µs elapsed_secs=0.000156878
08:31:01 [DEBUG] (181) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=192.32µs elapsed_secs=0.00019232
08:31:01 [DEBUG] (183) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.991µs elapsed_secs=7.9991e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.416µs elapsed_secs=5.6416e-5
08:31:01 [DEBUG] (181) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.336µs elapsed_secs=0.000167336
08:31:01 [DEBUG] (183) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=87.481µs elapsed_secs=8.7481e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=281.3µs elapsed_secs=0.0002813
08:31:01 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.054099ms elapsed_secs=0.004054099
08:31:01 [DEBUG] (180) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.02073ms elapsed_secs=0.00402073
08:31:01 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=343.344µs elapsed_secs=0.000343344
08:31:01 [DEBUG] (183) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=762.753µs elapsed_secs=0.000762753
08:31:01 [DEBUG] (180) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=226.804µs elapsed_secs=0.000226804
08:31:01 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=394.375µs elapsed_secs=0.000394375
08:31:01 [DEBUG] (183) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.025µs elapsed_secs=5.0025e-5
08:31:01 [DEBUG] (180) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.708µs elapsed_secs=6.0708e-5
08:31:01 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=37.232µs elapsed_secs=3.7232e-5
08:31:01 [DEBUG] (182) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.083383ms elapsed_secs=0.003083383
08:31:01 [DEBUG] (182) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=93.461µs elapsed_secs=9.3461e-5
08:31:01 [DEBUG] (182) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.316µs elapsed_secs=4.1316e-5
08:31:01 [DEBUG] (163) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.517252ms elapsed_secs=0.002517252
08:31:01 [DEBUG] (174) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.49707ms elapsed_secs=0.00249707
08:31:01 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.46058ms elapsed_secs=0.00246058
08:31:01 [DEBUG] (163) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=91.783µs elapsed_secs=9.1783e-5
08:31:01 [DEBUG] (177) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.509371ms elapsed_secs=0.002509371
08:31:01 [DEBUG] (174) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=162.795µs elapsed_secs=0.000162795
08:31:01 [DEBUG] (163) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.575µs elapsed_secs=5.2575e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.275344ms elapsed_secs=0.002275344
08:31:01 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=119.233µs elapsed_secs=0.000119233
08:31:01 [DEBUG] (168) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.296217ms elapsed_secs=0.002296217
08:31:01 [DEBUG] (174) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=881.564µs elapsed_secs=0.000881564
08:31:01 [DEBUG] (177) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=969.638µs elapsed_secs=0.000969638
08:31:01 [DEBUG] (185) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=132.775µs elapsed_secs=0.000132775
08:31:01 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.553µs elapsed_secs=8.2553e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.171279ms elapsed_secs=0.003171279
08:31:01 [DEBUG] (177) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.449µs elapsed_secs=9.3449e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.476µs elapsed_secs=4.2476e-5
08:31:01 [DEBUG] (168) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=110.851µs elapsed_secs=0.000110851
08:31:01 [DEBUG] (181) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.307822ms elapsed_secs=0.003307822
08:31:01 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=115.57µs elapsed_secs=0.00011557
08:31:01 [DEBUG] (168) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.474µs elapsed_secs=5.1474e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.538µs elapsed_secs=5.6538e-5
08:31:01 [DEBUG] (181) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=167.166µs elapsed_secs=0.000167166
08:31:01 [DEBUG] (181) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.123µs elapsed_secs=6.5123e-5
08:31:01 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.569465ms elapsed_secs=0.003569465
08:31:01 [DEBUG] (180) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.413701ms elapsed_secs=0.003413701
08:31:01 [DEBUG] (182) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.597643ms elapsed_secs=0.003597643
08:31:01 [DEBUG] (183) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.69373ms elapsed_secs=0.00369373
08:31:01 [DEBUG] (158) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=511.288µs elapsed_secs=0.000511288
08:31:01 [DEBUG] (180) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=544.424µs elapsed_secs=0.000544424
08:31:01 [DEBUG] (182) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=240.736µs elapsed_secs=0.000240736
08:31:01 [DEBUG] (180) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.982µs elapsed_secs=9.0982e-5
08:31:01 [DEBUG] (158) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=183.162µs elapsed_secs=0.000183162
08:31:01 [DEBUG] (183) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=175.07µs elapsed_secs=0.00017507
08:31:01 [DEBUG] (182) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.522µs elapsed_secs=7.4522e-5
08:31:01 [DEBUG] (183) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.346µs elapsed_secs=0.000100346
08:31:01 [DEBUG] (163) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.484255ms elapsed_secs=0.003484255
08:31:01 [DEBUG] (174) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.572117ms elapsed_secs=0.003572117
08:31:01 [DEBUG] (174) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=436.014µs elapsed_secs=0.000436014
08:31:01 [DEBUG] (163) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=454.457µs elapsed_secs=0.000454457
08:31:01 [DEBUG] (177) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.712928ms elapsed_secs=0.003712928
08:31:01 [DEBUG] (185) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.836194ms elapsed_secs=0.003836194
08:31:01 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.710383ms elapsed_secs=0.003710383
08:31:01 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.681148ms elapsed_secs=0.003681148
08:31:01 [DEBUG] (177) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=229.571µs elapsed_secs=0.000229571
08:31:01 [DEBUG] (174) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=291.263µs elapsed_secs=0.000291263
08:31:01 [DEBUG] (163) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=319.104µs elapsed_secs=0.000319104
08:31:01 [DEBUG] (177) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=289.158µs elapsed_secs=0.000289158
08:31:01 [DEBUG] (168) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.728188ms elapsed_secs=0.003728188
08:31:01 [DEBUG] (185) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=583.142µs elapsed_secs=0.000583142
08:31:01 [DEBUG] (168) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=104.405µs elapsed_secs=0.000104405
08:31:01 [DEBUG] (166) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=657.72µs elapsed_secs=0.00065772
08:31:01 [DEBUG] (181) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.607181ms elapsed_secs=0.003607181
08:31:01 [DEBUG] (166) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.401µs elapsed_secs=5.0401e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.333µs elapsed_secs=4.8333e-5
08:31:01 [DEBUG] (168) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.605µs elapsed_secs=4.9605e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=450.733µs elapsed_secs=0.000450733
08:31:01 [DEBUG] (181) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=184.526µs elapsed_secs=0.000184526
08:31:01 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.257µs elapsed_secs=5.8257e-5
08:31:01 [DEBUG] (158) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.014426ms elapsed_secs=0.003014426
08:31:01 [DEBUG] (181) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.532µs elapsed_secs=8.3532e-5
08:31:01 [DEBUG] (180) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.173219ms elapsed_secs=0.003173219
08:31:01 [DEBUG] (180) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=97.522µs elapsed_secs=9.7522e-5
08:31:01 [DEBUG] (180) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.567µs elapsed_secs=5.0567e-5
08:31:01 [DEBUG] (183) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.409708ms elapsed_secs=0.002409708
08:31:01 [DEBUG] (182) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.541378ms elapsed_secs=0.002541378
08:31:01 [DEBUG] (183) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=103.606µs elapsed_secs=0.000103606
08:31:01 [DEBUG] (182) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=133.154µs elapsed_secs=0.000133154
08:31:01 [DEBUG] (183) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.721µs elapsed_secs=8.8721e-5
08:31:01 [DEBUG] (174) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.200582ms elapsed_secs=0.002200582
08:31:01 [DEBUG] (163) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.220265ms elapsed_secs=0.002220265
08:31:01 [DEBUG] (182) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.111µs elapsed_secs=4.2111e-5
08:31:01 [DEBUG] (177) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.367127ms elapsed_secs=0.002367127
08:31:01 [DEBUG] (174) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=113.483µs elapsed_secs=0.000113483
08:31:01 [DEBUG] (174) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.622µs elapsed_secs=0.000110622
08:31:01 [DEBUG] (177) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=157.753µs elapsed_secs=0.000157753
08:31:01 [DEBUG] (166) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.304362ms elapsed_secs=0.002304362
08:31:01 [DEBUG] (185) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.398803ms elapsed_secs=0.002398803
08:31:01 [DEBUG] (168) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.38153ms elapsed_secs=0.00238153
08:31:01 [DEBUG] (177) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.576µs elapsed_secs=8.3576e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=131.525µs elapsed_secs=0.000131525
08:31:01 [DEBUG] (185) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.728µs elapsed_secs=5.2728e-5
08:31:01 [DEBUG] (181) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.669739ms elapsed_secs=0.002669739
08:31:01 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.683135ms elapsed_secs=0.002683135
08:31:01 [DEBUG] (181) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=113.321µs elapsed_secs=0.000113321
08:31:01 [DEBUG] (181) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.185µs elapsed_secs=0.000137185
08:31:01 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=212.662µs elapsed_secs=0.000212662
08:31:01 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.342µs elapsed_secs=5.2342e-5
08:31:01 [DEBUG] (180) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.759232ms elapsed_secs=0.002759232
08:31:01 [DEBUG] (180) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=96.88µs elapsed_secs=9.688e-5
08:31:01 [DEBUG] (180) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=39.756µs elapsed_secs=3.9756e-5
08:31:01 [DEBUG] (182) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.456057ms elapsed_secs=0.002456057
08:31:01 [DEBUG] (183) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.271497ms elapsed_secs=0.002271497
08:31:01 [DEBUG] (182) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=332.529µs elapsed_secs=0.000332529
08:31:01 [DEBUG] (183) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=342.917µs elapsed_secs=0.000342917
08:31:01 [DEBUG] (177) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.662432ms elapsed_secs=0.002662432
08:31:01 [DEBUG] (174) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.630123ms elapsed_secs=0.002630123
08:31:01 [DEBUG] (182) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.79µs elapsed_secs=0.00017079
08:31:01 [DEBUG] (183) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.779µs elapsed_secs=9.3779e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.869205ms elapsed_secs=0.002869205
08:31:01 [DEBUG] (185) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=92.047µs elapsed_secs=9.2047e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=43.719µs elapsed_secs=4.3719e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.767417ms elapsed_secs=0.002767417
08:31:01 [DEBUG] (181) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.768971ms elapsed_secs=0.002768971
08:31:01 [DEBUG] (184) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=190.272µs elapsed_secs=0.000190272
08:31:01 [DEBUG] (184) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.881µs elapsed_secs=6.1881e-5
08:31:01 [DEBUG] (180) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.177083ms elapsed_secs=0.003177083
08:31:01 [DEBUG] (183) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.534446ms elapsed_secs=0.002534446
08:31:01 [DEBUG] (182) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.592871ms elapsed_secs=0.002592871
08:31:01 [DEBUG] (183) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=93.167µs elapsed_secs=9.3167e-5
08:31:01 [DEBUG] (183) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.842µs elapsed_secs=5.1842e-5
08:31:01 [DEBUG] (185) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.632346ms elapsed_secs=0.002632346
08:31:01 [DEBUG] (184) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.583324ms elapsed_secs=0.002583324
08:31:01 [DEBUG] (183) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.10627ms elapsed_secs=0.00210627
08:31:01 [DEBUG] (158) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.923791ms elapsed_secs=0.073923791
08:31:01 [DEBUG] (158) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=158.216µs elapsed_secs=0.000158216
08:31:01 [DEBUG] (150) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "TestMajorTask0", description: Some("TestTask0Description"), status: 0, deadline: Some(1000), created_at: 1000, updated_at: Some(1000) })
08:31:01 [DEBUG] (158) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=36.189µs elapsed_secs=3.6189e-5
08:31:01 [DEBUG] (158) sqlx::query: summary="UPDATE tasks SET parent_id …" db.statement="\n\n\n                UPDATE tasks \n                SET parent_id = $1, level = $2, name = $3, description = $4, status = $5, deadline = $6, updated_at = $7\n                WHERE id = $8\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=86.413µs elapsed_secs=8.6413e-5
08:31:01 [DEBUG] (168) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.229372ms elapsed_secs=0.073229372
08:31:01 [DEBUG] (166) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.470721ms elapsed_secs=0.073470721
08:31:01 [DEBUG] (163) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=74.598136ms elapsed_secs=0.074598136
08:31:01 [INFO] Updated task: Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "UPDATE_task", description: Some("UPDATE_task_description"), status: 0, deadline: None, created_at: 1000, updated_at: Some(1749544261) }
08:31:01 [DEBUG] (150) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "UPDATE_task", description: Some("UPDATE_task_description"), status: 0, deadline: None, created_at: 1000, updated_at: Some(1749544261) }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "9794e97d-a21f-427c-93af-046acab7ea54", api_version: "0.1.0" }) }
08:31:01 [ERROR] Error: BadRequest("[TaskHandlerPathAndBodyIdMismatch] Path ID and body ID mismatch: (path.id: 1, task_data.id: Some(0))")
08:31:01 [DEBUG] (156) actix_web::types::json: Failed to deserialize Json from payload. Request path: /tasks/0
08:31:01 [ERROR] Error: BadRequest("[TaskHandlerInvalidJsonPost] Invalid JSON format in request body: (ActixWebError: Content type error)")
08:31:01 [DEBUG] (158) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=74.155µs elapsed_secs=7.4155e-5
08:31:01 [DEBUG] (150) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "UPDATE_task", description: Some("UPDATE_task_description"), status: 0, deadline: None, created_at: 1000, updated_at: Some(1749544261) })
08:31:01 [DEBUG] (150) menahel::handlers::task: Response: TaskResponse { results: [Task { id: Some(0), project_id: 0, parent_id: None, level: 0, name: "UPDATE_task", description: Some("UPDATE_task_description"), status: 0, deadline: None, created_at: 1000, updated_at: Some(1749544261) }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "ade39a3e-b738-48f7-a244-487f0061f122", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (166) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=1 rows_returned=0 elapsed=296.191µs elapsed_secs=0.000296191
08:31:01 [DEBUG] (154) menahel::repository::task_repo: Get task by id with transaction: None
08:31:01 [ERROR] Error: NotFound("[TaskGetByIdNotFound] Task not found: (ID = 100)")
08:31:01 [DEBUG] (177) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.665584ms elapsed_secs=0.073665584
08:31:01 [DEBUG] (174) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=74.729963ms elapsed_secs=0.074729963
08:31:01 [DEBUG] (177) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=70.142µs elapsed_secs=7.0142e-5
08:31:01 [DEBUG] (161) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) })
08:31:01 [DEBUG] (177) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=67.642µs elapsed_secs=6.7642e-5
08:31:01 [DEBUG] (174) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=105.651µs elapsed_secs=0.000105651
08:31:01 [DEBUG] (177) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=1 rows_returned=0 elapsed=31.194µs elapsed_secs=3.1194e-5
08:31:01 [DEBUG] (159) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(2), project_id: 0, parent_id: Some(2), level: 2, name: "TestTrivialTask2", description: Some("TestTask2Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) })
08:31:01 [DEBUG] (161) menahel::repository::task_repo: Get task by id with transaction: None
08:31:01 [ERROR] Error: NotFound("[TaskGetByIdNotFound] Task not found: (ID = 100)")
08:31:01 [DEBUG] (174) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=49.395µs elapsed_secs=4.9395e-5
08:31:01 [DEBUG] (174) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=16.011µs elapsed_secs=1.6011e-5
08:31:01 [DEBUG] (159) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 0, parent_id: Some(1), level: 1, name: "TestMinorTask1", description: Some("TestTask1Description"), status: 0, deadline: Some(1000), created_at: 2000, updated_at: Some(2000) })
08:31:01 [ERROR] Error: BadRequest("[TaskParentLevelInvalid] Parent task level is not one level higher: (Level = 1, Parent Level = 1)")
08:31:01 [DEBUG] (181) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.852895ms elapsed_secs=0.075852895
08:31:01 [DEBUG] (188) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.645813ms elapsed_secs=0.008645813
08:31:01 [DEBUG] (189) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.099649ms elapsed_secs=0.008099649
08:31:01 [DEBUG] (199) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.384µs elapsed_secs=3.8384e-5
08:31:01 [DEBUG] (198) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.532µs elapsed_secs=4.4532e-5
08:31:01 [DEBUG] (164) actix_web::types::path: Failed during Path extractor deserialization. Request path: "/tasks/abc"
08:31:01 [ERROR] Error: BadRequest("[TaskHandlerInvalidPath] Invalid path: (ActixWebError: can not parse \"abc\" to a i64)")
08:31:01 [DEBUG] (180) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=78.143088ms elapsed_secs=0.078143088
08:31:01 [DEBUG] (182) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.045057ms elapsed_secs=0.077045057
08:31:01 [DEBUG] (193) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.347815ms elapsed_secs=0.011347815
08:31:01 [DEBUG] (191) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.385052ms elapsed_secs=0.011385052
08:31:01 [ERROR] Error: BadRequest("[TaskProjectIdInvalid] Project ID must be greater than 0: (ID = -1)")
08:31:01 [DEBUG] (203) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=265.797µs elapsed_secs=0.000265797
08:31:01 [DEBUG] (202) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=307.394µs elapsed_secs=0.000307394
08:31:01 [DEBUG] (182) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=351.122µs elapsed_secs=0.000351122
08:31:01 [ERROR] Error: InternalServerError("[UserCreateFailed] Failed to create user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
08:31:01 [DEBUG] (185) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.819702ms elapsed_secs=0.081819702
08:31:01 [DEBUG] (199) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.225888ms elapsed_secs=0.012225888
08:31:01 [DEBUG] (195) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=14.419373ms elapsed_secs=0.014419373
08:31:01 [DEBUG] (197) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.47069ms elapsed_secs=0.01347069
08:31:01 [DEBUG] (198) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.194067ms elapsed_secs=0.012194067
08:31:01 [DEBUG] (199) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=116.167µs elapsed_secs=0.000116167
08:31:01 [DEBUG] (183) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=83.848167ms elapsed_secs=0.083848167
08:31:01 [DEBUG] (185) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=3.10618ms elapsed_secs=0.00310618
08:31:01 [DEBUG] (207) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=76.529µs elapsed_secs=7.6529e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=84.990971ms elapsed_secs=0.084990971
08:31:01 [DEBUG] (198) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=154.707µs elapsed_secs=0.000154707
08:31:01 [DEBUG] (199) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=158.099µs elapsed_secs=0.000158099
08:31:01 [DEBUG] (209) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.126µs elapsed_secs=3.8126e-5
08:31:01 [DEBUG] (201) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.705475ms elapsed_secs=0.010705475
08:31:01 [INFO] Created user: User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" }
08:31:01 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=191.402µs elapsed_secs=0.000191402
08:31:01 [ERROR] Error: BadRequest("[UserNameEmpty] Username cannot be empty: (Name = )")
08:31:01 [DEBUG] (198) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=117.716µs elapsed_secs=0.000117716
08:31:01 [DEBUG] (210) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.639µs elapsed_secs=3.9639e-5
08:31:01 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=272.36µs elapsed_secs=0.00027236
08:31:01 [DEBUG] (185) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=195.432µs elapsed_secs=0.000195432
08:31:01 [DEBUG] (198) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=411.976µs elapsed_secs=0.000411976
08:31:01 [DEBUG] (172) menahel::repository::user_repo: Get user by name: Some(User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" })
08:31:01 [ERROR] Error: InternalServerError("[UserCreateFailed] Failed to create user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
08:31:01 [DEBUG] (198) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.389µs elapsed_secs=7.1389e-5
08:31:01 [DEBUG] (184) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=168.915µs elapsed_secs=0.000168915
08:31:01 [DEBUG] (205) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.428252ms elapsed_secs=0.009428252
08:31:01 [DEBUG] (202) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.970229ms elapsed_secs=0.009970229
08:31:01 [DEBUG] (172) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(10), username: "testuser10", email: "test10@example.com", password_hash: "2a75ee7c54d74915f5c9f37bd319a1141dedb96704d0f66ea406101a6c6b3ce6" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "eed38fef-3179-4861-88c5-746344e63417", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (202) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=196.111µs elapsed_secs=0.000196111
08:31:01 [DEBUG] (203) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.209726ms elapsed_secs=0.012209726
08:31:01 [DEBUG] (215) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=432.371µs elapsed_secs=0.000432371
08:31:01 [DEBUG] (202) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=340.473µs elapsed_secs=0.000340473
08:31:01 [DEBUG] (203) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=329.972µs elapsed_secs=0.000329972
08:31:01 [DEBUG] (203) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=316.235µs elapsed_secs=0.000316235
08:31:01 [DEBUG] (202) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=325.677µs elapsed_secs=0.000325677
08:31:01 [DEBUG] (202) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=636.749µs elapsed_secs=0.000636749
08:31:01 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.315963ms elapsed_secs=0.001315963
08:31:01 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.751µs elapsed_secs=0.000107751
08:31:01 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.391723ms elapsed_secs=0.003391723
08:31:01 [DEBUG] (207) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.254264ms elapsed_secs=0.011254264
08:31:01 [DEBUG] (198) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.412737ms elapsed_secs=0.003412737
08:31:01 [DEBUG] (208) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.77671ms elapsed_secs=0.01277671
08:31:01 [DEBUG] (207) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=269.486µs elapsed_secs=0.000269486
08:31:01 [DEBUG] (198) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=141.084µs elapsed_secs=0.000141084
08:31:01 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=247.795µs elapsed_secs=0.000247795
08:31:01 [DEBUG] (207) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=79.74µs elapsed_secs=7.974e-5
08:31:01 [DEBUG] (198) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.805µs elapsed_secs=8.8805e-5
08:31:01 [DEBUG] (209) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.676896ms elapsed_secs=0.011676896
08:31:01 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.846µs elapsed_secs=7.7846e-5
08:31:01 [DEBUG] (210) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.356474ms elapsed_secs=0.011356474
08:31:01 [DEBUG] (218) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=98.374µs elapsed_secs=9.8374e-5
08:31:01 [DEBUG] (209) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.656µs elapsed_secs=9.7656e-5
08:31:01 [DEBUG] (210) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=100.124µs elapsed_secs=0.000100124
08:31:01 [DEBUG] (207) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=477.101µs elapsed_secs=0.000477101
08:31:01 [DEBUG] (209) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=73.46µs elapsed_secs=7.346e-5
08:31:01 [DEBUG] (210) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=102.754µs elapsed_secs=0.000102754
08:31:01 [DEBUG] (207) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.934µs elapsed_secs=5.9934e-5
08:31:01 [DEBUG] (209) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=226.829µs elapsed_secs=0.000226829
08:31:01 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=210.861µs elapsed_secs=0.000210861
08:31:01 [DEBUG] (202) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.460992ms elapsed_secs=0.003460992
08:31:01 [DEBUG] (209) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.456µs elapsed_secs=7.2456e-5
08:31:01 [DEBUG] (212) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.46645ms elapsed_secs=0.01246645
08:31:01 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.396µs elapsed_secs=5.5396e-5
08:31:01 [DEBUG] (202) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=133.819µs elapsed_secs=0.000133819
08:31:01 [DEBUG] (202) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.228µs elapsed_secs=7.8228e-5
08:31:01 [DEBUG] (219) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.341µs elapsed_secs=4.2341e-5
08:31:01 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.597758ms elapsed_secs=0.003597758
08:31:01 [DEBUG] (214) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.527104ms elapsed_secs=0.012527104
08:31:01 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=158.751µs elapsed_secs=0.000158751
08:31:01 [DEBUG] (220) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.84µs elapsed_secs=3.684e-5
08:31:01 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.687µs elapsed_secs=5.1687e-5
08:31:01 [DEBUG] (215) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.079872ms elapsed_secs=0.011079872
08:31:01 [DEBUG] (217) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.696481ms elapsed_secs=0.009696481
08:31:01 [DEBUG] (215) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=113.074µs elapsed_secs=0.000113074
08:31:01 [DEBUG] (215) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=99.861µs elapsed_secs=9.9861e-5
08:31:01 [DEBUG] (221) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.666µs elapsed_secs=4.3666e-5
08:31:01 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.506016ms elapsed_secs=0.002506016
08:31:01 [DEBUG] (207) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.520068ms elapsed_secs=0.002520068
08:31:01 [DEBUG] (198) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.626241ms elapsed_secs=0.002626241
08:31:01 [DEBUG] (215) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=233.458µs elapsed_secs=0.000233458
08:31:01 [DEBUG] (207) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=404.801µs elapsed_secs=0.000404801
08:31:01 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=789.292µs elapsed_secs=0.000789292
08:31:01 [DEBUG] (215) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=373.532µs elapsed_secs=0.000373532
08:31:01 [DEBUG] (198) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=413.658µs elapsed_secs=0.000413658
08:31:01 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.100673ms elapsed_secs=0.003100673
08:31:01 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=271.464µs elapsed_secs=0.000271464
08:31:01 [DEBUG] (198) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.27µs elapsed_secs=0.00011827
08:31:01 [DEBUG] (207) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.111µs elapsed_secs=0.000151111
08:31:01 [DEBUG] (209) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.083564ms elapsed_secs=0.003083564
08:31:01 [DEBUG] (202) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.224403ms elapsed_secs=0.003224403
08:31:01 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=446.896µs elapsed_secs=0.000446896
08:31:01 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=296.351µs elapsed_secs=0.000296351
08:31:01 [DEBUG] (209) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=694.422µs elapsed_secs=0.000694422
08:31:01 [DEBUG] (202) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=535.76µs elapsed_secs=0.00053576
08:31:01 [DEBUG] (218) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.817427ms elapsed_secs=0.009817427
08:31:01 [DEBUG] (209) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.117µs elapsed_secs=8.9117e-5
08:31:01 [DEBUG] (202) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.709µs elapsed_secs=0.000119709
08:31:01 [DEBUG] (218) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=131.22µs elapsed_secs=0.00013122
08:31:01 [DEBUG] (218) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=107.282µs elapsed_secs=0.000107282
08:31:01 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.776365ms elapsed_secs=0.003776365
08:31:01 [DEBUG] (219) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.299191ms elapsed_secs=0.009299191
08:31:01 [DEBUG] (218) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=447.609µs elapsed_secs=0.000447609
08:31:01 [DEBUG] (219) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=152.092µs elapsed_secs=0.000152092
08:31:01 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=339.153µs elapsed_secs=0.000339153
08:31:01 [DEBUG] (218) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.941µs elapsed_secs=6.5941e-5
08:31:01 [DEBUG] (219) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.43µs elapsed_secs=8.243e-5
08:31:01 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.833µs elapsed_secs=6.1833e-5
08:31:01 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=437.191µs elapsed_secs=0.000437191
08:31:01 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.649µs elapsed_secs=7.9649e-5
08:31:01 [DEBUG] (215) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.832865ms elapsed_secs=0.002832865
08:31:01 [DEBUG] (198) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.311718ms elapsed_secs=0.003311718
08:31:01 [DEBUG] (207) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.250736ms elapsed_secs=0.003250736
08:31:01 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.273754ms elapsed_secs=0.003273754
08:31:01 [DEBUG] (207) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=91.813µs elapsed_secs=9.1813e-5
08:31:01 [DEBUG] (215) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=131.147µs elapsed_secs=0.000131147
08:31:01 [DEBUG] (198) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=127.964µs elapsed_secs=0.000127964
08:31:01 [DEBUG] (207) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=168.5µs elapsed_secs=0.0001685
08:31:01 [DEBUG] (215) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.408µs elapsed_secs=0.000136408
08:31:01 [DEBUG] (220) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.022061ms elapsed_secs=0.011022061
08:31:01 [DEBUG] (221) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.070727ms elapsed_secs=0.010070727
08:31:01 [DEBUG] (209) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.788605ms elapsed_secs=0.002788605
08:31:01 [DEBUG] (221) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=63.125µs elapsed_secs=6.3125e-5
08:31:01 [DEBUG] (202) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.737799ms elapsed_secs=0.002737799
08:31:01 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=368.947µs elapsed_secs=0.000368947
08:31:01 [DEBUG] (198) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.132µs elapsed_secs=0.000126132
08:31:01 [DEBUG] (220) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=73.312µs elapsed_secs=7.3312e-5
08:31:01 [DEBUG] (202) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=206.177µs elapsed_secs=0.000206177
08:31:01 [DEBUG] (221) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.595µs elapsed_secs=7.0595e-5
08:31:01 [DEBUG] (209) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=235.775µs elapsed_secs=0.000235775
08:31:01 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.838375ms elapsed_secs=0.002838375
08:31:01 [DEBUG] (221) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=188.046µs elapsed_secs=0.000188046
08:31:01 [DEBUG] (220) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=54.345µs elapsed_secs=5.4345e-5
08:31:01 [DEBUG] (202) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.863µs elapsed_secs=5.2863e-5
08:31:01 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.524423ms elapsed_secs=0.001524423
08:31:01 [DEBUG] (218) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.549641ms elapsed_secs=0.001549641
08:31:01 [DEBUG] (209) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.88µs elapsed_secs=9.388e-5
08:31:01 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.103µs elapsed_secs=0.000130103
08:31:01 [DEBUG] (221) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.72µs elapsed_secs=0.00010972
08:31:01 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=219.228µs elapsed_secs=0.000219228
08:31:01 [DEBUG] (220) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=189.348µs elapsed_secs=0.000189348
08:31:01 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.589009ms elapsed_secs=0.002589009
08:31:01 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=141.241µs elapsed_secs=0.000141241
08:31:01 [DEBUG] (218) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=321.159µs elapsed_secs=0.000321159
08:31:01 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.657µs elapsed_secs=7.4657e-5
08:31:01 [DEBUG] (220) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.718µs elapsed_secs=5.7718e-5
08:31:01 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.604µs elapsed_secs=0.000110604
08:31:01 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=166.862µs elapsed_secs=0.000166862
08:31:01 [DEBUG] (218) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.898µs elapsed_secs=8.9898e-5
08:31:01 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.95µs elapsed_secs=7.295e-5
08:31:01 [DEBUG] (207) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.77596ms elapsed_secs=0.00277596
08:31:01 [DEBUG] (215) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.131888ms elapsed_secs=0.003131888
08:31:01 [DEBUG] (207) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=303.47µs elapsed_secs=0.00030347
08:31:01 [DEBUG] (215) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=262.477µs elapsed_secs=0.000262477
08:31:01 [DEBUG] (207) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.465µs elapsed_secs=8.2465e-5
08:31:01 [DEBUG] (198) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.126418ms elapsed_secs=0.003126418
08:31:01 [DEBUG] (215) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.741µs elapsed_secs=0.000189741
08:31:01 [DEBUG] (198) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=537.301µs elapsed_secs=0.000537301
08:31:01 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.338507ms elapsed_secs=0.003338507
08:31:01 [DEBUG] (202) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.608837ms elapsed_secs=0.003608837
08:31:01 [DEBUG] (209) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.592162ms elapsed_secs=0.003592162
08:31:01 [DEBUG] (221) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.574818ms elapsed_secs=0.003574818
08:31:01 [DEBUG] (198) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=245.193µs elapsed_secs=0.000245193
08:31:01 [DEBUG] (209) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=555.786µs elapsed_secs=0.000555786
08:31:01 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.788395ms elapsed_secs=0.003788395
08:31:01 [DEBUG] (202) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=790.151µs elapsed_secs=0.000790151
08:31:01 [DEBUG] (220) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.479907ms elapsed_secs=0.003479907
08:31:01 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.010418ms elapsed_secs=0.004010418
08:31:01 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=268.112µs elapsed_secs=0.000268112
08:31:01 [DEBUG] (221) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=568.297µs elapsed_secs=0.000568297
08:31:01 [DEBUG] (199) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=675.267µs elapsed_secs=0.000675267
08:31:01 [DEBUG] (221) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.451µs elapsed_secs=5.7451e-5
08:31:01 [DEBUG] (209) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.852µs elapsed_secs=0.000120852
08:31:01 [DEBUG] (202) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.076µs elapsed_secs=0.000133076
08:31:01 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.351044ms elapsed_secs=0.003351044
08:31:01 [DEBUG] (220) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=131.797µs elapsed_secs=0.000131797
08:31:01 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.911µs elapsed_secs=7.2911e-5
08:31:01 [DEBUG] (203) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=137.436µs elapsed_secs=0.000137436
08:31:01 [DEBUG] (218) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.467695ms elapsed_secs=0.003467695
08:31:01 [DEBUG] (199) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.573µs elapsed_secs=8.1573e-5
08:31:01 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=171.031µs elapsed_secs=0.000171031
08:31:01 [DEBUG] (220) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=173.205µs elapsed_secs=0.000173205
08:31:01 [DEBUG] (203) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.286µs elapsed_secs=7.2286e-5
08:31:01 [DEBUG] (215) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.303637ms elapsed_secs=0.003303637
08:31:01 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.766µs elapsed_secs=0.000108766
08:31:01 [DEBUG] (207) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.347578ms elapsed_secs=0.003347578
08:31:01 [DEBUG] (218) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=136.393µs elapsed_secs=0.000136393
08:31:01 [DEBUG] (215) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=173.65µs elapsed_secs=0.00017365
08:31:01 [DEBUG] (218) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.877µs elapsed_secs=8.6877e-5
08:31:01 [DEBUG] (207) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=96.028µs elapsed_secs=9.6028e-5
08:31:01 [DEBUG] (215) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.098µs elapsed_secs=5.3098e-5
08:31:01 [DEBUG] (198) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.069211ms elapsed_secs=0.003069211
08:31:01 [DEBUG] (207) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=169.784µs elapsed_secs=0.000169784
08:31:01 [DEBUG] (202) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.509697ms elapsed_secs=0.002509697
08:31:01 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.577219ms elapsed_secs=0.002577219
08:31:01 [DEBUG] (221) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.521126ms elapsed_secs=0.002521126
08:31:01 [DEBUG] (209) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.521448ms elapsed_secs=0.002521448
08:31:01 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=276.318µs elapsed_secs=0.000276318
08:31:01 [DEBUG] (221) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=269.878µs elapsed_secs=0.000269878
08:31:01 [DEBUG] (209) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=90.338µs elapsed_secs=9.0338e-5
08:31:01 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.427µs elapsed_secs=5.4427e-5
08:31:01 [DEBUG] (220) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.523566ms elapsed_secs=0.002523566
08:31:01 [DEBUG] (203) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.489965ms elapsed_secs=0.002489965
08:31:01 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.423065ms elapsed_secs=0.002423065
08:31:01 [DEBUG] (199) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.494662ms elapsed_secs=0.002494662
08:31:01 [DEBUG] (218) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.524491ms elapsed_secs=0.002524491
08:31:01 [DEBUG] (221) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.463µs elapsed_secs=4.9463e-5
08:31:01 [DEBUG] (209) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.293µs elapsed_secs=4.9293e-5
08:31:01 [DEBUG] (220) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=127.633µs elapsed_secs=0.000127633
08:31:01 [DEBUG] (210) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=259.397µs elapsed_secs=0.000259397
08:31:01 [DEBUG] (218) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=107.239µs elapsed_secs=0.000107239
08:31:01 [DEBUG] (215) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.534185ms elapsed_secs=0.002534185
08:31:01 [DEBUG] (207) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.542023ms elapsed_secs=0.002542023
08:31:01 [DEBUG] (220) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.017µs elapsed_secs=5.8017e-5
08:31:01 [DEBUG] (210) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.221µs elapsed_secs=9.2221e-5
08:31:01 [DEBUG] (218) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.683µs elapsed_secs=7.2683e-5
08:31:01 [DEBUG] (215) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=164.883µs elapsed_secs=0.000164883
08:31:01 [DEBUG] (215) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.589µs elapsed_secs=8.7589e-5
08:31:01 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.690304ms elapsed_secs=0.003690304
08:31:01 [DEBUG] (209) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.660834ms elapsed_secs=0.003660834
08:31:01 [DEBUG] (221) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.380223ms elapsed_secs=0.004380223
08:31:01 [DEBUG] (219) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=524.433µs elapsed_secs=0.000524433
08:31:01 [DEBUG] (220) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.591453ms elapsed_secs=0.003591453
08:31:01 [DEBUG] (221) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=523.456µs elapsed_secs=0.000523456
08:31:01 [DEBUG] (210) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.665076ms elapsed_secs=0.003665076
08:31:01 [DEBUG] (218) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.65902ms elapsed_secs=0.00365902
08:31:01 [DEBUG] (219) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=262.403µs elapsed_secs=0.000262403
08:31:01 [DEBUG] (221) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=152.661µs elapsed_secs=0.000152661
08:31:01 [DEBUG] (215) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.594576ms elapsed_secs=0.002594576
08:31:01 [DEBUG] (220) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=191.46µs elapsed_secs=0.00019146
08:31:01 [DEBUG] (218) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=499.983µs elapsed_secs=0.000499983
08:31:01 [DEBUG] (220) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.105µs elapsed_secs=9.5105e-5
08:31:01 [DEBUG] (218) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.63µs elapsed_secs=9.663e-5
08:31:01 [DEBUG] (221) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.104058ms elapsed_secs=0.002104058
08:31:01 [DEBUG] (220) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.041895ms elapsed_secs=0.002041895
08:31:01 [DEBUG] (218) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.061254ms elapsed_secs=0.002061254
08:31:01 [DEBUG] (219) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.110697ms elapsed_secs=0.002110697
08:31:01 [DEBUG] (221) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=121.491µs elapsed_secs=0.000121491
08:31:01 [DEBUG] (221) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=183.756µs elapsed_secs=0.000183756
08:31:01 [DEBUG] (220) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=281.94µs elapsed_secs=0.00028194
08:31:01 [DEBUG] (220) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.969µs elapsed_secs=7.9969e-5
08:31:01 [DEBUG] (220) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.58355ms elapsed_secs=0.00258355
08:31:01 [DEBUG] (221) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.711128ms elapsed_secs=0.002711128
08:31:01 [DEBUG] (198) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.974509ms elapsed_secs=0.077974509
08:31:01 [DEBUG] (202) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.733059ms elapsed_secs=0.076733059
08:31:01 [ERROR] Error: BadRequest("[UserEmailInvalid] Invalid email address: (Email = test11example.com)")
08:31:01 [DEBUG] (203) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.858595ms elapsed_secs=0.076858595
08:31:01 [DEBUG] (199) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.494428ms elapsed_secs=0.076494428
08:31:01 [DEBUG] (187) actix_web::types::json: Failed to deserialize Json from payload. Request path: /users
08:31:01 [ERROR] Error: BadRequest("[UserHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
08:31:01 [DEBUG] (192) actix_web::types::path: Failed during Path extractor deserialization. Request path: "/users/abc"
08:31:01 [ERROR] Error: BadRequest("[UserHandlerInvalidPath] Invalid path: (ActixWebError: can not parse \"abc\" to a i64)")
08:31:01 [DEBUG] (207) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.994687ms elapsed_secs=0.076994687
08:31:01 [DEBUG] (202) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=2.465741ms elapsed_secs=0.002465741
08:31:01 [INFO] Deleted user: SqliteQueryResult { changes: 1, last_insert_rowid: 10 }
08:31:01 [DEBUG] (207) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=170.021µs elapsed_secs=0.000170021
08:31:01 [ERROR] Error: NotFound("[UserDeleteFailedByIdNotFound] Failed to delete user becouse user does not exist: (ID = 100)")
08:31:01 [DEBUG] (209) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.672173ms elapsed_secs=0.077672173
08:31:01 [DEBUG] (196) actix_web::types::query: Failed during Query extractor deserialization. Request path: "/users"
08:31:01 [ERROR] Error: BadRequest("[UserHandlerInvalidQuery] Invalid query: (ActixWebError: Query deserialize error: invalid digit found in string)")
08:31:01 [DEBUG] (215) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=76.417978ms elapsed_secs=0.076417978
08:31:01 [DEBUG] (210) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=77.084613ms elapsed_secs=0.077084613
08:31:01 [DEBUG] (223) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.282504ms elapsed_secs=0.009282504
08:31:01 [DEBUG] (200) menahel::handlers::user: No target specified, using default target: All
08:31:01 [DEBUG] (200) menahel::handlers::user: Getting all users
08:31:01 [DEBUG] (215) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=85.88µs elapsed_secs=8.588e-5
08:31:01 [DEBUG] (204) menahel::repository::user_repo: Get user by id: Some(User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" })
08:31:01 [DEBUG] (204) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "8536f080-cc8e-47ba-bc0d-3698e74cf539", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (210) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=1 rows_returned=10 elapsed=84.544µs elapsed_secs=8.4544e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.348µs elapsed_secs=6.9348e-5
08:31:01 [DEBUG] (200) menahel::repository::user_repo: Get all users: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }, User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }, User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }]
08:31:01 [DEBUG] (200) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }, User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }, User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }], count: 10, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "262771fa-57bd-4bf3-bc6f-4f90296a0e34", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (227) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.775563ms elapsed_secs=0.009775563
08:31:01 [DEBUG] (237) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.956µs elapsed_secs=6.0956e-5
08:31:01 [DEBUG] (231) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.322988ms elapsed_secs=0.009322988
08:31:01 [DEBUG] (225) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.455371ms elapsed_secs=0.012455371
08:31:01 [DEBUG] (240) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=80.058µs elapsed_secs=8.0058e-5
08:31:01 [DEBUG] (241) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.131µs elapsed_secs=4.8131e-5
08:31:01 [DEBUG] (230) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=11.84218ms elapsed_secs=0.01184218
08:31:01 [DEBUG] (242) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.648µs elapsed_secs=4.2648e-5
08:31:01 [DEBUG] (218) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.077171ms elapsed_secs=0.081077171
08:31:01 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidTarget] Invalid target. Target must be 'all', 'name', or 'id': (target: \"invalid\")")
08:31:01 [DEBUG] (219) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=82.608467ms elapsed_secs=0.082608467
08:31:01 [DEBUG] (233) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.762348ms elapsed_secs=0.010762348
08:31:01 [DEBUG] (246) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.736µs elapsed_secs=3.3736e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.291734ms elapsed_secs=0.011291734
08:31:01 [DEBUG] (234) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.915µs elapsed_secs=8.1915e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=53.681µs elapsed_secs=5.3681e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=116.102µs elapsed_secs=0.000116102
08:31:01 [DEBUG] (234) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.687µs elapsed_secs=8.0687e-5
08:31:01 [DEBUG] (236) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.386722ms elapsed_secs=0.012386722
08:31:01 [DEBUG] (248) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=146.335µs elapsed_secs=0.000146335
08:31:01 [DEBUG] (237) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.819989ms elapsed_secs=0.011819989
08:31:01 [DEBUG] (241) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.501669ms elapsed_secs=0.008501669
08:31:01 [DEBUG] (239) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=12.07887ms elapsed_secs=0.01207887
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=183.935µs elapsed_secs=0.000183935
08:31:01 [DEBUG] (241) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.993µs elapsed_secs=8.1993e-5
08:31:01 [DEBUG] (241) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=60.445µs elapsed_secs=6.0445e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=160.67µs elapsed_secs=0.00016067
08:31:01 [DEBUG] (220) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=83.131282ms elapsed_secs=0.083131282
08:31:01 [DEBUG] (221) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=83.334414ms elapsed_secs=0.083334414
08:31:01 [DEBUG] (249) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.27µs elapsed_secs=6.827e-5
08:31:01 [DEBUG] (241) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=242.1µs elapsed_secs=0.0002421
08:31:01 [DEBUG] (240) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.285261ms elapsed_secs=0.011285261
08:31:01 [DEBUG] (237) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=345.722µs elapsed_secs=0.000345722
08:31:01 [DEBUG] (221) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=272.938µs elapsed_secs=0.000272938
08:31:01 [DEBUG] (242) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.617306ms elapsed_secs=0.011617306
08:31:01 [DEBUG] (216) menahel::repository::user_repo: Get user by name: Some(User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" })
08:31:01 [DEBUG] (216) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "46be415a-3715-4ed3-bde9-4a812463043b", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (241) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=530.341µs elapsed_secs=0.000530341
08:31:01 [DEBUG] (237) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=194.307µs elapsed_secs=0.000194307
08:31:01 [DEBUG] (220) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=1 rows_returned=0 elapsed=412.008µs elapsed_secs=0.000412008
08:31:01 [DEBUG] (240) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=185.773µs elapsed_secs=0.000185773
08:31:01 [DEBUG] (213) menahel::repository::user_repo: Get user by id: None
08:31:01 [ERROR] Error: NotFound("[UserGetByIdNotFound] User not found: (ID = 1000)")
08:31:01 [DEBUG] (242) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=221.202µs elapsed_secs=0.000221202
08:31:01 [DEBUG] (246) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.853613ms elapsed_secs=0.009853613
08:31:01 [DEBUG] (234) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.503043ms elapsed_secs=0.004503043
08:31:01 [DEBUG] (247) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=10.218762ms elapsed_secs=0.010218762
08:31:01 [DEBUG] (240) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=179.157µs elapsed_secs=0.000179157
08:31:01 [DEBUG] (242) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=252.645µs elapsed_secs=0.000252645
08:31:01 [DEBUG] (234) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=487.766µs elapsed_secs=0.000487766
08:31:01 [DEBUG] (254) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.439µs elapsed_secs=3.2439e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=246.582µs elapsed_secs=0.000246582
08:31:01 [DEBUG] (242) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=838.331µs elapsed_secs=0.000838331
08:31:01 [DEBUG] (240) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=878.789µs elapsed_secs=0.000878789
08:31:01 [DEBUG] (242) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.667µs elapsed_secs=5.9667e-5
08:31:01 [DEBUG] (240) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.046µs elapsed_secs=5.3046e-5
08:31:01 [DEBUG] (244) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.802151ms elapsed_secs=0.013802151
08:31:01 [DEBUG] (246) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.416µs elapsed_secs=6.6416e-5
08:31:01 [DEBUG] (248) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.229827ms elapsed_secs=0.009229827
08:31:01 [DEBUG] (246) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=388.545µs elapsed_secs=0.000388545
08:31:01 [DEBUG] (255) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.941µs elapsed_secs=3.6941e-5
08:31:01 [DEBUG] (248) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.858µs elapsed_secs=6.6858e-5
08:31:01 [DEBUG] (246) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=165.223µs elapsed_secs=0.000165223
08:31:01 [DEBUG] (248) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=67.901µs elapsed_secs=6.7901e-5
08:31:01 [DEBUG] (246) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=41.706µs elapsed_secs=4.1706e-5
08:31:01 [DEBUG] (241) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.049176ms elapsed_secs=0.003049176
08:31:01 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=170.276µs elapsed_secs=0.000170276
08:31:01 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.624µs elapsed_secs=0.000108624
08:31:01 [DEBUG] (241) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=156.284µs elapsed_secs=0.000156284
08:31:01 [DEBUG] (241) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.894µs elapsed_secs=6.9894e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.160239ms elapsed_secs=0.003160239
08:31:01 [DEBUG] (249) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.041116ms elapsed_secs=0.009041116
08:31:01 [DEBUG] (237) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=137.455µs elapsed_secs=0.000137455
08:31:01 [DEBUG] (249) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.266µs elapsed_secs=6.6266e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.636µs elapsed_secs=6.4636e-5
08:31:01 [DEBUG] (249) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=83.295µs elapsed_secs=8.3295e-5
08:31:01 [DEBUG] (240) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.94175ms elapsed_secs=0.00294175
08:31:01 [DEBUG] (242) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.230472ms elapsed_secs=0.003230472
08:31:01 [DEBUG] (234) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.222275ms elapsed_secs=0.003222275
08:31:01 [DEBUG] (251) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.12886ms elapsed_secs=0.00812886
08:31:01 [DEBUG] (249) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=754.314µs elapsed_secs=0.000754314
08:31:01 [DEBUG] (240) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=635.18µs elapsed_secs=0.00063518
08:31:01 [DEBUG] (249) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.441µs elapsed_secs=8.8441e-5
08:31:01 [DEBUG] (242) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=969.938µs elapsed_secs=0.000969938
08:31:01 [DEBUG] (254) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.503921ms elapsed_secs=0.008503921
08:31:01 [DEBUG] (234) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=699.966µs elapsed_secs=0.000699966
08:31:01 [DEBUG] (253) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=9.521287ms elapsed_secs=0.009521287
08:31:01 [DEBUG] (240) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=486.487µs elapsed_secs=0.000486487
08:31:01 [DEBUG] (254) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=98.295µs elapsed_secs=9.8295e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.339µs elapsed_secs=6.5339e-5
08:31:01 [DEBUG] (242) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=686.935µs elapsed_secs=0.000686935
08:31:01 [DEBUG] (256) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=107.199µs elapsed_secs=0.000107199
08:31:01 [DEBUG] (254) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=87.617µs elapsed_secs=8.7617e-5
08:31:01 [DEBUG] (246) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.733507ms elapsed_secs=0.003733507
08:31:01 [DEBUG] (257) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.321µs elapsed_secs=3.8321e-5
08:31:01 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.04239ms elapsed_secs=0.00404239
08:31:01 [DEBUG] (254) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=605.777µs elapsed_secs=0.000605777
08:31:01 [DEBUG] (246) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=704.042µs elapsed_secs=0.000704042
08:31:01 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=544.704µs elapsed_secs=0.000544704
08:31:01 [DEBUG] (254) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=214.214µs elapsed_secs=0.000214214
08:31:01 [DEBUG] (246) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.94µs elapsed_secs=0.00013794
08:31:01 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.885µs elapsed_secs=5.6885e-5
08:31:01 [DEBUG] (241) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.635259ms elapsed_secs=0.003635259
08:31:01 [DEBUG] (241) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=324.001µs elapsed_secs=0.000324001
08:31:01 [DEBUG] (241) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.039µs elapsed_secs=9.2039e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.346012ms elapsed_secs=0.004346012
08:31:01 [DEBUG] (255) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.049329ms elapsed_secs=0.012049329
08:31:01 [DEBUG] (255) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=252.957µs elapsed_secs=0.000252957
08:31:01 [DEBUG] (237) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=286.241µs elapsed_secs=0.000286241
08:31:01 [DEBUG] (255) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=106.082µs elapsed_secs=0.000106082
08:31:01 [DEBUG] (237) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.015µs elapsed_secs=4.8015e-5
08:31:01 [DEBUG] (249) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.027913ms elapsed_secs=0.004027913
08:31:01 [DEBUG] (255) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=285.362µs elapsed_secs=0.000285362
08:31:01 [DEBUG] (240) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.092609ms elapsed_secs=0.004092609
08:31:01 [DEBUG] (249) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=103.32µs elapsed_secs=0.00010332
08:31:01 [DEBUG] (255) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.234µs elapsed_secs=8.4234e-5
08:31:01 [DEBUG] (249) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.465µs elapsed_secs=5.5465e-5
08:31:01 [DEBUG] (240) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=204.767µs elapsed_secs=0.000204767
08:31:01 [DEBUG] (240) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=47.473µs elapsed_secs=4.7473e-5
08:31:01 [DEBUG] (242) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.951733ms elapsed_secs=0.002951733
08:31:01 [DEBUG] (234) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.017506ms elapsed_secs=0.003017506
08:31:01 [DEBUG] (242) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=115.144µs elapsed_secs=0.000115144
08:31:01 [DEBUG] (234) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=86.011µs elapsed_secs=8.6011e-5
08:31:01 [DEBUG] (242) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.346µs elapsed_secs=5.3346e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=42.119µs elapsed_secs=4.2119e-5
08:31:01 [DEBUG] (254) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.762175ms elapsed_secs=0.002762175
08:31:01 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.739929ms elapsed_secs=0.002739929
08:31:01 [DEBUG] (246) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.772889ms elapsed_secs=0.002772889
08:31:01 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=162.217µs elapsed_secs=0.000162217
08:31:01 [DEBUG] (254) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=150.807µs elapsed_secs=0.000150807
08:31:01 [DEBUG] (246) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=88.407µs elapsed_secs=8.8407e-5
08:31:01 [DEBUG] (254) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=48.085µs elapsed_secs=4.8085e-5
08:31:01 [DEBUG] (246) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=28.986µs elapsed_secs=2.8986e-5
08:31:01 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.808µs elapsed_secs=5.5808e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.129785ms elapsed_secs=0.010129785
08:31:01 [DEBUG] (257) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.668576ms elapsed_secs=0.009668576
08:31:01 [DEBUG] (241) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.597351ms elapsed_secs=0.002597351
08:31:01 [DEBUG] (256) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.942µs elapsed_secs=7.8942e-5
08:31:01 [DEBUG] (257) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=109.074µs elapsed_secs=0.000109074
08:31:01 [DEBUG] (256) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.243µs elapsed_secs=6.3243e-5
08:31:01 [DEBUG] (241) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=112.202µs elapsed_secs=0.000112202
08:31:01 [DEBUG] (257) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.668µs elapsed_secs=6.9668e-5
08:31:01 [DEBUG] (255) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.540041ms elapsed_secs=0.002540041
08:31:01 [DEBUG] (237) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.531123ms elapsed_secs=0.002531123
08:31:01 [DEBUG] (241) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.4µs elapsed_secs=6.34e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=561.022µs elapsed_secs=0.000561022
08:31:01 [DEBUG] (257) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=528.712µs elapsed_secs=0.000528712
08:31:01 [DEBUG] (255) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=256.296µs elapsed_secs=0.000256296
08:31:01 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.584µs elapsed_secs=6.6584e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=185.299µs elapsed_secs=0.000185299
08:31:01 [DEBUG] (257) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.046µs elapsed_secs=5.7046e-5
08:31:01 [DEBUG] (242) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.610316ms elapsed_secs=0.002610316
08:31:01 [DEBUG] (240) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.57304ms elapsed_secs=0.00257304
08:31:01 [DEBUG] (249) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.71168ms elapsed_secs=0.00271168
08:31:01 [DEBUG] (255) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.501µs elapsed_secs=4.6501e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=164.156µs elapsed_secs=0.000164156
08:31:01 [DEBUG] (242) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=174.193µs elapsed_secs=0.000174193
08:31:01 [DEBUG] (234) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.925904ms elapsed_secs=0.002925904
08:31:01 [DEBUG] (240) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=109.063µs elapsed_secs=0.000109063
08:31:01 [DEBUG] (242) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=143.142µs elapsed_secs=0.000143142
08:31:01 [DEBUG] (249) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=279.722µs elapsed_secs=0.000279722
08:31:01 [DEBUG] (240) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.415µs elapsed_secs=0.000122415
08:31:01 [DEBUG] (234) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=197.264µs elapsed_secs=0.000197264
08:31:01 [DEBUG] (249) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.527µs elapsed_secs=8.3527e-5
08:31:01 [DEBUG] (234) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.732µs elapsed_secs=7.0732e-5
08:31:01 [DEBUG] (254) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.156073ms elapsed_secs=0.003156073
08:31:01 [DEBUG] (246) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.344767ms elapsed_secs=0.003344767
08:31:01 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.256905ms elapsed_secs=0.003256905
08:31:01 [DEBUG] (246) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=356.543µs elapsed_secs=0.000356543
08:31:01 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=247.707µs elapsed_secs=0.000247707
08:31:01 [DEBUG] (254) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=439.153µs elapsed_secs=0.000439153
08:31:01 [DEBUG] (241) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.8711ms elapsed_secs=0.0038711
08:31:01 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.272µs elapsed_secs=7.3272e-5
08:31:01 [DEBUG] (254) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=229.418µs elapsed_secs=0.000229418
08:31:01 [DEBUG] (246) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.48µs elapsed_secs=0.00013948
08:31:01 [DEBUG] (241) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=242.183µs elapsed_secs=0.000242183
08:31:01 [DEBUG] (241) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.647µs elapsed_secs=8.1647e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.719209ms elapsed_secs=0.003719209
08:31:01 [DEBUG] (255) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.903185ms elapsed_secs=0.003903185
08:31:01 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.926275ms elapsed_secs=0.003926275
08:31:01 [DEBUG] (257) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.928275ms elapsed_secs=0.003928275
08:31:01 [DEBUG] (237) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=103.759µs elapsed_secs=0.000103759
08:31:01 [DEBUG] (255) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=159.07µs elapsed_secs=0.00015907
08:31:01 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=141.261µs elapsed_secs=0.000141261
08:31:01 [DEBUG] (234) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.218716ms elapsed_secs=0.003218716
08:31:01 [DEBUG] (249) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.151741ms elapsed_secs=0.003151741
08:31:01 [DEBUG] (242) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.147758ms elapsed_secs=0.003147758
08:31:01 [DEBUG] (257) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=129.162µs elapsed_secs=0.000129162
08:31:01 [DEBUG] (240) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.327644ms elapsed_secs=0.003327644
08:31:01 [DEBUG] (237) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.118µs elapsed_secs=9.9118e-5
08:31:01 [DEBUG] (255) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.168µs elapsed_secs=4.9168e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=34.719µs elapsed_secs=3.4719e-5
08:31:01 [DEBUG] (249) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=165.556µs elapsed_secs=0.000165556
08:31:01 [DEBUG] (242) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=122.037µs elapsed_secs=0.000122037
08:31:01 [DEBUG] (257) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.537µs elapsed_secs=0.000131537
08:31:01 [DEBUG] (240) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=152.175µs elapsed_secs=0.000152175
08:31:01 [DEBUG] (249) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.825µs elapsed_secs=6.7825e-5
08:31:01 [DEBUG] (240) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.253µs elapsed_secs=5.4253e-5
08:31:01 [DEBUG] (254) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.308653ms elapsed_secs=0.002308653
08:31:01 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.259951ms elapsed_secs=0.002259951
08:31:01 [DEBUG] (246) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.326625ms elapsed_secs=0.002326625
08:31:01 [DEBUG] (242) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=40.089µs elapsed_secs=4.0089e-5
08:31:01 [DEBUG] (246) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=84.392µs elapsed_secs=8.4392e-5
08:31:01 [DEBUG] (248) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=86.204µs elapsed_secs=8.6204e-5
08:31:01 [DEBUG] (254) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=119.256µs elapsed_secs=0.000119256
08:31:01 [DEBUG] (241) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.571457ms elapsed_secs=0.002571457
08:31:01 [DEBUG] (248) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.235µs elapsed_secs=6.6235e-5
08:31:01 [DEBUG] (246) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.646µs elapsed_secs=0.000110646
08:31:01 [DEBUG] (254) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.909µs elapsed_secs=9.1909e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.140838ms elapsed_secs=0.002140838
08:31:01 [DEBUG] (255) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.408152ms elapsed_secs=0.002408152
08:31:01 [DEBUG] (237) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.384784ms elapsed_secs=0.002384784
08:31:01 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=130.153µs elapsed_secs=0.000130153
08:31:01 [DEBUG] (255) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=88.332µs elapsed_secs=8.8332e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.787µs elapsed_secs=4.9787e-5
08:31:01 [DEBUG] (255) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.163µs elapsed_secs=8.1163e-5
08:31:01 [DEBUG] (257) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.24607ms elapsed_secs=0.00224607
08:31:01 [DEBUG] (242) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.277442ms elapsed_secs=0.002277442
08:31:01 [DEBUG] (249) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.27154ms elapsed_secs=0.00227154
08:31:01 [DEBUG] (240) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.332127ms elapsed_secs=0.002332127
08:31:01 [DEBUG] (257) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=190.084µs elapsed_secs=0.000190084
08:31:01 [DEBUG] (249) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=111.912µs elapsed_secs=0.000111912
08:31:01 [DEBUG] (257) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.828µs elapsed_secs=5.6828e-5
08:31:01 [DEBUG] (246) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.19017ms elapsed_secs=0.00219017
08:31:01 [DEBUG] (248) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.371264ms elapsed_secs=0.002371264
08:31:01 [DEBUG] (254) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.405711ms elapsed_secs=0.002405711
08:31:01 [DEBUG] (249) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.292µs elapsed_secs=0.000126292
08:31:01 [DEBUG] (254) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=286.986µs elapsed_secs=0.000286986
08:31:01 [DEBUG] (254) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.617µs elapsed_secs=6.9617e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.443751ms elapsed_secs=0.002443751
08:31:01 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=200.529µs elapsed_secs=0.000200529
08:31:01 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.662µs elapsed_secs=6.6662e-5
08:31:01 [DEBUG] (255) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.927943ms elapsed_secs=0.001927943
08:31:01 [DEBUG] (255) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=115.046µs elapsed_secs=0.000115046
08:31:01 [DEBUG] (255) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.232µs elapsed_secs=5.0232e-5
08:31:01 [DEBUG] (257) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.039657ms elapsed_secs=0.002039657
08:31:01 [DEBUG] (249) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.731774ms elapsed_secs=0.001731774
08:31:01 [DEBUG] (257) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=97.149µs elapsed_secs=9.7149e-5
08:31:01 [DEBUG] (257) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.003µs elapsed_secs=0.000105003
08:31:01 [DEBUG] (254) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.379753ms elapsed_secs=0.002379753
08:31:01 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.155768ms elapsed_secs=0.002155768
08:31:01 [DEBUG] (256) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=205.339µs elapsed_secs=0.000205339
08:31:01 [DEBUG] (256) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.693µs elapsed_secs=4.9693e-5
08:31:01 [DEBUG] (255) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.963737ms elapsed_secs=0.001963737
08:31:01 [DEBUG] (257) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.081715ms elapsed_secs=0.002081715
08:31:01 [DEBUG] (257) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=195.867µs elapsed_secs=0.000195867
08:31:01 [DEBUG] (257) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.518µs elapsed_secs=5.7518e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.00299ms elapsed_secs=0.00200299
08:31:01 [DEBUG] (257) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=1.9744ms elapsed_secs=0.0019744
08:31:01 [DEBUG] (234) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=71.509416ms elapsed_secs=0.071509416
08:31:01 [ERROR] Error: BadRequest("[UserHandlerGetUsersNoNameSpecified] Name is not specified: ()")
08:31:01 [DEBUG] (241) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=70.53038ms elapsed_secs=0.07053038
08:31:01 [DEBUG] (241) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=453.928µs elapsed_secs=0.000453928
08:31:01 [DEBUG] (224) menahel::repository::user_repo: Get user by name: None
08:31:01 [ERROR] Error: NotFound("[UserGetByNameNotFound] User not found: (Name = not_exists)")
08:31:01 [DEBUG] (242) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=70.461036ms elapsed_secs=0.070461036
08:31:01 [DEBUG] (228) menahel::handlers::user: No target specified, using default target: All
08:31:01 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(0), page_size: Some(4))")
08:31:01 [DEBUG] (240) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=71.918914ms elapsed_secs=0.071918914
08:31:01 [DEBUG] (246) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=71.239595ms elapsed_secs=0.071239595
08:31:01 [DEBUG] (237) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=73.83006ms elapsed_secs=0.07383006
08:31:01 [DEBUG] (229) menahel::handlers::user: No target specified, using default target: All
08:31:01 [DEBUG] (232) menahel::handlers::user: No target specified, using default target: All
08:31:01 [DEBUG] (226) menahel::handlers::user: No target specified, using default target: All
08:31:01 [DEBUG] (226) menahel::handlers::user: Getting users with pagination: page: Some(1), page_size: Some(4)
08:31:01 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(1), page_size: None)")
08:31:01 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: None, page_size: Some(10))")
08:31:01 [DEBUG] (259) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.218606ms elapsed_secs=0.008218606
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=56.062µs elapsed_secs=5.6062e-5
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users count with transaction: 10
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users with pagination: offset: 0, limit: 4
08:31:01 [DEBUG] (267) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.155µs elapsed_secs=7.3155e-5
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=281.915µs elapsed_secs=0.000281915
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users with pagination: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }]
08:31:01 [DEBUG] (226) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(0), username: "testuser0", email: "test0@example.com", password_hash: "dummy_hash_0" }, User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" }, User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" }, User { id: Some(3), username: "testuser3", email: "test3@example.com", password_hash: "dummy_hash_3" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 1, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "ffaaebcc-a3dc-4dd1-a22b-6f4a4a6b51d2", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (269) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=181.409µs elapsed_secs=0.000181409
08:31:01 [DEBUG] (226) menahel::handlers::user: No target specified, using default target: All
08:31:01 [DEBUG] (226) menahel::handlers::user: Getting users with pagination: page: Some(2), page_size: Some(4)
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=484.377µs elapsed_secs=0.000484377
08:31:01 [DEBUG] (261) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=8.429572ms elapsed_secs=0.008429572
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users count with transaction: 10
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users with pagination: offset: 4, limit: 4
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=4 elapsed=168.139µs elapsed_secs=0.000168139
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users with pagination: [User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }]
08:31:01 [DEBUG] (226) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(4), username: "testuser4", email: "test4@example.com", password_hash: "dummy_hash_4" }, User { id: Some(5), username: "testuser5", email: "test5@example.com", password_hash: "dummy_hash_5" }, User { id: Some(6), username: "testuser6", email: "test6@example.com", password_hash: "dummy_hash_6" }, User { id: Some(7), username: "testuser7", email: "test7@example.com", password_hash: "dummy_hash_7" }], count: 4, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 2, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "3f1f1234-b08d-450c-8c38-10aa600a905a", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (270) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=92.813µs elapsed_secs=9.2813e-5
08:31:01 [DEBUG] (249) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=74.601658ms elapsed_secs=0.074601658
08:31:01 [DEBUG] (226) menahel::handlers::user: No target specified, using default target: All
08:31:01 [DEBUG] (226) menahel::handlers::user: Getting users with pagination: page: Some(3), page_size: Some(4)
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=21.346µs elapsed_secs=2.1346e-5
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users count with transaction: 10
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users with pagination: offset: 8, limit: 4
08:31:01 [DEBUG] (237) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=1 rows_returned=2 elapsed=51.426µs elapsed_secs=5.1426e-5
08:31:01 [DEBUG] (226) menahel::repository::user_repo: Get users with pagination: [User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }]
08:31:01 [ERROR] Error: BadRequest("[UserHandlerPathAndBodyIdMismatch] Path ID and body ID mismatch: (path.id: 1, user_data.id: Some(2))")
08:31:01 [DEBUG] (248) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=81.806308ms elapsed_secs=0.081806308
08:31:01 [DEBUG] (226) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(8), username: "testuser8", email: "test8@example.com", password_hash: "dummy_hash_8" }, User { id: Some(9), username: "testuser9", email: "test9@example.com", password_hash: "dummy_hash_9" }], count: 2, rc: 0, message: "OK", pagination: Some(Pagination { current_page: 3, page_size: 4 }), metadata: Some(ResponseMetadata { request_id: "b290c0d9-2130-41ba-bc26-fb8f66b6bb0d", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (254) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=75.923184ms elapsed_secs=0.075923184
08:31:01 [DEBUG] (235) menahel::handlers::user: No target specified, using default target: All
08:31:01 [ERROR] Error: BadRequest("[UserHandlerGetUsersInvalidPage] Invalid page or page size. Page must be greater than 0, and page size must be greater than 0 and less than 101: (page: Some(1), page_size: Some(1000))")
08:31:01 [DEBUG] (263) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.503174ms elapsed_secs=0.013503174
08:31:01 [DEBUG] (278) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.591µs elapsed_secs=5.2591e-5
08:31:01 [DEBUG] (279) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.915µs elapsed_secs=3.8915e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.606µs elapsed_secs=3.4606e-5
08:31:01 [DEBUG] (254) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=215.268µs elapsed_secs=0.000215268
08:31:01 [DEBUG] (274) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=173.072µs elapsed_secs=0.000173072
08:31:01 [DEBUG] (245) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" })
08:31:01 [DEBUG] (266) sqlx::query: summary="PRAGMA journal_mode = WAL; …" db.statement="\n\nPRAGMA journal_mode = WAL; PRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=1 elapsed=13.14703ms elapsed_secs=0.01314703
08:31:01 [DEBUG] (254) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=251.59µs elapsed_secs=0.00025159
08:31:01 [ERROR] Error: InternalServerError("[UserUpdateFailed] Failed to update user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.email)")
08:31:01 [DEBUG] (267) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.655158ms elapsed_secs=0.012655158
08:31:01 [DEBUG] (255) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=78.060388ms elapsed_secs=0.078060388
08:31:01 [DEBUG] (267) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=452.602µs elapsed_secs=0.000452602
08:31:01 [DEBUG] (281) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=113.764µs elapsed_secs=0.000113764
08:31:01 [DEBUG] (267) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=172.734µs elapsed_secs=0.000172734
08:31:01 [DEBUG] (269) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.234971ms elapsed_secs=0.014234971
08:31:01 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=729.557µs elapsed_secs=0.000729557
08:31:01 [DEBUG] (269) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=210.137µs elapsed_secs=0.000210137
08:31:01 [DEBUG] (284) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=173.748µs elapsed_secs=0.000173748
08:31:01 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=187.225µs elapsed_secs=0.000187225
08:31:01 [DEBUG] (269) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=143.667µs elapsed_secs=0.000143667
08:31:01 [DEBUG] (269) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=334.23µs elapsed_secs=0.00033423
08:31:01 [DEBUG] (270) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.601352ms elapsed_secs=0.012601352
08:31:01 [DEBUG] (270) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.783µs elapsed_secs=7.6783e-5
08:31:01 [DEBUG] (269) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=231.319µs elapsed_secs=0.000231319
08:31:01 [DEBUG] (270) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.487µs elapsed_secs=7.4487e-5
08:31:01 [DEBUG] (270) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=259.97µs elapsed_secs=0.00025997
08:31:01 [DEBUG] (255) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=68.871µs elapsed_secs=6.8871e-5
08:31:01 [DEBUG] (270) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.036µs elapsed_secs=9.0036e-5
08:31:01 [DEBUG] (243) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "testuser1", email: "test1@example.com", password_hash: "dummy_hash_1" })
08:31:01 [DEBUG] (255) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=219.64µs elapsed_secs=0.00021964
08:31:01 [DEBUG] (256) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=82.946392ms elapsed_secs=0.082946392
08:31:01 [DEBUG] (278) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.192002ms elapsed_secs=0.012192002
08:31:01 [INFO] Updated user: Some(User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" })
08:31:01 [DEBUG] (280) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.073193ms elapsed_secs=0.012073193
08:31:01 [DEBUG] (279) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.412734ms elapsed_secs=0.012412734
08:31:01 [DEBUG] (278) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=88.093µs elapsed_secs=8.8093e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=102.295µs elapsed_secs=0.000102295
08:31:01 [DEBUG] (278) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=65.47µs elapsed_secs=6.547e-5
08:31:01 [DEBUG] (255) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=60.622µs elapsed_secs=6.0622e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=103.501µs elapsed_secs=0.000103501
08:31:01 [DEBUG] (279) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=123.351µs elapsed_secs=0.000123351
08:31:01 [DEBUG] (243) menahel::repository::user_repo: Get user by name: Some(User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" })
08:31:01 [DEBUG] (278) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=226.037µs elapsed_secs=0.000226037
08:31:01 [DEBUG] (279) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.384µs elapsed_secs=8.2384e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=241.852µs elapsed_secs=0.000241852
08:31:01 [DEBUG] (243) menahel::handlers::user: Response: UserResponse { results: [User { id: Some(1), username: "testuser1_x", email: "test1_x@example.com", password_hash: "4a52482a79e737645d9705facc268eec82474bec11bbeac99d041387c77f34c8" }], count: 1, rc: 0, message: "OK", pagination: None, metadata: Some(ResponseMetadata { request_id: "973eb86b-c162-490b-ab9d-6dc1aac65540", api_version: "0.1.0" }) }
08:31:01 [DEBUG] (278) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.418µs elapsed_secs=9.4418e-5
08:31:01 [DEBUG] (256) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=113.184µs elapsed_secs=0.000113184
08:31:01 [DEBUG] (279) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=300.284µs elapsed_secs=0.000300284
08:31:01 [DEBUG] (280) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.045µs elapsed_secs=0.000131045
08:31:01 [DEBUG] (250) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "testuser2", email: "test2@example.com", password_hash: "dummy_hash_2" })
08:31:01 [DEBUG] (256) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=195.569µs elapsed_secs=0.000195569
08:31:01 [DEBUG] (279) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=467.984µs elapsed_secs=0.000467984
08:31:01 [ERROR] Error: InternalServerError("[UserUpdateFailed] Failed to update user due to database operation failure: (error returned from database: (code: 2067) UNIQUE constraint failed: users.username)")
08:31:01 [DEBUG] (287) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.781µs elapsed_secs=8.1781e-5
08:31:01 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.56723ms elapsed_secs=0.00556723
08:31:01 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=420.564µs elapsed_secs=0.000420564
08:31:01 [DEBUG] (290) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=91.914µs elapsed_secs=9.1914e-5
08:31:01 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=234.993µs elapsed_secs=0.000234993
08:31:01 [DEBUG] (270) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.49153ms elapsed_secs=0.00749153
08:31:01 [DEBUG] (274) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=19.064158ms elapsed_secs=0.019064158
08:31:01 [DEBUG] (270) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=442.692µs elapsed_secs=0.000442692
08:31:01 [DEBUG] (274) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=147.252µs elapsed_secs=0.000147252
08:31:01 [DEBUG] (270) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.064µs elapsed_secs=8.4064e-5
08:31:01 [DEBUG] (274) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=123.143µs elapsed_secs=0.000123143
08:31:01 [DEBUG] (284) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.447284ms elapsed_secs=0.016447284
08:31:01 [DEBUG] (281) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.409613ms elapsed_secs=0.018409613
08:31:01 [DEBUG] (274) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=936.138µs elapsed_secs=0.000936138
08:31:01 [DEBUG] (284) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=110.972µs elapsed_secs=0.000110972
08:31:01 [DEBUG] (281) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=67.984µs elapsed_secs=6.7984e-5
08:31:01 [DEBUG] (274) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.905µs elapsed_secs=0.000127905
08:31:01 [DEBUG] (284) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.477µs elapsed_secs=7.6477e-5
08:31:01 [DEBUG] (281) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=138.789µs elapsed_secs=0.000138789
08:31:01 [DEBUG] (284) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=301.929µs elapsed_secs=0.000301929
08:31:01 [DEBUG] (278) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.035731ms elapsed_secs=0.004035731
08:31:01 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=170.359µs elapsed_secs=0.000170359
08:31:01 [DEBUG] (284) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.168µs elapsed_secs=0.000103168
08:31:01 [DEBUG] (278) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=116.05µs elapsed_secs=0.00011605
08:31:01 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.85µs elapsed_secs=0.00013285
08:31:01 [DEBUG] (278) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.47µs elapsed_secs=4.647e-5
08:31:01 [DEBUG] (257) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=95.09337ms elapsed_secs=0.09509337
08:31:01 [ERROR] Error: BadRequest("[UserNameEmpty] Username cannot be empty: (Name = )")
08:31:01 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.699549ms elapsed_secs=0.003699549
08:31:01 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=130.543µs elapsed_secs=0.000130543
08:31:01 [DEBUG] (293) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.909µs elapsed_secs=3.5909e-5
08:31:01 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.268µs elapsed_secs=6.3268e-5
08:31:01 [DEBUG] (270) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.288129ms elapsed_secs=0.003288129
08:31:01 [DEBUG] (290) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.828675ms elapsed_secs=0.010828675
08:31:01 [DEBUG] (270) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=134.141µs elapsed_secs=0.000134141
08:31:01 [DEBUG] (287) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.755623ms elapsed_secs=0.012755623
08:31:01 [DEBUG] (290) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.515µs elapsed_secs=8.7515e-5
08:31:01 [DEBUG] (270) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.772µs elapsed_secs=9.6772e-5
08:31:01 [DEBUG] (287) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=168.099µs elapsed_secs=0.000168099
08:31:01 [DEBUG] (290) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=132.563µs elapsed_secs=0.000132563
08:31:01 [DEBUG] (287) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=126.304µs elapsed_secs=0.000126304
08:31:01 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.992066ms elapsed_secs=0.003992066
08:31:01 [DEBUG] (269) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.34323ms elapsed_secs=0.00934323
08:31:01 [DEBUG] (290) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=802.798µs elapsed_secs=0.000802798
08:31:01 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=630.192µs elapsed_secs=0.000630192
08:31:01 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=122.238µs elapsed_secs=0.000122238
08:31:01 [DEBUG] (290) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.346µs elapsed_secs=9.9346e-5
08:31:01 [DEBUG] (269) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=271.748µs elapsed_secs=0.000271748
08:31:01 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.138µs elapsed_secs=6.8138e-5
08:31:01 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.69µs elapsed_secs=6.369e-5
08:31:01 [DEBUG] (278) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.750317ms elapsed_secs=0.003750317
08:31:01 [DEBUG] (269) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=258.826µs elapsed_secs=0.000258826
08:31:01 [DEBUG] (278) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=259.25µs elapsed_secs=0.00025925
08:31:01 [DEBUG] (278) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.758µs elapsed_secs=0.000146758
08:31:01 [DEBUG] (279) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.363894ms elapsed_secs=0.009363894
08:31:01 [DEBUG] (280) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.39682ms elapsed_secs=0.01039682
08:31:01 [DEBUG] (279) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=559.057µs elapsed_secs=0.000559057
08:31:01 [DEBUG] (280) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=399.844µs elapsed_secs=0.000399844
08:31:01 [DEBUG] (279) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=146.166µs elapsed_secs=0.000146166
08:31:01 [DEBUG] (280) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.304µs elapsed_secs=0.000106304
08:31:01 [DEBUG] (270) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.966861ms elapsed_secs=0.004966861
08:31:01 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.107555ms elapsed_secs=0.005107555
08:31:01 [DEBUG] (270) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=177.445µs elapsed_secs=0.000177445
08:31:01 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=149.159µs elapsed_secs=0.000149159
08:31:01 [DEBUG] (270) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.032µs elapsed_secs=6.1032e-5
08:31:01 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.546µs elapsed_secs=5.2546e-5
08:31:01 [DEBUG] (293) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.43388ms elapsed_secs=0.01143388
08:31:01 [DEBUG] (293) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.059µs elapsed_secs=7.5059e-5
08:31:01 [DEBUG] (293) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.44µs elapsed_secs=5.644e-5
08:31:01 [DEBUG] (293) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=163.613µs elapsed_secs=0.000163613
08:31:01 [DEBUG] (293) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.764µs elapsed_secs=7.1764e-5
08:31:01 [DEBUG] (274) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.70433ms elapsed_secs=0.00870433
08:31:01 [DEBUG] (284) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.307635ms elapsed_secs=0.008307635
08:31:01 [DEBUG] (274) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=159.67µs elapsed_secs=0.00015967
08:31:01 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.95531ms elapsed_secs=0.00395531
08:31:01 [DEBUG] (274) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=219.042µs elapsed_secs=0.000219042
08:31:01 [DEBUG] (284) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=344.899µs elapsed_secs=0.000344899
08:31:01 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=183.595µs elapsed_secs=0.000183595
08:31:01 [DEBUG] (284) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.399µs elapsed_secs=8.1399e-5
08:31:01 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=49.002µs elapsed_secs=4.9002e-5
08:31:01 [DEBUG] (278) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.827703ms elapsed_secs=0.003827703
08:31:01 [DEBUG] (278) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=107.318µs elapsed_secs=0.000107318
08:31:01 [DEBUG] (278) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.048µs elapsed_secs=5.2048e-5
08:31:01 [DEBUG] (270) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.562495ms elapsed_secs=0.002562495
08:31:01 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.644539ms elapsed_secs=0.002644539
08:31:01 [DEBUG] (270) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=352.311µs elapsed_secs=0.000352311
08:31:01 [DEBUG] (267) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=337.634µs elapsed_secs=0.000337634
08:31:01 [DEBUG] (270) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=52.764µs elapsed_secs=5.2764e-5
08:31:01 [DEBUG] (267) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.071µs elapsed_secs=6.5071e-5
08:31:01 [DEBUG] (269) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.609362ms elapsed_secs=0.006609362
08:31:01 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.261494ms elapsed_secs=0.004261494
08:31:01 [DEBUG] (269) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=647.754µs elapsed_secs=0.000647754
08:31:01 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=235.637µs elapsed_secs=0.000235637
08:31:01 [DEBUG] (269) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.154µs elapsed_secs=9.7154e-5
08:31:01 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.912µs elapsed_secs=9.4912e-5
08:31:01 [DEBUG] (290) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.655642ms elapsed_secs=0.008655642
08:31:01 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.321639ms elapsed_secs=0.009321639
08:31:01 [DEBUG] (290) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=223.342µs elapsed_secs=0.000223342
08:31:01 [DEBUG] (290) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.456µs elapsed_secs=8.1456e-5
08:31:01 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=283.557µs elapsed_secs=0.000283557
08:31:01 [DEBUG] (278) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.103192ms elapsed_secs=0.005103192
08:31:01 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.444µs elapsed_secs=0.000124444
08:31:01 [DEBUG] (278) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=103.748µs elapsed_secs=0.000103748
08:31:01 [DEBUG] (278) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=57.841µs elapsed_secs=5.7841e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.542537ms elapsed_secs=0.009542537
08:31:01 [DEBUG] (267) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.173274ms elapsed_secs=0.004173274
08:31:01 [DEBUG] (270) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.175963ms elapsed_secs=0.004175963
08:31:01 [DEBUG] (280) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=446.643µs elapsed_secs=0.000446643
08:31:01 [DEBUG] (280) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.676µs elapsed_secs=8.1676e-5
08:31:01 [DEBUG] (279) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.505048ms elapsed_secs=0.009505048
08:31:01 [DEBUG] (279) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=332.654µs elapsed_secs=0.000332654
08:31:01 [DEBUG] (279) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.473µs elapsed_secs=7.1473e-5
08:31:01 [DEBUG] (293) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.408674ms elapsed_secs=0.006408674
08:31:01 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.011541ms elapsed_secs=0.003011541
08:31:01 [DEBUG] (293) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=389.183µs elapsed_secs=0.000389183
08:31:01 [DEBUG] (281) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=109.539µs elapsed_secs=0.000109539
08:31:01 [DEBUG] (293) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.837µs elapsed_secs=9.8837e-5
08:31:01 [DEBUG] (281) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=46.405µs elapsed_secs=4.6405e-5
08:31:01 [DEBUG] (274) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.335387ms elapsed_secs=0.006335387
08:31:01 [DEBUG] (284) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.56014ms elapsed_secs=0.00656014
08:31:01 [DEBUG] (278) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.590076ms elapsed_secs=0.003590076
08:31:01 [DEBUG] (274) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=425.272µs elapsed_secs=0.000425272
08:31:01 [DEBUG] (284) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=249.761µs elapsed_secs=0.000249761
08:31:01 [DEBUG] (274) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.114µs elapsed_secs=0.000137114
08:31:01 [DEBUG] (284) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.868µs elapsed_secs=9.1868e-5
08:31:01 [DEBUG] (281) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.310566ms elapsed_secs=0.003310566
08:31:01 [DEBUG] (269) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.33992ms elapsed_secs=0.00733992
08:31:01 [DEBUG] (269) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=204.076µs elapsed_secs=0.000204076
08:31:01 [DEBUG] (290) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.623975ms elapsed_secs=0.006623975
08:31:01 [DEBUG] (269) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.036µs elapsed_secs=8.6036e-5
08:31:01 [DEBUG] (290) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=515.871µs elapsed_secs=0.000515871
08:31:01 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.437062ms elapsed_secs=0.007437062
08:31:01 [DEBUG] (290) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.198µs elapsed_secs=6.0198e-5
08:31:01 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=128.318µs elapsed_secs=0.000128318
08:31:01 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=467.113µs elapsed_secs=0.000467113
08:31:01 [DEBUG] (293) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.248467ms elapsed_secs=0.005248467
08:31:01 [DEBUG] (293) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=206.698µs elapsed_secs=0.000206698
08:31:01 [DEBUG] (279) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.857262ms elapsed_secs=0.005857262
08:31:01 [DEBUG] (293) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.348µs elapsed_secs=8.2348e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.242152ms elapsed_secs=0.008242152
08:31:01 [DEBUG] (279) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=209.665µs elapsed_secs=0.000209665
08:31:01 [DEBUG] (280) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=137.275µs elapsed_secs=0.000137275
08:31:01 [DEBUG] (280) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.108µs elapsed_secs=9.9108e-5
08:31:01 [DEBUG] (279) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=465.229µs elapsed_secs=0.000465229
08:31:01 [DEBUG] (274) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.599878ms elapsed_secs=0.006599878
08:31:01 [DEBUG] (274) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=156.102µs elapsed_secs=0.000156102
08:31:01 [DEBUG] (274) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.156µs elapsed_secs=6.8156e-5
08:31:01 [DEBUG] (284) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.179415ms elapsed_secs=0.007179415
08:31:01 [DEBUG] (284) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=150.684µs elapsed_secs=0.000150684
08:31:01 [DEBUG] (284) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.782µs elapsed_secs=9.6782e-5
08:31:01 [DEBUG] (269) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.434619ms elapsed_secs=0.005434619
08:31:01 [DEBUG] (290) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.008413ms elapsed_secs=0.006008413
08:31:01 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.201081ms elapsed_secs=0.006201081
08:31:01 [DEBUG] (269) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=351.083µs elapsed_secs=0.000351083
08:31:01 [DEBUG] (290) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=133.386µs elapsed_secs=0.000133386
08:31:01 [DEBUG] (269) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.309µs elapsed_secs=0.000136309
08:31:01 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=199.338µs elapsed_secs=0.000199338
08:31:01 [DEBUG] (290) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=186.171µs elapsed_secs=0.000186171
08:31:01 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.387µs elapsed_secs=8.4387e-5
08:31:01 [DEBUG] (279) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.38566ms elapsed_secs=0.00538566
08:31:01 [DEBUG] (279) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=471.458µs elapsed_secs=0.000471458
08:31:01 [DEBUG] (279) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.116µs elapsed_secs=9.5116e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.264534ms elapsed_secs=0.007264534
08:31:01 [DEBUG] (293) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.46306ms elapsed_secs=0.00746306
08:31:01 [DEBUG] (280) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=331.605µs elapsed_secs=0.000331605
08:31:01 [DEBUG] (293) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=174.261µs elapsed_secs=0.000174261
08:31:01 [DEBUG] (280) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.585µs elapsed_secs=0.000107585
08:31:01 [DEBUG] (293) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.1µs elapsed_secs=6.91e-5
08:31:01 [DEBUG] (284) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.508942ms elapsed_secs=0.007508942
08:31:01 [DEBUG] (274) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.843118ms elapsed_secs=0.007843118
08:31:01 [DEBUG] (284) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=393.524µs elapsed_secs=0.000393524
08:31:01 [DEBUG] (284) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.299µs elapsed_secs=7.0299e-5
08:31:01 [DEBUG] (274) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=317.952µs elapsed_secs=0.000317952
08:31:01 [DEBUG] (274) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.831µs elapsed_secs=8.4831e-5
08:31:01 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.336936ms elapsed_secs=0.006336936
08:31:01 [DEBUG] (290) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.474304ms elapsed_secs=0.006474304
08:31:01 [DEBUG] (269) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.677151ms elapsed_secs=0.006677151
08:31:01 [DEBUG] (290) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=597.984µs elapsed_secs=0.000597984
08:31:01 [DEBUG] (287) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=744.775µs elapsed_secs=0.000744775
08:31:01 [DEBUG] (290) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.979µs elapsed_secs=7.6979e-5
08:31:01 [DEBUG] (287) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.283µs elapsed_secs=7.1283e-5
08:31:01 [DEBUG] (293) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.387527ms elapsed_secs=0.005387527
08:31:01 [DEBUG] (293) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=162.339µs elapsed_secs=0.000162339
08:31:01 [DEBUG] (293) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.917µs elapsed_secs=6.7917e-5
08:31:01 [DEBUG] (279) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.511006ms elapsed_secs=0.006511006
08:31:01 [DEBUG] (280) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.632108ms elapsed_secs=0.006632108
08:31:01 [DEBUG] (274) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.129913ms elapsed_secs=0.005129913
08:31:01 [DEBUG] (284) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.096678ms elapsed_secs=0.005096678
08:31:01 [DEBUG] (290) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.708125ms elapsed_secs=0.005708125
08:31:01 [DEBUG] (293) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.315876ms elapsed_secs=0.006315876
08:31:01 [DEBUG] (287) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.119898ms elapsed_secs=0.007119898
08:31:01 [DEBUG] (267) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=96.730658ms elapsed_secs=0.096730658
08:31:01 [DEBUG] (270) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=96.659726ms elapsed_secs=0.096659726
08:31:01 [ERROR] Error: BadRequest("[UserEmailInvalid] Invalid email address: (Email = test1_xexample.com)")
08:31:01 [DEBUG] (270) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=1 rows_returned=0 elapsed=95.372µs elapsed_secs=9.5372e-5
08:31:01 [DEBUG] (260) menahel::repository::user_repo: Get user by id with transaction: None
08:31:01 [ERROR] Error: NotFound("[UserGetByIdNotFound] User not found: (ID = 100)")
08:31:01 [DEBUG] (296) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=100.228µs elapsed_secs=0.000100228
08:31:01 [DEBUG] (299) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.13µs elapsed_secs=8.413e-5
08:31:01 [DEBUG] (278) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=97.361326ms elapsed_secs=0.097361326
08:31:01 [DEBUG] (262) actix_web::types::path: Failed during Path extractor deserialization. Request path: "/users/abc"
08:31:01 [ERROR] Error: BadRequest("[UserHandlerInvalidPath] Invalid path: (ActixWebError: can not parse \"abc\" to a i64)")
08:31:01 [DEBUG] (302) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.459µs elapsed_secs=6.3459e-5
08:31:01 [DEBUG] (281) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (0, 'testuser0', 'test0@example.com', 'dummy_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'testuser1', 'test1@example.com', 'dummy_hash_1');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'testuser2', 'test2@example.com', 'dummy_hash_2');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'testuser3', 'test3@example.com', 'dummy_hash_3');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'testuser4', 'test4@example.com', 'dummy_hash_4');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'testuser5', 'test5@example.com', 'dummy_hash_5');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'testuser6', 'test6@example.com', 'dummy_hash_6');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'testuser7', 'test7@example.com', 'dummy_hash_7');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'testuser8', 'test8@example.com', 'dummy_hash_8');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'testuser9', 'test9@example.com', 'dummy_hash_9');\nINSERT INTO projects (id, name) VALUES (0, 'TestProject0');\nINSERT INTO projects (id, name) VALUES (1, 'TestProject1');\nINSERT INTO projects (id, name) VALUES (2, 'TestProject2');\nINSERT INTO projects (id, name) VALUES (3, 'TestProject3');\nINSERT INTO projects (id, name) VALUES (4, 'TestProject4');\nINSERT INTO projects (id, name) VALUES (5, 'TestProject5');\nINSERT INTO projects (id, name) VALUES (6, 'TestProject6');\nINSERT INTO projects (id, name) VALUES (7, 'TestProject7');\nINSERT INTO projects (id, name) VALUES (8, 'TestProject8');\nINSERT INTO projects (id, name) VALUES (9, 'TestProject9');\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (0, 'TestMajorTask0', 'TestTask0Description', 0, 0, 0, NULL, 1000, 1000, 1000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (1, 'TestMinorTask1', 'TestTask1Description', 1, 0, 0, 1, 1000, 2000, 2000);\n\nINSERT INTO tasks \n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (2, 'TestTrivialTask2', 'TestTask2Description', 2, 0, 0, 2, 1000, 2000, 2000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (3, 'TestNotStartedTask3', 'TestTask3Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (4, 'TestInProgressTask4', 'TestTask4Description', 2, 1, 0, 2, 1500, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (5, 'TestReviewingTask5', 'TestTask5Description', 2, 2, 0, 2, 2000, 3000, 3000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (6, 'TestCancelledTask6', 'TestTask6Description', 2, 3, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (7, 'TestDoneTask7', 'TestTask7Description', 2, 4, 0, 2, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (8, 'TestMajorTaskProject2', 'TestTask8Description', 0, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (9, 'TestMinorTaskProject2', 'TestTask9Description', 1, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n\nINSERT INTO tasks\n    (id, name, description, level, status, project_id, parent_id, deadline, created_at, updated_at)\nVALUES \n    (10, 'TestTrivialTaskProject2', 'TestTask10Description', 2, 0, 2, 0, 1000000000, 1000000000, 1000000000);\n" rows_affected=31 rows_returned=0 elapsed=96.832853ms elapsed_secs=0.096832853
08:31:01 [DEBUG] (264) actix_web::types::json: Failed to deserialize Json from payload. Request path: /users/1
08:31:01 [ERROR] Error: BadRequest("[UserHandlerInvalidJsonPost] Invalid JSON format: (ActixWebError: Content type error)")
08:31:01 [DEBUG] (305) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=90.42µs elapsed_secs=9.042e-5
08:31:01 [DEBUG] (296) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.296262ms elapsed_secs=0.012296262
08:31:01 [DEBUG] (299) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.176338ms elapsed_secs=0.011176338
08:31:01 [DEBUG] (299) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=131.871µs elapsed_secs=0.000131871
08:31:01 [DEBUG] (299) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=156.269µs elapsed_secs=0.000156269
08:31:01 [DEBUG] (296) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=640.721µs elapsed_secs=0.000640721
08:31:01 [DEBUG] (296) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=262.351µs elapsed_secs=0.000262351
08:31:01 [DEBUG] (299) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.629785ms elapsed_secs=0.001629785
08:31:01 [DEBUG] (296) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=700.462µs elapsed_secs=0.000700462
08:31:01 [DEBUG] (299) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=333.922µs elapsed_secs=0.000333922
08:31:01 [DEBUG] (296) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=327.172µs elapsed_secs=0.000327172
08:31:01 [DEBUG] (302) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.673031ms elapsed_secs=0.012673031
08:31:01 [DEBUG] (302) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=202.392µs elapsed_secs=0.000202392
08:31:01 [DEBUG] (302) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=160.191µs elapsed_secs=0.000160191
08:31:01 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=265.816µs elapsed_secs=0.000265816
08:31:01 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.647µs elapsed_secs=0.000119647
08:31:01 [DEBUG] (305) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.099315ms elapsed_secs=0.015099315
08:31:01 [DEBUG] (305) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=191.832µs elapsed_secs=0.000191832
08:31:01 [DEBUG] (305) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=91.268µs elapsed_secs=9.1268e-5
08:31:01 [DEBUG] (305) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=537.308µs elapsed_secs=0.000537308
08:31:01 [DEBUG] (305) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.225µs elapsed_secs=9.9225e-5
08:31:01 [DEBUG] (299) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.183531ms elapsed_secs=0.013183531
08:31:01 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.14879ms elapsed_secs=0.01114879
08:31:01 [DEBUG] (296) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.755076ms elapsed_secs=0.014755076
08:31:01 [DEBUG] (299) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=344.33µs elapsed_secs=0.00034433
08:31:01 [DEBUG] (296) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=266.069µs elapsed_secs=0.000266069
08:31:01 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=347.477µs elapsed_secs=0.000347477
08:31:01 [DEBUG] (299) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.931µs elapsed_secs=0.000107931
08:31:01 [DEBUG] (296) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.002µs elapsed_secs=7.9002e-5
08:31:01 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.778µs elapsed_secs=8.8778e-5
08:31:01 [DEBUG] (305) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.482123ms elapsed_secs=0.011482123
08:31:01 [DEBUG] (305) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=333.301µs elapsed_secs=0.000333301
08:31:01 [DEBUG] (305) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.123µs elapsed_secs=0.000116123
08:31:01 [DEBUG] (299) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.472528ms elapsed_secs=0.010472528
08:31:01 [DEBUG] (299) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=161.439µs elapsed_secs=0.000161439
08:31:01 [DEBUG] (299) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.592µs elapsed_secs=0.000111592
08:31:01 [DEBUG] (296) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.952547ms elapsed_secs=0.008952547
08:31:01 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.089797ms elapsed_secs=0.009089797
08:31:01 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=311.491µs elapsed_secs=0.000311491
08:31:01 [DEBUG] (296) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=605.722µs elapsed_secs=0.000605722
08:31:01 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.883µs elapsed_secs=0.000100883
08:31:01 [DEBUG] (296) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.695µs elapsed_secs=6.1695e-5
08:31:01 [DEBUG] (305) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.22514ms elapsed_secs=0.00922514
08:31:01 [DEBUG] (305) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=607.695µs elapsed_secs=0.000607695
08:31:01 [DEBUG] (305) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.187µs elapsed_secs=0.000104187
08:31:01 [DEBUG] (296) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.044023ms elapsed_secs=0.008044023
08:31:01 [DEBUG] (299) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.341228ms elapsed_secs=0.009341228
08:31:01 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.803929ms elapsed_secs=0.008803929
08:31:01 [DEBUG] (299) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=376.882µs elapsed_secs=0.000376882
08:31:01 [DEBUG] (296) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=458.599µs elapsed_secs=0.000458599
08:31:01 [DEBUG] (299) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.313µs elapsed_secs=0.000167313
08:31:01 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=237.771µs elapsed_secs=0.000237771
08:31:01 [DEBUG] (296) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.179µs elapsed_secs=0.000129179
08:31:01 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.469µs elapsed_secs=6.0469e-5
08:31:01 [DEBUG] (305) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.56159ms elapsed_secs=0.00756159
08:31:01 [DEBUG] (305) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=406.895µs elapsed_secs=0.000406895
08:31:01 [DEBUG] (305) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.416µs elapsed_secs=8.4416e-5
08:31:01 [DEBUG] (299) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.626966ms elapsed_secs=0.009626966
08:31:01 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.25184ms elapsed_secs=0.01025184
08:31:01 [DEBUG] (299) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=177.161µs elapsed_secs=0.000177161
08:31:01 [DEBUG] (299) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.706µs elapsed_secs=0.000132706
08:31:01 [DEBUG] (302) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=298.517µs elapsed_secs=0.000298517
08:31:01 [DEBUG] (305) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.146921ms elapsed_secs=0.007146921
08:31:01 [DEBUG] (302) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.204µs elapsed_secs=9.5204e-5
08:31:01 [DEBUG] (296) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.470883ms elapsed_secs=0.008470883
08:31:01 [DEBUG] (305) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=261.638µs elapsed_secs=0.000261638
08:31:01 [DEBUG] (305) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=255.236µs elapsed_secs=0.000255236
08:31:01 [DEBUG] (296) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=338.249µs elapsed_secs=0.000338249
08:31:01 [DEBUG] (296) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.471µs elapsed_secs=8.7471e-5
08:31:01 [DEBUG] (305) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.662076ms elapsed_secs=0.006662076
08:31:01 [DEBUG] (296) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.127851ms elapsed_secs=0.007127851
08:31:01 [DEBUG] (299) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.89675ms elapsed_secs=0.00689675
08:31:01 [DEBUG] (302) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.883809ms elapsed_secs=0.007883809
08:31:01 [DEBUG] (279) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=215.166701ms elapsed_secs=0.215166701
08:31:01 [DEBUG] (306) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.374µs elapsed_secs=4.0374e-5
08:31:01 [DEBUG] (309) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=31.921µs elapsed_secs=3.1921e-5
08:31:01 [DEBUG] (280) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=223.478282ms elapsed_secs=0.223478282
08:31:01 [DEBUG] (284) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=221.912767ms elapsed_secs=0.221912767
08:31:01 [DEBUG] (310) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.373µs elapsed_secs=5.8373e-5
08:31:01 [DEBUG] (309) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.472516ms elapsed_secs=0.009472516
08:31:01 [DEBUG] (311) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.187µs elapsed_secs=4.3187e-5
08:31:01 [DEBUG] (309) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=119.039µs elapsed_secs=0.000119039
08:31:01 [DEBUG] (309) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.136µs elapsed_secs=5.9136e-5
08:31:01 [DEBUG] (310) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=279.304µs elapsed_secs=0.000279304
08:31:01 [DEBUG] (282) menahel::repository::user_repo: Get user by id with transaction: None
08:31:01 [DEBUG] (311) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=543.703µs elapsed_secs=0.000543703
08:31:01 [DEBUG] (309) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=425.145µs elapsed_secs=0.000425145
08:31:01 [DEBUG] (276) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:01 [DEBUG] (309) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.745µs elapsed_secs=9.7745e-5
08:31:01 [DEBUG] (311) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=208.127µs elapsed_secs=0.000208127
08:31:01 [DEBUG] (269) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=233.202288ms elapsed_secs=0.233202288
08:31:01 [DEBUG] (276) menahel::repository::task_repo: Get task by id with transaction: None
08:31:01 [DEBUG] (314) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=158.283µs elapsed_secs=0.000158283
08:31:01 [DEBUG] (274) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=228.444559ms elapsed_secs=0.228444559
08:31:01 [DEBUG] (315) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.389µs elapsed_secs=4.6389e-5
08:31:01 [DEBUG] (315) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=577.241µs elapsed_secs=0.000577241
08:31:01 [DEBUG] (317) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=79.015µs elapsed_secs=7.9015e-5
08:31:01 [DEBUG] (265) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:01 [DEBUG] (319) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.592µs elapsed_secs=3.6592e-5
08:31:01 [DEBUG] (315) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=638.512µs elapsed_secs=0.000638512
08:31:01 [DEBUG] (265) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
08:31:01 [DEBUG] (287) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=222.514232ms elapsed_secs=0.222514232
08:31:01 [DEBUG] (317) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=442.041µs elapsed_secs=0.000442041
08:31:01 [DEBUG] (315) sqlx::query: summary="INSERT INTO comments (user_id, …" db.statement="\n\n\n                INSERT INTO comments (user_id, task_id, content, created_at)\n                VALUES ($1, $2, $3, $4)\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=197.585µs elapsed_secs=0.000197585
08:31:01 [DEBUG] (271) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:01 [DEBUG] (317) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=340.248µs elapsed_secs=0.000340248
08:31:01 [DEBUG] (271) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:01 [DEBUG] (320) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.392µs elapsed_secs=8.8392e-5
08:31:01 [DEBUG] (317) sqlx::query: summary="INSERT INTO comments (user_id, …" db.statement="\n\n\n                INSERT INTO comments (user_id, task_id, content, created_at)\n                VALUES ($1, $2, $3, $4)\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=194.048µs elapsed_secs=0.000194048
08:31:01 [DEBUG] (320) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=223.973µs elapsed_secs=0.000223973
08:31:01 [DEBUG] (285) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:01 [DEBUG] (320) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=122.654µs elapsed_secs=0.000122654
08:31:01 [DEBUG] (285) menahel::repository::task_repo: Get task by id with transaction: None
08:31:01 [DEBUG] (323) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=147.38µs elapsed_secs=0.00014738
08:31:01 [DEBUG] (293) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=232.249849ms elapsed_secs=0.232249849
08:31:01 [DEBUG] (324) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.227µs elapsed_secs=6.7227e-5
08:31:01 [DEBUG] (324) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=192.158µs elapsed_secs=0.000192158
08:31:01 [DEBUG] (291) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:01 [DEBUG] (324) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=117.654µs elapsed_secs=0.000117654
08:31:01 [DEBUG] (290) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=238.870286ms elapsed_secs=0.238870286
08:31:01 [DEBUG] (291) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:01 [DEBUG] (329) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=110.777µs elapsed_secs=0.000110777
08:31:01 [DEBUG] (330) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=79.377µs elapsed_secs=7.9377e-5
08:31:01 [DEBUG] (309) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.990452ms elapsed_secs=0.008990452
08:31:01 [DEBUG] (331) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=66.311µs elapsed_secs=6.6311e-5
08:31:01 [DEBUG] (314) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.910435ms elapsed_secs=0.015910435
08:31:01 [DEBUG] (309) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=568.255µs elapsed_secs=0.000568255
08:31:01 [DEBUG] (329) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=827.2µs elapsed_secs=0.0008272
08:31:01 [DEBUG] (314) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=150.657µs elapsed_secs=0.000150657
08:31:01 [DEBUG] (288) menahel::repository::user_repo: Get user by id with transaction: None
08:31:01 [DEBUG] (309) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.54µs elapsed_secs=9.454e-5
08:31:01 [DEBUG] (334) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.673µs elapsed_secs=7.3673e-5
08:31:01 [DEBUG] (314) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=97.584µs elapsed_secs=9.7584e-5
08:31:01 [DEBUG] (319) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.24196ms elapsed_secs=0.01724196
08:31:01 [DEBUG] (314) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=477.595µs elapsed_secs=0.000477595
08:31:01 [DEBUG] (319) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.819µs elapsed_secs=8.2819e-5
08:31:01 [DEBUG] (314) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.317µs elapsed_secs=0.000110317
08:31:01 [DEBUG] (319) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=109.373µs elapsed_secs=0.000109373
08:31:01 [DEBUG] (337) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.779µs elapsed_secs=4.3779e-5
08:31:01 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=478.861µs elapsed_secs=0.000478861
08:31:01 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.344µs elapsed_secs=8.7344e-5
08:31:01 [DEBUG] (323) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.383451ms elapsed_secs=0.012383451
08:31:01 [DEBUG] (323) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=418.758µs elapsed_secs=0.000418758
08:31:01 [DEBUG] (323) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=105.82µs elapsed_secs=0.00010582
08:31:01 [DEBUG] (323) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=271.071µs elapsed_secs=0.000271071
08:31:01 [DEBUG] (323) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=438.04µs elapsed_secs=0.00043804
08:31:01 [DEBUG] (330) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.671634ms elapsed_secs=0.015671634
08:31:01 [DEBUG] (331) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.513019ms elapsed_secs=0.015513019
08:31:01 [DEBUG] (330) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=107.03µs elapsed_secs=0.00010703
08:31:01 [DEBUG] (331) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=70.151µs elapsed_secs=7.0151e-5
08:31:01 [DEBUG] (330) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.645µs elapsed_secs=5.8645e-5
08:31:01 [DEBUG] (331) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=50.547µs elapsed_secs=5.0547e-5
08:31:01 [DEBUG] (330) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=268.177µs elapsed_secs=0.000268177
08:31:01 [DEBUG] (331) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=188.367µs elapsed_secs=0.000188367
08:31:01 [DEBUG] (330) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.693µs elapsed_secs=7.4693e-5
08:31:01 [DEBUG] (331) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=449.317µs elapsed_secs=0.000449317
08:31:01 [DEBUG] (337) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.040772ms elapsed_secs=0.015040772
08:31:01 [DEBUG] (337) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.405µs elapsed_secs=7.6405e-5
08:31:01 [DEBUG] (337) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=69.85µs elapsed_secs=6.985e-5
08:31:01 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=209.078µs elapsed_secs=0.000209078
08:31:01 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.288µs elapsed_secs=7.2288e-5
08:31:01 [DEBUG] (334) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=18.44589ms elapsed_secs=0.01844589
08:31:01 [DEBUG] (334) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.924µs elapsed_secs=7.9924e-5
08:31:01 [DEBUG] (334) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=51.535µs elapsed_secs=5.1535e-5
08:31:01 [DEBUG] (334) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=255.008µs elapsed_secs=0.000255008
08:31:01 [DEBUG] (334) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.486µs elapsed_secs=8.4486e-5
08:31:01 [DEBUG] (314) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.70134ms elapsed_secs=0.00970134
08:31:01 [DEBUG] (309) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.95099ms elapsed_secs=0.01195099
08:31:01 [DEBUG] (314) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=180.477µs elapsed_secs=0.000180477
08:31:01 [DEBUG] (309) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=167.983µs elapsed_secs=0.000167983
08:31:01 [DEBUG] (314) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.743µs elapsed_secs=6.4743e-5
08:31:01 [DEBUG] (309) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.766µs elapsed_secs=0.000116766
08:31:01 [DEBUG] (323) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.704222ms elapsed_secs=0.009704222
08:31:01 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.792405ms elapsed_secs=0.011792405
08:31:01 [DEBUG] (323) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=170.428µs elapsed_secs=0.000170428
08:31:01 [DEBUG] (323) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=229.904µs elapsed_secs=0.000229904
08:31:01 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=411.908µs elapsed_secs=0.000411908
08:31:01 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.379µs elapsed_secs=8.2379e-5
08:31:01 [DEBUG] (331) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.368638ms elapsed_secs=0.007368638
08:31:01 [DEBUG] (330) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.647533ms elapsed_secs=0.007647533
08:31:01 [DEBUG] (331) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=430.372µs elapsed_secs=0.000430372
08:31:01 [DEBUG] (330) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=231.59µs elapsed_secs=0.00023159
08:31:01 [DEBUG] (331) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.494µs elapsed_secs=9.5494e-5
08:31:01 [DEBUG] (330) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.738µs elapsed_secs=0.000117738
08:31:01 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.754161ms elapsed_secs=0.009754161
08:31:01 [DEBUG] (334) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.416186ms elapsed_secs=0.010416186
08:31:01 [DEBUG] (334) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=264.095µs elapsed_secs=0.000264095
08:31:01 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=497.649µs elapsed_secs=0.000497649
08:31:01 [DEBUG] (334) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.331µs elapsed_secs=7.5331e-5
08:31:01 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.258µs elapsed_secs=8.1258e-5
08:31:01 [DEBUG] (309) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.927745ms elapsed_secs=0.011927745
08:31:01 [DEBUG] (309) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=284.092µs elapsed_secs=0.000284092
08:31:01 [DEBUG] (309) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.468µs elapsed_secs=6.2468e-5
08:31:01 [DEBUG] (323) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.023861ms elapsed_secs=0.007023861
08:31:01 [DEBUG] (323) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=191.087µs elapsed_secs=0.000191087
08:31:01 [DEBUG] (314) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.50745ms elapsed_secs=0.01450745
08:31:01 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.588491ms elapsed_secs=0.007588491
08:31:01 [DEBUG] (323) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.983µs elapsed_secs=0.000132983
08:31:01 [DEBUG] (314) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=432.801µs elapsed_secs=0.000432801
08:31:01 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=421.572µs elapsed_secs=0.000421572
08:31:01 [DEBUG] (314) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=423.476µs elapsed_secs=0.000423476
08:31:01 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=194.717µs elapsed_secs=0.000194717
08:31:01 [DEBUG] (331) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.70819ms elapsed_secs=0.00770819
08:31:01 [DEBUG] (331) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=185.326µs elapsed_secs=0.000185326
08:31:01 [DEBUG] (331) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.56µs elapsed_secs=8.256e-5
08:31:01 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.258935ms elapsed_secs=0.007258935
08:31:01 [DEBUG] (330) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.798675ms elapsed_secs=0.007798675
08:31:01 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=301.154µs elapsed_secs=0.000301154
08:31:01 [DEBUG] (334) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.063732ms elapsed_secs=0.008063732
08:31:01 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.879µs elapsed_secs=7.6879e-5
08:31:01 [DEBUG] (330) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=209.129µs elapsed_secs=0.000209129
08:31:01 [DEBUG] (334) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=243.995µs elapsed_secs=0.000243995
08:31:01 [DEBUG] (330) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.701µs elapsed_secs=6.3701e-5
08:31:01 [DEBUG] (334) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.119µs elapsed_secs=0.000133119
08:31:01 [DEBUG] (309) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.506593ms elapsed_secs=0.005506593
08:31:01 [DEBUG] (323) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.727237ms elapsed_secs=0.005727237
08:31:01 [DEBUG] (323) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=360.831µs elapsed_secs=0.000360831
08:31:01 [DEBUG] (309) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=402.781µs elapsed_secs=0.000402781
08:31:01 [DEBUG] (323) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.933µs elapsed_secs=7.4933e-5
08:31:01 [DEBUG] (309) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.091µs elapsed_secs=8.0091e-5
08:31:01 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.460074ms elapsed_secs=0.006460074
08:31:01 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=268.009µs elapsed_secs=0.000268009
08:31:01 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.136µs elapsed_secs=8.7136e-5
08:31:01 [DEBUG] (314) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.657483ms elapsed_secs=0.007657483
08:31:01 [DEBUG] (314) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=359.634µs elapsed_secs=0.000359634
08:31:01 [DEBUG] (314) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.992µs elapsed_secs=8.5992e-5
08:31:01 [DEBUG] (331) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.978847ms elapsed_secs=0.007978847
08:31:01 [DEBUG] (331) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=164.628µs elapsed_secs=0.000164628
08:31:01 [DEBUG] (331) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.953µs elapsed_secs=8.0953e-5
08:31:01 [DEBUG] (330) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.197403ms elapsed_secs=0.006197403
08:31:01 [DEBUG] (334) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.368616ms elapsed_secs=0.006368616
08:31:01 [DEBUG] (330) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=300.38µs elapsed_secs=0.00030038
08:31:01 [DEBUG] (334) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=252.269µs elapsed_secs=0.000252269
08:31:01 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.481135ms elapsed_secs=0.008481135
08:31:01 [DEBUG] (330) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.103µs elapsed_secs=8.3103e-5
08:31:01 [DEBUG] (334) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.426µs elapsed_secs=7.3426e-5
08:31:01 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=151.085µs elapsed_secs=0.000151085
08:31:01 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.448µs elapsed_secs=7.0448e-5
08:31:01 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.791165ms elapsed_secs=0.004791165
08:31:01 [DEBUG] (323) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.947812ms elapsed_secs=0.007947812
08:31:01 [DEBUG] (319) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=203.21µs elapsed_secs=0.00020321
08:31:01 [DEBUG] (309) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.169103ms elapsed_secs=0.008169103
08:31:01 [DEBUG] (323) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=282.628µs elapsed_secs=0.000282628
08:31:01 [DEBUG] (319) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=186.52µs elapsed_secs=0.00018652
08:31:01 [DEBUG] (323) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.936µs elapsed_secs=6.5936e-5
08:31:01 [DEBUG] (314) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.322119ms elapsed_secs=0.006322119
08:31:01 [DEBUG] (314) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=449.659µs elapsed_secs=0.000449659
08:31:01 [DEBUG] (314) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.595µs elapsed_secs=5.3595e-5
08:31:01 [DEBUG] (331) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.334741ms elapsed_secs=0.006334741
08:31:01 [DEBUG] (331) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=156.462µs elapsed_secs=0.000156462
08:31:01 [DEBUG] (331) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.166µs elapsed_secs=6.4166e-5
08:31:01 [DEBUG] (334) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.467675ms elapsed_secs=0.007467675
08:31:01 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.700421ms elapsed_secs=0.007700421
08:31:01 [DEBUG] (330) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.762996ms elapsed_secs=0.007762996
08:31:01 [DEBUG] (337) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=197.352µs elapsed_secs=0.000197352
08:31:01 [DEBUG] (334) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=434.606µs elapsed_secs=0.000434606
08:31:01 [DEBUG] (337) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.318µs elapsed_secs=7.2318e-5
08:31:01 [DEBUG] (330) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=167.768µs elapsed_secs=0.000167768
08:31:01 [DEBUG] (334) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.859µs elapsed_secs=0.000153859
08:31:01 [DEBUG] (330) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.853µs elapsed_secs=9.4853e-5
08:31:01 [DEBUG] (314) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.708294ms elapsed_secs=0.008708294
08:31:01 [DEBUG] (319) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.617973ms elapsed_secs=0.009617973
08:31:01 [DEBUG] (323) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.675954ms elapsed_secs=0.007675954
08:31:01 [DEBUG] (331) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.988332ms elapsed_secs=0.005988332
08:31:01 [DEBUG] (337) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.969734ms elapsed_secs=0.009969734
08:31:01 [DEBUG] (330) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.004394ms elapsed_secs=0.009004394
08:31:01 [DEBUG] (334) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.183055ms elapsed_secs=0.009183055
08:31:01 [DEBUG] (299) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=222.857297ms elapsed_secs=0.222857297
08:31:01 [DEBUG] (338) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.499µs elapsed_secs=3.9499e-5
08:31:01 [DEBUG] (302) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=229.971911ms elapsed_secs=0.229971911
08:31:01 [DEBUG] (338) sqlx::query: summary="DELETE FROM comments WHERE …" db.statement="\n\n\n                DELETE FROM comments\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=6.691304ms elapsed_secs=0.006691304
08:31:01 [DEBUG] (339) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.839µs elapsed_secs=4.4839e-5
08:31:01 [DEBUG] (305) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=233.059196ms elapsed_secs=0.233059196
08:31:01 [DEBUG] (339) sqlx::query: summary="DELETE FROM comments WHERE …" db.statement="\n\n\n                DELETE FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=227.693µs elapsed_secs=0.000227693
08:31:01 [DEBUG] (342) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.526µs elapsed_secs=3.0526e-5
08:31:01 [DEBUG] (343) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.73µs elapsed_secs=7.073e-5
08:31:01 [DEBUG] (343) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=196.476µs elapsed_secs=0.000196476
08:31:01 [DEBUG] (346) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.755µs elapsed_secs=7.5755e-5
08:31:01 [DEBUG] (349) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.094µs elapsed_secs=3.6094e-5
08:31:01 [DEBUG] (296) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=240.215569ms elapsed_secs=0.240215569
08:31:01 [DEBUG] (350) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.214µs elapsed_secs=5.9214e-5
08:31:01 [DEBUG] (353) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=94.889µs elapsed_secs=9.4889e-5
08:31:01 [DEBUG] (346) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.595553ms elapsed_secs=0.012595553
08:31:01 [DEBUG] (342) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.650273ms elapsed_secs=0.014650273
08:31:01 [DEBUG] (349) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.324918ms elapsed_secs=0.011324918
08:31:01 [DEBUG] (349) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=188.932µs elapsed_secs=0.000188932
08:31:01 [DEBUG] (342) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=309.464µs elapsed_secs=0.000309464
08:31:01 [DEBUG] (346) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=328.778µs elapsed_secs=0.000328778
08:31:01 [DEBUG] (349) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.457µs elapsed_secs=5.8457e-5
08:31:01 [DEBUG] (342) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.475µs elapsed_secs=6.8475e-5
08:31:01 [DEBUG] (346) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=107.585µs elapsed_secs=0.000107585
08:31:01 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=298.515µs elapsed_secs=0.000298515
08:31:01 [DEBUG] (346) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=271.552µs elapsed_secs=0.000271552
08:31:01 [DEBUG] (342) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=281.443µs elapsed_secs=0.000281443
08:31:01 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.712µs elapsed_secs=9.2712e-5
08:31:01 [DEBUG] (346) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.775µs elapsed_secs=8.7775e-5
08:31:01 [DEBUG] (342) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.168µs elapsed_secs=7.6168e-5
08:31:01 [DEBUG] (353) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.214853ms elapsed_secs=0.010214853
08:31:01 [DEBUG] (353) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.234µs elapsed_secs=8.3234e-5
08:31:01 [DEBUG] (353) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.798µs elapsed_secs=6.2798e-5
08:31:01 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=178.407µs elapsed_secs=0.000178407
08:31:01 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.852µs elapsed_secs=9.3852e-5
08:31:01 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.146892ms elapsed_secs=0.011146892
08:31:01 [DEBUG] (346) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.212307ms elapsed_secs=0.011212307
08:31:01 [DEBUG] (346) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=524.263µs elapsed_secs=0.000524263
08:31:01 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=548.357µs elapsed_secs=0.000548357
08:31:01 [DEBUG] (342) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.461084ms elapsed_secs=0.012461084
08:31:01 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.613µs elapsed_secs=0.000159613
08:31:01 [DEBUG] (346) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=191.088µs elapsed_secs=0.000191088
08:31:01 [DEBUG] (342) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.257652ms elapsed_secs=0.001257652
08:31:01 [DEBUG] (342) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=805.276µs elapsed_secs=0.000805276
08:31:01 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.408171ms elapsed_secs=0.012408171
08:31:01 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=180.646µs elapsed_secs=0.000180646
08:31:01 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.467µs elapsed_secs=0.000120467
08:31:02 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.999179ms elapsed_secs=0.009999179
08:31:02 [DEBUG] (346) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.642502ms elapsed_secs=0.007642502
08:31:02 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=412.375µs elapsed_secs=0.000412375
08:31:02 [DEBUG] (346) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=481.954µs elapsed_secs=0.000481954
08:31:02 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.067µs elapsed_secs=0.000115067
08:31:02 [DEBUG] (346) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.48µs elapsed_secs=5.848e-5
08:31:02 [DEBUG] (342) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.560331ms elapsed_secs=0.009560331
08:31:02 [DEBUG] (342) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=155.992µs elapsed_secs=0.000155992
08:31:02 [DEBUG] (342) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.463µs elapsed_secs=7.9463e-5
08:31:02 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.949109ms elapsed_secs=0.007949109
08:31:02 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=213.834µs elapsed_secs=0.000213834
08:31:02 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.029µs elapsed_secs=7.8029e-5
08:31:02 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.902855ms elapsed_secs=0.008902855
08:31:02 [DEBUG] (346) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.952908ms elapsed_secs=0.008952908
08:31:02 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=247.518µs elapsed_secs=0.000247518
08:31:02 [DEBUG] (346) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=124.747µs elapsed_secs=0.000124747
08:31:02 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.727µs elapsed_secs=0.000134727
08:31:02 [DEBUG] (346) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=154.989µs elapsed_secs=0.000154989
08:31:02 [DEBUG] (342) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.220959ms elapsed_secs=0.009220959
08:31:02 [DEBUG] (342) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=160.399µs elapsed_secs=0.000160399
08:31:02 [DEBUG] (342) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=241.995µs elapsed_secs=0.000241995
08:31:02 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.272397ms elapsed_secs=0.008272397
08:31:02 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=235.864µs elapsed_secs=0.000235864
08:31:02 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.627µs elapsed_secs=9.7627e-5
08:31:02 [DEBUG] (342) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.83947ms elapsed_secs=0.00783947
08:31:02 [DEBUG] (346) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.124234ms elapsed_secs=0.008124234
08:31:02 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.3165ms elapsed_secs=0.0083165
08:31:02 [DEBUG] (346) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=823.554µs elapsed_secs=0.000823554
08:31:02 [DEBUG] (342) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=990.033µs elapsed_secs=0.000990033
08:31:02 [DEBUG] (349) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=419.326µs elapsed_secs=0.000419326
08:31:02 [DEBUG] (342) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.192µs elapsed_secs=0.000132192
08:31:02 [DEBUG] (346) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=235.402µs elapsed_secs=0.000235402
08:31:02 [DEBUG] (349) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.029µs elapsed_secs=0.000107029
08:31:02 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.719794ms elapsed_secs=0.007719794
08:31:02 [DEBUG] (353) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=208.079µs elapsed_secs=0.000208079
08:31:02 [DEBUG] (353) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.308µs elapsed_secs=0.000114308
08:31:02 [DEBUG] (346) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.989384ms elapsed_secs=0.006989384
08:31:02 [DEBUG] (342) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.366779ms elapsed_secs=0.007366779
08:31:02 [DEBUG] (353) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.512197ms elapsed_secs=0.006512197
08:31:02 [DEBUG] (349) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.023698ms elapsed_secs=0.009023698
08:31:02 [DEBUG] (309) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=237.983369ms elapsed_secs=0.237983369
08:31:02 [DEBUG] (323) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=220.660907ms elapsed_secs=0.220660907
08:31:02 [DEBUG] (354) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.491µs elapsed_secs=3.9491e-5
08:31:02 [DEBUG] (355) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.99µs elapsed_secs=3.799e-5
08:31:02 [DEBUG] (354) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=148.895µs elapsed_secs=0.000148895
08:31:02 [DEBUG] (355) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=233.978µs elapsed_secs=0.000233978
08:31:02 [DEBUG] (358) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.488µs elapsed_secs=7.5488e-5
08:31:02 [DEBUG] (361) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.728µs elapsed_secs=5.1728e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.317724ms elapsed_secs=0.013317724
08:31:02 [DEBUG] (361) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.952037ms elapsed_secs=0.012952037
08:31:02 [DEBUG] (361) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=94.985µs elapsed_secs=9.4985e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=169.264µs elapsed_secs=0.000169264
08:31:02 [DEBUG] (361) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=148.584µs elapsed_secs=0.000148584
08:31:02 [DEBUG] (358) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=269.366µs elapsed_secs=0.000269366
08:31:02 [DEBUG] (361) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=275.719µs elapsed_secs=0.000275719
08:31:02 [DEBUG] (358) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=302.691µs elapsed_secs=0.000302691
08:31:02 [DEBUG] (361) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.285µs elapsed_secs=6.0285e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.589µs elapsed_secs=5.8589e-5
08:31:02 [DEBUG] (314) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=241.869909ms elapsed_secs=0.241869909
08:31:02 [DEBUG] (337) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=230.257854ms elapsed_secs=0.230257854
08:31:02 [DEBUG] (363) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.057µs elapsed_secs=3.5057e-5
08:31:02 [DEBUG] (362) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.65µs elapsed_secs=4.065e-5
08:31:02 [DEBUG] (363) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=169.608µs elapsed_secs=0.000169608
08:31:02 [DEBUG] (362) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n            SELECT id, user_id, task_id, content, created_at, updated_at\n            FROM comments\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=123.69µs elapsed_secs=0.00012369
08:31:02 [DEBUG] (335) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
08:31:02 [DEBUG] (363) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=47.985µs elapsed_secs=4.7985e-5
08:31:02 [DEBUG] (335) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:02 [DEBUG] (331) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=240.8699ms elapsed_secs=0.2408699
08:31:02 [DEBUG] (334) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=229.503808ms elapsed_secs=0.229503808
08:31:02 [DEBUG] (363) sqlx::query: summary="UPDATE comments SET content …" db.statement="\n\n\n                UPDATE comments\n                SET content = $1, user_id = $2, task_id = $3, updated_at = $4\n                WHERE id = $5\n                RETURNING id, user_id, task_id, content, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=202.221µs elapsed_secs=0.000202221
08:31:02 [DEBUG] (319) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=244.124062ms elapsed_secs=0.244124062
08:31:02 [DEBUG] (365) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=117.321µs elapsed_secs=0.000117321
08:31:02 [DEBUG] (367) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.788µs elapsed_secs=3.9788e-5
08:31:02 [DEBUG] (368) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.573µs elapsed_secs=4.3573e-5
08:31:02 [DEBUG] (369) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.392µs elapsed_secs=3.5392e-5
08:31:02 [DEBUG] (365) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=247.687µs elapsed_secs=0.000247687
08:31:02 [DEBUG] (368) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=242.112µs elapsed_secs=0.000242112
08:31:02 [DEBUG] (369) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n            SELECT id, user_id, task_id, content, created_at, updated_at\n            FROM comments\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=115.57µs elapsed_secs=0.00011557
08:31:02 [DEBUG] (372) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=94.07µs elapsed_secs=9.407e-5
08:31:02 [DEBUG] (377) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=92.914µs elapsed_secs=9.2914e-5
08:31:02 [DEBUG] (378) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.453µs elapsed_secs=5.1453e-5
08:31:02 [DEBUG] (367) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.513278ms elapsed_secs=0.013513278
08:31:02 [DEBUG] (367) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.012µs elapsed_secs=7.9012e-5
08:31:02 [DEBUG] (381) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.45µs elapsed_secs=3.645e-5
08:31:02 [DEBUG] (367) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=210.138µs elapsed_secs=0.000210138
08:31:02 [DEBUG] (330) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=245.796541ms elapsed_secs=0.245796541
08:31:02 [DEBUG] (367) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=454.135µs elapsed_secs=0.000454135
08:31:02 [DEBUG] (367) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.134µs elapsed_secs=7.1134e-5
08:31:02 [DEBUG] (382) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.292µs elapsed_secs=6.8292e-5
08:31:02 [DEBUG] (382) sqlx::query: summary="SELECT id, user_id, task_id, …" db.statement="\n\n\n                SELECT id, user_id, task_id, content, created_at, updated_at\n                FROM comments\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=3 elapsed=153.467µs elapsed_secs=0.000153467
08:31:02 [DEBUG] (377) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.266304ms elapsed_secs=0.012266304
08:31:02 [DEBUG] (377) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=109.188µs elapsed_secs=0.000109188
08:31:02 [DEBUG] (377) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.834µs elapsed_secs=8.0834e-5
08:31:02 [DEBUG] (378) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.300395ms elapsed_secs=0.013300395
08:31:02 [DEBUG] (385) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=58.188µs elapsed_secs=5.8188e-5
08:31:02 [DEBUG] (377) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=446.561µs elapsed_secs=0.000446561
08:31:02 [DEBUG] (372) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.470966ms elapsed_secs=0.015470966
08:31:02 [DEBUG] (378) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=151.861µs elapsed_secs=0.000151861
08:31:02 [DEBUG] (377) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=224.917µs elapsed_secs=0.000224917
08:31:02 [DEBUG] (372) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=122.243µs elapsed_secs=0.000122243
08:31:02 [DEBUG] (378) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=96.296µs elapsed_secs=9.6296e-5
08:31:02 [DEBUG] (372) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=121.616µs elapsed_secs=0.000121616
08:31:02 [DEBUG] (378) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=199.795µs elapsed_secs=0.000199795
08:31:02 [DEBUG] (361) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.76176ms elapsed_secs=0.00776176
08:31:02 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=279.074µs elapsed_secs=0.000279074
08:31:02 [DEBUG] (358) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.161183ms elapsed_secs=0.008161183
08:31:02 [DEBUG] (378) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=213.452µs elapsed_secs=0.000213452
08:31:02 [DEBUG] (361) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=241.479µs elapsed_secs=0.000241479
08:31:02 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=524.278µs elapsed_secs=0.000524278
08:31:02 [DEBUG] (361) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=451.637µs elapsed_secs=0.000451637
08:31:02 [DEBUG] (358) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.57332ms elapsed_secs=0.00157332
08:31:02 [DEBUG] (358) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=166.34µs elapsed_secs=0.00016634
08:31:02 [DEBUG] (381) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.877476ms elapsed_secs=0.011877476
08:31:02 [DEBUG] (381) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=212.489µs elapsed_secs=0.000212489
08:31:02 [DEBUG] (381) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.651µs elapsed_secs=5.9651e-5
08:31:02 [DEBUG] (381) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=219.496µs elapsed_secs=0.000219496
08:31:02 [DEBUG] (381) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.405µs elapsed_secs=5.5405e-5
08:31:02 [DEBUG] (385) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.743034ms elapsed_secs=0.011743034
08:31:02 [DEBUG] (385) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.28µs elapsed_secs=7.728e-5
08:31:02 [DEBUG] (385) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.429µs elapsed_secs=6.3429e-5
08:31:02 [DEBUG] (385) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=401.038µs elapsed_secs=0.000401038
08:31:02 [DEBUG] (385) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.156µs elapsed_secs=6.7156e-5
08:31:02 [DEBUG] (367) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.897499ms elapsed_secs=0.007897499
08:31:02 [DEBUG] (367) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=587.969µs elapsed_secs=0.000587969
08:31:02 [DEBUG] (367) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=201.412µs elapsed_secs=0.000201412
08:31:02 [DEBUG] (378) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.536871ms elapsed_secs=0.008536871
08:31:02 [DEBUG] (377) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.5245ms elapsed_secs=0.0085245
08:31:02 [DEBUG] (378) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=627.878µs elapsed_secs=0.000627878
08:31:02 [DEBUG] (377) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=735.537µs elapsed_secs=0.000735537
08:31:02 [DEBUG] (378) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.82µs elapsed_secs=9.682e-5
08:31:02 [DEBUG] (377) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.272µs elapsed_secs=9.6272e-5
08:31:02 [DEBUG] (361) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.650055ms elapsed_secs=0.008650055
08:31:02 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.936111ms elapsed_secs=0.008936111
08:31:02 [DEBUG] (358) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.112308ms elapsed_secs=0.011112308
08:31:02 [DEBUG] (361) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=472.005µs elapsed_secs=0.000472005
08:31:02 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=496.564µs elapsed_secs=0.000496564
08:31:02 [DEBUG] (358) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=446.351µs elapsed_secs=0.000446351
08:31:02 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.626µs elapsed_secs=8.0626e-5
08:31:02 [DEBUG] (361) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.982µs elapsed_secs=7.7982e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.781µs elapsed_secs=6.4781e-5
08:31:02 [DEBUG] (381) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.06141ms elapsed_secs=0.01006141
08:31:02 [DEBUG] (381) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=345.276µs elapsed_secs=0.000345276
08:31:02 [DEBUG] (381) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.544µs elapsed_secs=7.8544e-5
08:31:02 [DEBUG] (385) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.022495ms elapsed_secs=0.007022495
08:31:02 [DEBUG] (385) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=129.756µs elapsed_secs=0.000129756
08:31:02 [DEBUG] (385) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=355.847µs elapsed_secs=0.000355847
08:31:02 [DEBUG] (367) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.638087ms elapsed_secs=0.009638087
08:31:02 [DEBUG] (367) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=220.748µs elapsed_secs=0.000220748
08:31:02 [DEBUG] (367) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.266µs elapsed_secs=8.4266e-5
08:31:02 [DEBUG] (377) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.32103ms elapsed_secs=0.01032103
08:31:02 [DEBUG] (378) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.429748ms elapsed_secs=0.010429748
08:31:02 [DEBUG] (378) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=187.394µs elapsed_secs=0.000187394
08:31:02 [DEBUG] (377) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=141.529µs elapsed_secs=0.000141529
08:31:02 [DEBUG] (378) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.286µs elapsed_secs=6.6286e-5
08:31:02 [DEBUG] (377) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.963µs elapsed_secs=5.1963e-5
08:31:02 [DEBUG] (361) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.564595ms elapsed_secs=0.007564595
08:31:02 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.929031ms elapsed_secs=0.007929031
08:31:02 [DEBUG] (361) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=488.733µs elapsed_secs=0.000488733
08:31:02 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=218.842µs elapsed_secs=0.000218842
08:31:02 [DEBUG] (361) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.31µs elapsed_secs=6.331e-5
08:31:02 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.805µs elapsed_secs=9.3805e-5
08:31:02 [DEBUG] (381) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.713811ms elapsed_secs=0.006713811
08:31:02 [DEBUG] (358) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.535152ms elapsed_secs=0.008535152
08:31:02 [DEBUG] (381) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=217.047µs elapsed_secs=0.000217047
08:31:02 [DEBUG] (381) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.202µs elapsed_secs=6.7202e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=227.92µs elapsed_secs=0.00022792
08:31:02 [DEBUG] (358) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.813µs elapsed_secs=8.4813e-5
08:31:02 [DEBUG] (385) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.117574ms elapsed_secs=0.008117574
08:31:02 [DEBUG] (385) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=149.346µs elapsed_secs=0.000149346
08:31:02 [DEBUG] (385) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=294.389µs elapsed_secs=0.000294389
08:31:02 [DEBUG] (367) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.79174ms elapsed_secs=0.00779174
08:31:02 [DEBUG] (378) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.669242ms elapsed_secs=0.006669242
08:31:02 [DEBUG] (367) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=236.422µs elapsed_secs=0.000236422
08:31:02 [DEBUG] (378) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=302.625µs elapsed_secs=0.000302625
08:31:02 [DEBUG] (367) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.897µs elapsed_secs=6.4897e-5
08:31:02 [DEBUG] (378) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.754µs elapsed_secs=7.8754e-5
08:31:02 [DEBUG] (377) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.938821ms elapsed_secs=0.006938821
08:31:02 [DEBUG] (377) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=436.838µs elapsed_secs=0.000436838
08:31:02 [DEBUG] (377) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.796µs elapsed_secs=7.1796e-5
08:31:02 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.136166ms elapsed_secs=0.007136166
08:31:02 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=264.388µs elapsed_secs=0.000264388
08:31:02 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.388µs elapsed_secs=7.5388e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.457549ms elapsed_secs=0.006457549
08:31:02 [DEBUG] (361) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.743328ms elapsed_secs=0.008743328
08:31:02 [DEBUG] (358) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=180.494µs elapsed_secs=0.000180494
08:31:02 [DEBUG] (361) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=189.629µs elapsed_secs=0.000189629
08:31:02 [DEBUG] (358) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.331µs elapsed_secs=9.0331e-5
08:31:02 [DEBUG] (361) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.899µs elapsed_secs=8.3899e-5
08:31:02 [DEBUG] (385) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.887028ms elapsed_secs=0.006887028
08:31:02 [DEBUG] (381) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.393777ms elapsed_secs=0.009393777
08:31:02 [DEBUG] (385) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=514.655µs elapsed_secs=0.000514655
08:31:02 [DEBUG] (381) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=595.567µs elapsed_secs=0.000595567
08:31:02 [DEBUG] (385) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.67µs elapsed_secs=8.667e-5
08:31:02 [DEBUG] (381) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.783µs elapsed_secs=8.6783e-5
08:31:02 [DEBUG] (378) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.450064ms elapsed_secs=0.006450064
08:31:02 [DEBUG] (378) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=391.976µs elapsed_secs=0.000391976
08:31:02 [DEBUG] (378) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.858µs elapsed_secs=5.8858e-5
08:31:02 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.022393ms elapsed_secs=0.007022393
08:31:02 [DEBUG] (367) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.634625ms elapsed_secs=0.008634625
08:31:02 [DEBUG] (377) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.71167ms elapsed_secs=0.00871167
08:31:02 [DEBUG] (367) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=232.669µs elapsed_secs=0.000232669
08:31:02 [DEBUG] (377) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=487.6µs elapsed_secs=0.0004876
08:31:02 [DEBUG] (367) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.963µs elapsed_secs=8.6963e-5
08:31:02 [DEBUG] (372) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=886.911µs elapsed_secs=0.000886911
08:31:02 [DEBUG] (377) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=51.78µs elapsed_secs=5.178e-5
08:31:02 [DEBUG] (372) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.313µs elapsed_secs=6.1313e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.941282ms elapsed_secs=0.008941282
08:31:02 [DEBUG] (381) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.62709ms elapsed_secs=0.00862709
08:31:02 [DEBUG] (381) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=157.109µs elapsed_secs=0.000157109
08:31:02 [DEBUG] (381) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.447µs elapsed_secs=9.0447e-5
08:31:02 [DEBUG] (361) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.012784ms elapsed_secs=0.011012784
08:31:02 [DEBUG] (385) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.30868ms elapsed_secs=0.01130868
08:31:02 [DEBUG] (385) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=162.039µs elapsed_secs=0.000162039
08:31:02 [DEBUG] (385) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.774µs elapsed_secs=0.000101774
08:31:02 [DEBUG] (378) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.813464ms elapsed_secs=0.008813464
08:31:02 [DEBUG] (386) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=273.244µs elapsed_secs=0.000273244
08:31:02 [DEBUG] (377) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.688083ms elapsed_secs=0.009688083
08:31:02 [DEBUG] (367) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.892356ms elapsed_secs=0.009892356
08:31:02 [DEBUG] (372) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.982363ms elapsed_secs=0.009982363
08:31:02 [DEBUG] (387) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.594µs elapsed_secs=7.5594e-5
08:31:02 [DEBUG] (386) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=8.520207ms elapsed_secs=0.008520207
08:31:02 [DEBUG] (385) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.302902ms elapsed_secs=0.008302902
08:31:02 [INFO] Created project: Project { id: Some(1), name: "create_test_20250610083102" }
08:31:02 [DEBUG] (388) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.003µs elapsed_secs=5.6003e-5
08:31:02 [DEBUG] (381) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.597561ms elapsed_secs=0.010597561
08:31:02 [DEBUG] (388) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=379.042µs elapsed_secs=0.000379042
08:31:02 [DEBUG] (389) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=149.769µs elapsed_secs=0.000149769
08:31:02 [DEBUG] (375) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "create_test_20250610083102" })
08:31:02 [DEBUG] (390) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=165.99µs elapsed_secs=0.00016599
08:31:02 [DEBUG] (397) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.686µs elapsed_secs=6.0686e-5
08:31:02 [DEBUG] (398) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.833µs elapsed_secs=7.7833e-5
08:31:02 [DEBUG] (399) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.423µs elapsed_secs=7.8423e-5
08:31:02 [DEBUG] (387) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=11.760689ms elapsed_secs=0.011760689
08:31:02 [INFO] Created project: Project { id: Some(1), name: "duplicate_test_1_20250610083102" }
08:31:02 [DEBUG] (400) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.738µs elapsed_secs=8.4738e-5
08:31:02 [DEBUG] (400) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=207.138µs elapsed_secs=0.000207138
08:31:02 [DEBUG] (403) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.017µs elapsed_secs=5.7017e-5
08:31:02 [DEBUG] (397) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.004694ms elapsed_secs=0.014004694
08:31:02 [DEBUG] (397) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=500.266µs elapsed_secs=0.000500266
08:31:02 [DEBUG] (397) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=247.337µs elapsed_secs=0.000247337
08:31:02 [DEBUG] (399) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.170342ms elapsed_secs=0.016170342
08:31:02 [DEBUG] (398) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.24321ms elapsed_secs=0.01624321
08:31:02 [DEBUG] (397) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=312.184µs elapsed_secs=0.000312184
08:31:02 [DEBUG] (399) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=128.065µs elapsed_secs=0.000128065
08:31:02 [DEBUG] (398) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.467µs elapsed_secs=8.1467e-5
08:31:02 [DEBUG] (397) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.263µs elapsed_secs=9.4263e-5
08:31:02 [DEBUG] (399) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.796µs elapsed_secs=7.8796e-5
08:31:02 [DEBUG] (398) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.351µs elapsed_secs=5.6351e-5
08:31:02 [DEBUG] (399) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=855.276µs elapsed_secs=0.000855276
08:31:02 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=684.272µs elapsed_secs=0.000684272
08:31:02 [DEBUG] (403) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.493423ms elapsed_secs=0.012493423
08:31:02 [DEBUG] (399) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.776µs elapsed_secs=0.000112776
08:31:02 [DEBUG] (403) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.366µs elapsed_secs=9.7366e-5
08:31:02 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=328.275µs elapsed_secs=0.000328275
08:31:02 [DEBUG] (403) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.949µs elapsed_secs=8.0949e-5
08:31:02 [DEBUG] (403) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=314.024µs elapsed_secs=0.000314024
08:31:02 [DEBUG] (403) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.399µs elapsed_secs=7.3399e-5
08:31:02 [DEBUG] (399) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.112531ms elapsed_secs=0.008112531
08:31:02 [DEBUG] (397) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.644246ms elapsed_secs=0.009644246
08:31:02 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.810826ms elapsed_secs=0.008810826
08:31:02 [DEBUG] (399) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=767.802µs elapsed_secs=0.000767802
08:31:02 [DEBUG] (397) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.097265ms elapsed_secs=0.001097265
08:31:02 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=1.739294ms elapsed_secs=0.001739294
08:31:02 [DEBUG] (399) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=476.702µs elapsed_secs=0.000476702
08:31:02 [DEBUG] (397) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=491.568µs elapsed_secs=0.000491568
08:31:02 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=226.549µs elapsed_secs=0.000226549
08:31:02 [DEBUG] (403) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.247807ms elapsed_secs=0.011247807
08:31:02 [DEBUG] (403) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=270.902µs elapsed_secs=0.000270902
08:31:02 [DEBUG] (403) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=163.033µs elapsed_secs=0.000163033
08:31:02 [DEBUG] (349) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=244.491472ms elapsed_secs=0.244491472
08:31:02 [DEBUG] (404) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.29µs elapsed_secs=4.129e-5
08:31:02 [DEBUG] (404) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=131.695µs elapsed_secs=0.000131695
08:31:02 [DEBUG] (347) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:02 [DEBUG] (404) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=104.761µs elapsed_secs=0.000104761
08:31:02 [DEBUG] (347) menahel::repository::task_repo: Get task by id with transaction: None
08:31:02 [DEBUG] (407) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.952µs elapsed_secs=4.9952e-5
08:31:02 [DEBUG] (346) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=254.366977ms elapsed_secs=0.254366977
08:31:02 [DEBUG] (353) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=252.239547ms elapsed_secs=0.252239547
08:31:02 [DEBUG] (408) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.161µs elapsed_secs=4.2161e-5
08:31:02 [DEBUG] (409) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.269µs elapsed_secs=3.5269e-5
08:31:02 [DEBUG] (409) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=194.137µs elapsed_secs=0.000194137
08:31:02 [DEBUG] (351) menahel::repository::user_repo: Get user by id with transaction: None
08:31:02 [DEBUG] (412) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.646µs elapsed_secs=5.4646e-5
08:31:02 [DEBUG] (397) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.391272ms elapsed_secs=0.008391272
08:31:02 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.170623ms elapsed_secs=0.009170623
08:31:02 [DEBUG] (399) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.335147ms elapsed_secs=0.009335147
08:31:02 [DEBUG] (397) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=851.128µs elapsed_secs=0.000851128
08:31:02 [DEBUG] (415) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.141µs elapsed_secs=7.0141e-5
08:31:02 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=422.902µs elapsed_secs=0.000422902
08:31:02 [DEBUG] (399) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=235.197µs elapsed_secs=0.000235197
08:31:02 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.924µs elapsed_secs=0.000123924
08:31:02 [DEBUG] (397) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.812µs elapsed_secs=7.5812e-5
08:31:02 [DEBUG] (399) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=254.365µs elapsed_secs=0.000254365
08:31:02 [DEBUG] (342) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=264.949293ms elapsed_secs=0.264949293
08:31:02 [DEBUG] (407) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.388874ms elapsed_secs=0.014388874
08:31:02 [DEBUG] (407) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=145.664µs elapsed_secs=0.000145664
08:31:02 [DEBUG] (407) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=98.92µs elapsed_secs=9.892e-5
08:31:02 [DEBUG] (416) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.519µs elapsed_secs=5.0519e-5
08:31:02 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=561.834µs elapsed_secs=0.000561834
08:31:02 [DEBUG] (416) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=378.924µs elapsed_secs=0.000378924
08:31:02 [DEBUG] (403) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.928843ms elapsed_secs=0.012928843
08:31:02 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.646µs elapsed_secs=9.8646e-5
08:31:02 [DEBUG] (340) menahel::repository::user_repo: Get user by id with transaction: None
08:31:02 [DEBUG] (403) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=664.932µs elapsed_secs=0.000664932
08:31:02 [DEBUG] (403) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=163.6µs elapsed_secs=0.0001636
08:31:02 [DEBUG] (412) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.317659ms elapsed_secs=0.013317659
08:31:02 [DEBUG] (412) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=273.4µs elapsed_secs=0.0002734
08:31:02 [DEBUG] (419) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=120.748µs elapsed_secs=0.000120748
08:31:02 [DEBUG] (412) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=607.714µs elapsed_secs=0.000607714
08:31:02 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=493.032µs elapsed_secs=0.000493032
08:31:02 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=349.311µs elapsed_secs=0.000349311
08:31:02 [DEBUG] (415) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.886249ms elapsed_secs=0.017886249
08:31:02 [DEBUG] (415) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=88.411µs elapsed_secs=8.8411e-5
08:31:02 [DEBUG] (415) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.13µs elapsed_secs=7.413e-5
08:31:02 [DEBUG] (415) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=308.198µs elapsed_secs=0.000308198
08:31:02 [DEBUG] (415) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=208.962µs elapsed_secs=0.000208962
08:31:02 [DEBUG] (399) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.188965ms elapsed_secs=0.006188965
08:31:02 [DEBUG] (419) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.582839ms elapsed_secs=0.011582839
08:31:02 [DEBUG] (397) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.14632ms elapsed_secs=0.00714632
08:31:02 [DEBUG] (399) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=528.67µs elapsed_secs=0.00052867
08:31:02 [DEBUG] (399) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=156.92µs elapsed_secs=0.00015692
08:31:02 [DEBUG] (419) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=370.729µs elapsed_secs=0.000370729
08:31:02 [DEBUG] (397) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=330.475µs elapsed_secs=0.000330475
08:31:02 [DEBUG] (419) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=152.773µs elapsed_secs=0.000152773
08:31:02 [DEBUG] (397) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.536µs elapsed_secs=7.8536e-5
08:31:02 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.094737ms elapsed_secs=0.009094737
08:31:02 [DEBUG] (419) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=241.003µs elapsed_secs=0.000241003
08:31:02 [DEBUG] (419) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=170.745µs elapsed_secs=0.000170745
08:31:02 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=619.369µs elapsed_secs=0.000619369
08:31:02 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.183µs elapsed_secs=9.5183e-5
08:31:02 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.632837ms elapsed_secs=0.010632837
08:31:02 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=583.474µs elapsed_secs=0.000583474
08:31:02 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.446µs elapsed_secs=7.7446e-5
08:31:02 [DEBUG] (403) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.627026ms elapsed_secs=0.011627026
08:31:02 [DEBUG] (403) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=160.048µs elapsed_secs=0.000160048
08:31:02 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.083393ms elapsed_secs=0.012083393
08:31:02 [DEBUG] (403) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.54µs elapsed_secs=7.354e-5
08:31:02 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=407.588µs elapsed_secs=0.000407588
08:31:02 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.195µs elapsed_secs=9.0195e-5
08:31:02 [DEBUG] (415) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.733681ms elapsed_secs=0.007733681
08:31:02 [DEBUG] (415) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=283.415µs elapsed_secs=0.000283415
08:31:02 [DEBUG] (415) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.043µs elapsed_secs=8.6043e-5
08:31:02 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.241097ms elapsed_secs=0.009241097
08:31:02 [DEBUG] (419) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.235987ms elapsed_secs=0.009235987
08:31:02 [DEBUG] (399) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.455872ms elapsed_secs=0.009455872
08:31:02 [DEBUG] (398) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=148.188µs elapsed_secs=0.000148188
08:31:02 [DEBUG] (398) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.704µs elapsed_secs=7.1704e-5
08:31:02 [DEBUG] (419) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=224.558µs elapsed_secs=0.000224558
08:31:02 [DEBUG] (397) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.081784ms elapsed_secs=0.010081784
08:31:02 [DEBUG] (399) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=226.019µs elapsed_secs=0.000226019
08:31:02 [DEBUG] (419) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.854µs elapsed_secs=0.000108854
08:31:02 [DEBUG] (399) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=162.056µs elapsed_secs=0.000162056
08:31:02 [DEBUG] (397) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=228.393µs elapsed_secs=0.000228393
08:31:02 [DEBUG] (397) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.839µs elapsed_secs=6.1839e-5
08:31:02 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.353897ms elapsed_secs=0.008353897
08:31:02 [DEBUG] (403) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.028077ms elapsed_secs=0.005028077
08:31:02 [DEBUG] (415) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.079491ms elapsed_secs=0.005079491
08:31:02 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=261.373µs elapsed_secs=0.000261373
08:31:02 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.172246ms elapsed_secs=0.007172246
08:31:02 [DEBUG] (415) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=476.46µs elapsed_secs=0.00047646
08:31:02 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=169.784µs elapsed_secs=0.000169784
08:31:02 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=422.359µs elapsed_secs=0.000422359
08:31:02 [DEBUG] (403) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=644.8µs elapsed_secs=0.0006448
08:31:02 [DEBUG] (415) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.333µs elapsed_secs=8.5333e-5
08:31:02 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.502µs elapsed_secs=7.1502e-5
08:31:02 [DEBUG] (403) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.808µs elapsed_secs=9.6808e-5
08:31:02 [DEBUG] (398) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.355455ms elapsed_secs=0.008355455
08:31:02 [DEBUG] (397) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.056796ms elapsed_secs=0.009056796
08:31:02 [DEBUG] (399) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.9447ms elapsed_secs=0.0089447
08:31:02 [DEBUG] (420) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.565µs elapsed_secs=5.9565e-5
08:31:02 [DEBUG] (421) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=163.239µs elapsed_secs=0.000163239
08:31:02 [DEBUG] (422) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.659µs elapsed_secs=6.1659e-5
08:31:02 [DEBUG] (419) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.557036ms elapsed_secs=0.008557036
08:31:02 [DEBUG] (425) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.959µs elapsed_secs=4.6959e-5
08:31:02 [DEBUG] (421) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=486.484µs elapsed_secs=0.000486484
08:31:02 [DEBUG] (419) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=527.252µs elapsed_secs=0.000527252
08:31:02 [DEBUG] (419) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.171µs elapsed_secs=9.9171e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.358µs elapsed_secs=3.7358e-5
08:31:02 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.260058ms elapsed_secs=0.008260058
08:31:02 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=304.979µs elapsed_secs=0.000304979
08:31:02 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.696µs elapsed_secs=0.000108696
08:31:02 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.239005ms elapsed_secs=0.006239005
08:31:02 [DEBUG] (422) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=6.340976ms elapsed_secs=0.006340976
08:31:02 [DEBUG] (403) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.89972ms elapsed_secs=0.00689972
08:31:02 [INFO] Created project: Project { id: Some(1), name: "delete_test_20250610083102" }
08:31:02 [DEBUG] (415) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.558846ms elapsed_secs=0.007558846
08:31:02 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=399.76µs elapsed_secs=0.00039976
08:31:02 [DEBUG] (429) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=25.767µs elapsed_secs=2.5767e-5
08:31:02 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=277.287µs elapsed_secs=0.000277287
08:31:02 [DEBUG] (415) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=378.064µs elapsed_secs=0.000378064
08:31:02 [DEBUG] (429) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=312.675µs elapsed_secs=0.000312675
08:31:02 [DEBUG] (430) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=161.274µs elapsed_secs=0.000161274
08:31:02 [DEBUG] (394) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "delete_test_20250610083102" })
08:31:02 [DEBUG] (415) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.95µs elapsed_secs=0.00014195
08:31:02 [DEBUG] (425) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.441737ms elapsed_secs=0.010441737
08:31:02 [DEBUG] (425) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=90.61µs elapsed_secs=9.061e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=56.518µs elapsed_secs=5.6518e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=279.955µs elapsed_secs=0.000279955
08:31:02 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.547µs elapsed_secs=8.6547e-5
08:31:02 [DEBUG] (430) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=5.459764ms elapsed_secs=0.005459764
08:31:02 [INFO] Created project: Project { id: Some(1), name: "get_all_projects_test_20250610083102_1" }
08:31:02 [DEBUG] (428) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.817005ms elapsed_secs=0.011817005
08:31:02 [DEBUG] (431) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.992µs elapsed_secs=4.2992e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=98.184µs elapsed_secs=9.8184e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=86.91µs elapsed_secs=8.691e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=174.809µs elapsed_secs=0.000174809
08:31:02 [DEBUG] (428) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.367µs elapsed_secs=7.7367e-5
08:31:02 [DEBUG] (422) sqlx::query: summary="DELETE FROM projects WHERE …" db.statement="\n\n\n                DELETE FROM projects\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=8.721454ms elapsed_secs=0.008721454
08:31:02 [INFO] Deleted project: ID = 1
08:31:02 [DEBUG] (429) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=69.833µs elapsed_secs=6.9833e-5
08:31:02 [DEBUG] (394) menahel::repository::project_repo: Got project by id: None
08:31:02 [DEBUG] (419) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.771422ms elapsed_secs=0.007771422
08:31:02 [DEBUG] (434) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.006µs elapsed_secs=4.2006e-5
08:31:02 [DEBUG] (419) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=289.605µs elapsed_secs=0.000289605
08:31:02 [DEBUG] (419) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.826µs elapsed_secs=8.1826e-5
08:31:02 [DEBUG] (431) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=7.807172ms elapsed_secs=0.007807172
08:31:02 [INFO] Created project: Project { id: Some(2), name: "get_all_projects_test_20250610083102_2" }
08:31:02 [DEBUG] (415) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.37095ms elapsed_secs=0.00637095
08:31:02 [DEBUG] (415) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=241.236µs elapsed_secs=0.000241236
08:31:02 [DEBUG] (415) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.546µs elapsed_secs=9.7546e-5
08:31:02 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.510679ms elapsed_secs=0.009510679
08:31:02 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.547432ms elapsed_secs=0.009547432
08:31:02 [DEBUG] (412) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=555.764µs elapsed_secs=0.000555764
08:31:02 [DEBUG] (407) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=614.454µs elapsed_secs=0.000614454
08:31:02 [DEBUG] (412) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.636µs elapsed_secs=0.000107636
08:31:02 [DEBUG] (407) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.558µs elapsed_secs=7.2558e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.233226ms elapsed_secs=0.010233226
08:31:02 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=178.929µs elapsed_secs=0.000178929
08:31:02 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.186µs elapsed_secs=7.9186e-5
08:31:02 [DEBUG] (434) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.12005ms elapsed_secs=0.01312005
08:31:02 [DEBUG] (434) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.536µs elapsed_secs=7.5536e-5
08:31:02 [DEBUG] (434) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=53.361µs elapsed_secs=5.3361e-5
08:31:02 [DEBUG] (434) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=169.711µs elapsed_secs=0.000169711
08:31:02 [DEBUG] (434) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.968µs elapsed_secs=0.000133968
08:31:02 [DEBUG] (428) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.137437ms elapsed_secs=0.010137437
08:31:02 [DEBUG] (428) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=165.82µs elapsed_secs=0.00016582
08:31:02 [DEBUG] (428) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.014µs elapsed_secs=7.1014e-5
08:31:02 [DEBUG] (430) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=12.938547ms elapsed_secs=0.012938547
08:31:02 [INFO] Created project: Project { id: Some(3), name: "get_all_projects_test_20250610083102_3" }
08:31:02 [DEBUG] (419) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.895787ms elapsed_secs=0.009895787
08:31:02 [DEBUG] (419) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=380.215µs elapsed_secs=0.000380215
08:31:02 [DEBUG] (419) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=192.91µs elapsed_secs=0.00019291
08:31:02 [DEBUG] (431) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=10.421844ms elapsed_secs=0.010421844
08:31:02 [DEBUG] (415) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.170602ms elapsed_secs=0.009170602
08:31:02 [INFO] Created project: Project { id: Some(4), name: "get_all_projects_test_20250610083102_4" }
08:31:02 [DEBUG] (407) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.865826ms elapsed_secs=0.010865826
08:31:02 [DEBUG] (412) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.190786ms elapsed_secs=0.011190786
08:31:02 [DEBUG] (435) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.321µs elapsed_secs=4.5321e-5
08:31:02 [DEBUG] (435) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=0 rows_returned=0 elapsed=153.135µs elapsed_secs=0.000153135
08:31:02 [DEBUG] (405) menahel::repository::project_repo: Got all projects: []
08:31:02 [DEBUG] (436) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.804µs elapsed_secs=3.7804e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.273816ms elapsed_secs=0.009273816
08:31:02 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=281.772µs elapsed_secs=0.000281772
08:31:02 [DEBUG] (439) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.764µs elapsed_secs=3.9764e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.811µs elapsed_secs=0.000118811
08:31:02 [DEBUG] (430) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=6.96009ms elapsed_secs=0.00696009
08:31:02 [DEBUG] (434) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.19032ms elapsed_secs=0.00919032
08:31:02 [INFO] Created project: Project { id: Some(5), name: "get_all_projects_test_20250610083102_5" }
08:31:02 [DEBUG] (431) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n            \n" rows_affected=1 rows_returned=5 elapsed=155.872µs elapsed_secs=0.000155872
08:31:02 [DEBUG] (401) menahel::repository::project_repo: Got all projects: [Project { id: Some(1), name: "get_all_projects_test_20250610083102_1" }, Project { id: Some(2), name: "get_all_projects_test_20250610083102_2" }, Project { id: Some(3), name: "get_all_projects_test_20250610083102_3" }, Project { id: Some(4), name: "get_all_projects_test_20250610083102_4" }, Project { id: Some(5), name: "get_all_projects_test_20250610083102_5" }]
08:31:02 [DEBUG] (434) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=452.852µs elapsed_secs=0.000452852
08:31:02 [DEBUG] (434) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.241µs elapsed_secs=0.000102241
08:31:02 [DEBUG] (442) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.908µs elapsed_secs=5.3908e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.375501ms elapsed_secs=0.011375501
08:31:02 [DEBUG] (428) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=335.991µs elapsed_secs=0.000335991
08:31:02 [DEBUG] (428) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=288.183µs elapsed_secs=0.000288183
08:31:02 [DEBUG] (436) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=12.613554ms elapsed_secs=0.012613554
08:31:02 [INFO] Created project: Project { id: Some(1), name: "get_by_id_test_20250610083102" }
08:31:02 [DEBUG] (443) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.131µs elapsed_secs=4.6131e-5
08:31:02 [DEBUG] (443) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=130.245µs elapsed_secs=0.000130245
08:31:02 [DEBUG] (410) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "get_by_id_test_20250610083102" })
08:31:02 [DEBUG] (419) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.237476ms elapsed_secs=0.009237476
08:31:02 [DEBUG] (439) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.057797ms elapsed_secs=0.013057797
08:31:02 [DEBUG] (439) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=71.386µs elapsed_secs=7.1386e-5
08:31:02 [DEBUG] (439) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.653µs elapsed_secs=5.7653e-5
08:31:02 [DEBUG] (446) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.163µs elapsed_secs=3.2163e-5
08:31:02 [DEBUG] (439) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=385.674µs elapsed_secs=0.000385674
08:31:02 [DEBUG] (439) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.26µs elapsed_secs=0.00014426
08:31:02 [DEBUG] (442) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.342505ms elapsed_secs=0.012342505
08:31:02 [DEBUG] (442) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.547µs elapsed_secs=7.5547e-5
08:31:02 [DEBUG] (442) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.76µs elapsed_secs=7.476e-5
08:31:02 [DEBUG] (442) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=335.944µs elapsed_secs=0.000335944
08:31:02 [DEBUG] (442) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.237µs elapsed_secs=8.9237e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.947149ms elapsed_secs=0.007947149
08:31:02 [DEBUG] (434) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.112402ms elapsed_secs=0.008112402
08:31:02 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=727.957µs elapsed_secs=0.000727957
08:31:02 [DEBUG] (434) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=422.726µs elapsed_secs=0.000422726
08:31:02 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176µs elapsed_secs=0.000176
08:31:02 [DEBUG] (434) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=149.955µs elapsed_secs=0.000149955
08:31:02 [DEBUG] (446) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.935294ms elapsed_secs=0.010935294
08:31:02 [DEBUG] (446) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=145.828µs elapsed_secs=0.000145828
08:31:02 [DEBUG] (446) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=149.125µs elapsed_secs=0.000149125
08:31:02 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=262.175µs elapsed_secs=0.000262175
08:31:02 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.769µs elapsed_secs=7.6769e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.058809ms elapsed_secs=0.010058809
08:31:02 [DEBUG] (428) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=230.932µs elapsed_secs=0.000230932
08:31:02 [DEBUG] (428) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.96µs elapsed_secs=8.496e-5
08:31:02 [DEBUG] (439) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.931218ms elapsed_secs=0.007931218
08:31:02 [DEBUG] (439) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=784.301µs elapsed_secs=0.000784301
08:31:02 [DEBUG] (439) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.123µs elapsed_secs=0.000125123
08:31:02 [DEBUG] (442) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.399152ms elapsed_secs=0.010399152
08:31:02 [DEBUG] (442) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=189.46µs elapsed_secs=0.00018946
08:31:02 [DEBUG] (442) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.384µs elapsed_secs=7.8384e-5
08:31:02 [DEBUG] (358) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=254.640839ms elapsed_secs=0.254640839
08:31:02 [DEBUG] (447) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.063µs elapsed_secs=4.3063e-5
08:31:02 [DEBUG] (447) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=133.738µs elapsed_secs=0.000133738
08:31:02 [DEBUG] (356) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:02 [DEBUG] (447) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=70.75µs elapsed_secs=7.075e-5
08:31:02 [DEBUG] (356) menahel::repository::task_repo: Get task by id with transaction: None
08:31:02 [DEBUG] (434) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.854018ms elapsed_secs=0.008854018
08:31:02 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.901316ms elapsed_secs=0.008901316
08:31:02 [DEBUG] (434) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=430.593µs elapsed_secs=0.000430593
08:31:02 [DEBUG] (425) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=161.718µs elapsed_secs=0.000161718
08:31:02 [DEBUG] (434) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.638µs elapsed_secs=7.9638e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.029µs elapsed_secs=0.000136029
08:31:02 [DEBUG] (450) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.754µs elapsed_secs=6.3754e-5
08:31:02 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.396225ms elapsed_secs=0.010396225
08:31:02 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=235.036µs elapsed_secs=0.000235036
08:31:02 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.37µs elapsed_secs=6.437e-5
08:31:02 [DEBUG] (361) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=259.969397ms elapsed_secs=0.259969397
08:31:02 [DEBUG] (451) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.849µs elapsed_secs=5.0849e-5
08:31:02 [DEBUG] (451) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=240.592µs elapsed_secs=0.000240592
08:31:02 [DEBUG] (359) menahel::repository::user_repo: Get user by id with transaction: None
08:31:02 [DEBUG] (428) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.573022ms elapsed_secs=0.010573022
08:31:02 [DEBUG] (454) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.065µs elapsed_secs=6.7065e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=311.184µs elapsed_secs=0.000311184
08:31:02 [DEBUG] (428) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.898µs elapsed_secs=8.8898e-5
08:31:02 [DEBUG] (450) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.658581ms elapsed_secs=0.012658581
08:31:02 [DEBUG] (372) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=254.604044ms elapsed_secs=0.254604044
08:31:02 [DEBUG] (450) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=127.955µs elapsed_secs=0.000127955
08:31:02 [DEBUG] (450) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=102.289µs elapsed_secs=0.000102289
08:31:02 [DEBUG] (455) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.848µs elapsed_secs=4.5848e-5
08:31:02 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=489.951µs elapsed_secs=0.000489951
08:31:02 [DEBUG] (439) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.401458ms elapsed_secs=0.011401458
08:31:02 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.289µs elapsed_secs=9.3289e-5
08:31:02 [DEBUG] (439) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=208.811µs elapsed_secs=0.000208811
08:31:02 [DEBUG] (439) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.412µs elapsed_secs=9.1412e-5
08:31:02 [DEBUG] (367) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (1, 1, 3, 'Test Comment 0', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (2, 1, 11, 'Test Comment 1', 0);\nINSERT INTO comments (id, user_id, task_id, content, created_at) VALUES (3, 1, 12, 'Test Comment 2', 0);\n\n\n\n\n" rows_affected=28 rows_returned=0 elapsed=257.326144ms elapsed_secs=0.257326144
08:31:02 [DEBUG] (458) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.39µs elapsed_secs=6.339e-5
08:31:02 [DEBUG] (459) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=101.352µs elapsed_secs=0.000101352
08:31:02 [DEBUG] (459) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=110.542µs elapsed_secs=0.000110542
08:31:02 [DEBUG] (364) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:02 [DEBUG] (459) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=55.402µs elapsed_secs=5.5402e-5
08:31:02 [DEBUG] (364) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:02 [DEBUG] (462) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.854µs elapsed_secs=4.7854e-5
08:31:02 [DEBUG] (442) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.256289ms elapsed_secs=0.009256289
08:31:02 [DEBUG] (442) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=174.816µs elapsed_secs=0.000174816
08:31:02 [DEBUG] (442) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.246µs elapsed_secs=8.2246e-5
08:31:02 [DEBUG] (425) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.483381ms elapsed_secs=0.009483381
08:31:02 [DEBUG] (434) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.086333ms elapsed_secs=0.008086333
08:31:02 [DEBUG] (454) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.879361ms elapsed_secs=0.011879361
08:31:02 [DEBUG] (463) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.822µs elapsed_secs=5.6822e-5
08:31:02 [DEBUG] (434) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=223.505µs elapsed_secs=0.000223505
08:31:02 [DEBUG] (454) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=184.525µs elapsed_secs=0.000184525
08:31:02 [DEBUG] (434) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.927µs elapsed_secs=0.000103927
08:31:02 [DEBUG] (454) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=100.806µs elapsed_secs=0.000100806
08:31:02 [DEBUG] (454) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=986.811µs elapsed_secs=0.000986811
08:31:02 [DEBUG] (454) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=441.33µs elapsed_secs=0.00044133
08:31:02 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.939872ms elapsed_secs=0.010939872
08:31:02 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=384.513µs elapsed_secs=0.000384513
08:31:02 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.583µs elapsed_secs=9.3583e-5
08:31:02 [DEBUG] (458) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.214892ms elapsed_secs=0.013214892
08:31:02 [DEBUG] (458) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=125.289µs elapsed_secs=0.000125289
08:31:02 [DEBUG] (458) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.622µs elapsed_secs=5.8622e-5
08:31:02 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=246.989µs elapsed_secs=0.000246989
08:31:02 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=385.711µs elapsed_secs=0.000385711
08:31:02 [DEBUG] (439) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.681413ms elapsed_secs=0.007681413
08:31:02 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.925515ms elapsed_secs=0.007925515
08:31:02 [DEBUG] (428) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.250673ms elapsed_secs=0.010250673
08:31:02 [DEBUG] (463) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=9.571034ms elapsed_secs=0.009571034
08:31:02 [DEBUG] (439) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=241.248µs elapsed_secs=0.000241248
08:31:02 [DEBUG] (462) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.939258ms elapsed_secs=0.013939258
08:31:02 [INFO] Created project: Project { id: Some(1), name: "get_by_name_test_20250610083102" }
08:31:02 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=435.474µs elapsed_secs=0.000435474
08:31:02 [DEBUG] (439) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.481µs elapsed_secs=0.000132481
08:31:02 [DEBUG] (462) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=122.085µs elapsed_secs=0.000122085
08:31:02 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.223µs elapsed_secs=0.000110223
08:31:02 [DEBUG] (464) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=28.576µs elapsed_secs=2.8576e-5
08:31:02 [DEBUG] (462) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.603µs elapsed_secs=7.7603e-5
08:31:02 [DEBUG] (464) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE name = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=137.136µs elapsed_secs=0.000137136
08:31:02 [DEBUG] (423) menahel::repository::project_repo: Got project by name: Some(Project { id: Some(1), name: "get_by_name_test_20250610083102" })
08:31:02 [DEBUG] (462) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=173.824µs elapsed_secs=0.000173824
08:31:02 [DEBUG] (462) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.223µs elapsed_secs=8.4223e-5
08:31:02 [DEBUG] (467) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.826µs elapsed_secs=7.4826e-5
08:31:02 [DEBUG] (442) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.886294ms elapsed_secs=0.008886294
08:31:02 [DEBUG] (415) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=96.322061ms elapsed_secs=0.096322061
08:31:02 [DEBUG] (442) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=727.525µs elapsed_secs=0.000727525
08:31:02 [DEBUG] (468) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.296µs elapsed_secs=6.8296e-5
08:31:02 [DEBUG] (442) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=251.414µs elapsed_secs=0.000251414
08:31:02 [DEBUG] (468) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=214.651µs elapsed_secs=0.000214651
08:31:02 [DEBUG] (434) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.207565ms elapsed_secs=0.009207565
08:31:02 [DEBUG] (471) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.623µs elapsed_secs=4.0623e-5
08:31:02 [DEBUG] (467) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.386338ms elapsed_secs=0.012386338
08:31:02 [DEBUG] (467) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.878µs elapsed_secs=7.8878e-5
08:31:02 [DEBUG] (467) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=71.213µs elapsed_secs=7.1213e-5
08:31:02 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=233.234µs elapsed_secs=0.000233234
08:31:02 [DEBUG] (454) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.517564ms elapsed_secs=0.011517564
08:31:02 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.167µs elapsed_secs=9.3167e-5
08:31:02 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.751897ms elapsed_secs=0.011751897
08:31:02 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=231.522µs elapsed_secs=0.000231522
08:31:02 [DEBUG] (454) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=506.964µs elapsed_secs=0.000506964
08:31:02 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.921µs elapsed_secs=7.1921e-5
08:31:02 [DEBUG] (454) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.76µs elapsed_secs=7.876e-5
08:31:02 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.348544ms elapsed_secs=0.009348544
08:31:02 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=485.978µs elapsed_secs=0.000485978
08:31:02 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.984µs elapsed_secs=7.6984e-5
08:31:02 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.560678ms elapsed_secs=0.009560678
08:31:02 [DEBUG] (439) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.463901ms elapsed_secs=0.010463901
08:31:02 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=664.482µs elapsed_secs=0.000664482
08:31:02 [DEBUG] (439) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=298.411µs elapsed_secs=0.000298411
08:31:02 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.37µs elapsed_secs=0.00015537
08:31:02 [DEBUG] (439) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=178.767µs elapsed_secs=0.000178767
08:31:02 [DEBUG] (462) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.415108ms elapsed_secs=0.009415108
08:31:02 [DEBUG] (462) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=288.8µs elapsed_secs=0.0002888
08:31:02 [DEBUG] (462) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=295.355µs elapsed_secs=0.000295355
08:31:02 [DEBUG] (471) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.597479ms elapsed_secs=0.011597479
08:31:02 [DEBUG] (471) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=249.785µs elapsed_secs=0.000249785
08:31:02 [DEBUG] (471) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=112.454µs elapsed_secs=0.000112454
08:31:02 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=381.755µs elapsed_secs=0.000381755
08:31:02 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.763µs elapsed_secs=0.000100763
08:31:02 [DEBUG] (419) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=98.408845ms elapsed_secs=0.098408845
08:31:02 [DEBUG] (472) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.568µs elapsed_secs=4.7568e-5
08:31:02 [DEBUG] (472) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=234.327µs elapsed_secs=0.000234327
08:31:02 [DEBUG] (442) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.045948ms elapsed_secs=0.008045948
08:31:02 [DEBUG] (442) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=186.409µs elapsed_secs=0.000186409
08:31:02 [DEBUG] (442) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.332µs elapsed_secs=0.000150332
08:31:02 [DEBUG] (475) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.954µs elapsed_secs=8.2954e-5
08:31:02 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.89743ms elapsed_secs=0.00789743
08:31:02 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.106555ms elapsed_secs=0.008106555
08:31:02 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.084569ms elapsed_secs=0.008084569
08:31:02 [DEBUG] (454) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.204171ms elapsed_secs=0.008204171
08:31:02 [DEBUG] (446) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=706.871µs elapsed_secs=0.000706871
08:31:02 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=452.971µs elapsed_secs=0.000452971
08:31:02 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=696.112µs elapsed_secs=0.000696112
08:31:02 [DEBUG] (454) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=348.488µs elapsed_secs=0.000348488
08:31:02 [DEBUG] (446) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.107µs elapsed_secs=0.000133107
08:31:02 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.037µs elapsed_secs=9.9037e-5
08:31:02 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=404.683µs elapsed_secs=0.000404683
08:31:02 [DEBUG] (454) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=302.005µs elapsed_secs=0.000302005
08:31:02 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.564387ms elapsed_secs=0.010564387
08:31:02 [DEBUG] (439) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.736861ms elapsed_secs=0.010736861
08:31:02 [DEBUG] (475) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.524378ms elapsed_secs=0.013524378
08:31:02 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=736.682µs elapsed_secs=0.000736682
08:31:02 [DEBUG] (475) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=208.513µs elapsed_secs=0.000208513
08:31:02 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.037µs elapsed_secs=9.5037e-5
08:31:02 [DEBUG] (475) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=114.589µs elapsed_secs=0.000114589
08:31:02 [DEBUG] (462) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.460497ms elapsed_secs=0.011460497
08:31:02 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=259.927µs elapsed_secs=0.000259927
08:31:02 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.082µs elapsed_secs=6.1082e-5
08:31:02 [DEBUG] (462) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=313.591µs elapsed_secs=0.000313591
08:31:02 [DEBUG] (462) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.741µs elapsed_secs=8.4741e-5
08:31:02 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.672567ms elapsed_secs=0.011672567
08:31:02 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=263.671µs elapsed_secs=0.000263671
08:31:02 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.464µs elapsed_secs=0.000110464
08:31:02 [DEBUG] (442) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.482577ms elapsed_secs=0.008482577
08:31:02 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.784787ms elapsed_secs=0.007784787
08:31:02 [DEBUG] (454) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.290716ms elapsed_secs=0.008290716
08:31:02 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=175.633µs elapsed_secs=0.000175633
08:31:02 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.601255ms elapsed_secs=0.008601255
08:31:02 [DEBUG] (454) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=146.992µs elapsed_secs=0.000146992
08:31:02 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.693µs elapsed_secs=9.6693e-5
08:31:02 [DEBUG] (446) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.872299ms elapsed_secs=0.008872299
08:31:02 [DEBUG] (454) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.087µs elapsed_secs=7.4087e-5
08:31:02 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=146.22µs elapsed_secs=0.00014622
08:31:02 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.789µs elapsed_secs=7.9789e-5
08:31:02 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.681784ms elapsed_secs=0.006681784
08:31:02 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.89707ms elapsed_secs=0.00689707
08:31:02 [DEBUG] (450) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=569.577µs elapsed_secs=0.000569577
08:31:02 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=626.213µs elapsed_secs=0.000626213
08:31:02 [DEBUG] (450) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.732µs elapsed_secs=7.7732e-5
08:31:02 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.461µs elapsed_secs=8.0461e-5
08:31:02 [DEBUG] (462) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.580609ms elapsed_secs=0.008580609
08:31:02 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.984908ms elapsed_secs=0.006984908
08:31:02 [DEBUG] (462) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=203.76µs elapsed_secs=0.00020376
08:31:02 [DEBUG] (462) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=244.734µs elapsed_secs=0.000244734
08:31:02 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=400.362µs elapsed_secs=0.000400362
08:31:02 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.075µs elapsed_secs=0.000138075
08:31:02 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.637092ms elapsed_secs=0.008637092
08:31:02 [DEBUG] (454) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.829957ms elapsed_secs=0.008829957
08:31:02 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.085316ms elapsed_secs=0.009085316
08:31:02 [DEBUG] (458) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=192.129µs elapsed_secs=0.000192129
08:31:02 [DEBUG] (454) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=379.834µs elapsed_secs=0.000379834
08:31:02 [DEBUG] (458) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=309.973µs elapsed_secs=0.000309973
08:31:02 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=497.866µs elapsed_secs=0.000497866
08:31:02 [DEBUG] (454) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.444µs elapsed_secs=7.1444e-5
08:31:02 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.412µs elapsed_secs=6.5412e-5
08:31:02 [DEBUG] (428) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=85.011451ms elapsed_secs=0.085011451
08:31:02 [DEBUG] (476) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.13µs elapsed_secs=3.213e-5
08:31:02 [DEBUG] (476) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n                SELECT COUNT(*) FROM projects\n            \n" rows_affected=0 rows_returned=1 elapsed=247.557µs elapsed_secs=0.000247557
08:31:02 [DEBUG] (426) menahel::repository::project_repo: Got projects count: 10
08:31:02 [DEBUG] (479) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=83.383µs elapsed_secs=8.3383e-5
08:31:02 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.475393ms elapsed_secs=0.007475393
08:31:02 [DEBUG] (450) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.434881ms elapsed_secs=0.007434881
08:31:02 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=263.333µs elapsed_secs=0.000263333
08:31:02 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.505µs elapsed_secs=0.000109505
08:31:02 [DEBUG] (480) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=27.571µs elapsed_secs=2.7571e-5
08:31:02 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.31745ms elapsed_secs=0.00731745
08:31:02 [DEBUG] (462) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.767343ms elapsed_secs=0.007767343
08:31:02 [DEBUG] (480) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=390.675µs elapsed_secs=0.000390675
08:31:02 [INFO] Updated project: None
08:31:02 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=291.417µs elapsed_secs=0.000291417
08:31:02 [DEBUG] (462) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=229.536µs elapsed_secs=0.000229536
08:31:02 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.121µs elapsed_secs=8.8121e-5
08:31:02 [DEBUG] (462) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.255µs elapsed_secs=0.000121255
08:31:02 [DEBUG] (483) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.889µs elapsed_secs=4.1889e-5
08:31:02 [DEBUG] (479) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=7.883337ms elapsed_secs=0.007883337
08:31:02 [DEBUG] (479) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=122.674µs elapsed_secs=0.000122674
08:31:02 [DEBUG] (479) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=74.175µs elapsed_secs=7.4175e-5
08:31:02 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=287.111µs elapsed_secs=0.000287111
08:31:02 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.432µs elapsed_secs=0.000105432
08:31:02 [DEBUG] (458) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.840716ms elapsed_secs=0.007840716
08:31:02 [DEBUG] (454) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.389194ms elapsed_secs=0.008389194
08:31:02 [DEBUG] (434) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=88.207834ms elapsed_secs=0.088207834
08:31:02 [DEBUG] (484) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.306µs elapsed_secs=8.1306e-5
08:31:02 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.079299ms elapsed_secs=0.011079299
08:31:02 [DEBUG] (485) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=104.284µs elapsed_secs=0.000104284
08:31:02 [DEBUG] (486) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=107.711µs elapsed_secs=0.000107711
08:31:02 [DEBUG] (467) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.04016ms elapsed_secs=0.00104016
08:31:02 [DEBUG] (467) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.252µs elapsed_secs=0.000100252
08:31:02 [DEBUG] (485) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=269.23µs elapsed_secs=0.00026923
08:31:02 [DEBUG] (432) menahel::repository::project_repo: Got projects count: 10
08:31:02 [DEBUG] (432) menahel::repository::project_repo: Get users with pagination: offset: 0, limit: 5
08:31:02 [DEBUG] (485) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=185.117µs elapsed_secs=0.000185117
08:31:02 [DEBUG] (483) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.195543ms elapsed_secs=0.012195543
08:31:02 [DEBUG] (432) menahel::repository::project_repo: Got projects with pagination: [Project { id: Some(1), name: "Test Project 0" }, Project { id: Some(2), name: "Test Project 1" }, Project { id: Some(3), name: "Test Project 2" }, Project { id: Some(4), name: "Test Project 3" }, Project { id: Some(5), name: "Test Project 4" }]
08:31:02 [DEBUG] (483) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=87.739µs elapsed_secs=8.7739e-5
08:31:02 [DEBUG] (483) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.534µs elapsed_secs=8.5534e-5
08:31:02 [DEBUG] (487) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.818µs elapsed_secs=4.9818e-5
08:31:02 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=376.325µs elapsed_secs=0.000376325
08:31:02 [DEBUG] (487) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=168.784µs elapsed_secs=0.000168784
08:31:02 [DEBUG] (432) menahel::repository::project_repo: Got projects count: 10
08:31:02 [DEBUG] (432) menahel::repository::project_repo: Get users with pagination: offset: 5, limit: 5
08:31:02 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=276.555µs elapsed_secs=0.000276555
08:31:02 [DEBUG] (487) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=130.666µs elapsed_secs=0.000130666
08:31:02 [DEBUG] (432) menahel::repository::project_repo: Got projects with pagination: [Project { id: Some(6), name: "Test Project 5" }, Project { id: Some(7), name: "Test Project 6" }, Project { id: Some(8), name: "Test Project 7" }, Project { id: Some(9), name: "Test Project 8" }, Project { id: Some(10), name: "Test Project 9" }]
08:31:02 [DEBUG] (490) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.079µs elapsed_secs=7.1079e-5
08:31:02 [DEBUG] (484) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=9.98683ms elapsed_secs=0.00998683
08:31:02 [INFO] Created project: Project { id: Some(1), name: "empty_name_test_20250610083102" }
08:31:02 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.284131ms elapsed_secs=0.012284131
08:31:02 [DEBUG] (462) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.919116ms elapsed_secs=0.009919116
08:31:02 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=501.966µs elapsed_secs=0.000501966
08:31:02 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.581409ms elapsed_secs=0.010581409
08:31:02 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.775µs elapsed_secs=0.000104775
08:31:02 [DEBUG] (492) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.684µs elapsed_secs=4.4684e-5
08:31:02 [DEBUG] (494) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=27.408µs elapsed_secs=2.7408e-5
08:31:02 [DEBUG] (471) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=244.652µs elapsed_secs=0.000244652
08:31:02 [DEBUG] (471) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=236.407µs elapsed_secs=0.000236407
08:31:02 [DEBUG] (492) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=0 elapsed=363.726µs elapsed_secs=0.000363726
08:31:02 [INFO] Updated project: None
08:31:02 [DEBUG] (486) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=11.852206ms elapsed_secs=0.011852206
08:31:02 [INFO] Created project: Project { id: Some(1), name: "update_test_20250610083102" }
08:31:02 [DEBUG] (496) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.784µs elapsed_secs=6.5784e-5
08:31:02 [DEBUG] (498) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.297µs elapsed_secs=7.8297e-5
08:31:02 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.145811ms elapsed_secs=0.009145811
08:31:02 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=191.701µs elapsed_secs=0.000191701
08:31:02 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.884µs elapsed_secs=7.7884e-5
08:31:02 [DEBUG] (490) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.990608ms elapsed_secs=0.009990608
08:31:02 [DEBUG] (490) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=103.963µs elapsed_secs=0.000103963
08:31:02 [DEBUG] (490) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.088µs elapsed_secs=9.0088e-5
08:31:02 [DEBUG] (490) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=276.799µs elapsed_secs=0.000276799
08:31:02 [DEBUG] (490) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=357.827µs elapsed_secs=0.000357827
08:31:02 [DEBUG] (496) sqlx::query: summary="UPDATE projects SET name …" db.statement="\n\n\n                UPDATE projects\n                SET name = $1\n                WHERE id = $2\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=11.064492ms elapsed_secs=0.011064492
08:31:02 [INFO] Updated project: Some(Project { id: Some(1), name: "update_test_20250610083102_updated" })
08:31:02 [DEBUG] (467) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.629211ms elapsed_secs=0.009629211
08:31:02 [DEBUG] (486) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n                SELECT id, name\n                FROM projects\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=234.473µs elapsed_secs=0.000234473
08:31:02 [DEBUG] (498) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.923118ms elapsed_secs=0.011923118
08:31:02 [DEBUG] (494) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.629947ms elapsed_secs=0.014629947
08:31:02 [DEBUG] (452) menahel::repository::project_repo: Got project by id: Some(Project { id: Some(1), name: "update_test_20250610083102_updated" })
08:31:02 [DEBUG] (498) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.566µs elapsed_secs=8.3566e-5
08:31:02 [DEBUG] (494) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=111.478µs elapsed_secs=0.000111478
08:31:02 [DEBUG] (499) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=120.395µs elapsed_secs=0.000120395
08:31:02 [DEBUG] (498) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.078µs elapsed_secs=7.5078e-5
08:31:02 [DEBUG] (494) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=121.486µs elapsed_secs=0.000121486
08:31:02 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=346.564µs elapsed_secs=0.000346564
08:31:02 [DEBUG] (494) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=377.653µs elapsed_secs=0.000377653
08:31:02 [DEBUG] (502) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.466µs elapsed_secs=3.5466e-5
08:31:02 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.334µs elapsed_secs=8.5334e-5
08:31:02 [DEBUG] (494) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.322µs elapsed_secs=7.0322e-5
08:31:02 [DEBUG] (439) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=86.820129ms elapsed_secs=0.086820129
08:31:02 [DEBUG] (503) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.747µs elapsed_secs=3.7747e-5
08:31:02 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.346466ms elapsed_secs=0.011346466
08:31:02 [DEBUG] (503) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n            SELECT COUNT(*) FROM projects\n        \n" rows_affected=0 rows_returned=1 elapsed=209.906µs elapsed_secs=0.000209906
08:31:02 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=377.526µs elapsed_secs=0.000377526
08:31:02 [DEBUG] (437) menahel::repository::project_repo: Got projects count: 10
08:31:02 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.228µs elapsed_secs=8.6228e-5
08:31:02 [DEBUG] (506) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.532µs elapsed_secs=3.4532e-5
08:31:02 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.369428ms elapsed_secs=0.008369428
08:31:02 [DEBUG] (475) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=310.651µs elapsed_secs=0.000310651
08:31:02 [DEBUG] (475) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.789µs elapsed_secs=0.000155789
08:31:02 [DEBUG] (471) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.958545ms elapsed_secs=0.007958545
08:31:02 [DEBUG] (499) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\n\n                INSERT INTO projects (name)\n                VALUES ($1)\n                RETURNING id, name\n            \n" rows_affected=0 rows_returned=1 elapsed=9.728208ms elapsed_secs=0.009728208
08:31:02 [INFO] Created project: Project { id: Some(1), name: "long_name_test_20250610083102" }
08:31:02 [DEBUG] (442) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=90.868505ms elapsed_secs=0.090868505
08:31:02 [DEBUG] (509) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=80.537µs elapsed_secs=8.0537e-5
08:31:02 [DEBUG] (510) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=91.465µs elapsed_secs=9.1465e-5
08:31:02 [DEBUG] (510) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=106.481µs elapsed_secs=0.000106481
08:31:02 [DEBUG] (502) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.020082ms elapsed_secs=0.014020082
08:31:02 [DEBUG] (502) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=108.93µs elapsed_secs=0.00010893
08:31:02 [DEBUG] (502) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=72.722µs elapsed_secs=7.2722e-5
08:31:02 [DEBUG] (502) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=194.452µs elapsed_secs=0.000194452
08:31:02 [DEBUG] (513) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.052µs elapsed_secs=3.5052e-5
08:31:02 [DEBUG] (502) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.88µs elapsed_secs=7.988e-5
08:31:02 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.410646ms elapsed_secs=0.010410646
08:31:02 [DEBUG] (506) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.689993ms elapsed_secs=0.011689993
08:31:02 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=263.355µs elapsed_secs=0.000263355
08:31:02 [DEBUG] (506) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.064µs elapsed_secs=7.8064e-5
08:31:02 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.331µs elapsed_secs=7.2331e-5
08:31:02 [DEBUG] (506) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=90.951µs elapsed_secs=9.0951e-5
08:31:02 [DEBUG] (506) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=241.556µs elapsed_secs=0.000241556
08:31:02 [DEBUG] (490) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.18673ms elapsed_secs=0.01018673
08:31:02 [DEBUG] (506) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.484µs elapsed_secs=0.000116484
08:31:02 [DEBUG] (490) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=781.561µs elapsed_secs=0.000781561
08:31:02 [DEBUG] (490) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.389µs elapsed_secs=7.6389e-5
08:31:02 [DEBUG] (446) sqlx::query: summary="INSERT INTO projects (id, …" db.statement="\n\nINSERT INTO projects (id, name) VALUES (1, 'Test Project 0');\nINSERT INTO projects (id, name) VALUES (2, 'Test Project 1');\nINSERT INTO projects (id, name) VALUES (3, 'Test Project 2');\nINSERT INTO projects (id, name) VALUES (4, 'Test Project 3');\nINSERT INTO projects (id, name) VALUES (5, 'Test Project 4');\nINSERT INTO projects (id, name) VALUES (6, 'Test Project 5');\nINSERT INTO projects (id, name) VALUES (7, 'Test Project 6');\nINSERT INTO projects (id, name) VALUES (8, 'Test Project 7');\nINSERT INTO projects (id, name) VALUES (9, 'Test Project 8');\nINSERT INTO projects (id, name) VALUES (10, 'Test Project 9');\n" rows_affected=10 rows_returned=0 elapsed=89.603493ms elapsed_secs=0.089603493
08:31:02 [DEBUG] (494) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.465948ms elapsed_secs=0.008465948
08:31:02 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.937542ms elapsed_secs=0.008937542
08:31:02 [DEBUG] (514) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=169.218µs elapsed_secs=0.000169218
08:31:02 [DEBUG] (494) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=408.658µs elapsed_secs=0.000408658
08:31:02 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=330.375µs elapsed_secs=0.000330375
08:31:02 [DEBUG] (514) sqlx::query: summary="SELECT COUNT(*) FROM projects …" db.statement="\n\n\n                SELECT COUNT(*) FROM projects\n            \n" rows_affected=0 rows_returned=1 elapsed=168.196µs elapsed_secs=0.000168196
08:31:02 [DEBUG] (494) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.913µs elapsed_secs=8.5913e-5
08:31:02 [DEBUG] (444) menahel::repository::project_repo: Got projects count: 10
08:31:02 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.559µs elapsed_secs=0.000130559
08:31:02 [DEBUG] (509) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.089581ms elapsed_secs=0.010089581
08:31:02 [DEBUG] (509) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=128.306µs elapsed_secs=0.000128306
08:31:02 [DEBUG] (509) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=85.558µs elapsed_secs=8.5558e-5
08:31:02 [DEBUG] (509) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=491.169µs elapsed_secs=0.000491169
08:31:02 [DEBUG] (517) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.025µs elapsed_secs=6.8025e-5
08:31:02 [DEBUG] (509) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.549µs elapsed_secs=0.000119549
08:31:02 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.188681ms elapsed_secs=0.012188681
08:31:02 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=450.616µs elapsed_secs=0.000450616
08:31:02 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.36µs elapsed_secs=0.00011636
08:31:02 [DEBUG] (475) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.527005ms elapsed_secs=0.011527005
08:31:02 [DEBUG] (513) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.315388ms elapsed_secs=0.015315388
08:31:02 [DEBUG] (513) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=80.804µs elapsed_secs=8.0804e-5
08:31:02 [DEBUG] (513) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.215µs elapsed_secs=7.7215e-5
08:31:02 [DEBUG] (513) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=293.835µs elapsed_secs=0.000293835
08:31:02 [DEBUG] (513) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=139.13µs elapsed_secs=0.00013913
08:31:02 [DEBUG] (517) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.969534ms elapsed_secs=0.011969534
08:31:02 [DEBUG] (517) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=115.373µs elapsed_secs=0.000115373
08:31:02 [DEBUG] (517) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.205µs elapsed_secs=8.4205e-5
08:31:02 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=331.807µs elapsed_secs=0.000331807
08:31:02 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.602µs elapsed_secs=0.000172602
08:31:02 [DEBUG] (506) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.198571ms elapsed_secs=0.007198571
08:31:02 [DEBUG] (502) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.64835ms elapsed_secs=0.00964835
08:31:02 [DEBUG] (506) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=457.481µs elapsed_secs=0.000457481
08:31:02 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.837783ms elapsed_secs=0.009837783
08:31:02 [DEBUG] (506) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.926µs elapsed_secs=9.7926e-5
08:31:02 [DEBUG] (502) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=213.512µs elapsed_secs=0.000213512
08:31:02 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=162.463µs elapsed_secs=0.000162463
08:31:02 [DEBUG] (502) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=145.686µs elapsed_secs=0.000145686
08:31:02 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.764µs elapsed_secs=9.1764e-5
08:31:02 [DEBUG] (490) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.207235ms elapsed_secs=0.011207235
08:31:02 [DEBUG] (490) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=356.586µs elapsed_secs=0.000356586
08:31:02 [DEBUG] (490) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=211.424µs elapsed_secs=0.000211424
08:31:02 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.413761ms elapsed_secs=0.012413761
08:31:02 [DEBUG] (494) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.703275ms elapsed_secs=0.012703275
08:31:02 [DEBUG] (509) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.908063ms elapsed_secs=0.012908063
08:31:02 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=433.219µs elapsed_secs=0.000433219
08:31:02 [DEBUG] (494) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=396.84µs elapsed_secs=0.00039684
08:31:02 [DEBUG] (509) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=336.606µs elapsed_secs=0.000336606
08:31:02 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.537µs elapsed_secs=6.6537e-5
08:31:02 [DEBUG] (494) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.651µs elapsed_secs=8.6651e-5
08:31:02 [DEBUG] (509) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.091µs elapsed_secs=7.9091e-5
08:31:02 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.297053ms elapsed_secs=0.009297053
08:31:02 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=249.107µs elapsed_secs=0.000249107
08:31:02 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.109µs elapsed_secs=7.1109e-5
08:31:02 [DEBUG] (513) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.218908ms elapsed_secs=0.009218908
08:31:02 [DEBUG] (513) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=446.747µs elapsed_secs=0.000446747
08:31:02 [DEBUG] (513) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.69µs elapsed_secs=8.469e-5
08:31:02 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.769978ms elapsed_secs=0.010769978
08:31:02 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=169.013µs elapsed_secs=0.000169013
08:31:02 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.151µs elapsed_secs=7.6151e-5
08:31:02 [DEBUG] (502) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.489493ms elapsed_secs=0.010489493
08:31:02 [DEBUG] (502) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=149.869µs elapsed_secs=0.000149869
08:31:02 [DEBUG] (502) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.743µs elapsed_secs=7.6743e-5
08:31:02 [DEBUG] (506) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.780487ms elapsed_secs=0.010780487
08:31:02 [DEBUG] (506) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=222.494µs elapsed_secs=0.000222494
08:31:02 [DEBUG] (506) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.704µs elapsed_secs=8.3704e-5
08:31:02 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.726102ms elapsed_secs=0.011726102
08:31:02 [DEBUG] (479) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=163.354µs elapsed_secs=0.000163354
08:31:02 [DEBUG] (479) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=225.953µs elapsed_secs=0.000225953
08:31:02 [DEBUG] (490) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.23503ms elapsed_secs=0.00923503
08:31:02 [DEBUG] (494) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.474715ms elapsed_secs=0.009474715
08:31:02 [DEBUG] (509) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.767093ms elapsed_secs=0.009767093
08:31:02 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.817597ms elapsed_secs=0.009817597
08:31:02 [DEBUG] (490) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=221.875µs elapsed_secs=0.000221875
08:31:02 [DEBUG] (490) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=171.253µs elapsed_secs=0.000171253
08:31:02 [DEBUG] (494) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=502.818µs elapsed_secs=0.000502818
08:31:02 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=426.027µs elapsed_secs=0.000426027
08:31:02 [DEBUG] (509) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=574.168µs elapsed_secs=0.000574168
08:31:02 [DEBUG] (494) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.763µs elapsed_secs=8.4763e-5
08:31:02 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.276µs elapsed_secs=0.000112276
08:31:02 [DEBUG] (509) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.624µs elapsed_secs=7.8624e-5
08:31:02 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.843085ms elapsed_secs=0.008843085
08:31:02 [DEBUG] (483) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=573.45µs elapsed_secs=0.00057345
08:31:02 [DEBUG] (483) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.821µs elapsed_secs=0.000110821
08:31:02 [DEBUG] (513) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.660301ms elapsed_secs=0.008660301
08:31:02 [DEBUG] (513) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=179.077µs elapsed_secs=0.000179077
08:31:02 [DEBUG] (513) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.134µs elapsed_secs=8.3134e-5
08:31:02 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.447212ms elapsed_secs=0.006447212
08:31:02 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=198.16µs elapsed_secs=0.00019816
08:31:02 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.414µs elapsed_secs=0.000113414
08:31:02 [DEBUG] (506) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.456142ms elapsed_secs=0.007456142
08:31:02 [DEBUG] (502) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.82269ms elapsed_secs=0.00782269
08:31:02 [DEBUG] (506) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=146.698µs elapsed_secs=0.000146698
08:31:02 [DEBUG] (506) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=184.676µs elapsed_secs=0.000184676
08:31:02 [DEBUG] (502) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=298.911µs elapsed_secs=0.000298911
08:31:02 [DEBUG] (502) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.627µs elapsed_secs=7.3627e-5
08:31:02 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.013912ms elapsed_secs=0.006013912
08:31:02 [DEBUG] (494) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.180935ms elapsed_secs=0.006180935
08:31:02 [DEBUG] (490) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.443625ms elapsed_secs=0.006443625
08:31:02 [DEBUG] (509) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.532107ms elapsed_secs=0.006532107
08:31:02 [DEBUG] (479) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.627675ms elapsed_secs=0.007627675
08:31:02 [DEBUG] (498) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=741.505µs elapsed_secs=0.000741505
08:31:02 [DEBUG] (509) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=558.468µs elapsed_secs=0.000558468
08:31:02 [DEBUG] (494) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=805.363µs elapsed_secs=0.000805363
08:31:02 [DEBUG] (490) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=449.276µs elapsed_secs=0.000449276
08:31:02 [DEBUG] (498) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.549µs elapsed_secs=0.000150549
08:31:02 [DEBUG] (494) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=126.734µs elapsed_secs=0.000126734
08:31:02 [DEBUG] (509) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.071µs elapsed_secs=0.000131071
08:31:02 [DEBUG] (490) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.527µs elapsed_secs=9.0527e-5
08:31:02 [DEBUG] (483) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.592788ms elapsed_secs=0.007592788
08:31:02 [DEBUG] (513) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.511759ms elapsed_secs=0.009511759
08:31:02 [DEBUG] (513) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=512.854µs elapsed_secs=0.000512854
08:31:02 [DEBUG] (513) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=141.179µs elapsed_secs=0.000141179
08:31:02 [DEBUG] (506) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.774003ms elapsed_secs=0.009774003
08:31:02 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.058109ms elapsed_secs=0.010058109
08:31:02 [DEBUG] (506) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=173.953µs elapsed_secs=0.000173953
08:31:02 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=127.089µs elapsed_secs=0.000127089
08:31:02 [DEBUG] (506) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.871µs elapsed_secs=7.8871e-5
08:31:02 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.149µs elapsed_secs=9.3149e-5
08:31:02 [DEBUG] (502) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.626402ms elapsed_secs=0.008626402
08:31:02 [DEBUG] (502) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=513.19µs elapsed_secs=0.00051319
08:31:02 [DEBUG] (502) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.357µs elapsed_secs=8.8357e-5
08:31:02 [DEBUG] (498) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.556948ms elapsed_secs=0.006556948
08:31:02 [DEBUG] (490) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.846331ms elapsed_secs=0.006846331
08:31:02 [DEBUG] (494) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.939377ms elapsed_secs=0.006939377
08:31:02 [DEBUG] (509) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.30008ms elapsed_secs=0.00930008
08:31:02 [DEBUG] (509) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=627.862µs elapsed_secs=0.000627862
08:31:02 [DEBUG] (509) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.528µs elapsed_secs=8.6528e-5
08:31:02 [DEBUG] (513) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.475083ms elapsed_secs=0.007475083
08:31:02 [DEBUG] (513) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=133.997µs elapsed_secs=0.000133997
08:31:02 [DEBUG] (513) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=234.832µs elapsed_secs=0.000234832
08:31:02 [DEBUG] (506) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.811964ms elapsed_secs=0.006811964
08:31:02 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.969615ms elapsed_secs=0.006969615
08:31:02 [DEBUG] (517) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=346.889µs elapsed_secs=0.000346889
08:31:02 [DEBUG] (517) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.609µs elapsed_secs=0.000100609
08:31:02 [DEBUG] (502) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.170086ms elapsed_secs=0.008170086
08:31:02 [DEBUG] (509) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.169077ms elapsed_secs=0.008169077
08:31:02 [DEBUG] (513) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.999053ms elapsed_secs=0.007999053
08:31:02 [DEBUG] (517) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.318286ms elapsed_secs=0.007318286
08:31:02 [DEBUG] (471) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=148.717055ms elapsed_secs=0.148717055
08:31:02 [DEBUG] (518) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.675µs elapsed_secs=7.2675e-5
08:31:02 [DEBUG] (518) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=139.586µs elapsed_secs=0.000139586
08:31:02 [DEBUG] (518) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=162.357µs elapsed_secs=0.000162357
08:31:02 [INFO] Created task: Task { id: Some(18), project_id: 1, parent_id: None, level: 0, name: "Test Task", description: Some("Test Task Description"), status: 0, deadline: None, created_at: 1749544262, updated_at: Some(1749544262) }
08:31:02 [DEBUG] (519) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=31.56µs elapsed_secs=3.156e-5
08:31:02 [DEBUG] (519) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=227.304µs elapsed_secs=0.000227304
08:31:02 [DEBUG] (469) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(18), project_id: 1, parent_id: None, level: 0, name: "Test Task", description: Some("Test Task Description"), status: 0, deadline: None, created_at: 1749544262, updated_at: Some(1749544262) })
08:31:02 [DEBUG] (522) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.656µs elapsed_secs=8.2656e-5
08:31:02 [DEBUG] (475) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=144.847831ms elapsed_secs=0.144847831
08:31:02 [DEBUG] (523) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.35µs elapsed_secs=5.135e-5
08:31:02 [DEBUG] (523) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=150.032µs elapsed_secs=0.000150032
08:31:02 [DEBUG] (523) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=70.51µs elapsed_secs=7.051e-5
08:31:02 [DEBUG] (473) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:02 [DEBUG] (526) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.716µs elapsed_secs=7.7716e-5
08:31:02 [DEBUG] (522) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.912202ms elapsed_secs=0.011912202
08:31:02 [DEBUG] (522) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=110.658µs elapsed_secs=0.000110658
08:31:02 [DEBUG] (522) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=137.174µs elapsed_secs=0.000137174
08:31:02 [DEBUG] (522) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=738.003µs elapsed_secs=0.000738003
08:31:02 [DEBUG] (522) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=264.368µs elapsed_secs=0.000264368
08:31:02 [DEBUG] (526) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.826812ms elapsed_secs=0.015826812
08:31:02 [DEBUG] (526) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=90.11µs elapsed_secs=9.011e-5
08:31:02 [DEBUG] (526) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=42.337µs elapsed_secs=4.2337e-5
08:31:02 [DEBUG] (526) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=171.647µs elapsed_secs=0.000171647
08:31:02 [DEBUG] (526) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=289.426µs elapsed_secs=0.000289426
08:31:02 [DEBUG] (522) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.958808ms elapsed_secs=0.008958808
08:31:02 [DEBUG] (522) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=241.525µs elapsed_secs=0.000241525
08:31:02 [DEBUG] (522) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=332.941µs elapsed_secs=0.000332941
08:31:02 [DEBUG] (526) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.256598ms elapsed_secs=0.012256598
08:31:02 [DEBUG] (526) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=150.747µs elapsed_secs=0.000150747
08:31:02 [DEBUG] (526) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=165.357µs elapsed_secs=0.000165357
08:31:02 [DEBUG] (522) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.926439ms elapsed_secs=0.007926439
08:31:02 [DEBUG] (522) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=511.43µs elapsed_secs=0.00051143
08:31:02 [DEBUG] (522) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.275µs elapsed_secs=9.3275e-5
08:31:02 [DEBUG] (526) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.109163ms elapsed_secs=0.007109163
08:31:02 [DEBUG] (526) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=588.853µs elapsed_secs=0.000588853
08:31:02 [DEBUG] (526) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.656µs elapsed_secs=0.000107656
08:31:02 [DEBUG] (479) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=159.70286ms elapsed_secs=0.15970286
08:31:02 [DEBUG] (527) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.526µs elapsed_secs=5.4526e-5
08:31:02 [DEBUG] (527) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=238.741µs elapsed_secs=0.000238741
08:31:02 [DEBUG] (522) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.177063ms elapsed_secs=0.008177063
08:31:02 [DEBUG] (530) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.829µs elapsed_secs=3.7829e-5
08:31:02 [DEBUG] (522) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=317.415µs elapsed_secs=0.000317415
08:31:02 [DEBUG] (522) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.229µs elapsed_secs=9.5229e-5
08:31:02 [DEBUG] (483) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=165.760063ms elapsed_secs=0.165760063
08:31:02 [DEBUG] (531) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.389µs elapsed_secs=6.5389e-5
08:31:02 [DEBUG] (531) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=145.223µs elapsed_secs=0.000145223
08:31:02 [DEBUG] (531) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=85.826µs elapsed_secs=8.5826e-5
08:31:02 [DEBUG] (481) menahel::repository::task_repo: Get task by id with transaction: None
08:31:02 [DEBUG] (534) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.959µs elapsed_secs=4.5959e-5
08:31:02 [DEBUG] (530) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.217692ms elapsed_secs=0.011217692
08:31:02 [DEBUG] (526) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.849558ms elapsed_secs=0.008849558
08:31:02 [DEBUG] (530) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.004µs elapsed_secs=7.9004e-5
08:31:02 [DEBUG] (530) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.59µs elapsed_secs=6.159e-5
08:31:02 [DEBUG] (526) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=240.983µs elapsed_secs=0.000240983
08:31:02 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=174.939µs elapsed_secs=0.000174939
08:31:02 [DEBUG] (526) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=162.253µs elapsed_secs=0.000162253
08:31:02 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.044µs elapsed_secs=8.4044e-5
08:31:02 [DEBUG] (522) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.359461ms elapsed_secs=0.008359461
08:31:02 [DEBUG] (522) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=229.694µs elapsed_secs=0.000229694
08:31:02 [DEBUG] (522) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=315.341µs elapsed_secs=0.000315341
08:31:02 [DEBUG] (534) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.687304ms elapsed_secs=0.010687304
08:31:02 [DEBUG] (534) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=94.319µs elapsed_secs=9.4319e-5
08:31:02 [DEBUG] (534) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.309µs elapsed_secs=8.0309e-5
08:31:02 [DEBUG] (534) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=682.369µs elapsed_secs=0.000682369
08:31:02 [DEBUG] (534) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.539µs elapsed_secs=0.000113539
08:31:02 [DEBUG] (494) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=170.036616ms elapsed_secs=0.170036616
08:31:02 [DEBUG] (490) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=171.189261ms elapsed_secs=0.171189261
08:31:02 [DEBUG] (498) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=172.005214ms elapsed_secs=0.172005214
08:31:02 [DEBUG] (535) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=175.181µs elapsed_secs=0.000175181
08:31:02 [DEBUG] (536) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=98.144µs elapsed_secs=9.8144e-5
08:31:02 [DEBUG] (535) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=346.586µs elapsed_secs=0.000346586
08:31:02 [DEBUG] (537) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=87.542µs elapsed_secs=8.7542e-5
08:31:02 [DEBUG] (491) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) })
08:31:02 [DEBUG] (536) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=227.174µs elapsed_secs=0.000227174
08:31:02 [DEBUG] (537) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=244.076µs elapsed_secs=0.000244076
08:31:02 [DEBUG] (536) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=68.348µs elapsed_secs=6.8348e-5
08:31:02 [DEBUG] (538) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.259µs elapsed_secs=6.1259e-5
08:31:02 [DEBUG] (488) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:02 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.655219ms elapsed_secs=0.009655219
08:31:02 [DEBUG] (536) sqlx::query: summary="INSERT INTO tasks (project_id, …" db.statement="\n\n\n                INSERT INTO tasks (project_id, parent_id, level, name, description, status, deadline, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=215.459µs elapsed_secs=0.000215459
08:31:02 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=380.141µs elapsed_secs=0.000380141
08:31:02 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.002µs elapsed_secs=7.7002e-5
08:31:02 [DEBUG] (541) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.172µs elapsed_secs=4.1172e-5
08:31:02 [DEBUG] (506) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.468618ms elapsed_secs=0.166468618
08:31:02 [DEBUG] (526) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.581816ms elapsed_secs=0.011581816
08:31:02 [DEBUG] (542) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.763µs elapsed_secs=4.0763e-5
08:31:02 [DEBUG] (526) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=239.531µs elapsed_secs=0.000239531
08:31:02 [DEBUG] (526) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.066µs elapsed_secs=0.000133066
08:31:02 [DEBUG] (542) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=227.681µs elapsed_secs=0.000227681
08:31:02 [DEBUG] (504) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:02 [DEBUG] (545) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=57.583µs elapsed_secs=5.7583e-5
08:31:02 [INFO] Created task: Task { id: Some(18), project_id: 1, parent_id: Some(1), level: 1, name: "Test Task with Parent", description: Some("Test Task with Parent Description"), status: 0, deadline: None, created_at: 1749544262, updated_at: Some(1749544262) }
08:31:02 [DEBUG] (522) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.137566ms elapsed_secs=0.010137566
08:31:02 [DEBUG] (538) sqlx::query: summary="DELETE FROM tasks WHERE …" db.statement="\n\n\n                DELETE FROM tasks WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=12.279526ms elapsed_secs=0.012279526
08:31:02 [INFO] Deleted task: 17
08:31:02 [DEBUG] (535) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=66.25µs elapsed_secs=6.625e-5
08:31:02 [DEBUG] (491) menahel::repository::task_repo: Get task by id: None
08:31:02 [DEBUG] (548) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.135µs elapsed_secs=6.9135e-5
08:31:02 [DEBUG] (541) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.720411ms elapsed_secs=0.014720411
08:31:02 [DEBUG] (541) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=101.915µs elapsed_secs=0.000101915
08:31:02 [DEBUG] (541) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.954µs elapsed_secs=7.8954e-5
08:31:02 [DEBUG] (551) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=81.997µs elapsed_secs=8.1997e-5
08:31:02 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=236.932µs elapsed_secs=0.000236932
08:31:02 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.524µs elapsed_secs=9.3524e-5
08:31:02 [DEBUG] (502) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.098384ms elapsed_secs=0.175098384
08:31:02 [DEBUG] (534) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.727045ms elapsed_secs=0.011727045
08:31:02 [DEBUG] (509) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=172.624367ms elapsed_secs=0.172624367
08:31:02 [DEBUG] (552) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=87.266µs elapsed_secs=8.7266e-5
08:31:02 [DEBUG] (534) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=524.714µs elapsed_secs=0.000524714
08:31:02 [DEBUG] (545) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.016895ms elapsed_secs=0.013016895
08:31:02 [DEBUG] (534) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=373.373µs elapsed_secs=0.000373373
08:31:02 [DEBUG] (553) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.625µs elapsed_secs=7.0625e-5
08:31:02 [DEBUG] (545) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=180.736µs elapsed_secs=0.000180736
08:31:02 [DEBUG] (552) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n            \n" rows_affected=0 rows_returned=17 elapsed=822.859µs elapsed_secs=0.000822859
08:31:02 [DEBUG] (500) menahel::repository::task_repo: Get all tasks: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:02 [DEBUG] (545) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=255.918µs elapsed_secs=0.000255918
08:31:02 [DEBUG] (553) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=275.114µs elapsed_secs=0.000275114
08:31:02 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.356743ms elapsed_secs=0.008356743
08:31:02 [DEBUG] (507) menahel::repository::task_repo: Get task by id: None
08:31:02 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=470.292µs elapsed_secs=0.000470292
08:31:02 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=336.116µs elapsed_secs=0.000336116
08:31:02 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.754µs elapsed_secs=0.000107754
08:31:02 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.701µs elapsed_secs=0.000100701
08:31:02 [DEBUG] (556) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.395µs elapsed_secs=5.6395e-5
08:31:02 [DEBUG] (559) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.917µs elapsed_secs=3.5917e-5
08:31:02 [DEBUG] (551) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.701456ms elapsed_secs=0.012701456
08:31:02 [DEBUG] (548) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.252719ms elapsed_secs=0.014252719
08:31:02 [DEBUG] (551) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=108.918µs elapsed_secs=0.000108918
08:31:02 [DEBUG] (548) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=111.631µs elapsed_secs=0.000111631
08:31:02 [DEBUG] (551) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=83.58µs elapsed_secs=8.358e-5
08:31:02 [DEBUG] (548) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=91.281µs elapsed_secs=9.1281e-5
08:31:02 [DEBUG] (551) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=454.408µs elapsed_secs=0.000454408
08:31:02 [DEBUG] (548) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=391.791µs elapsed_secs=0.000391791
08:31:02 [DEBUG] (551) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=219.776µs elapsed_secs=0.000219776
08:31:02 [DEBUG] (548) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.877µs elapsed_secs=0.000155877
08:31:02 [DEBUG] (526) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.712667ms elapsed_secs=0.013712667
08:31:02 [DEBUG] (513) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=185.272563ms elapsed_secs=0.185272563
08:31:02 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.950082ms elapsed_secs=0.006950082
08:31:02 [DEBUG] (560) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.011µs elapsed_secs=7.8011e-5
08:31:02 [DEBUG] (559) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.382492ms elapsed_secs=0.012382492
08:31:02 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=435.876µs elapsed_secs=0.000435876
08:31:02 [DEBUG] (556) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.6078ms elapsed_secs=0.0126078
08:31:02 [DEBUG] (559) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.237µs elapsed_secs=8.1237e-5
08:31:02 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.353µs elapsed_secs=8.8353e-5
08:31:02 [DEBUG] (556) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=64.2µs elapsed_secs=6.42e-5
08:31:02 [DEBUG] (559) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.576µs elapsed_secs=7.0576e-5
08:31:02 [DEBUG] (556) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.209µs elapsed_secs=8.2209e-5
08:31:02 [DEBUG] (560) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=120.297µs elapsed_secs=0.000120297
08:31:02 [DEBUG] (511) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:02 [DEBUG] (559) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=514.591µs elapsed_secs=0.000514591
08:31:02 [DEBUG] (556) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=721.841µs elapsed_secs=0.000721841
08:31:02 [DEBUG] (559) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.948µs elapsed_secs=0.000103948
08:31:02 [DEBUG] (556) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.984µs elapsed_secs=9.6984e-5
08:31:02 [DEBUG] (563) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=64.025µs elapsed_secs=6.4025e-5
08:31:02 [DEBUG] (534) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.08661ms elapsed_secs=0.00708661
08:31:02 [DEBUG] (534) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=390.395µs elapsed_secs=0.000390395
08:31:02 [DEBUG] (534) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.787µs elapsed_secs=0.000134787
08:31:02 [DEBUG] (517) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=185.970539ms elapsed_secs=0.185970539
08:31:02 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.980265ms elapsed_secs=0.010980265
08:31:02 [DEBUG] (564) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=184.628µs elapsed_secs=0.000184628
08:31:02 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=344.195µs elapsed_secs=0.000344195
08:31:02 [DEBUG] (564) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=216.093µs elapsed_secs=0.000216093
08:31:02 [DEBUG] (515) menahel::repository::task_repo: Get task by id with transaction: None
08:31:02 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=165.253µs elapsed_secs=0.000165253
08:31:02 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.910222ms elapsed_secs=0.009910222
08:31:02 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=374.095µs elapsed_secs=0.000374095
08:31:02 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=173.077µs elapsed_secs=0.000173077
08:31:02 [DEBUG] (567) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.049µs elapsed_secs=5.1049e-5
08:31:02 [DEBUG] (563) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.302249ms elapsed_secs=0.011302249
08:31:02 [DEBUG] (563) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.792µs elapsed_secs=0.000104792
08:31:02 [DEBUG] (563) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.992µs elapsed_secs=8.4992e-5
08:31:02 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=716.462µs elapsed_secs=0.000716462
08:31:02 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.858µs elapsed_secs=9.1858e-5
08:31:02 [DEBUG] (548) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.524787ms elapsed_secs=0.009524787
08:31:02 [DEBUG] (548) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=355.514µs elapsed_secs=0.000355514
08:31:02 [DEBUG] (548) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=254.198µs elapsed_secs=0.000254198
08:31:02 [DEBUG] (551) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.663909ms elapsed_secs=0.008663909
08:31:02 [DEBUG] (551) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=281.021µs elapsed_secs=0.000281021
08:31:03 [DEBUG] (551) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=278.995µs elapsed_secs=0.000278995
08:31:03 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.103847ms elapsed_secs=0.010103847
08:31:03 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=319.426µs elapsed_secs=0.000319426
08:31:03 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=142.879µs elapsed_secs=0.000142879
08:31:03 [DEBUG] (534) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.449924ms elapsed_secs=0.009449924
08:31:03 [DEBUG] (559) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.545465ms elapsed_secs=0.011545465
08:31:03 [DEBUG] (567) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.630113ms elapsed_secs=0.014630113
08:31:03 [DEBUG] (534) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=666.075µs elapsed_secs=0.000666075
08:31:03 [DEBUG] (559) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=286.933µs elapsed_secs=0.000286933
08:31:03 [DEBUG] (567) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=129.734µs elapsed_secs=0.000129734
08:31:03 [DEBUG] (534) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.177µs elapsed_secs=7.6177e-5
08:31:03 [DEBUG] (559) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.748µs elapsed_secs=8.7748e-5
08:31:03 [DEBUG] (567) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.851µs elapsed_secs=6.8851e-5
08:31:03 [DEBUG] (567) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=197.099µs elapsed_secs=0.000197099
08:31:03 [DEBUG] (556) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.742825ms elapsed_secs=0.011742825
08:31:03 [DEBUG] (567) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.8µs elapsed_secs=7.78e-5
08:31:03 [DEBUG] (556) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=469.766µs elapsed_secs=0.000469766
08:31:03 [DEBUG] (556) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.3µs elapsed_secs=8.43e-5
08:31:03 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.409891ms elapsed_secs=0.010409891
08:31:03 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=166.959µs elapsed_secs=0.000166959
08:31:03 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.863µs elapsed_secs=7.6863e-5
08:31:03 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.468463ms elapsed_secs=0.009468463
08:31:03 [DEBUG] (530) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=175.267µs elapsed_secs=0.000175267
08:31:03 [DEBUG] (530) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.959µs elapsed_secs=7.6959e-5
08:31:03 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.459306ms elapsed_secs=0.006459306
08:31:03 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=562.385µs elapsed_secs=0.000562385
08:31:03 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=281.212µs elapsed_secs=0.000281212
08:31:03 [DEBUG] (548) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.048119ms elapsed_secs=0.008048119
08:31:03 [DEBUG] (548) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=400.233µs elapsed_secs=0.000400233
08:31:03 [DEBUG] (548) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.431µs elapsed_secs=0.000125431
08:31:03 [DEBUG] (551) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.344529ms elapsed_secs=0.009344529
08:31:03 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.954094ms elapsed_secs=0.009954094
08:31:03 [DEBUG] (551) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=261.156µs elapsed_secs=0.000261156
08:31:03 [DEBUG] (551) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.062µs elapsed_secs=0.000176062
08:31:03 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=265.456µs elapsed_secs=0.000265456
08:31:03 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.152µs elapsed_secs=8.0152e-5
08:31:03 [DEBUG] (559) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.415843ms elapsed_secs=0.008415843
08:31:03 [DEBUG] (559) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=185.711µs elapsed_secs=0.000185711
08:31:03 [DEBUG] (559) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.938µs elapsed_secs=6.0938e-5
08:31:03 [DEBUG] (567) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.806964ms elapsed_secs=0.007806964
08:31:03 [DEBUG] (556) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.099397ms elapsed_secs=0.008099397
08:31:03 [DEBUG] (534) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.1531ms elapsed_secs=0.0081531
08:31:03 [DEBUG] (567) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=574.161µs elapsed_secs=0.000574161
08:31:03 [DEBUG] (556) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=339.5µs elapsed_secs=0.0003395
08:31:03 [DEBUG] (534) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=449.161µs elapsed_secs=0.000449161
08:31:03 [DEBUG] (567) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.471µs elapsed_secs=8.5471e-5
08:31:03 [DEBUG] (556) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=211.291µs elapsed_secs=0.000211291
08:31:03 [DEBUG] (534) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=187.073µs elapsed_secs=0.000187073
08:31:03 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.301414ms elapsed_secs=0.008301414
08:31:03 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=376.841µs elapsed_secs=0.000376841
08:31:03 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.283µs elapsed_secs=8.5283e-5
08:31:03 [DEBUG] (530) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.451203ms elapsed_secs=0.009451203
08:31:03 [DEBUG] (548) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.438808ms elapsed_secs=0.007438808
08:31:03 [DEBUG] (548) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=157.518µs elapsed_secs=0.000157518
08:31:03 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.887336ms elapsed_secs=0.009887336
08:31:03 [DEBUG] (548) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.067µs elapsed_secs=6.9067e-5
08:31:03 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=353.661µs elapsed_secs=0.000353661
08:31:03 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.546µs elapsed_secs=8.4546e-5
08:31:03 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.510242ms elapsed_secs=0.006510242
08:31:03 [DEBUG] (559) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.821979ms elapsed_secs=0.006821979
08:31:03 [DEBUG] (541) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=225.336µs elapsed_secs=0.000225336
08:31:03 [DEBUG] (559) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=351.316µs elapsed_secs=0.000351316
08:31:03 [DEBUG] (541) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.849µs elapsed_secs=7.4849e-5
08:31:03 [DEBUG] (559) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.926µs elapsed_secs=0.000131926
08:31:03 [DEBUG] (551) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.791499ms elapsed_secs=0.008791499
08:31:03 [DEBUG] (567) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.634614ms elapsed_secs=0.006634614
08:31:03 [DEBUG] (551) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=160.047µs elapsed_secs=0.000160047
08:31:03 [DEBUG] (551) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.378µs elapsed_secs=6.8378e-5
08:31:03 [DEBUG] (567) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=244.701µs elapsed_secs=0.000244701
08:31:03 [DEBUG] (567) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.585µs elapsed_secs=8.1585e-5
08:31:03 [DEBUG] (556) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.617761ms elapsed_secs=0.007617761
08:31:03 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.927311ms elapsed_secs=0.007927311
08:31:03 [DEBUG] (534) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.156391ms elapsed_secs=0.008156391
08:31:03 [DEBUG] (556) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=462.539µs elapsed_secs=0.000462539
08:31:03 [DEBUG] (545) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=561.45µs elapsed_secs=0.00056145
08:31:03 [DEBUG] (556) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.828µs elapsed_secs=7.8828e-5
08:31:03 [DEBUG] (545) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.222µs elapsed_secs=6.1222e-5
08:31:03 [DEBUG] (548) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.816667ms elapsed_secs=0.007816667
08:31:03 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.137837ms elapsed_secs=0.008137837
08:31:03 [DEBUG] (548) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=128.153µs elapsed_secs=0.000128153
08:31:03 [DEBUG] (548) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=193.356µs elapsed_secs=0.000193356
08:31:03 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=369.294µs elapsed_secs=0.000369294
08:31:03 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.568µs elapsed_secs=6.3568e-5
08:31:03 [DEBUG] (541) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.280402ms elapsed_secs=0.006280402
08:31:03 [DEBUG] (559) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.260115ms elapsed_secs=0.006260115
08:31:03 [DEBUG] (559) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=252.597µs elapsed_secs=0.000252597
08:31:03 [DEBUG] (559) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.489µs elapsed_secs=0.000123489
08:31:03 [DEBUG] (551) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.108142ms elapsed_secs=0.008108142
08:31:03 [DEBUG] (567) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.299215ms elapsed_secs=0.008299215
08:31:03 [DEBUG] (556) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.478403ms elapsed_secs=0.008478403
08:31:03 [DEBUG] (551) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=163.395µs elapsed_secs=0.000163395
08:31:03 [DEBUG] (551) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.782µs elapsed_secs=0.000133782
08:31:03 [DEBUG] (567) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=445.407µs elapsed_secs=0.000445407
08:31:03 [DEBUG] (556) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=146.685µs elapsed_secs=0.000146685
08:31:03 [DEBUG] (567) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.257µs elapsed_secs=6.1257e-5
08:31:03 [DEBUG] (556) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.194µs elapsed_secs=0.000109194
08:31:03 [DEBUG] (545) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.220555ms elapsed_secs=0.009220555
08:31:03 [DEBUG] (548) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.363011ms elapsed_secs=0.006363011
08:31:03 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.464987ms elapsed_secs=0.010464987
08:31:03 [DEBUG] (563) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=195.034µs elapsed_secs=0.000195034
08:31:03 [DEBUG] (563) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=240.097µs elapsed_secs=0.000240097
08:31:03 [DEBUG] (559) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.222268ms elapsed_secs=0.007222268
08:31:03 [DEBUG] (551) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.889885ms elapsed_secs=0.005889885
08:31:03 [DEBUG] (567) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.494038ms elapsed_secs=0.006494038
08:31:03 [DEBUG] (567) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=221.057µs elapsed_secs=0.000221057
08:31:03 [DEBUG] (556) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.166233ms elapsed_secs=0.007166233
08:31:03 [DEBUG] (567) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.01µs elapsed_secs=6.101e-5
08:31:03 [DEBUG] (563) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.512992ms elapsed_secs=0.007512992
08:31:03 [DEBUG] (567) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.404408ms elapsed_secs=0.007404408
08:31:03 [DEBUG] (522) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=163.727178ms elapsed_secs=0.163727178
08:31:03 [DEBUG] (568) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.514µs elapsed_secs=4.1514e-5
08:31:03 [DEBUG] (568) sqlx::query: summary="SELECT COUNT(*) FROM tasks …" db.statement="\n\n\n        SELECT COUNT(*) FROM tasks\n      WHERE project_id = $1\n" rows_affected=0 rows_returned=1 elapsed=118.094µs elapsed_secs=0.000118094
08:31:03 [DEBUG] (520) menahel::repository::task_repo: Get tasks count with transaction: 14
08:31:03 [DEBUG] (568) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 LIMIT $2 OFFSET $3\n" rows_affected=0 rows_returned=4 elapsed=77.64µs elapsed_secs=7.764e-5
08:31:03 [DEBUG] (520) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:03 [DEBUG] (571) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=96.939µs elapsed_secs=9.6939e-5
08:31:03 [DEBUG] (571) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.25365ms elapsed_secs=0.00925365
08:31:03 [DEBUG] (571) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=358.528µs elapsed_secs=0.000358528
08:31:03 [DEBUG] (571) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=153.521µs elapsed_secs=0.000153521
08:31:03 [DEBUG] (571) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=319.887µs elapsed_secs=0.000319887
08:31:03 [DEBUG] (571) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.843µs elapsed_secs=7.9843e-5
08:31:03 [DEBUG] (526) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=159.823992ms elapsed_secs=0.159823992
08:31:03 [DEBUG] (572) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.441µs elapsed_secs=4.0441e-5
08:31:03 [DEBUG] (572) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE created_at >= $1 AND created_at <= $2\n" rows_affected=0 rows_returned=1 elapsed=295.19µs elapsed_secs=0.00029519
08:31:03 [DEBUG] (524) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }]
08:31:03 [DEBUG] (573) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.134µs elapsed_secs=3.9134e-5
08:31:03 [DEBUG] (573) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE created_at >= $1\n" rows_affected=0 rows_returned=2 elapsed=150.824µs elapsed_secs=0.000150824
08:31:03 [DEBUG] (524) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:03 [DEBUG] (572) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE created_at <= $1\n" rows_affected=0 rows_returned=15 elapsed=207.21µs elapsed_secs=0.00020721
08:31:03 [DEBUG] (524) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }]
08:31:03 [DEBUG] (576) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.537µs elapsed_secs=3.7537e-5
08:31:03 [DEBUG] (571) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.37215ms elapsed_secs=0.01037215
08:31:03 [DEBUG] (571) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=213.194µs elapsed_secs=0.000213194
08:31:03 [DEBUG] (571) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.527µs elapsed_secs=0.000144527
08:31:03 [DEBUG] (576) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.67878ms elapsed_secs=0.01467878
08:31:03 [DEBUG] (576) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.628µs elapsed_secs=8.3628e-5
08:31:03 [DEBUG] (576) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=48.463µs elapsed_secs=4.8463e-5
08:31:03 [DEBUG] (576) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=204.579µs elapsed_secs=0.000204579
08:31:03 [DEBUG] (576) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=347.429µs elapsed_secs=0.000347429
08:31:03 [DEBUG] (571) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.455295ms elapsed_secs=0.011455295
08:31:03 [DEBUG] (571) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=173.16µs elapsed_secs=0.00017316
08:31:03 [DEBUG] (571) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.405µs elapsed_secs=8.7405e-5
08:31:03 [DEBUG] (576) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.855862ms elapsed_secs=0.009855862
08:31:03 [DEBUG] (576) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=489.76µs elapsed_secs=0.00048976
08:31:03 [DEBUG] (576) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.983µs elapsed_secs=9.6983e-5
08:31:03 [DEBUG] (534) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=148.279062ms elapsed_secs=0.148279062
08:31:03 [DEBUG] (571) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.275462ms elapsed_secs=0.010275462
08:31:03 [DEBUG] (530) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=163.352852ms elapsed_secs=0.163352852
08:31:03 [DEBUG] (571) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=619.211µs elapsed_secs=0.000619211
08:31:03 [DEBUG] (578) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=138.518µs elapsed_secs=0.000138518
08:31:03 [DEBUG] (577) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=184.924µs elapsed_secs=0.000184924
08:31:03 [DEBUG] (571) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=209.735µs elapsed_secs=0.000209735
08:31:03 [DEBUG] (578) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE deadline >= $1 AND deadline <= $2\n" rows_affected=0 rows_returned=1 elapsed=681.048µs elapsed_secs=0.000681048
08:31:03 [DEBUG] (577) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE description LIKE '%' || $1 || '%'\n" rows_affected=0 rows_returned=1 elapsed=681.46µs elapsed_secs=0.00068146
08:31:03 [DEBUG] (528) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (532) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (579) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.056µs elapsed_secs=4.3056e-5
08:31:03 [DEBUG] (579) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE deadline >= $1\n" rows_affected=0 rows_returned=2 elapsed=333.153µs elapsed_secs=0.000333153
08:31:03 [DEBUG] (528) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:03 [DEBUG] (582) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.227µs elapsed_secs=3.8227e-5
08:31:03 [DEBUG] (576) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.301385ms elapsed_secs=0.010301385
08:31:03 [DEBUG] (578) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE deadline <= $1\n" rows_affected=0 rows_returned=11 elapsed=141.525µs elapsed_secs=0.000141525
08:31:03 [DEBUG] (528) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (576) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=198.808µs elapsed_secs=0.000198808
08:31:03 [DEBUG] (576) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.149µs elapsed_secs=7.6149e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.04µs elapsed_secs=5.004e-5
08:31:03 [DEBUG] (582) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.441447ms elapsed_secs=0.015441447
08:31:03 [DEBUG] (582) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=105.716µs elapsed_secs=0.000105716
08:31:03 [DEBUG] (582) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=71.63µs elapsed_secs=7.163e-5
08:31:03 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=158.964µs elapsed_secs=0.000158964
08:31:03 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=61.473µs elapsed_secs=6.1473e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.879069ms elapsed_secs=0.013879069
08:31:03 [DEBUG] (585) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=67.912µs elapsed_secs=6.7912e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.66µs elapsed_secs=5.866e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=151.403µs elapsed_secs=0.000151403
08:31:03 [DEBUG] (585) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.244µs elapsed_secs=5.4244e-5
08:31:03 [DEBUG] (571) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.275074ms elapsed_secs=0.012275074
08:31:03 [DEBUG] (571) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=275.323µs elapsed_secs=0.000275323
08:31:03 [DEBUG] (571) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.135µs elapsed_secs=0.000109135
08:31:03 [DEBUG] (541) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=163.75788ms elapsed_secs=0.16375788
08:31:03 [DEBUG] (586) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.366µs elapsed_secs=4.7366e-5
08:31:03 [DEBUG] (586) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE level = $1\n" rows_affected=0 rows_returned=2 elapsed=430.173µs elapsed_secs=0.000430173
08:31:03 [DEBUG] (576) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.376286ms elapsed_secs=0.009376286
08:31:03 [DEBUG] (539) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (576) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=349.661µs elapsed_secs=0.000349661
08:31:03 [DEBUG] (576) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.281µs elapsed_secs=0.000105281
08:31:03 [DEBUG] (589) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.079µs elapsed_secs=7.0079e-5
08:31:03 [DEBUG] (545) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=167.392061ms elapsed_secs=0.167392061
08:31:03 [DEBUG] (590) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.616µs elapsed_secs=7.4616e-5
08:31:03 [DEBUG] (590) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 AND parent_id = $2 AND level = $3 AND name LIKE '%' || $4 || '%' AND description LIKE '%' || $5 || '%' AND status = $6 AND deadline >= $7 AND deadline <= $8 AND created_at >= $9 AND created_at <= $10 AND updated_at >= $11 AND updated_at <= $12\n" rows_affected=0 rows_returned=1 elapsed=262.092µs elapsed_secs=0.000262092
08:31:03 [DEBUG] (543) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:03 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.989829ms elapsed_secs=0.006989829
08:31:03 [DEBUG] (585) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.08265ms elapsed_secs=0.01008265
08:31:03 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=646.562µs elapsed_secs=0.000646562
08:31:03 [DEBUG] (585) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=140.862µs elapsed_secs=0.000140862
08:31:03 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.095µs elapsed_secs=0.000134095
08:31:03 [DEBUG] (593) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.736µs elapsed_secs=3.3736e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.754µs elapsed_secs=8.6754e-5
08:31:03 [DEBUG] (571) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.054186ms elapsed_secs=0.007054186
08:31:03 [DEBUG] (559) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.321921ms elapsed_secs=0.164321921
08:31:03 [DEBUG] (589) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.607452ms elapsed_secs=0.012607452
08:31:03 [DEBUG] (594) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=78.983µs elapsed_secs=7.8983e-5
08:31:03 [DEBUG] (589) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=173.646µs elapsed_secs=0.000173646
08:31:03 [DEBUG] (589) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=101.008µs elapsed_secs=0.000101008
08:31:03 [DEBUG] (594) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE parent_id = $1\n" rows_affected=0 rows_returned=1 elapsed=245.082µs elapsed_secs=0.000245082
08:31:03 [DEBUG] (557) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (589) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=327.905µs elapsed_secs=0.000327905
08:31:03 [DEBUG] (589) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=156.012µs elapsed_secs=0.000156012
08:31:03 [DEBUG] (548) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=178.579354ms elapsed_secs=0.178579354
08:31:03 [DEBUG] (597) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.125µs elapsed_secs=8.5125e-5
08:31:03 [DEBUG] (593) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.441823ms elapsed_secs=0.009441823
08:31:03 [DEBUG] (556) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.331541ms elapsed_secs=0.164331541
08:31:03 [DEBUG] (593) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=380.062µs elapsed_secs=0.000380062
08:31:03 [DEBUG] (593) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=286.457µs elapsed_secs=0.000286457
08:31:03 [DEBUG] (598) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=136.687µs elapsed_secs=0.000136687
08:31:03 [DEBUG] (599) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.911µs elapsed_secs=8.4911e-5
08:31:03 [DEBUG] (576) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.421604ms elapsed_secs=0.011421604
08:31:03 [DEBUG] (593) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=539.818µs elapsed_secs=0.000539818
08:31:03 [DEBUG] (593) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=399.52µs elapsed_secs=0.00039952
08:31:03 [DEBUG] (576) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=512.04µs elapsed_secs=0.00051204
08:31:03 [DEBUG] (598) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE name LIKE '%' || $1 || '%'\n" rows_affected=0 rows_returned=1 elapsed=783.612µs elapsed_secs=0.000783612
08:31:03 [DEBUG] (599) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n        \n" rows_affected=0 rows_returned=17 elapsed=843.735µs elapsed_secs=0.000843735
08:31:03 [DEBUG] (546) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (554) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:03 [DEBUG] (576) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=226.86µs elapsed_secs=0.00022686
08:31:03 [DEBUG] (551) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=174.256341ms elapsed_secs=0.174256341
08:31:03 [DEBUG] (605) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=127.786µs elapsed_secs=0.000127786
08:31:03 [DEBUG] (604) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=102.869µs elapsed_secs=0.000102869
08:31:03 [DEBUG] (606) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.087µs elapsed_secs=5.9087e-5
08:31:03 [DEBUG] (606) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n         \n" rows_affected=0 rows_returned=17 elapsed=322.899µs elapsed_secs=0.000322899
08:31:03 [DEBUG] (549) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None }, Task { id: Some(12), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(10000), created_at: 0, updated_at: None }, Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None }, Task { id: Some(14), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 10000, updated_at: None }, Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }, Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:03 [DEBUG] (585) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.941871ms elapsed_secs=0.012941871
08:31:03 [DEBUG] (585) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=293.68µs elapsed_secs=0.00029368
08:31:03 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.627309ms elapsed_secs=0.014627309
08:31:03 [DEBUG] (585) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.929µs elapsed_secs=0.000133929
08:31:03 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=515.155µs elapsed_secs=0.000515155
08:31:03 [DEBUG] (597) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.238125ms elapsed_secs=0.016238125
08:31:03 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=483.209µs elapsed_secs=0.000483209
08:31:03 [DEBUG] (597) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=435.134µs elapsed_secs=0.000435134
08:31:03 [DEBUG] (609) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.567µs elapsed_secs=8.5567e-5
08:31:03 [DEBUG] (597) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=138.819µs elapsed_secs=0.000138819
08:31:03 [DEBUG] (597) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=464.577µs elapsed_secs=0.000464577
08:31:03 [DEBUG] (597) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=477.598µs elapsed_secs=0.000477598
08:31:03 [DEBUG] (605) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.52221ms elapsed_secs=0.01152221
08:31:03 [DEBUG] (604) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.568281ms elapsed_secs=0.011568281
08:31:03 [DEBUG] (605) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.2µs elapsed_secs=8.12e-5
08:31:03 [DEBUG] (604) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=71.395µs elapsed_secs=7.1395e-5
08:31:03 [DEBUG] (605) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.456µs elapsed_secs=7.5456e-5
08:31:03 [DEBUG] (604) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=66.063µs elapsed_secs=6.6063e-5
08:31:03 [DEBUG] (605) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=644.078µs elapsed_secs=0.000644078
08:31:03 [DEBUG] (604) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=420.48µs elapsed_secs=0.00042048
08:31:03 [DEBUG] (605) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.747µs elapsed_secs=0.000102747
08:31:03 [DEBUG] (604) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.701µs elapsed_secs=9.2701e-5
08:31:03 [DEBUG] (589) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.174882ms elapsed_secs=0.010174882
08:31:03 [DEBUG] (589) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=163.874µs elapsed_secs=0.000163874
08:31:03 [DEBUG] (589) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.864µs elapsed_secs=0.000100864
08:31:03 [DEBUG] (593) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.104885ms elapsed_secs=0.009104885
08:31:03 [DEBUG] (609) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.561472ms elapsed_secs=0.008561472
08:31:03 [DEBUG] (593) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=500.49µs elapsed_secs=0.00050049
08:31:03 [DEBUG] (609) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=71.31µs elapsed_secs=7.131e-5
08:31:03 [DEBUG] (593) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.551µs elapsed_secs=7.1551e-5
08:31:03 [DEBUG] (609) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.5µs elapsed_secs=6.85e-5
08:31:03 [DEBUG] (609) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=163.109µs elapsed_secs=0.000163109
08:31:03 [DEBUG] (609) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.151µs elapsed_secs=0.000107151
08:31:03 [DEBUG] (563) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=183.454569ms elapsed_secs=0.183454569
08:31:03 [DEBUG] (576) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.281334ms elapsed_secs=0.008281334
08:31:03 [DEBUG] (610) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=56.061µs elapsed_secs=5.6061e-5
08:31:03 [DEBUG] (610) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1\n" rows_affected=0 rows_returned=3 elapsed=256.102µs elapsed_secs=0.000256102
08:31:03 [DEBUG] (561) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (567) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=182.311192ms elapsed_secs=0.182311192
08:31:03 [DEBUG] (613) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=128.269µs elapsed_secs=0.000128269
08:31:03 [DEBUG] (614) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.787µs elapsed_secs=4.3787e-5
08:31:03 [DEBUG] (614) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE status = $1\n" rows_affected=0 rows_returned=6 elapsed=186.216µs elapsed_secs=0.000186216
08:31:03 [DEBUG] (565) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.220223ms elapsed_secs=0.011220223
08:31:03 [DEBUG] (585) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.500707ms elapsed_secs=0.008500707
08:31:03 [DEBUG] (617) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.117µs elapsed_secs=4.5117e-5
08:31:03 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=591.69µs elapsed_secs=0.00059169
08:31:03 [DEBUG] (585) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=332.5µs elapsed_secs=0.0003325
08:31:03 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.833µs elapsed_secs=0.000113833
08:31:03 [DEBUG] (585) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.797µs elapsed_secs=6.5797e-5
08:31:03 [DEBUG] (597) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.240943ms elapsed_secs=0.010240943
08:31:03 [DEBUG] (597) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=270.167µs elapsed_secs=0.000270167
08:31:03 [DEBUG] (597) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.292µs elapsed_secs=7.5292e-5
08:31:03 [DEBUG] (604) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.170788ms elapsed_secs=0.007170788
08:31:03 [DEBUG] (604) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=244.204µs elapsed_secs=0.000244204
08:31:03 [DEBUG] (604) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.015µs elapsed_secs=0.000167015
08:31:03 [DEBUG] (589) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.68906ms elapsed_secs=0.00768906
08:31:03 [DEBUG] (605) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.016109ms elapsed_secs=0.010016109
08:31:03 [DEBUG] (613) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.480541ms elapsed_secs=0.012480541
08:31:03 [DEBUG] (613) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=135.9µs elapsed_secs=0.0001359
08:31:03 [DEBUG] (589) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=430.814µs elapsed_secs=0.000430814
08:31:03 [DEBUG] (613) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=89.985µs elapsed_secs=8.9985e-5
08:31:03 [DEBUG] (605) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=478.824µs elapsed_secs=0.000478824
08:31:03 [DEBUG] (589) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=256.313µs elapsed_secs=0.000256313
08:31:03 [DEBUG] (613) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=282.03µs elapsed_secs=0.00028203
08:31:03 [DEBUG] (605) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=399.973µs elapsed_secs=0.000399973
08:31:03 [DEBUG] (617) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.153359ms elapsed_secs=0.010153359
08:31:03 [DEBUG] (613) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.58µs elapsed_secs=0.00013258
08:31:03 [DEBUG] (617) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=235.022µs elapsed_secs=0.000235022
08:31:03 [DEBUG] (617) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=203.855µs elapsed_secs=0.000203855
08:31:03 [DEBUG] (593) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.112758ms elapsed_secs=0.011112758
08:31:03 [DEBUG] (609) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.186183ms elapsed_secs=0.011186183
08:31:03 [DEBUG] (617) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=649.669µs elapsed_secs=0.000649669
08:31:03 [DEBUG] (617) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=258.799µs elapsed_secs=0.000258799
08:31:03 [DEBUG] (609) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=475.059µs elapsed_secs=0.000475059
08:31:03 [DEBUG] (593) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=605.868µs elapsed_secs=0.000605868
08:31:03 [DEBUG] (609) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=167.549µs elapsed_secs=0.000167549
08:31:03 [DEBUG] (593) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.606µs elapsed_secs=8.2606e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.736289ms elapsed_secs=0.006736289
08:31:03 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.950108ms elapsed_secs=0.006950108
08:31:03 [DEBUG] (585) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.032142ms elapsed_secs=0.001032142
08:31:03 [DEBUG] (585) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.591µs elapsed_secs=0.000189591
08:31:03 [DEBUG] (582) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.654754ms elapsed_secs=0.001654754
08:31:03 [DEBUG] (597) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.635716ms elapsed_secs=0.008635716
08:31:03 [DEBUG] (582) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.078µs elapsed_secs=0.000176078
08:31:03 [DEBUG] (604) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.313418ms elapsed_secs=0.009313418
08:31:03 [DEBUG] (597) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=337.636µs elapsed_secs=0.000337636
08:31:03 [DEBUG] (597) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.998µs elapsed_secs=0.000138998
08:31:03 [DEBUG] (604) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=260.06µs elapsed_secs=0.00026006
08:31:03 [DEBUG] (604) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.597µs elapsed_secs=9.3597e-5
08:31:03 [DEBUG] (589) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.25444ms elapsed_secs=0.00925444
08:31:03 [DEBUG] (589) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=234.955µs elapsed_secs=0.000234955
08:31:03 [DEBUG] (589) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.426µs elapsed_secs=0.000103426
08:31:03 [DEBUG] (613) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.627386ms elapsed_secs=0.010627386
08:31:03 [DEBUG] (613) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=273.498µs elapsed_secs=0.000273498
08:31:03 [DEBUG] (613) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.759µs elapsed_secs=7.4759e-5
08:31:03 [DEBUG] (609) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.296997ms elapsed_secs=0.008296997
08:31:03 [DEBUG] (617) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.591951ms elapsed_secs=0.008591951
08:31:03 [DEBUG] (605) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.073717ms elapsed_secs=0.011073717
08:31:03 [DEBUG] (609) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=182.904µs elapsed_secs=0.000182904
08:31:03 [DEBUG] (609) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.907µs elapsed_secs=0.000101907
08:31:03 [DEBUG] (605) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=294.075µs elapsed_secs=0.000294075
08:31:03 [DEBUG] (617) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=262.841µs elapsed_secs=0.000262841
08:31:03 [DEBUG] (593) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.361619ms elapsed_secs=0.009361619
08:31:03 [DEBUG] (605) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.666µs elapsed_secs=0.000132666
08:31:03 [DEBUG] (617) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.041µs elapsed_secs=9.6041e-5
08:31:03 [DEBUG] (593) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=251.038µs elapsed_secs=0.000251038
08:31:03 [DEBUG] (593) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.061µs elapsed_secs=9.9061e-5
08:31:03 [DEBUG] (604) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.900864ms elapsed_secs=0.006900864
08:31:03 [DEBUG] (582) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.993133ms elapsed_secs=0.006993133
08:31:03 [DEBUG] (597) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.303217ms elapsed_secs=0.007303217
08:31:03 [DEBUG] (597) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=542.304µs elapsed_secs=0.000542304
08:31:03 [DEBUG] (604) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=858.737µs elapsed_secs=0.000858737
08:31:03 [DEBUG] (597) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.191µs elapsed_secs=9.8191e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.611194ms elapsed_secs=0.008611194
08:31:03 [DEBUG] (604) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.631µs elapsed_secs=7.7631e-5
08:31:03 [DEBUG] (589) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.032487ms elapsed_secs=0.006032487
08:31:03 [DEBUG] (613) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.337787ms elapsed_secs=0.006337787
08:31:03 [DEBUG] (613) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=419.557µs elapsed_secs=0.000419557
08:31:03 [DEBUG] (589) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=649.46µs elapsed_secs=0.00064946
08:31:03 [DEBUG] (613) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.751µs elapsed_secs=0.000123751
08:31:03 [DEBUG] (589) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.374µs elapsed_secs=7.8374e-5
08:31:03 [DEBUG] (617) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.748371ms elapsed_secs=0.009748371
08:31:03 [DEBUG] (605) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.096855ms elapsed_secs=0.010096855
08:31:03 [DEBUG] (609) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.655936ms elapsed_secs=0.010655936
08:31:03 [DEBUG] (605) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=351.874µs elapsed_secs=0.000351874
08:31:03 [DEBUG] (593) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.811398ms elapsed_secs=0.010811398
08:31:03 [DEBUG] (617) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=778.803µs elapsed_secs=0.000778803
08:31:03 [DEBUG] (605) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.141µs elapsed_secs=0.000109141
08:31:03 [DEBUG] (609) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=208.538µs elapsed_secs=0.000208538
08:31:03 [DEBUG] (617) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.87µs elapsed_secs=9.287e-5
08:31:03 [DEBUG] (593) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=173.654µs elapsed_secs=0.000173654
08:31:03 [DEBUG] (609) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.372µs elapsed_secs=9.3372e-5
08:31:03 [DEBUG] (593) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=294.931µs elapsed_secs=0.000294931
08:31:03 [DEBUG] (597) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.973835ms elapsed_secs=0.006973835
08:31:03 [DEBUG] (613) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.119498ms elapsed_secs=0.007119498
08:31:03 [DEBUG] (604) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.293205ms elapsed_secs=0.007293205
08:31:03 [DEBUG] (613) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=298.261µs elapsed_secs=0.000298261
08:31:03 [DEBUG] (597) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=354.287µs elapsed_secs=0.000354287
08:31:03 [DEBUG] (604) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=300.69µs elapsed_secs=0.00030069
08:31:03 [DEBUG] (613) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.443µs elapsed_secs=8.8443e-5
08:31:03 [DEBUG] (597) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.415µs elapsed_secs=7.8415e-5
08:31:03 [DEBUG] (604) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=128.796µs elapsed_secs=0.000128796
08:31:03 [DEBUG] (589) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.506191ms elapsed_secs=0.006506191
08:31:03 [DEBUG] (605) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.424069ms elapsed_secs=0.007424069
08:31:03 [DEBUG] (605) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=293.227µs elapsed_secs=0.000293227
08:31:03 [DEBUG] (605) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.203µs elapsed_secs=8.2203e-5
08:31:03 [DEBUG] (593) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.111961ms elapsed_secs=0.008111961
08:31:03 [DEBUG] (617) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.543054ms elapsed_secs=0.010543054
08:31:03 [DEBUG] (609) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.758191ms elapsed_secs=0.010758191
08:31:03 [DEBUG] (617) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=232.721µs elapsed_secs=0.000232721
08:31:03 [DEBUG] (617) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=107.54µs elapsed_secs=0.00010754
08:31:03 [DEBUG] (609) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=246.49µs elapsed_secs=0.00024649
08:31:03 [DEBUG] (609) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.374µs elapsed_secs=9.8374e-5
08:31:03 [DEBUG] (597) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.880288ms elapsed_secs=0.006880288
08:31:03 [DEBUG] (613) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.41339ms elapsed_secs=0.00841339
08:31:03 [DEBUG] (604) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.657776ms elapsed_secs=0.007657776
08:31:03 [DEBUG] (605) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.680736ms elapsed_secs=0.007680736
08:31:03 [DEBUG] (613) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=630.722µs elapsed_secs=0.000630722
08:31:03 [DEBUG] (613) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.647µs elapsed_secs=6.6647e-5
08:31:03 [DEBUG] (617) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.861572ms elapsed_secs=0.008861572
08:31:03 [DEBUG] (617) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=164.318µs elapsed_secs=0.000164318
08:31:03 [DEBUG] (617) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.516µs elapsed_secs=7.5516e-5
08:31:03 [DEBUG] (609) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.449205ms elapsed_secs=0.008449205
08:31:03 [DEBUG] (613) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.535108ms elapsed_secs=0.006535108
08:31:03 [DEBUG] (571) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=153.261571ms elapsed_secs=0.153261571
08:31:03 [DEBUG] (618) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=64.646µs elapsed_secs=6.4646e-5
08:31:03 [DEBUG] (618) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE updated_at >= $1 AND updated_at <= $2\n" rows_affected=0 rows_returned=1 elapsed=164.539µs elapsed_secs=0.000164539
08:31:03 [DEBUG] (569) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }]
08:31:03 [DEBUG] (619) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.034µs elapsed_secs=3.2034e-5
08:31:03 [DEBUG] (619) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE updated_at >= $1\n" rows_affected=0 rows_returned=2 elapsed=151.637µs elapsed_secs=0.000151637
08:31:03 [DEBUG] (569) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(16), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 10000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(10000) }, Task { id: Some(17), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 FULL OPT", description: Some("TEST PJ1 FULL OPT - Description"), status: 4, deadline: Some(99999), created_at: 99999, updated_at: Some(99999) }]
08:31:03 [DEBUG] (618) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE updated_at <= $1\n" rows_affected=0 rows_returned=1 elapsed=237.645µs elapsed_secs=0.000237645
08:31:03 [DEBUG] (569) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(15), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK UPDATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 0, updated_at: Some(1000) }]
08:31:03 [DEBUG] (622) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.152µs elapsed_secs=4.2152e-5
08:31:03 [DEBUG] (617) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.221784ms elapsed_secs=0.009221784
08:31:03 [DEBUG] (622) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.259835ms elapsed_secs=0.012259835
08:31:03 [DEBUG] (622) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=142.58µs elapsed_secs=0.00014258
08:31:03 [DEBUG] (622) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.814µs elapsed_secs=7.7814e-5
08:31:03 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=237.679µs elapsed_secs=0.000237679
08:31:03 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.708µs elapsed_secs=8.2708e-5
08:31:03 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.075729ms elapsed_secs=0.008075729
08:31:03 [DEBUG] (576) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=156.588192ms elapsed_secs=0.156588192
08:31:03 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=426.394µs elapsed_secs=0.000426394
08:31:03 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.22µs elapsed_secs=9.422e-5
08:31:03 [DEBUG] (623) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.358µs elapsed_secs=3.5358e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.765µs elapsed_secs=4.5765e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.676565ms elapsed_secs=0.012676565
08:31:03 [DEBUG] (626) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=152.413µs elapsed_secs=0.000152413
08:31:03 [DEBUG] (626) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=86.685µs elapsed_secs=8.6685e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=296.532µs elapsed_secs=0.000296532
08:31:03 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.614µs elapsed_secs=0.000114614
08:31:03 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.834851ms elapsed_secs=0.011834851
08:31:03 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=368.981µs elapsed_secs=0.000368981
08:31:03 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.302µs elapsed_secs=6.6302e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.798039ms elapsed_secs=0.008798039
08:31:03 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=261.265µs elapsed_secs=0.000261265
08:31:03 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.459µs elapsed_secs=6.8459e-5
08:31:03 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.424427ms elapsed_secs=0.012424427
08:31:03 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=172.427µs elapsed_secs=0.000172427
08:31:03 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.21µs elapsed_secs=7.521e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.885051ms elapsed_secs=0.007885051
08:31:03 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=749.402µs elapsed_secs=0.000749402
08:31:03 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.484µs elapsed_secs=7.9484e-5
08:31:03 [DEBUG] (585) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=162.777747ms elapsed_secs=0.162777747
08:31:03 [DEBUG] (582) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.526142ms elapsed_secs=0.164526142
08:31:03 [DEBUG] (627) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=85.808µs elapsed_secs=8.5808e-5
08:31:03 [DEBUG] (628) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.447µs elapsed_secs=3.6447e-5
08:31:03 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.628358ms elapsed_secs=0.007628358
08:31:03 [DEBUG] (622) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=273.617µs elapsed_secs=0.000273617
08:31:03 [DEBUG] (622) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.238µs elapsed_secs=9.3238e-5
08:31:03 [DEBUG] (633) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.107µs elapsed_secs=4.3107e-5
08:31:03 [DEBUG] (634) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.355µs elapsed_secs=3.4355e-5
08:31:03 [DEBUG] (589) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=156.737701ms elapsed_secs=0.156737701
08:31:03 [DEBUG] (633) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.686956ms elapsed_secs=0.011686956
08:31:03 [DEBUG] (634) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.646377ms elapsed_secs=0.011646377
08:31:03 [DEBUG] (634) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=178.179µs elapsed_secs=0.000178179
08:31:03 [DEBUG] (633) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=297.858µs elapsed_secs=0.000297858
08:31:03 [DEBUG] (634) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=250.621µs elapsed_secs=0.000250621
08:31:03 [DEBUG] (633) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=288.551µs elapsed_secs=0.000288551
08:31:03 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.525909ms elapsed_secs=0.009525909
08:31:03 [DEBUG] (635) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=63.498µs elapsed_secs=6.3498e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=813.778µs elapsed_secs=0.000813778
08:31:03 [DEBUG] (633) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.47525ms elapsed_secs=0.00147525
08:31:03 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.657545ms elapsed_secs=0.001657545
08:31:03 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=191.356µs elapsed_secs=0.000191356
08:31:03 [DEBUG] (633) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=128.341µs elapsed_secs=0.000128341
08:31:03 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.537µs elapsed_secs=8.2537e-5
08:31:03 [DEBUG] (638) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.676µs elapsed_secs=5.0676e-5
08:31:03 [DEBUG] (622) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.006501ms elapsed_secs=0.011006501
08:31:03 [DEBUG] (593) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=164.73843ms elapsed_secs=0.16473843
08:31:03 [DEBUG] (639) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.36µs elapsed_secs=4.736e-5
08:31:03 [DEBUG] (642) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=64.536µs elapsed_secs=6.4536e-5
08:31:03 [DEBUG] (605) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=154.002031ms elapsed_secs=0.154002031
08:31:03 [DEBUG] (638) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.660823ms elapsed_secs=0.011660823
08:31:03 [DEBUG] (643) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.788µs elapsed_secs=5.3788e-5
08:31:03 [DEBUG] (638) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=180.74µs elapsed_secs=0.00018074
08:31:03 [DEBUG] (638) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=163.214µs elapsed_secs=0.000163214
08:31:03 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=678.9µs elapsed_secs=0.0006789
08:31:03 [DEBUG] (597) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=159.100774ms elapsed_secs=0.159100774
08:31:03 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=258.462µs elapsed_secs=0.000258462
08:31:03 [DEBUG] (645) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=178.83µs elapsed_secs=0.00017883
08:31:03 [DEBUG] (647) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.392µs elapsed_secs=4.4392e-5
08:31:03 [DEBUG] (650) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.383µs elapsed_secs=6.0383e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.666054ms elapsed_secs=0.009666054
08:31:03 [DEBUG] (626) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=198.988µs elapsed_secs=0.000198988
08:31:03 [DEBUG] (626) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.926µs elapsed_secs=8.4926e-5
08:31:03 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.835868ms elapsed_secs=0.011835868
08:31:03 [DEBUG] (633) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.014422ms elapsed_secs=0.012014422
08:31:03 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=476.266µs elapsed_secs=0.000476266
08:31:03 [DEBUG] (642) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.052619ms elapsed_secs=0.011052619
08:31:03 [DEBUG] (633) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=401.397µs elapsed_secs=0.000401397
08:31:03 [DEBUG] (642) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=84.692µs elapsed_secs=8.4692e-5
08:31:03 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.615µs elapsed_secs=6.9615e-5
08:31:03 [DEBUG] (642) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=114.892µs elapsed_secs=0.000114892
08:31:03 [DEBUG] (633) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.425µs elapsed_secs=0.000118425
08:31:03 [DEBUG] (604) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.259966ms elapsed_secs=0.166259966
08:31:03 [DEBUG] (642) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=277.72µs elapsed_secs=0.00027772
08:31:03 [DEBUG] (642) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=143.149µs elapsed_secs=0.000143149
08:31:03 [DEBUG] (651) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.054µs elapsed_secs=6.9054e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=97.485µs elapsed_secs=9.7485e-5
08:31:03 [DEBUG] (613) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=152.903205ms elapsed_secs=0.152903205
08:31:03 [DEBUG] (655) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=61.756µs elapsed_secs=6.1756e-5
08:31:03 [DEBUG] (647) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.606184ms elapsed_secs=0.012606184
08:31:03 [DEBUG] (647) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=236.618µs elapsed_secs=0.000236618
08:31:03 [DEBUG] (647) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=442.737µs elapsed_secs=0.000442737
08:31:03 [DEBUG] (658) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.018µs elapsed_secs=7.4018e-5
08:31:03 [DEBUG] (647) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=401.525µs elapsed_secs=0.000401525
08:31:03 [DEBUG] (609) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.830931ms elapsed_secs=0.166830931
08:31:03 [DEBUG] (647) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.331µs elapsed_secs=9.6331e-5
08:31:03 [DEBUG] (650) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.355536ms elapsed_secs=0.014355536
08:31:03 [DEBUG] (659) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=148.911µs elapsed_secs=0.000148911
08:31:03 [DEBUG] (650) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=106.361µs elapsed_secs=0.000106361
08:31:03 [DEBUG] (650) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=95.458µs elapsed_secs=9.5458e-5
08:31:03 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=472.142µs elapsed_secs=0.000472142
08:31:03 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.539µs elapsed_secs=7.1539e-5
08:31:03 [DEBUG] (662) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.693µs elapsed_secs=4.3693e-5
08:31:03 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.634829ms elapsed_secs=0.011634829
08:31:03 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=231.939µs elapsed_secs=0.000231939
08:31:03 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.113µs elapsed_secs=8.0113e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.471268ms elapsed_secs=0.011471268
08:31:03 [DEBUG] (654) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=75.961µs elapsed_secs=7.5961e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.822µs elapsed_secs=8.4822e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=245.703µs elapsed_secs=0.000245703
08:31:03 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.924µs elapsed_secs=7.2924e-5
08:31:03 [DEBUG] (626) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.418774ms elapsed_secs=0.010418774
08:31:03 [DEBUG] (658) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.223442ms elapsed_secs=0.008223442
08:31:03 [DEBUG] (658) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=61.708µs elapsed_secs=6.1708e-5
08:31:03 [DEBUG] (658) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.625µs elapsed_secs=5.9625e-5
08:31:03 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=160.08µs elapsed_secs=0.00016008
08:31:03 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=314.893µs elapsed_secs=0.000314893
08:31:03 [DEBUG] (633) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.051855ms elapsed_secs=0.009051855
08:31:03 [DEBUG] (642) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.322427ms elapsed_secs=0.009322427
08:31:03 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.084862ms elapsed_secs=0.010084862
08:31:03 [DEBUG] (633) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=875.476µs elapsed_secs=0.000875476
08:31:03 [DEBUG] (642) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=517.913µs elapsed_secs=0.000517913
08:31:03 [DEBUG] (633) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=258.361µs elapsed_secs=0.000258361
08:31:03 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=344.247µs elapsed_secs=0.000344247
08:31:03 [DEBUG] (642) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=490.79µs elapsed_secs=0.00049079
08:31:03 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=128.055µs elapsed_secs=0.000128055
08:31:03 [DEBUG] (617) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.970972ms elapsed_secs=0.166970972
08:31:03 [DEBUG] (662) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.459371ms elapsed_secs=0.015459371
08:31:03 [DEBUG] (663) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.094µs elapsed_secs=4.6094e-5
08:31:03 [DEBUG] (662) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=108.72µs elapsed_secs=0.00010872
08:31:03 [DEBUG] (662) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=113.094µs elapsed_secs=0.000113094
08:31:03 [DEBUG] (662) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=283.626µs elapsed_secs=0.000283626
08:31:03 [DEBUG] (666) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.459µs elapsed_secs=5.4459e-5
08:31:03 [DEBUG] (662) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.098µs elapsed_secs=8.5098e-5
08:31:03 [DEBUG] (647) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.915899ms elapsed_secs=0.008915899
08:31:03 [DEBUG] (647) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=310.781µs elapsed_secs=0.000310781
08:31:03 [DEBUG] (647) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.603µs elapsed_secs=6.2603e-5
08:31:03 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.299129ms elapsed_secs=0.009299129
08:31:03 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=528.502µs elapsed_secs=0.000528502
08:31:03 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.107µs elapsed_secs=9.6107e-5
08:31:03 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.483678ms elapsed_secs=0.007483678
08:31:03 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.06681ms elapsed_secs=0.00106681
08:31:03 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.657µs elapsed_secs=0.000114657
08:31:03 [DEBUG] (666) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.892238ms elapsed_secs=0.008892238
08:31:03 [DEBUG] (666) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=390.282µs elapsed_secs=0.000390282
08:31:03 [DEBUG] (666) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=225.807µs elapsed_secs=0.000225807
08:31:03 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.128081ms elapsed_secs=0.009128081
08:31:03 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.973044ms elapsed_secs=0.007973044
08:31:03 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=408.673µs elapsed_secs=0.000408673
08:31:03 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=553.691µs elapsed_secs=0.000553691
08:31:03 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=527.433µs elapsed_secs=0.000527433
08:31:03 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.942µs elapsed_secs=9.6942e-5
08:31:03 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.748µs elapsed_secs=0.000125748
08:31:03 [DEBUG] (633) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.651671ms elapsed_secs=0.009651671
08:31:03 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.678µs elapsed_secs=0.000122678
08:31:03 [DEBUG] (633) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=789.912µs elapsed_secs=0.000789912
08:31:03 [DEBUG] (633) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.9µs elapsed_secs=6.39e-5
08:31:03 [DEBUG] (642) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.939168ms elapsed_secs=0.010939168
08:31:03 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.393277ms elapsed_secs=0.008393277
08:31:03 [DEBUG] (642) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=461.397µs elapsed_secs=0.000461397
08:31:03 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=213.722µs elapsed_secs=0.000213722
08:31:03 [DEBUG] (642) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.118µs elapsed_secs=6.2118e-5
08:31:03 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.115µs elapsed_secs=6.6115e-5
08:31:03 [DEBUG] (662) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.24404ms elapsed_secs=0.00824404
08:31:03 [DEBUG] (662) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=261.732µs elapsed_secs=0.000261732
08:31:03 [DEBUG] (662) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.534µs elapsed_secs=6.4534e-5
08:31:03 [DEBUG] (647) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.82362ms elapsed_secs=0.00782362
08:31:03 [DEBUG] (647) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=297.226µs elapsed_secs=0.000297226
08:31:03 [DEBUG] (647) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=197.668µs elapsed_secs=0.000197668
08:31:03 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.003324ms elapsed_secs=0.007003324
08:31:03 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=442.378µs elapsed_secs=0.000442378
08:31:03 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=366.06µs elapsed_secs=0.00036606
08:31:03 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.080558ms elapsed_secs=0.010080558
08:31:03 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.177823ms elapsed_secs=0.010177823
08:31:03 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=307.817µs elapsed_secs=0.000307817
08:31:03 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=267.73µs elapsed_secs=0.00026773
08:31:03 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.449µs elapsed_secs=9.2449e-5
08:31:03 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=50.357µs elapsed_secs=5.0357e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.230099ms elapsed_secs=0.010230099
08:31:03 [DEBUG] (633) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.276247ms elapsed_secs=0.010276247
08:31:03 [DEBUG] (633) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=181.267µs elapsed_secs=0.000181267
08:31:03 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=228.881µs elapsed_secs=0.000228881
08:31:03 [DEBUG] (633) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.344µs elapsed_secs=6.6344e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.096µs elapsed_secs=9.1096e-5
08:31:03 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.22349ms elapsed_secs=0.00722349
08:31:03 [DEBUG] (642) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.629875ms elapsed_secs=0.007629875
08:31:03 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.823793ms elapsed_secs=0.010823793
08:31:03 [DEBUG] (634) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=438.724µs elapsed_secs=0.000438724
08:31:03 [DEBUG] (642) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=219.393µs elapsed_secs=0.000219393
08:31:03 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=132.732µs elapsed_secs=0.000132732
08:31:03 [DEBUG] (634) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.918µs elapsed_secs=0.000112918
08:31:03 [DEBUG] (642) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.943µs elapsed_secs=7.9943e-5
08:31:03 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=102.262µs elapsed_secs=0.000102262
08:31:03 [DEBUG] (662) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.65168ms elapsed_secs=0.00965168
08:31:03 [DEBUG] (662) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=305.39µs elapsed_secs=0.00030539
08:31:03 [DEBUG] (662) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.268µs elapsed_secs=0.000119268
08:31:03 [DEBUG] (647) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.821227ms elapsed_secs=0.008821227
08:31:03 [DEBUG] (647) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=756.698µs elapsed_secs=0.000756698
08:31:03 [DEBUG] (647) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=152.253µs elapsed_secs=0.000152253
08:31:03 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.561345ms elapsed_secs=0.010561345
08:31:03 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=158.851µs elapsed_secs=0.000158851
08:31:03 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.306µs elapsed_secs=6.5306e-5
08:31:03 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.717645ms elapsed_secs=0.009717645
08:31:03 [DEBUG] (638) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=314.5µs elapsed_secs=0.0003145
08:31:03 [DEBUG] (638) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.48µs elapsed_secs=7.248e-5
08:31:03 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.110442ms elapsed_secs=0.008110442
08:31:03 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=298.072µs elapsed_secs=0.000298072
08:31:03 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.543µs elapsed_secs=7.0543e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.517171ms elapsed_secs=0.008517171
08:31:03 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.536032ms elapsed_secs=0.007536032
08:31:03 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=142.91µs elapsed_secs=0.00014291
08:31:03 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.311µs elapsed_secs=0.000104311
08:31:03 [DEBUG] (634) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.758557ms elapsed_secs=0.007758557
08:31:03 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=200.285µs elapsed_secs=0.000200285
08:31:03 [DEBUG] (633) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.618311ms elapsed_secs=0.009618311
08:31:03 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=83.942µs elapsed_secs=8.3942e-5
08:31:03 [DEBUG] (642) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.369139ms elapsed_secs=0.008369139
08:31:03 [DEBUG] (642) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=314.579µs elapsed_secs=0.000314579
08:31:03 [DEBUG] (642) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.773µs elapsed_secs=5.4773e-5
08:31:03 [DEBUG] (662) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.55277ms elapsed_secs=0.00655277
08:31:03 [DEBUG] (662) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=301.162µs elapsed_secs=0.000301162
08:31:03 [DEBUG] (662) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.049µs elapsed_secs=8.2049e-5
08:31:03 [DEBUG] (647) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.931419ms elapsed_secs=0.007931419
08:31:03 [DEBUG] (647) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=138.499µs elapsed_secs=0.000138499
08:31:03 [DEBUG] (647) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.776µs elapsed_secs=0.000153776
08:31:03 [DEBUG] (638) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.631799ms elapsed_secs=0.006631799
08:31:03 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.086091ms elapsed_secs=0.009086091
08:31:03 [DEBUG] (650) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=159.666µs elapsed_secs=0.000159666
08:31:03 [DEBUG] (650) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.141µs elapsed_secs=8.7141e-5
08:31:03 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.017435ms elapsed_secs=0.008017435
08:31:03 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.644405ms elapsed_secs=0.008644405
08:31:03 [DEBUG] (658) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=268.977µs elapsed_secs=0.000268977
08:31:03 [DEBUG] (658) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=161.878µs elapsed_secs=0.000161878
08:31:03 [DEBUG] (654) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=302.802µs elapsed_secs=0.000302802
08:31:03 [DEBUG] (654) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.52µs elapsed_secs=0.00010652
08:31:03 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.522342ms elapsed_secs=0.008522342
08:31:03 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=530.039µs elapsed_secs=0.000530039
08:31:03 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.032µs elapsed_secs=9.2032e-5
08:31:03 [DEBUG] (642) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.758749ms elapsed_secs=0.009758749
08:31:03 [DEBUG] (662) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.185833ms elapsed_secs=0.009185833
08:31:03 [DEBUG] (662) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=367.624µs elapsed_secs=0.000367624
08:31:03 [DEBUG] (662) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.397µs elapsed_secs=5.6397e-5
08:31:03 [DEBUG] (647) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.153624ms elapsed_secs=0.007153624
08:31:03 [DEBUG] (654) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.317968ms elapsed_secs=0.007317968
08:31:03 [DEBUG] (650) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.556239ms elapsed_secs=0.010556239
08:31:03 [DEBUG] (658) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.311744ms elapsed_secs=0.008311744
08:31:03 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.169111ms elapsed_secs=0.008169111
08:31:03 [DEBUG] (666) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=279.889µs elapsed_secs=0.000279889
08:31:03 [DEBUG] (666) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.602µs elapsed_secs=6.8602e-5
08:31:03 [DEBUG] (662) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.433472ms elapsed_secs=0.010433472
08:31:03 [DEBUG] (666) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.346ms elapsed_secs=0.008346
08:31:03 [DEBUG] (622) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=169.960405ms elapsed_secs=0.169960405
08:31:03 [DEBUG] (667) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=53.832µs elapsed_secs=5.3832e-5
08:31:03 [DEBUG] (667) sqlx::query: summary="SELECT COUNT(*) FROM tasks …" db.statement="\n\n\n        SELECT COUNT(*) FROM tasks\n    \n" rows_affected=0 rows_returned=1 elapsed=209.624µs elapsed_secs=0.000209624
08:31:03 [DEBUG] (620) menahel::repository::task_repo: Get tasks count with transaction: 17
08:31:03 [DEBUG] (667) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n         LIMIT $1 OFFSET $2\n" rows_affected=0 rows_returned=10 elapsed=157.019µs elapsed_secs=0.000157019
08:31:03 [DEBUG] (620) menahel::repository::task_repo: Get tasks by filter: [Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(2), project_id: 1, parent_id: Some(1), level: 1, name: "Test PJ0 Minor TASK", description: Some("TEST PJ0 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(4), project_id: 2, parent_id: None, level: 0, name: "Test PJ1 Major TASK", description: Some("TEST PJ1 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(5), project_id: 2, parent_id: Some(4), level: 1, name: "Test PJ1 Minor TASK", description: Some("TEST PJ1 Minor TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(6), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK NotStarted", description: Some("TEST PJ1 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(7), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK InProgress", description: Some("TEST PJ1 Trivial TASK - Description"), status: 1, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(8), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Reviewing", description: Some("TEST PJ1 Trivial TASK - Description"), status: 2, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(9), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Cancelled", description: Some("TEST PJ1 Trivial TASK - Description"), status: 3, deadline: Some(0), created_at: 0, updated_at: None }, Task { id: Some(10), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK Done", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(0), created_at: 0, updated_at: None }]
08:31:03 [DEBUG] (670) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.124µs elapsed_secs=6.9124e-5
08:31:03 [DEBUG] (670) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=19.341516ms elapsed_secs=0.019341516
08:31:03 [DEBUG] (670) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=161.161µs elapsed_secs=0.000161161
08:31:03 [DEBUG] (670) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.441µs elapsed_secs=5.9441e-5
08:31:03 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=162.011µs elapsed_secs=0.000162011
08:31:03 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=313.169µs elapsed_secs=0.000313169
08:31:03 [DEBUG] (626) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=173.374759ms elapsed_secs=0.173374759
08:31:03 [DEBUG] (671) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.583µs elapsed_secs=3.2583e-5
08:31:03 [DEBUG] (671) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n          WHERE project_id = $1 AND parent_id = $2 AND level = $3 AND name LIKE '%' || $4 || '%' AND description LIKE '%' || $5 || '%' AND status = $6 AND deadline >= $7 AND deadline <= $8 AND created_at >= $9 AND created_at <= $10 AND updated_at >= $11 AND updated_at <= $12\n" rows_affected=0 rows_returned=0 elapsed=172.066µs elapsed_secs=0.000172066
08:31:03 [DEBUG] (624) menahel::repository::task_repo: Get tasks by filter: []
08:31:03 [DEBUG] (674) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.304µs elapsed_secs=3.4304e-5
08:31:03 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.354345ms elapsed_secs=0.008354345
08:31:03 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=310.743µs elapsed_secs=0.000310743
08:31:03 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.095µs elapsed_secs=7.1095e-5
08:31:03 [DEBUG] (674) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.66847ms elapsed_secs=0.01166847
08:31:03 [DEBUG] (674) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=224.383µs elapsed_secs=0.000224383
08:31:03 [DEBUG] (674) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=125.762µs elapsed_secs=0.000125762
08:31:03 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=535.847µs elapsed_secs=0.000535847
08:31:03 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.567µs elapsed_secs=0.000121567
08:31:03 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.219911ms elapsed_secs=0.011219911
08:31:03 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=335.776µs elapsed_secs=0.000335776
08:31:03 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.077µs elapsed_secs=8.4077e-5
08:31:03 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.933586ms elapsed_secs=0.007933586
08:31:03 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=180.891µs elapsed_secs=0.000180891
08:31:03 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.415µs elapsed_secs=6.8415e-5
08:31:03 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.182916ms elapsed_secs=0.009182916
08:31:03 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=353.197µs elapsed_secs=0.000353197
08:31:03 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=53.144µs elapsed_secs=5.3144e-5
08:31:03 [DEBUG] (633) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=162.016884ms elapsed_secs=0.162016884
08:31:03 [DEBUG] (675) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=145.823µs elapsed_secs=0.000145823
08:31:03 [DEBUG] (675) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=137.715µs elapsed_secs=0.000137715
08:31:03 [DEBUG] (630) menahel::repository::task_repo: Get task by id with transaction: None
08:31:03 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.813859ms elapsed_secs=0.008813859
08:31:03 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=195.609µs elapsed_secs=0.000195609
08:31:03 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.461µs elapsed_secs=0.000109461
08:31:03 [DEBUG] (678) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.996µs elapsed_secs=4.7996e-5
08:31:03 [DEBUG] (634) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=166.088054ms elapsed_secs=0.166088054
08:31:03 [DEBUG] (679) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=110.131µs elapsed_secs=0.000110131
08:31:03 [DEBUG] (679) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n                SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n                FROM tasks\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=167.74µs elapsed_secs=0.00016774
08:31:03 [DEBUG] (629) menahel::repository::task_repo: Get task by id: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (680) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=119.571µs elapsed_secs=0.000119571
08:31:03 [DEBUG] (680) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=157.848µs elapsed_secs=0.000157848
08:31:03 [DEBUG] (629) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (680) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=51.69µs elapsed_secs=5.169e-5
08:31:03 [DEBUG] (680) sqlx::query: summary="UPDATE tasks SET parent_id …" db.statement="\n\n\n                UPDATE tasks \n                SET parent_id = $1, level = $2, name = $3, description = $4, status = $5, deadline = $6, updated_at = $7\n                WHERE id = $8\n                RETURNING id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            \n" rows_affected=0 rows_returned=1 elapsed=130.175µs elapsed_secs=0.000130175
08:31:03 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.552231ms elapsed_secs=0.009552231
08:31:03 [DEBUG] (670) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=153.961µs elapsed_secs=0.000153961
08:31:03 [DEBUG] (670) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.523µs elapsed_secs=0.000100523
08:31:03 [DEBUG] (678) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.667281ms elapsed_secs=0.010667281
08:31:03 [DEBUG] (678) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=66.861µs elapsed_secs=6.6861e-5
08:31:03 [DEBUG] (678) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=55.695µs elapsed_secs=5.5695e-5
08:31:03 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=167.91µs elapsed_secs=0.00016791
08:31:03 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.547µs elapsed_secs=6.5547e-5
08:31:03 [INFO] Updated task: Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test Task", description: Some("Test Task Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: Some(1749544263) }
08:31:03 [DEBUG] (683) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.972µs elapsed_secs=4.6972e-5
08:31:03 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.715776ms elapsed_secs=0.009715776
08:31:03 [DEBUG] (638) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=175.668779ms elapsed_secs=0.175668779
08:31:03 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.255994ms elapsed_secs=0.001255994
08:31:03 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.047µs elapsed_secs=0.000118047
08:31:03 [DEBUG] (684) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.962µs elapsed_secs=4.1962e-5
08:31:03 [DEBUG] (647) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=161.198804ms elapsed_secs=0.161198804
08:31:03 [DEBUG] (684) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=454.355µs elapsed_secs=0.000454355
08:31:03 [DEBUG] (636) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (684) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=59.138µs elapsed_secs=5.9138e-5
08:31:03 [DEBUG] (685) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.413µs elapsed_secs=4.4413e-5
08:31:03 [DEBUG] (684) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=13.702µs elapsed_secs=1.3702e-5
08:31:03 [DEBUG] (636) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (685) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=359.613µs elapsed_secs=0.000359613
08:31:03 [DEBUG] (644) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (685) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=45.81µs elapsed_secs=4.581e-5
08:31:03 [DEBUG] (685) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=24.119µs elapsed_secs=2.4119e-5
08:31:03 [DEBUG] (644) menahel::repository::task_repo: Get task by id with transaction: None
08:31:03 [DEBUG] (688) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=114.994µs elapsed_secs=0.000114994
08:31:03 [DEBUG] (691) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.578µs elapsed_secs=4.4578e-5
08:31:03 [DEBUG] (683) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.574294ms elapsed_secs=0.012574294
08:31:03 [DEBUG] (683) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=82.476µs elapsed_secs=8.2476e-5
08:31:03 [DEBUG] (683) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=65.35µs elapsed_secs=6.535e-5
08:31:03 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=187.789µs elapsed_secs=0.000187789
08:31:03 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.802µs elapsed_secs=8.1802e-5
08:31:03 [DEBUG] (670) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.410098ms elapsed_secs=0.010410098
08:31:03 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.479027ms elapsed_secs=0.007479027
08:31:03 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=358.262µs elapsed_secs=0.000358262
08:31:03 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=156.076µs elapsed_secs=0.000156076
08:31:03 [DEBUG] (642) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=182.543065ms elapsed_secs=0.182543065
08:31:03 [DEBUG] (692) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.702µs elapsed_secs=6.2702e-5
08:31:03 [DEBUG] (692) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=156.565µs elapsed_secs=0.000156565
08:31:03 [DEBUG] (640) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (692) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=132.699µs elapsed_secs=0.000132699
08:31:03 [DEBUG] (695) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=101.483µs elapsed_secs=0.000101483
08:31:03 [DEBUG] (688) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.769469ms elapsed_secs=0.015769469
08:31:03 [DEBUG] (688) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=86.038µs elapsed_secs=8.6038e-5
08:31:03 [DEBUG] (688) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=49.849µs elapsed_secs=4.9849e-5
08:31:03 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=162.788µs elapsed_secs=0.000162788
08:31:03 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=177.412µs elapsed_secs=0.000177412
08:31:03 [DEBUG] (691) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=16.353569ms elapsed_secs=0.016353569
08:31:03 [DEBUG] (691) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=65.572µs elapsed_secs=6.5572e-5
08:31:03 [DEBUG] (691) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=77.802µs elapsed_secs=7.7802e-5
08:31:03 [DEBUG] (691) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=151.033µs elapsed_secs=0.000151033
08:31:03 [DEBUG] (691) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=263.53µs elapsed_secs=0.00026353
08:31:03 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.981967ms elapsed_secs=0.010981967
08:31:03 [DEBUG] (674) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=213.638µs elapsed_secs=0.000213638
08:31:03 [DEBUG] (674) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=210.249µs elapsed_secs=0.000210249
08:31:03 [DEBUG] (650) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\n\n\n\n" rows_affected=19 rows_returned=0 elapsed=180.424181ms elapsed_secs=0.180424181
08:31:03 [DEBUG] (696) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=123.736µs elapsed_secs=0.000123736
08:31:03 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.725015ms elapsed_secs=0.009725015
08:31:03 [DEBUG] (696) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=516.47µs elapsed_secs=0.00051647
08:31:03 [DEBUG] (648) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (696) sqlx::query: summary="SELECT id, name FROM …" db.statement="\n\n\n            SELECT id, name\n            FROM projects\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=194.89µs elapsed_secs=0.00019489
08:31:03 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=378.819µs elapsed_secs=0.000378819
08:31:03 [DEBUG] (696) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=17.212µs elapsed_secs=1.7212e-5
08:31:03 [DEBUG] (648) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=203.461µs elapsed_secs=0.000203461
08:31:03 [DEBUG] (695) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.615019ms elapsed_secs=0.013615019
08:31:03 [DEBUG] (695) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=398.222µs elapsed_secs=0.000398222
08:31:03 [DEBUG] (695) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=139.073µs elapsed_secs=0.000139073
08:31:03 [DEBUG] (699) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.432µs elapsed_secs=3.7432e-5
08:31:03 [DEBUG] (695) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=458.816µs elapsed_secs=0.000458816
08:31:03 [DEBUG] (695) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.785µs elapsed_secs=0.000104785
08:31:03 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.237125ms elapsed_secs=0.011237125
08:31:03 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=369.982µs elapsed_secs=0.000369982
08:31:03 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.819µs elapsed_secs=8.0819e-5
08:31:03 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.53629ms elapsed_secs=0.00653629
08:31:03 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=567.023µs elapsed_secs=0.000567023
08:31:03 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=60.049µs elapsed_secs=6.0049e-5
08:31:03 [DEBUG] (691) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.617168ms elapsed_secs=0.007617168
08:31:03 [DEBUG] (691) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=348.108µs elapsed_secs=0.000348108
08:31:03 [DEBUG] (691) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=313.849µs elapsed_secs=0.000313849
08:31:03 [DEBUG] (699) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.388396ms elapsed_secs=0.012388396
08:31:03 [DEBUG] (699) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=134.214µs elapsed_secs=0.000134214
08:31:03 [DEBUG] (699) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=114.881µs elapsed_secs=0.000114881
08:31:03 [DEBUG] (674) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.28288ms elapsed_secs=0.01028288
08:31:03 [DEBUG] (699) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=252.023µs elapsed_secs=0.000252023
08:31:03 [DEBUG] (699) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=131.645µs elapsed_secs=0.000131645
08:31:03 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.493412ms elapsed_secs=0.008493412
08:31:03 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=304.123µs elapsed_secs=0.000304123
08:31:03 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.98µs elapsed_secs=6.498e-5
08:31:03 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.512549ms elapsed_secs=0.007512549
08:31:03 [DEBUG] (695) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.97913ms elapsed_secs=0.00997913
08:31:03 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=131.505µs elapsed_secs=0.000131505
08:31:03 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.381µs elapsed_secs=0.000103381
08:31:03 [DEBUG] (695) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=270.465µs elapsed_secs=0.000270465
08:31:03 [DEBUG] (695) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=362.736µs elapsed_secs=0.000362736
08:31:03 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.678959ms elapsed_secs=0.008678959
08:31:03 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=564.165µs elapsed_secs=0.000564165
08:31:03 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=250.621µs elapsed_secs=0.000250621
08:31:03 [DEBUG] (658) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=219.971742ms elapsed_secs=0.219971742
08:31:03 [DEBUG] (700) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.198µs elapsed_secs=3.5198e-5
08:31:03 [DEBUG] (700) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=125.784µs elapsed_secs=0.000125784
08:31:03 [DEBUG] (656) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
08:31:03 [DEBUG] (699) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.288974ms elapsed_secs=0.010288974
08:31:03 [DEBUG] (700) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=50.808µs elapsed_secs=5.0808e-5
08:31:03 [DEBUG] (656) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (700) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=16.606µs elapsed_secs=1.6606e-5
08:31:03 [DEBUG] (691) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.885102ms elapsed_secs=0.010885102
08:31:03 [DEBUG] (656) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (699) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=219.301µs elapsed_secs=0.000219301
08:31:03 [DEBUG] (699) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.197µs elapsed_secs=0.000135197
08:31:03 [DEBUG] (691) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=272.183µs elapsed_secs=0.000272183
08:31:03 [DEBUG] (691) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=180.864µs elapsed_secs=0.000180864
08:31:03 [DEBUG] (703) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.534µs elapsed_secs=7.3534e-5
08:31:03 [DEBUG] (654) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=225.797846ms elapsed_secs=0.225797846
08:31:03 [DEBUG] (704) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.25µs elapsed_secs=3.925e-5
08:31:03 [DEBUG] (704) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=167.853µs elapsed_secs=0.000167853
08:31:03 [DEBUG] (652) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:03 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.294102ms elapsed_secs=0.006294102
08:31:03 [DEBUG] (704) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=153.183µs elapsed_secs=0.000153183
08:31:03 [DEBUG] (652) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None })
08:31:03 [DEBUG] (704) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=25.446µs elapsed_secs=2.5446e-5
08:31:03 [DEBUG] (652) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(13), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK CREATED_AT 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: None, created_at: 1000, updated_at: None })
08:31:03 [DEBUG] (704) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=191.735µs elapsed_secs=0.000191735
08:31:03 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=800.824µs elapsed_secs=0.000800824
08:31:03 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=198.618µs elapsed_secs=0.000198618
08:31:03 [DEBUG] (704) sqlx::query: summary="INSERT INTO user_assign (user_id, …" db.statement="\n\n\n                INSERT INTO user_assign (user_id, task_id)\n                VALUES ($1, $2)\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=1 elapsed=276.551µs elapsed_secs=0.000276551
08:31:03 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.013601ms elapsed_secs=0.008013601
08:31:03 [DEBUG] (678) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=245.216µs elapsed_secs=0.000245216
08:31:03 [DEBUG] (678) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=380.523µs elapsed_secs=0.000380523
08:31:03 [DEBUG] (695) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.434336ms elapsed_secs=0.010434336
08:31:03 [DEBUG] (703) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.631868ms elapsed_secs=0.010631868
08:31:03 [DEBUG] (703) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=514.442µs elapsed_secs=0.000514442
08:31:03 [DEBUG] (695) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=550.426µs elapsed_secs=0.000550426
08:31:03 [DEBUG] (703) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.373µs elapsed_secs=7.0373e-5
08:31:03 [DEBUG] (695) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.284µs elapsed_secs=0.000129284
08:31:03 [DEBUG] (703) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=373.809µs elapsed_secs=0.000373809
08:31:03 [DEBUG] (703) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.806µs elapsed_secs=0.000118806
08:31:03 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.804993ms elapsed_secs=0.010804993
08:31:03 [DEBUG] (662) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=229.119662ms elapsed_secs=0.229119662
08:31:03 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=142.078µs elapsed_secs=0.000142078
08:31:03 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.079µs elapsed_secs=9.2079e-5
08:31:03 [DEBUG] (705) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=99.217µs elapsed_secs=9.9217e-5
08:31:03 [DEBUG] (705) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=153.768µs elapsed_secs=0.000153768
08:31:03 [DEBUG] (660) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:03 [DEBUG] (705) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=51.352µs elapsed_secs=5.1352e-5
08:31:03 [DEBUG] (660) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (706) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.151µs elapsed_secs=4.5151e-5
08:31:03 [DEBUG] (705) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=39.948µs elapsed_secs=3.9948e-5
08:31:03 [DEBUG] (660) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
08:31:03 [DEBUG] (706) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=112.017µs elapsed_secs=0.000112017
08:31:03 [DEBUG] (705) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=211.095µs elapsed_secs=0.000211095
08:31:03 [DEBUG] (691) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.404798ms elapsed_secs=0.007404798
08:31:03 [DEBUG] (691) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=441.016µs elapsed_secs=0.000441016
08:31:03 [DEBUG] (699) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.21659ms elapsed_secs=0.00821659
08:31:03 [DEBUG] (711) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.163µs elapsed_secs=6.9163e-5
08:31:03 [DEBUG] (691) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.634µs elapsed_secs=0.000172634
08:31:03 [DEBUG] (712) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=226.666µs elapsed_secs=0.000226666
08:31:03 [DEBUG] (699) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=188.284µs elapsed_secs=0.000188284
08:31:03 [DEBUG] (699) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.045µs elapsed_secs=0.000204045
08:31:03 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.841533ms elapsed_secs=0.009841533
08:31:03 [DEBUG] (683) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=270.578µs elapsed_secs=0.000270578
08:31:03 [DEBUG] (683) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.935µs elapsed_secs=0.000132935
08:31:03 [DEBUG] (711) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.836436ms elapsed_secs=0.012836436
08:31:03 [DEBUG] (678) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.163113ms elapsed_secs=0.011163113
08:31:03 [DEBUG] (712) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.872559ms elapsed_secs=0.012872559
08:31:03 [DEBUG] (711) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=202.946µs elapsed_secs=0.000202946
08:31:03 [DEBUG] (712) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.102µs elapsed_secs=8.1102e-5
08:31:03 [DEBUG] (711) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=52.809µs elapsed_secs=5.2809e-5
08:31:03 [DEBUG] (712) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=59.935µs elapsed_secs=5.9935e-5
08:31:03 [DEBUG] (711) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=492.293µs elapsed_secs=0.000492293
08:31:03 [DEBUG] (695) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.874414ms elapsed_secs=0.010874414
08:31:03 [DEBUG] (712) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=451.094µs elapsed_secs=0.000451094
08:31:03 [DEBUG] (711) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.925µs elapsed_secs=8.6925e-5
08:31:03 [DEBUG] (703) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.588487ms elapsed_secs=0.010588487
08:31:03 [DEBUG] (712) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.004µs elapsed_secs=8.8004e-5
08:31:03 [DEBUG] (695) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=175.734µs elapsed_secs=0.000175734
08:31:03 [DEBUG] (695) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=201.773µs elapsed_secs=0.000201773
08:31:03 [DEBUG] (703) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=449.871µs elapsed_secs=0.000449871
08:31:03 [DEBUG] (703) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.115µs elapsed_secs=6.2115e-5
08:31:03 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.134724ms elapsed_secs=0.009134724
08:31:03 [DEBUG] (691) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.218359ms elapsed_secs=0.009218359
08:31:03 [DEBUG] (699) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.255282ms elapsed_secs=0.009255282
08:31:03 [DEBUG] (688) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=401.622µs elapsed_secs=0.000401622
08:31:03 [DEBUG] (691) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=234.693µs elapsed_secs=0.000234693
08:31:03 [DEBUG] (699) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=228.309µs elapsed_secs=0.000228309
08:31:03 [DEBUG] (688) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.218µs elapsed_secs=9.8218e-5
08:31:03 [DEBUG] (691) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.436µs elapsed_secs=9.1436e-5
08:31:03 [DEBUG] (699) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.209µs elapsed_secs=5.4209e-5
08:31:03 [DEBUG] (666) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=250.899374ms elapsed_secs=0.250899374
08:31:03 [DEBUG] (713) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.799µs elapsed_secs=7.4799e-5
08:31:03 [DEBUG] (683) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.221598ms elapsed_secs=0.009221598
08:31:03 [DEBUG] (713) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=275.355µs elapsed_secs=0.000275355
08:31:03 [DEBUG] (664) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:03 [DEBUG] (713) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=53.865µs elapsed_secs=5.3865e-5
08:31:03 [DEBUG] (664) menahel::repository::task_repo: Get task by id with transaction: None
08:31:03 [DEBUG] (716) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.193µs elapsed_secs=4.1193e-5
08:31:03 [DEBUG] (712) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.511613ms elapsed_secs=0.009511613
08:31:03 [DEBUG] (711) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.625589ms elapsed_secs=0.009625589
08:31:03 [DEBUG] (695) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.850559ms elapsed_secs=0.009850559
08:31:03 [DEBUG] (703) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.189799ms elapsed_secs=0.010189799
08:31:03 [DEBUG] (712) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=778.889µs elapsed_secs=0.000778889
08:31:03 [DEBUG] (711) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=569.863µs elapsed_secs=0.000569863
08:31:03 [DEBUG] (695) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=507.941µs elapsed_secs=0.000507941
08:31:03 [DEBUG] (711) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=202.792µs elapsed_secs=0.000202792
08:31:03 [DEBUG] (712) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=324.422µs elapsed_secs=0.000324422
08:31:03 [DEBUG] (695) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.037µs elapsed_secs=0.000159037
08:31:03 [DEBUG] (703) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=482.208µs elapsed_secs=0.000482208
08:31:03 [DEBUG] (703) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.579µs elapsed_secs=7.5579e-5
08:31:03 [DEBUG] (688) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.394717ms elapsed_secs=0.010394717
08:31:03 [DEBUG] (691) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.02186ms elapsed_secs=0.01202186
08:31:03 [DEBUG] (716) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.60606ms elapsed_secs=0.01360606
08:31:03 [DEBUG] (716) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.952µs elapsed_secs=8.1952e-5
08:31:03 [DEBUG] (716) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=63.859µs elapsed_secs=6.3859e-5
08:31:03 [DEBUG] (716) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=156.855µs elapsed_secs=0.000156855
08:31:03 [DEBUG] (716) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.46µs elapsed_secs=7.546e-5
08:31:03 [DEBUG] (699) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.615999ms elapsed_secs=0.010615999
08:31:03 [DEBUG] (699) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=164.877µs elapsed_secs=0.000164877
08:31:03 [DEBUG] (699) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.611µs elapsed_secs=7.2611e-5
08:31:03 [DEBUG] (695) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.055994ms elapsed_secs=0.008055994
08:31:03 [DEBUG] (711) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.747109ms elapsed_secs=0.008747109
08:31:03 [DEBUG] (712) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.84425ms elapsed_secs=0.00884425
08:31:03 [DEBUG] (703) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.892602ms elapsed_secs=0.008892602
08:31:03 [DEBUG] (711) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=270.849µs elapsed_secs=0.000270849
08:31:03 [DEBUG] (703) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=192.365µs elapsed_secs=0.000192365
08:31:03 [DEBUG] (712) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=572.174µs elapsed_secs=0.000572174
08:31:03 [DEBUG] (711) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=240.377µs elapsed_secs=0.000240377
08:31:03 [DEBUG] (703) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.762µs elapsed_secs=7.9762e-5
08:31:03 [DEBUG] (712) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.086µs elapsed_secs=0.000124086
08:31:03 [DEBUG] (699) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.36484ms elapsed_secs=0.00836484
08:31:03 [DEBUG] (716) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.45369ms elapsed_secs=0.00845369
08:31:03 [DEBUG] (716) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=306.224µs elapsed_secs=0.000306224
08:31:03 [DEBUG] (716) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=186.257µs elapsed_secs=0.000186257
08:31:03 [DEBUG] (711) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.841207ms elapsed_secs=0.004841207
08:31:03 [DEBUG] (703) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.051866ms elapsed_secs=0.005051866
08:31:03 [DEBUG] (711) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=158.66µs elapsed_secs=0.00015866
08:31:03 [DEBUG] (711) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.573µs elapsed_secs=8.1573e-5
08:31:03 [DEBUG] (703) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=149.075µs elapsed_secs=0.000149075
08:31:03 [DEBUG] (703) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.342µs elapsed_secs=5.5342e-5
08:31:03 [DEBUG] (712) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.494213ms elapsed_secs=0.008494213
08:31:03 [DEBUG] (712) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=473.011µs elapsed_secs=0.000473011
08:31:03 [DEBUG] (712) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.992µs elapsed_secs=6.2992e-5
08:31:04 [DEBUG] (716) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.215997ms elapsed_secs=0.012215997
08:31:04 [DEBUG] (716) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=188.568µs elapsed_secs=0.000188568
08:31:04 [DEBUG] (716) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.345µs elapsed_secs=6.5345e-5
08:31:04 [DEBUG] (703) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.006327ms elapsed_secs=0.012006327
08:31:04 [DEBUG] (711) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.612171ms elapsed_secs=0.012612171
08:31:04 [DEBUG] (711) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=151.896µs elapsed_secs=0.000151896
08:31:04 [DEBUG] (711) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.294µs elapsed_secs=6.9294e-5
08:31:04 [DEBUG] (712) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=14.076754ms elapsed_secs=0.014076754
08:31:04 [DEBUG] (712) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=168.08µs elapsed_secs=0.00016808
08:31:04 [DEBUG] (712) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.076µs elapsed_secs=8.9076e-5
08:31:04 [DEBUG] (716) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.445519ms elapsed_secs=0.012445519
08:31:04 [DEBUG] (716) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=223.122µs elapsed_secs=0.000223122
08:31:04 [DEBUG] (716) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.681µs elapsed_secs=6.4681e-5
08:31:04 [DEBUG] (712) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.383345ms elapsed_secs=0.008383345
08:31:04 [DEBUG] (711) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.547684ms elapsed_secs=0.008547684
08:31:04 [DEBUG] (716) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.346835ms elapsed_secs=0.007346835
08:31:04 [DEBUG] (716) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=177.575µs elapsed_secs=0.000177575
08:31:04 [DEBUG] (716) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.74µs elapsed_secs=7.374e-5
08:31:04 [DEBUG] (670) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=234.558119ms elapsed_secs=0.234558119
08:31:04 [DEBUG] (717) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=50.276µs elapsed_secs=5.0276e-5
08:31:04 [DEBUG] (717) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=208.248µs elapsed_secs=0.000208248
08:31:04 [DEBUG] (668) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:04 [DEBUG] (717) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=90.43µs elapsed_secs=9.043e-5
08:31:04 [DEBUG] (668) menahel::repository::task_repo: Get task by id with transaction: None
08:31:04 [DEBUG] (720) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.209µs elapsed_secs=3.8209e-5
08:31:04 [DEBUG] (720) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.272805ms elapsed_secs=0.014272805
08:31:04 [DEBUG] (716) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.979852ms elapsed_secs=0.011979852
08:31:04 [DEBUG] (720) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=570.628µs elapsed_secs=0.000570628
08:31:04 [DEBUG] (720) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=216.134µs elapsed_secs=0.000216134
08:31:04 [DEBUG] (720) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=368.405µs elapsed_secs=0.000368405
08:31:04 [DEBUG] (720) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=208.147µs elapsed_secs=0.000208147
08:31:04 [DEBUG] (720) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.030439ms elapsed_secs=0.007030439
08:31:04 [DEBUG] (720) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=210.701µs elapsed_secs=0.000210701
08:31:04 [DEBUG] (720) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.958µs elapsed_secs=6.4958e-5
08:31:04 [DEBUG] (674) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=235.087932ms elapsed_secs=0.235087932
08:31:04 [DEBUG] (721) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.583µs elapsed_secs=7.0583e-5
08:31:04 [DEBUG] (721) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=312.193µs elapsed_secs=0.000312193
08:31:04 [DEBUG] (672) menahel::repository::user_repo: Get user by id with transaction: None
08:31:04 [DEBUG] (724) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=151.113µs elapsed_secs=0.000151113
08:31:04 [DEBUG] (724) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.115779ms elapsed_secs=0.009115779
08:31:04 [DEBUG] (724) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=120.766µs elapsed_secs=0.000120766
08:31:04 [DEBUG] (724) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=53.061µs elapsed_secs=5.3061e-5
08:31:04 [DEBUG] (724) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=211.885µs elapsed_secs=0.000211885
08:31:04 [DEBUG] (724) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=92.427µs elapsed_secs=9.2427e-5
08:31:04 [DEBUG] (720) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.282601ms elapsed_secs=0.008282601
08:31:04 [DEBUG] (720) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=135.331µs elapsed_secs=0.000135331
08:31:04 [DEBUG] (720) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.932µs elapsed_secs=6.4932e-5
08:31:04 [DEBUG] (724) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.323203ms elapsed_secs=0.010323203
08:31:04 [DEBUG] (724) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=167.761µs elapsed_secs=0.000167761
08:31:04 [DEBUG] (724) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.654µs elapsed_secs=8.4654e-5
08:31:04 [DEBUG] (720) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.281801ms elapsed_secs=0.008281801
08:31:04 [DEBUG] (720) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=225.318µs elapsed_secs=0.000225318
08:31:04 [DEBUG] (720) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.716µs elapsed_secs=0.000103716
08:31:04 [DEBUG] (678) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=230.898709ms elapsed_secs=0.230898709
08:31:04 [DEBUG] (725) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.876µs elapsed_secs=4.0876e-5
08:31:04 [DEBUG] (725) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=143.717µs elapsed_secs=0.000143717
08:31:04 [DEBUG] (676) menahel::repository::user_repo: Get user by id with transaction: None
08:31:04 [DEBUG] (683) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=217.251872ms elapsed_secs=0.217251872
08:31:04 [DEBUG] (726) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.705µs elapsed_secs=4.3705e-5
08:31:04 [DEBUG] (729) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.915µs elapsed_secs=3.7915e-5
08:31:04 [DEBUG] (724) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.060412ms elapsed_secs=0.007060412
08:31:04 [DEBUG] (724) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=353.08µs elapsed_secs=0.00035308
08:31:04 [DEBUG] (724) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.346µs elapsed_secs=0.000176346
08:31:04 [DEBUG] (726) sqlx::query: summary="DELETE FROM user_assign WHERE …" db.statement="\n\n\n                DELETE FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=8.249339ms elapsed_secs=0.008249339
08:31:04 [DEBUG] (732) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=86.584µs elapsed_secs=8.6584e-5
08:31:04 [DEBUG] (688) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=214.57561ms elapsed_secs=0.21457561
08:31:04 [DEBUG] (729) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.075432ms elapsed_secs=0.011075432
08:31:04 [DEBUG] (720) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.61302ms elapsed_secs=0.01061302
08:31:04 [DEBUG] (729) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=158.246µs elapsed_secs=0.000158246
08:31:04 [DEBUG] (733) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.312µs elapsed_secs=6.0312e-5
08:31:04 [DEBUG] (729) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.908µs elapsed_secs=6.1908e-5
08:31:04 [DEBUG] (720) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=259.018µs elapsed_secs=0.000259018
08:31:04 [DEBUG] (733) sqlx::query: summary="DELETE FROM user_assign WHERE …" db.statement="\n\n\n                DELETE FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=163.483µs elapsed_secs=0.000163483
08:31:04 [DEBUG] (720) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.651µs elapsed_secs=6.7651e-5
08:31:04 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=594.087µs elapsed_secs=0.000594087
08:31:04 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.968µs elapsed_secs=6.4968e-5
08:31:04 [DEBUG] (736) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.286µs elapsed_secs=7.2286e-5
08:31:04 [DEBUG] (691) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=218.283685ms elapsed_secs=0.218283685
08:31:04 [DEBUG] (737) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.899µs elapsed_secs=4.3899e-5
08:31:04 [DEBUG] (737) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n            \n" rows_affected=0 rows_returned=4 elapsed=177.412µs elapsed_secs=0.000177412
08:31:04 [DEBUG] (740) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=183.366µs elapsed_secs=0.000183366
08:31:04 [DEBUG] (724) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.503197ms elapsed_secs=0.007503197
08:31:04 [DEBUG] (724) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=189.139µs elapsed_secs=0.000189139
08:31:04 [DEBUG] (724) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=820.589µs elapsed_secs=0.000820589
08:31:04 [DEBUG] (732) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.451725ms elapsed_secs=0.012451725
08:31:04 [DEBUG] (732) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=709.881µs elapsed_secs=0.000709881
08:31:04 [DEBUG] (732) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=223.405µs elapsed_secs=0.000223405
08:31:04 [DEBUG] (732) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=448.817µs elapsed_secs=0.000448817
08:31:04 [DEBUG] (732) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.47µs elapsed_secs=7.647e-5
08:31:04 [DEBUG] (736) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.025179ms elapsed_secs=0.014025179
08:31:04 [DEBUG] (736) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=102.674µs elapsed_secs=0.000102674
08:31:04 [DEBUG] (736) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.777µs elapsed_secs=6.2777e-5
08:31:04 [DEBUG] (736) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=445.925µs elapsed_secs=0.000445925
08:31:04 [DEBUG] (736) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.582µs elapsed_secs=7.3582e-5
08:31:04 [DEBUG] (740) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.271675ms elapsed_secs=0.014271675
08:31:04 [DEBUG] (740) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=81.127µs elapsed_secs=8.1127e-5
08:31:04 [DEBUG] (740) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=60.455µs elapsed_secs=6.0455e-5
08:31:04 [DEBUG] (740) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=165.846µs elapsed_secs=0.000165846
08:31:04 [DEBUG] (740) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.355µs elapsed_secs=8.0355e-5
08:31:04 [DEBUG] (720) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.636968ms elapsed_secs=0.006636968
08:31:04 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.925131ms elapsed_secs=0.006925131
08:31:04 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=708.229µs elapsed_secs=0.000708229
08:31:04 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.787µs elapsed_secs=0.000105787
08:31:04 [DEBUG] (695) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=233.044121ms elapsed_secs=0.233044121
08:31:04 [DEBUG] (724) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.781909ms elapsed_secs=0.010781909
08:31:04 [DEBUG] (741) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.435µs elapsed_secs=7.1435e-5
08:31:04 [DEBUG] (724) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=273.687µs elapsed_secs=0.000273687
08:31:04 [DEBUG] (724) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.262µs elapsed_secs=5.5262e-5
08:31:04 [DEBUG] (741) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=130.119µs elapsed_secs=0.000130119
08:31:04 [DEBUG] (732) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.719958ms elapsed_secs=0.009719958
08:31:04 [DEBUG] (744) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.091µs elapsed_secs=8.2091e-5
08:31:04 [DEBUG] (732) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=462.201µs elapsed_secs=0.000462201
08:31:04 [DEBUG] (732) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.444µs elapsed_secs=7.1444e-5
08:31:04 [DEBUG] (736) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.939028ms elapsed_secs=0.009939028
08:31:04 [DEBUG] (736) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=350.838µs elapsed_secs=0.000350838
08:31:04 [DEBUG] (736) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.015µs elapsed_secs=0.000127015
08:31:04 [DEBUG] (740) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.914075ms elapsed_secs=0.009914075
08:31:04 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.093056ms elapsed_secs=0.010093056
08:31:04 [DEBUG] (740) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=303.409µs elapsed_secs=0.000303409
08:31:04 [DEBUG] (740) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.309µs elapsed_secs=8.1309e-5
08:31:04 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=347.446µs elapsed_secs=0.000347446
08:31:04 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.31µs elapsed_secs=9.031e-5
08:31:04 [DEBUG] (699) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=241.216828ms elapsed_secs=0.241216828
08:31:04 [DEBUG] (745) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.399µs elapsed_secs=4.0399e-5
08:31:04 [DEBUG] (745) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=157.379µs elapsed_secs=0.000157379
08:31:04 [DEBUG] (748) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=52.525µs elapsed_secs=5.2525e-5
08:31:04 [DEBUG] (744) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.540506ms elapsed_secs=0.014540506
08:31:04 [DEBUG] (744) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=124.332µs elapsed_secs=0.000124332
08:31:04 [DEBUG] (744) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.858µs elapsed_secs=7.8858e-5
08:31:04 [DEBUG] (744) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=200.962µs elapsed_secs=0.000200962
08:31:04 [DEBUG] (744) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.698µs elapsed_secs=9.0698e-5
08:31:04 [DEBUG] (724) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.092609ms elapsed_secs=0.007092609
08:31:04 [DEBUG] (732) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.924368ms elapsed_secs=0.009924368
08:31:04 [DEBUG] (703) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=212.586782ms elapsed_secs=0.212586782
08:31:04 [DEBUG] (732) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=588.846µs elapsed_secs=0.000588846
08:31:04 [DEBUG] (732) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.283µs elapsed_secs=0.000119283
08:31:04 [DEBUG] (749) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=130.065µs elapsed_secs=0.000130065
08:31:04 [DEBUG] (749) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=209.813µs elapsed_secs=0.000209813
08:31:04 [DEBUG] (736) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.193739ms elapsed_secs=0.011193739
08:31:04 [DEBUG] (748) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.706863ms elapsed_secs=0.013706863
08:31:04 [DEBUG] (748) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=120.561µs elapsed_secs=0.000120561
08:31:04 [DEBUG] (736) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=273.799µs elapsed_secs=0.000273799
08:31:04 [DEBUG] (752) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.23µs elapsed_secs=4.223e-5
08:31:04 [DEBUG] (748) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=139.353µs elapsed_secs=0.000139353
08:31:04 [DEBUG] (736) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=85.952µs elapsed_secs=8.5952e-5
08:31:04 [DEBUG] (748) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=196.392µs elapsed_secs=0.000196392
08:31:04 [DEBUG] (748) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=116.041µs elapsed_secs=0.000116041
08:31:04 [DEBUG] (740) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.253451ms elapsed_secs=0.011253451
08:31:04 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.271633ms elapsed_secs=0.007271633
08:31:04 [DEBUG] (740) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=361.983µs elapsed_secs=0.000361983
08:31:04 [DEBUG] (740) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.354µs elapsed_secs=7.9354e-5
08:31:04 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=128.91µs elapsed_secs=0.00012891
08:31:04 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.668µs elapsed_secs=6.9668e-5
08:31:04 [DEBUG] (744) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.298674ms elapsed_secs=0.007298674
08:31:04 [DEBUG] (744) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=408.375µs elapsed_secs=0.000408375
08:31:04 [DEBUG] (744) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=109.854µs elapsed_secs=0.000109854
08:31:04 [DEBUG] (752) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.109144ms elapsed_secs=0.013109144
08:31:04 [DEBUG] (752) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=201.677µs elapsed_secs=0.000201677
08:31:04 [DEBUG] (752) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=245.421µs elapsed_secs=0.000245421
08:31:04 [DEBUG] (752) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=448.669µs elapsed_secs=0.000448669
08:31:04 [DEBUG] (752) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=267.087µs elapsed_secs=0.000267087
08:31:04 [DEBUG] (736) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.831625ms elapsed_secs=0.007831625
08:31:04 [DEBUG] (736) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=256.542µs elapsed_secs=0.000256542
08:31:04 [DEBUG] (732) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.196964ms elapsed_secs=0.009196964
08:31:04 [DEBUG] (736) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.034µs elapsed_secs=7.9034e-5
08:31:04 [DEBUG] (732) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=177.525µs elapsed_secs=0.000177525
08:31:04 [DEBUG] (732) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.984µs elapsed_secs=0.000113984
08:31:04 [DEBUG] (748) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.374487ms elapsed_secs=0.010374487
08:31:04 [DEBUG] (748) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=276.158µs elapsed_secs=0.000276158
08:31:04 [DEBUG] (748) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.871µs elapsed_secs=0.000124871
08:31:04 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.01268ms elapsed_secs=0.01201268
08:31:04 [DEBUG] (740) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.446254ms elapsed_secs=0.012446254
08:31:04 [DEBUG] (740) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=460.315µs elapsed_secs=0.000460315
08:31:04 [DEBUG] (729) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=468.33µs elapsed_secs=0.00046833
08:31:04 [DEBUG] (740) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.106µs elapsed_secs=9.6106e-5
08:31:04 [DEBUG] (729) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.658µs elapsed_secs=7.4658e-5
08:31:04 [DEBUG] (744) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.046593ms elapsed_secs=0.012046593
08:31:04 [DEBUG] (712) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=225.923301ms elapsed_secs=0.225923301
08:31:04 [DEBUG] (744) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=366.853µs elapsed_secs=0.000366853
08:31:04 [DEBUG] (753) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.248µs elapsed_secs=4.6248e-5
08:31:04 [DEBUG] (744) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=179.495µs elapsed_secs=0.000179495
08:31:04 [DEBUG] (753) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=2 elapsed=193.686µs elapsed_secs=0.000193686
08:31:04 [DEBUG] (756) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.568µs elapsed_secs=4.7568e-5
08:31:04 [DEBUG] (736) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.288706ms elapsed_secs=0.007288706
08:31:04 [DEBUG] (752) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.758284ms elapsed_secs=0.007758284
08:31:04 [DEBUG] (736) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=212.049µs elapsed_secs=0.000212049
08:31:04 [DEBUG] (752) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=397.212µs elapsed_secs=0.000397212
08:31:04 [DEBUG] (736) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.577µs elapsed_secs=0.000132577
08:31:04 [DEBUG] (752) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.01µs elapsed_secs=0.00011401
08:31:04 [DEBUG] (732) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.980046ms elapsed_secs=0.011980046
08:31:04 [DEBUG] (732) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=589.627µs elapsed_secs=0.000589627
08:31:04 [DEBUG] (711) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=240.215812ms elapsed_secs=0.240215812
08:31:04 [DEBUG] (732) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.695µs elapsed_secs=0.000133695
08:31:04 [DEBUG] (757) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.795µs elapsed_secs=4.4795e-5
08:31:04 [DEBUG] (756) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.004728ms elapsed_secs=0.012004728
08:31:04 [DEBUG] (756) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=252.911µs elapsed_secs=0.000252911
08:31:04 [DEBUG] (757) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=179.475µs elapsed_secs=0.000179475
08:31:04 [DEBUG] (756) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=72.123µs elapsed_secs=7.2123e-5
08:31:04 [DEBUG] (748) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.464825ms elapsed_secs=0.010464825
08:31:04 [DEBUG] (756) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=352.081µs elapsed_secs=0.000352081
08:31:04 [DEBUG] (748) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=476.991µs elapsed_secs=0.000476991
08:31:04 [DEBUG] (756) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=147.569µs elapsed_secs=0.000147569
08:31:04 [DEBUG] (760) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=72.316µs elapsed_secs=7.2316e-5
08:31:04 [DEBUG] (748) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.453µs elapsed_secs=0.000101453
08:31:04 [DEBUG] (740) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.601889ms elapsed_secs=0.009601889
08:31:04 [DEBUG] (729) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.088474ms elapsed_secs=0.010088474
08:31:04 [DEBUG] (740) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=596.953µs elapsed_secs=0.000596953
08:31:04 [DEBUG] (740) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.531µs elapsed_secs=0.000118531
08:31:04 [DEBUG] (744) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.152165ms elapsed_secs=0.009152165
08:31:04 [DEBUG] (744) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=346.303µs elapsed_secs=0.000346303
08:31:04 [DEBUG] (744) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.068µs elapsed_secs=0.000125068
08:31:04 [DEBUG] (736) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.193628ms elapsed_secs=0.009193628
08:31:04 [DEBUG] (760) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.027853ms elapsed_secs=0.011027853
08:31:04 [DEBUG] (760) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=468.543µs elapsed_secs=0.000468543
08:31:04 [DEBUG] (760) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=180.878µs elapsed_secs=0.000180878
08:31:04 [DEBUG] (752) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.474876ms elapsed_secs=0.012474876
08:31:04 [DEBUG] (760) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=250.113µs elapsed_secs=0.000250113
08:31:04 [DEBUG] (716) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=225.447416ms elapsed_secs=0.225447416
08:31:04 [DEBUG] (760) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.322µs elapsed_secs=0.000182322
08:31:04 [DEBUG] (752) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=840.217µs elapsed_secs=0.000840217
08:31:04 [DEBUG] (752) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.923µs elapsed_secs=0.000135923
08:31:04 [DEBUG] (761) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.069µs elapsed_secs=4.7069e-5
08:31:04 [DEBUG] (761) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE task_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=195.779µs elapsed_secs=0.000195779
08:31:04 [DEBUG] (732) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.24892ms elapsed_secs=0.01124892
08:31:04 [DEBUG] (764) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.186µs elapsed_secs=4.2186e-5
08:31:04 [DEBUG] (756) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.640283ms elapsed_secs=0.010640283
08:31:04 [DEBUG] (748) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.473175ms elapsed_secs=0.011473175
08:31:04 [DEBUG] (756) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=324.339µs elapsed_secs=0.000324339
08:31:04 [DEBUG] (756) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=885.683µs elapsed_secs=0.000885683
08:31:04 [DEBUG] (748) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.603475ms elapsed_secs=0.001603475
08:31:04 [DEBUG] (748) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=257.15µs elapsed_secs=0.00025715
08:31:04 [DEBUG] (740) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.541792ms elapsed_secs=0.012541792
08:31:04 [DEBUG] (744) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.824128ms elapsed_secs=0.010824128
08:31:04 [DEBUG] (744) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=172.993µs elapsed_secs=0.000172993
08:31:04 [DEBUG] (744) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.198µs elapsed_secs=9.5198e-5
08:31:04 [DEBUG] (764) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.024315ms elapsed_secs=0.014024315
08:31:04 [DEBUG] (764) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=102.375µs elapsed_secs=0.000102375
08:31:04 [DEBUG] (764) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.176µs elapsed_secs=6.4176e-5
08:31:04 [DEBUG] (764) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=202.862µs elapsed_secs=0.000202862
08:31:04 [DEBUG] (764) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.903µs elapsed_secs=9.9903e-5
08:31:04 [DEBUG] (760) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.994013ms elapsed_secs=0.009994013
08:31:04 [DEBUG] (760) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=159.889µs elapsed_secs=0.000159889
08:31:04 [DEBUG] (752) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.847456ms elapsed_secs=0.006847456
08:31:04 [DEBUG] (760) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.649µs elapsed_secs=0.000120649
08:31:04 [DEBUG] (752) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=189.013µs elapsed_secs=0.000189013
08:31:04 [DEBUG] (752) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=97.984µs elapsed_secs=9.7984e-5
08:31:04 [DEBUG] (756) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.013474ms elapsed_secs=0.010013474
08:31:04 [DEBUG] (748) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.450445ms elapsed_secs=0.010450445
08:31:04 [DEBUG] (756) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=184.897µs elapsed_secs=0.000184897
08:31:04 [DEBUG] (756) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.99µs elapsed_secs=9.699e-5
08:31:04 [DEBUG] (748) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=163.209µs elapsed_secs=0.000163209
08:31:04 [DEBUG] (748) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.958µs elapsed_secs=7.8958e-5
08:31:04 [DEBUG] (744) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.656811ms elapsed_secs=0.010656811
08:31:04 [DEBUG] (764) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.705986ms elapsed_secs=0.012705986
08:31:04 [DEBUG] (764) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=193.468µs elapsed_secs=0.000193468
08:31:04 [DEBUG] (764) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.444µs elapsed_secs=0.000135444
08:31:04 [DEBUG] (752) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.055104ms elapsed_secs=0.010055104
08:31:04 [DEBUG] (760) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.234767ms elapsed_secs=0.010234767
08:31:04 [DEBUG] (752) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=211.235µs elapsed_secs=0.000211235
08:31:04 [DEBUG] (760) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=138.922µs elapsed_secs=0.000138922
08:31:04 [DEBUG] (752) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.539µs elapsed_secs=5.8539e-5
08:31:04 [DEBUG] (760) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=56.603µs elapsed_secs=5.6603e-5
08:31:04 [DEBUG] (756) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.065476ms elapsed_secs=0.007065476
08:31:04 [DEBUG] (748) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.411187ms elapsed_secs=0.007411187
08:31:04 [DEBUG] (756) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=267.929µs elapsed_secs=0.000267929
08:31:04 [DEBUG] (756) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.468µs elapsed_secs=9.9468e-5
08:31:04 [DEBUG] (764) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.262928ms elapsed_secs=0.010262928
08:31:04 [DEBUG] (764) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=289.215µs elapsed_secs=0.000289215
08:31:04 [DEBUG] (764) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.347µs elapsed_secs=8.1347e-5
08:31:04 [DEBUG] (752) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.84856ms elapsed_secs=0.00884856
08:31:04 [DEBUG] (760) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.399913ms elapsed_secs=0.009399913
08:31:04 [DEBUG] (760) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=777.612µs elapsed_secs=0.000777612
08:31:04 [DEBUG] (760) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.851µs elapsed_secs=8.0851e-5
08:31:04 [DEBUG] (756) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.862169ms elapsed_secs=0.010862169
08:31:04 [DEBUG] (756) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=184.746µs elapsed_secs=0.000184746
08:31:04 [DEBUG] (756) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.026µs elapsed_secs=9.4026e-5
08:31:04 [DEBUG] (760) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.604222ms elapsed_secs=0.009604222
08:31:04 [DEBUG] (764) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.602828ms elapsed_secs=0.009602828
08:31:04 [DEBUG] (760) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=189.381µs elapsed_secs=0.000189381
08:31:04 [DEBUG] (760) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.843µs elapsed_secs=0.000133843
08:31:04 [DEBUG] (764) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=205.653µs elapsed_secs=0.000205653
08:31:04 [DEBUG] (764) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.824µs elapsed_secs=6.4824e-5
08:31:04 [DEBUG] (756) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.048699ms elapsed_secs=0.007048699
08:31:04 [DEBUG] (760) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.068703ms elapsed_secs=0.008068703
08:31:04 [DEBUG] (764) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.789559ms elapsed_secs=0.008789559
08:31:04 [DEBUG] (764) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=237.671µs elapsed_secs=0.000237671
08:31:04 [DEBUG] (764) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.448µs elapsed_secs=8.7448e-5
08:31:04 [DEBUG] (720) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=227.056383ms elapsed_secs=0.227056383
08:31:04 [DEBUG] (765) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.664µs elapsed_secs=8.8664e-5
08:31:04 [DEBUG] (765) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=161.64µs elapsed_secs=0.00016164
08:31:04 [DEBUG] (768) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=89.393µs elapsed_secs=8.9393e-5
08:31:04 [DEBUG] (764) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.65617ms elapsed_secs=0.00765617
08:31:04 [DEBUG] (768) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.811652ms elapsed_secs=0.009811652
08:31:04 [DEBUG] (768) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=125.462µs elapsed_secs=0.000125462
08:31:04 [DEBUG] (768) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=100.754µs elapsed_secs=0.000100754
08:31:04 [DEBUG] (768) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=882.506µs elapsed_secs=0.000882506
08:31:04 [DEBUG] (768) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=308.936µs elapsed_secs=0.000308936
08:31:04 [DEBUG] (768) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.922041ms elapsed_secs=0.008922041
08:31:04 [DEBUG] (724) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=234.403734ms elapsed_secs=0.234403734
08:31:04 [DEBUG] (768) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=247.336µs elapsed_secs=0.000247336
08:31:04 [DEBUG] (768) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.565µs elapsed_secs=8.4565e-5
08:31:04 [DEBUG] (769) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.733µs elapsed_secs=3.3733e-5
08:31:04 [DEBUG] (769) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=134.851µs elapsed_secs=0.000134851
08:31:04 [DEBUG] (772) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.421µs elapsed_secs=4.2421e-5
08:31:04 [DEBUG] (772) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.300568ms elapsed_secs=0.008300568
08:31:04 [DEBUG] (772) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=93.82µs elapsed_secs=9.382e-5
08:31:04 [DEBUG] (772) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=114.476µs elapsed_secs=0.000114476
08:31:04 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=605.86µs elapsed_secs=0.00060586
08:31:04 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=232.485µs elapsed_secs=0.000232485
08:31:04 [DEBUG] (768) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.940933ms elapsed_secs=0.009940933
08:31:04 [DEBUG] (768) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=379.878µs elapsed_secs=0.000379878
08:31:04 [DEBUG] (768) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.888µs elapsed_secs=7.4888e-5
08:31:04 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.173663ms elapsed_secs=0.008173663
08:31:04 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=372.363µs elapsed_secs=0.000372363
08:31:04 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.152µs elapsed_secs=7.6152e-5
08:31:04 [DEBUG] (768) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.52051ms elapsed_secs=0.00952051
08:31:04 [DEBUG] (768) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=263.737µs elapsed_secs=0.000263737
08:31:04 [DEBUG] (768) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.714µs elapsed_secs=0.000104714
08:31:04 [DEBUG] (729) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=224.10531ms elapsed_secs=0.22410531
08:31:04 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.632663ms elapsed_secs=0.007632663
08:31:04 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=350.368µs elapsed_secs=0.000350368
08:31:04 [DEBUG] (773) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=36.59µs elapsed_secs=3.659e-5
08:31:04 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.16µs elapsed_secs=8.916e-5
08:31:04 [DEBUG] (773) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=2 elapsed=166.38µs elapsed_secs=0.00016638
08:31:04 [DEBUG] (776) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.649µs elapsed_secs=7.5649e-5
08:31:04 [DEBUG] (736) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=220.677144ms elapsed_secs=0.220677144
08:31:04 [DEBUG] (777) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.472µs elapsed_secs=3.9472e-5
08:31:04 [DEBUG] (777) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1 AND task_id = $2\n            \n" rows_affected=0 rows_returned=0 elapsed=166.221µs elapsed_secs=0.000166221
08:31:04 [DEBUG] (780) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=93.859µs elapsed_secs=9.3859e-5
08:31:04 [DEBUG] (732) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=217.054141ms elapsed_secs=0.217054141
08:31:04 [DEBUG] (781) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=125.164µs elapsed_secs=0.000125164
08:31:04 [DEBUG] (781) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1 AND task_id = $2\n            \n" rows_affected=0 rows_returned=1 elapsed=283.14µs elapsed_secs=0.00028314
08:31:04 [DEBUG] (768) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.551731ms elapsed_secs=0.011551731
08:31:04 [DEBUG] (768) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=332.388µs elapsed_secs=0.000332388
08:31:04 [DEBUG] (768) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.356µs elapsed_secs=0.000153356
08:31:04 [DEBUG] (776) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.91362ms elapsed_secs=0.01191362
08:31:04 [DEBUG] (784) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=114.241µs elapsed_secs=0.000114241
08:31:04 [DEBUG] (776) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=186.561µs elapsed_secs=0.000186561
08:31:04 [DEBUG] (776) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=195.51µs elapsed_secs=0.00019551
08:31:04 [DEBUG] (776) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.295414ms elapsed_secs=0.001295414
08:31:04 [DEBUG] (776) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=135.026µs elapsed_secs=0.000135026
08:31:04 [DEBUG] (780) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.008249ms elapsed_secs=0.015008249
08:31:04 [DEBUG] (780) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=91.224µs elapsed_secs=9.1224e-5
08:31:04 [DEBUG] (780) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=57.462µs elapsed_secs=5.7462e-5
08:31:04 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.207817ms elapsed_secs=0.010207817
08:31:04 [DEBUG] (780) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=167.529µs elapsed_secs=0.000167529
08:31:04 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=175.74µs elapsed_secs=0.00017574
08:31:04 [DEBUG] (780) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=439.482µs elapsed_secs=0.000439482
08:31:04 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.947µs elapsed_secs=7.1947e-5
08:31:04 [DEBUG] (740) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=223.607455ms elapsed_secs=0.223607455
08:31:04 [DEBUG] (784) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.701173ms elapsed_secs=0.011701173
08:31:04 [DEBUG] (784) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=207.381µs elapsed_secs=0.000207381
08:31:04 [DEBUG] (784) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.209µs elapsed_secs=7.6209e-5
08:31:04 [DEBUG] (785) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=139.084µs elapsed_secs=0.000139084
08:31:04 [DEBUG] (784) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=183.82µs elapsed_secs=0.00018382
08:31:04 [DEBUG] (785) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n                SELECT id, user_id, task_id\n                FROM user_assign\n                WHERE user_id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=144.84µs elapsed_secs=0.00014484
08:31:04 [DEBUG] (784) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=362.083µs elapsed_secs=0.000362083
08:31:04 [DEBUG] (788) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=149.406µs elapsed_secs=0.000149406
08:31:04 [DEBUG] (776) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.459178ms elapsed_secs=0.009459178
08:31:04 [DEBUG] (768) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.683567ms elapsed_secs=0.011683567
08:31:04 [DEBUG] (776) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=254µs elapsed_secs=0.000254
08:31:04 [DEBUG] (776) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.042µs elapsed_secs=9.4042e-5
08:31:04 [DEBUG] (744) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=213.249531ms elapsed_secs=0.213249531
08:31:04 [DEBUG] (789) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.934µs elapsed_secs=4.1934e-5
08:31:04 [DEBUG] (788) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.161472ms elapsed_secs=0.010161472
08:31:04 [DEBUG] (789) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE user_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=410.594µs elapsed_secs=0.000410594
08:31:04 [DEBUG] (788) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.012µs elapsed_secs=7.7012e-5
08:31:04 [DEBUG] (788) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=113.241µs elapsed_secs=0.000113241
08:31:04 [DEBUG] (788) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=714.358µs elapsed_secs=0.000714358
08:31:04 [DEBUG] (780) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.862596ms elapsed_secs=0.008862596
08:31:04 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.226793ms elapsed_secs=0.009226793
08:31:04 [DEBUG] (788) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=108.74µs elapsed_secs=0.00010874
08:31:04 [DEBUG] (792) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=80.648µs elapsed_secs=8.0648e-5
08:31:04 [DEBUG] (780) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=244.071µs elapsed_secs=0.000244071
08:31:04 [DEBUG] (772) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=616.428µs elapsed_secs=0.000616428
08:31:04 [DEBUG] (780) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=265.806µs elapsed_secs=0.000265806
08:31:04 [DEBUG] (772) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=487.312µs elapsed_secs=0.000487312
08:31:04 [DEBUG] (784) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.336136ms elapsed_secs=0.010336136
08:31:04 [DEBUG] (784) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=565.263µs elapsed_secs=0.000565263
08:31:04 [DEBUG] (784) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.905µs elapsed_secs=9.5905e-5
08:31:04 [DEBUG] (776) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.541918ms elapsed_secs=0.007541918
08:31:04 [DEBUG] (748) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=217.781842ms elapsed_secs=0.217781842
08:31:04 [DEBUG] (792) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.798642ms elapsed_secs=0.012798642
08:31:04 [DEBUG] (792) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=99.406µs elapsed_secs=9.9406e-5
08:31:04 [DEBUG] (776) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=835.288µs elapsed_secs=0.000835288
08:31:04 [DEBUG] (792) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=99.298µs elapsed_secs=9.9298e-5
08:31:04 [DEBUG] (793) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.29µs elapsed_secs=7.129e-5
08:31:04 [DEBUG] (776) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.914µs elapsed_secs=8.0914e-5
08:31:04 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=210.795µs elapsed_secs=0.000210795
08:31:04 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=442.581µs elapsed_secs=0.000442581
08:31:04 [DEBUG] (793) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE user_id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=672.221µs elapsed_secs=0.000672221
08:31:04 [DEBUG] (796) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=178.069µs elapsed_secs=0.000178069
08:31:04 [DEBUG] (788) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.329351ms elapsed_secs=0.011329351
08:31:04 [DEBUG] (784) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.511374ms elapsed_secs=0.009511374
08:31:04 [DEBUG] (772) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.601145ms elapsed_secs=0.009601145
08:31:04 [DEBUG] (780) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.834538ms elapsed_secs=0.011834538
08:31:04 [DEBUG] (784) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=655.712µs elapsed_secs=0.000655712
08:31:04 [DEBUG] (788) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=704.084µs elapsed_secs=0.000704084
08:31:04 [DEBUG] (780) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=403.574µs elapsed_secs=0.000403574
08:31:04 [DEBUG] (784) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.364µs elapsed_secs=6.5364e-5
08:31:04 [DEBUG] (788) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.8µs elapsed_secs=6.88e-5
08:31:04 [DEBUG] (780) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=462.966µs elapsed_secs=0.000462966
08:31:04 [DEBUG] (796) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.636633ms elapsed_secs=0.012636633
08:31:04 [DEBUG] (796) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=189.205µs elapsed_secs=0.000189205
08:31:04 [DEBUG] (796) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=149.931µs elapsed_secs=0.000149931
08:31:04 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=672.389µs elapsed_secs=0.000672389
08:31:04 [DEBUG] (776) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.764996ms elapsed_secs=0.008764996
08:31:04 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=272.308µs elapsed_secs=0.000272308
08:31:04 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.954039ms elapsed_secs=0.008954039
08:31:04 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=369.694µs elapsed_secs=0.000369694
08:31:04 [DEBUG] (776) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=653.539µs elapsed_secs=0.000653539
08:31:04 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.888µs elapsed_secs=0.000111888
08:31:04 [DEBUG] (776) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=129.851µs elapsed_secs=0.000129851
08:31:04 [DEBUG] (752) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=231.760757ms elapsed_secs=0.231760757
08:31:04 [DEBUG] (797) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.853µs elapsed_secs=3.9853e-5
08:31:04 [DEBUG] (797) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=160.717µs elapsed_secs=0.000160717
08:31:04 [DEBUG] (750) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
08:31:04 [DEBUG] (797) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=68.422µs elapsed_secs=6.8422e-5
08:31:04 [DEBUG] (750) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (797) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=28.094µs elapsed_secs=2.8094e-5
08:31:04 [DEBUG] (750) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (797) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=71.267µs elapsed_secs=7.1267e-5
08:31:04 [DEBUG] (797) sqlx::query: summary="UPDATE user_assign SET user_id …" db.statement="\n\n\n                UPDATE user_assign\n                SET user_id = $1, task_id = $2\n                WHERE id = $3\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=1 elapsed=128.001µs elapsed_secs=0.000128001
08:31:04 [DEBUG] (788) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.126189ms elapsed_secs=0.009126189
08:31:04 [DEBUG] (780) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.397335ms elapsed_secs=0.009397335
08:31:04 [DEBUG] (784) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.584761ms elapsed_secs=0.009584761
08:31:04 [DEBUG] (784) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=599.554µs elapsed_secs=0.000599554
08:31:04 [DEBUG] (788) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.322538ms elapsed_secs=0.001322538
08:31:04 [DEBUG] (780) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.322965ms elapsed_secs=0.001322965
08:31:04 [DEBUG] (788) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=315.604µs elapsed_secs=0.000315604
08:31:04 [DEBUG] (780) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=157.711µs elapsed_secs=0.000157711
08:31:04 [DEBUG] (784) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=411.314µs elapsed_secs=0.000411314
08:31:04 [DEBUG] (756) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=214.521452ms elapsed_secs=0.214521452
08:31:04 [DEBUG] (798) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.924µs elapsed_secs=4.2924e-5
08:31:04 [DEBUG] (798) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=257.374µs elapsed_secs=0.000257374
08:31:04 [DEBUG] (754) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
08:31:04 [DEBUG] (798) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=59.859µs elapsed_secs=5.9859e-5
08:31:04 [DEBUG] (754) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (798) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=12.511µs elapsed_secs=1.2511e-5
08:31:04 [DEBUG] (754) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(11), project_id: 2, parent_id: Some(5), level: 2, name: "Test PJ1 Trivial TASK DEADLINE 1000", description: Some("TEST PJ1 Trivial TASK - Description"), status: 4, deadline: Some(1000), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (798) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=60.481µs elapsed_secs=6.0481e-5
08:31:04 [DEBUG] (798) sqlx::query: summary="UPDATE user_assign SET user_id …" db.statement="\n\n\n                UPDATE user_assign\n                SET user_id = $1, task_id = $2\n                WHERE id = $3\n                RETURNING id, user_id, task_id\n            \n" rows_affected=0 rows_returned=0 elapsed=156.399µs elapsed_secs=0.000156399
08:31:04 [DEBUG] (801) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=100.932µs elapsed_secs=0.000100932
08:31:04 [DEBUG] (804) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=34.709µs elapsed_secs=3.4709e-5
08:31:04 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.086209ms elapsed_secs=0.012086209
08:31:04 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.518849ms elapsed_secs=0.012518849
08:31:04 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=479.91µs elapsed_secs=0.00047991
08:31:04 [DEBUG] (776) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.929318ms elapsed_secs=0.012929318
08:31:04 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.631µs elapsed_secs=8.2631e-5
08:31:04 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=157.922µs elapsed_secs=0.000157922
08:31:04 [DEBUG] (776) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=181.141µs elapsed_secs=0.000181141
08:31:04 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.653µs elapsed_secs=9.1653e-5
08:31:04 [DEBUG] (776) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=262.657µs elapsed_secs=0.000262657
08:31:04 [DEBUG] (780) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.94663ms elapsed_secs=0.00594663
08:31:04 [DEBUG] (760) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=216.189609ms elapsed_secs=0.216189609
08:31:04 [DEBUG] (780) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=909.424µs elapsed_secs=0.000909424
08:31:04 [DEBUG] (780) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=272.115µs elapsed_secs=0.000272115
08:31:04 [DEBUG] (805) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=64.055µs elapsed_secs=6.4055e-5
08:31:04 [DEBUG] (805) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=181.89µs elapsed_secs=0.00018189
08:31:04 [DEBUG] (784) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.920235ms elapsed_secs=0.009920235
08:31:04 [DEBUG] (758) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
08:31:04 [DEBUG] (788) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.056642ms elapsed_secs=0.010056642
08:31:04 [DEBUG] (784) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=166.98µs elapsed_secs=0.00016698
08:31:04 [DEBUG] (805) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=67.351µs elapsed_secs=6.7351e-5
08:31:04 [DEBUG] (801) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.882597ms elapsed_secs=0.013882597
08:31:04 [DEBUG] (788) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=350.544µs elapsed_secs=0.000350544
08:31:04 [DEBUG] (784) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=213.816µs elapsed_secs=0.000213816
08:31:04 [DEBUG] (758) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (801) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=132.139µs elapsed_secs=0.000132139
08:31:04 [DEBUG] (788) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=173.539µs elapsed_secs=0.000173539
08:31:04 [DEBUG] (805) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=18.546µs elapsed_secs=1.8546e-5
08:31:04 [DEBUG] (801) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=76.59µs elapsed_secs=7.659e-5
08:31:04 [DEBUG] (758) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(1), project_id: 1, parent_id: None, level: 0, name: "Test PJ0 Major TASK", description: Some("TEST PJ0 Major TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=362.948µs elapsed_secs=0.000362948
08:31:04 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=94.657µs elapsed_secs=9.4657e-5
08:31:04 [DEBUG] (808) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.689µs elapsed_secs=4.5689e-5
08:31:04 [DEBUG] (804) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=17.389696ms elapsed_secs=0.017389696
08:31:04 [DEBUG] (804) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=68.818µs elapsed_secs=6.8818e-5
08:31:04 [DEBUG] (804) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=41.527µs elapsed_secs=4.1527e-5
08:31:04 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=269.806µs elapsed_secs=0.000269806
08:31:04 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.111µs elapsed_secs=8.7111e-5
08:31:04 [DEBUG] (776) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.285236ms elapsed_secs=0.006285236
08:31:04 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.07771ms elapsed_secs=0.00807771
08:31:04 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.822123ms elapsed_secs=0.007822123
08:31:04 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.046053ms elapsed_secs=0.001046053
08:31:04 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.170957ms elapsed_secs=0.001170957
08:31:04 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.25µs elapsed_secs=7.325e-5
08:31:04 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=188.978µs elapsed_secs=0.000188978
08:31:04 [DEBUG] (808) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.586518ms elapsed_secs=0.012586518
08:31:04 [DEBUG] (808) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=92.916µs elapsed_secs=9.2916e-5
08:31:04 [DEBUG] (808) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=58.345µs elapsed_secs=5.8345e-5
08:31:04 [DEBUG] (808) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=421.772µs elapsed_secs=0.000421772
08:31:04 [DEBUG] (808) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.688µs elapsed_secs=9.9688e-5
08:31:04 [DEBUG] (780) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.29989ms elapsed_secs=0.00929989
08:31:04 [DEBUG] (788) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.017025ms elapsed_secs=0.010017025
08:31:04 [DEBUG] (788) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=195.239µs elapsed_secs=0.000195239
08:31:04 [DEBUG] (784) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.314924ms elapsed_secs=0.008314924
08:31:04 [DEBUG] (788) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.024µs elapsed_secs=7.4024e-5
08:31:04 [DEBUG] (809) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.529µs elapsed_secs=6.7529e-5
08:31:04 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.590056ms elapsed_secs=0.006590056
08:31:04 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=630.895µs elapsed_secs=0.000630895
08:31:04 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.841µs elapsed_secs=6.8841e-5
08:31:04 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.770659ms elapsed_secs=0.009770659
08:31:04 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=913.004µs elapsed_secs=0.000913004
08:31:04 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=403.791µs elapsed_secs=0.000403791
08:31:04 [DEBUG] (764) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=233.163465ms elapsed_secs=0.233163465
08:31:04 [DEBUG] (809) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.193056ms elapsed_secs=0.009193056
08:31:04 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.593741ms elapsed_secs=0.010593741
08:31:04 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.689884ms elapsed_secs=0.010689884
08:31:04 [INFO] Created user: User { id: Some(1), username: "duplicate_test_1_20250610083104", email: "duplicate_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=351.532µs elapsed_secs=0.000351532
08:31:04 [DEBUG] (792) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=352.752µs elapsed_secs=0.000352752
08:31:04 [DEBUG] (810) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=129.063µs elapsed_secs=0.000129063
08:31:04 [DEBUG] (792) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=69.954µs elapsed_secs=6.9954e-5
08:31:04 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=100.443µs elapsed_secs=0.000100443
08:31:04 [DEBUG] (811) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=69.459µs elapsed_secs=6.9459e-5
08:31:04 [DEBUG] (810) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=243.384µs elapsed_secs=0.000243384
08:31:04 [DEBUG] (762) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(2), username: "TestUser1", email: "testuser1@example.com", password_hash: "password_hash_1" })
08:31:04 [DEBUG] (811) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=169.054µs elapsed_secs=0.000169054
08:31:04 [DEBUG] (810) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=174.666µs elapsed_secs=0.000174666
08:31:04 [DEBUG] (762) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (810) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=16.019µs elapsed_secs=1.6019e-5
08:31:04 [DEBUG] (762) menahel::repository::task_repo: Get task by id with transaction: Some(Task { id: Some(3), project_id: 1, parent_id: Some(2), level: 2, name: "Test PJ0 Trivial TASK", description: Some("TEST PJ0 Trivial TASK - Description"), status: 0, deadline: Some(0), created_at: 0, updated_at: None })
08:31:04 [DEBUG] (810) sqlx::query: summary="SELECT id, user_id, task_id …" db.statement="\n\n\n            SELECT id, user_id, task_id\n            FROM user_assign\n            WHERE task_id = $1\n        \n" rows_affected=0 rows_returned=2 elapsed=85.297µs elapsed_secs=8.5297e-5
08:31:04 [DEBUG] (814) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=79.779µs elapsed_secs=7.9779e-5
08:31:04 [DEBUG] (817) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=33.403µs elapsed_secs=3.3403e-5
08:31:04 [DEBUG] (808) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.883907ms elapsed_secs=0.008883907
08:31:04 [DEBUG] (808) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=172.779µs elapsed_secs=0.000172779
08:31:04 [DEBUG] (808) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.849µs elapsed_secs=9.1849e-5
08:31:04 [DEBUG] (788) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.246321ms elapsed_secs=0.008246321
08:31:04 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.002942ms elapsed_secs=0.010002942
08:31:04 [DEBUG] (818) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.551µs elapsed_secs=8.2551e-5
08:31:04 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=216.679µs elapsed_secs=0.000216679
08:31:04 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.808µs elapsed_secs=9.6808e-5
08:31:04 [DEBUG] (817) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.43162ms elapsed_secs=0.01143162
08:31:04 [DEBUG] (814) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.299916ms elapsed_secs=0.012299916
08:31:04 [DEBUG] (817) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=74.879µs elapsed_secs=7.4879e-5
08:31:04 [DEBUG] (814) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=74.848µs elapsed_secs=7.4848e-5
08:31:04 [DEBUG] (817) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=41.56µs elapsed_secs=4.156e-5
08:31:04 [DEBUG] (814) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.075µs elapsed_secs=6.2075e-5
08:31:04 [DEBUG] (817) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=171.699µs elapsed_secs=0.000171699
08:31:04 [DEBUG] (817) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=165.09µs elapsed_secs=0.00016509
08:31:04 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=527.954µs elapsed_secs=0.000527954
08:31:04 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.548µs elapsed_secs=7.1548e-5
08:31:04 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.727995ms elapsed_secs=0.007727995
08:31:04 [DEBUG] (792) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.250184ms elapsed_secs=0.008250184
08:31:04 [DEBUG] (796) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=342.044µs elapsed_secs=0.000342044
08:31:04 [DEBUG] (796) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=155.079µs elapsed_secs=0.000155079
08:31:04 [DEBUG] (819) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=30.826µs elapsed_secs=3.0826e-5
08:31:04 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=13.284105ms elapsed_secs=0.013284105
08:31:04 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=178.349µs elapsed_secs=0.000178349
08:31:04 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.549µs elapsed_secs=6.7549e-5
08:31:04 [DEBUG] (818) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.15199ms elapsed_secs=0.00915199
08:31:04 [INFO] Created user: User { id: Some(1), username: "duplicate_test_20250610083104", email: "duplicate_test_1_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (820) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.257µs elapsed_secs=4.6257e-5
08:31:04 [DEBUG] (820) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=0 elapsed=274.66µs elapsed_secs=0.00027466
08:31:04 [DEBUG] (823) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.64µs elapsed_secs=7.564e-5
08:31:04 [DEBUG] (808) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.813998ms elapsed_secs=0.011813998
08:31:04 [DEBUG] (819) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.567543ms elapsed_secs=0.010567543
08:31:04 [DEBUG] (808) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=295.47µs elapsed_secs=0.00029547
08:31:04 [INFO] Created user: User { id: Some(1), username: "create_test_20250610083104", email: "create_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (808) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=134.99µs elapsed_secs=0.00013499
08:31:04 [DEBUG] (824) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=54.772µs elapsed_secs=5.4772e-5
08:31:04 [DEBUG] (824) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=138.308µs elapsed_secs=0.000138308
08:31:04 [DEBUG] (790) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "create_test_20250610083104", email: "create_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" })
08:31:04 [DEBUG] (827) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.921µs elapsed_secs=7.7921e-5
08:31:04 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.853024ms elapsed_secs=0.008853024
08:31:04 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=164.617µs elapsed_secs=0.000164617
08:31:04 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=114.874µs elapsed_secs=0.000114874
08:31:04 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.243574ms elapsed_secs=0.009243574
08:31:04 [DEBUG] (823) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.778849ms elapsed_secs=0.008778849
08:31:04 [DEBUG] (817) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.892029ms elapsed_secs=0.009892029
08:31:04 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=174.035µs elapsed_secs=0.000174035
08:31:04 [DEBUG] (823) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=98.641µs elapsed_secs=9.8641e-5
08:31:04 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.334µs elapsed_secs=0.000136334
08:31:04 [DEBUG] (823) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=175.61µs elapsed_secs=0.00017561
08:31:04 [DEBUG] (817) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=328.272µs elapsed_secs=0.000328272
08:31:04 [DEBUG] (796) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.126788ms elapsed_secs=0.009126788
08:31:04 [DEBUG] (817) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.098µs elapsed_secs=0.000115098
08:31:04 [DEBUG] (823) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=233.395µs elapsed_secs=0.000233395
08:31:04 [DEBUG] (828) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=32.175µs elapsed_secs=3.2175e-5
08:31:04 [DEBUG] (823) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=550.035µs elapsed_secs=0.000550035
08:31:04 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.017148ms elapsed_secs=0.011017148
08:31:04 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=373.876µs elapsed_secs=0.000373876
08:31:04 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.82µs elapsed_secs=0.00011982
08:31:04 [DEBUG] (827) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.142555ms elapsed_secs=0.015142555
08:31:04 [DEBUG] (827) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=94.356µs elapsed_secs=9.4356e-5
08:31:04 [DEBUG] (827) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=51.193µs elapsed_secs=5.1193e-5
08:31:04 [DEBUG] (827) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=169.698µs elapsed_secs=0.000169698
08:31:04 [DEBUG] (827) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=71.904µs elapsed_secs=7.1904e-5
08:31:04 [DEBUG] (808) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.237717ms elapsed_secs=0.010237717
08:31:04 [DEBUG] (808) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=325.357µs elapsed_secs=0.000325357
08:31:04 [DEBUG] (808) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.428µs elapsed_secs=7.0428e-5
08:31:04 [DEBUG] (828) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.591685ms elapsed_secs=0.009591685
08:31:04 [INFO] Created user: User { id: Some(1), username: "dot.test.20250610083104", email: "dot_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (831) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.931µs elapsed_secs=3.8931e-5
08:31:04 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.203819ms elapsed_secs=0.009203819
08:31:04 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.308379ms elapsed_secs=0.010308379
08:31:04 [DEBUG] (801) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=753.607µs elapsed_secs=0.000753607
08:31:04 [DEBUG] (801) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=248.897µs elapsed_secs=0.000248897
08:31:04 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=310.882µs elapsed_secs=0.000310882
08:31:04 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=151.439µs elapsed_secs=0.000151439
08:31:04 [DEBUG] (817) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.014181ms elapsed_secs=0.011014181
08:31:04 [DEBUG] (817) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=154.857µs elapsed_secs=0.000154857
08:31:04 [DEBUG] (817) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.248µs elapsed_secs=0.000105248
08:31:04 [DEBUG] (823) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.978723ms elapsed_secs=0.011978723
08:31:04 [DEBUG] (823) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=192.789µs elapsed_secs=0.000192789
08:31:04 [DEBUG] (823) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=136.039µs elapsed_secs=0.000136039
08:31:04 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.43638ms elapsed_secs=0.00943638
08:31:04 [DEBUG] (831) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=15.457955ms elapsed_secs=0.015457955
08:31:04 [DEBUG] (804) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=315.474µs elapsed_secs=0.000315474
08:31:04 [DEBUG] (831) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=69.236µs elapsed_secs=6.9236e-5
08:31:04 [DEBUG] (804) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.434µs elapsed_secs=7.4434e-5
08:31:04 [DEBUG] (831) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.638µs elapsed_secs=6.8638e-5
08:31:04 [DEBUG] (827) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.196841ms elapsed_secs=0.008196841
08:31:04 [DEBUG] (831) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=171.509µs elapsed_secs=0.000171509
08:31:04 [DEBUG] (808) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.566966ms elapsed_secs=0.008566966
08:31:04 [DEBUG] (831) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=359.196µs elapsed_secs=0.000359196
08:31:04 [DEBUG] (827) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=184.496µs elapsed_secs=0.000184496
08:31:04 [DEBUG] (808) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=225.914µs elapsed_secs=0.000225914
08:31:04 [DEBUG] (827) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=113.846µs elapsed_secs=0.000113846
08:31:04 [DEBUG] (808) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.685µs elapsed_secs=7.0685e-5
08:31:04 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.711458ms elapsed_secs=0.011711458
08:31:04 [DEBUG] (801) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.678117ms elapsed_secs=0.011678117
08:31:04 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=621.639µs elapsed_secs=0.000621639
08:31:04 [DEBUG] (832) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=300.327µs elapsed_secs=0.000300327
08:31:04 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.958µs elapsed_secs=0.000104958
08:31:04 [DEBUG] (817) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.485452ms elapsed_secs=0.010485452
08:31:04 [DEBUG] (823) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.461053ms elapsed_secs=0.010461053
08:31:04 [DEBUG] (804) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.944606ms elapsed_secs=0.008944606
08:31:04 [DEBUG] (835) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=79.493µs elapsed_secs=7.9493e-5
08:31:04 [DEBUG] (817) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.092164ms elapsed_secs=0.001092164
08:31:04 [DEBUG] (823) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.178424ms elapsed_secs=0.001178424
08:31:04 [DEBUG] (836) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=106.01µs elapsed_secs=0.00010601
08:31:04 [DEBUG] (817) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=222.543µs elapsed_secs=0.000222543
08:31:04 [DEBUG] (823) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.744µs elapsed_secs=0.000112744
08:31:04 [DEBUG] (831) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.729795ms elapsed_secs=0.008729795
08:31:04 [DEBUG] (831) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=602.251µs elapsed_secs=0.000602251
08:31:04 [DEBUG] (839) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=99.73µs elapsed_secs=9.973e-5
08:31:04 [DEBUG] (831) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=172.287µs elapsed_secs=0.000172287
08:31:04 [DEBUG] (827) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.701657ms elapsed_secs=0.011701657
08:31:04 [DEBUG] (808) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.299889ms elapsed_secs=0.011299889
08:31:04 [DEBUG] (827) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=424.566µs elapsed_secs=0.000424566
08:31:04 [DEBUG] (840) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.814µs elapsed_secs=7.7814e-5
08:31:04 [DEBUG] (827) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=557.892µs elapsed_secs=0.000557892
08:31:04 [DEBUG] (843) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.951µs elapsed_secs=3.9951e-5
08:31:04 [DEBUG] (768) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=216.246717ms elapsed_secs=0.216246717
08:31:04 [DEBUG] (844) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=88.231µs elapsed_secs=8.8231e-5
08:31:04 [DEBUG] (844) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=141.473µs elapsed_secs=0.000141473
08:31:04 [DEBUG] (766) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:04 [DEBUG] (835) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.675569ms elapsed_secs=0.013675569
08:31:04 [DEBUG] (844) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=80.657µs elapsed_secs=8.0657e-5
08:31:04 [DEBUG] (835) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=65.095µs elapsed_secs=6.5095e-5
08:31:04 [DEBUG] (766) menahel::repository::task_repo: Get task by id with transaction: None
08:31:04 [DEBUG] (835) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=80.074µs elapsed_secs=8.0074e-5
08:31:04 [DEBUG] (835) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=244.554µs elapsed_secs=0.000244554
08:31:04 [DEBUG] (835) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=121.026µs elapsed_secs=0.000121026
08:31:04 [DEBUG] (847) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=86.881µs elapsed_secs=8.6881e-5
08:31:04 [DEBUG] (839) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.737757ms elapsed_secs=0.011737757
08:31:04 [DEBUG] (839) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=149.155µs elapsed_secs=0.000149155
08:31:04 [DEBUG] (839) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=140.866µs elapsed_secs=0.000140866
08:31:04 [DEBUG] (839) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=539.564µs elapsed_secs=0.000539564
08:31:04 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.677815ms elapsed_secs=0.010677815
08:31:04 [DEBUG] (839) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=729.599µs elapsed_secs=0.000729599
08:31:04 [DEBUG] (814) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=474.515µs elapsed_secs=0.000474515
08:31:04 [DEBUG] (814) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=143.304µs elapsed_secs=0.000143304
08:31:04 [DEBUG] (843) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.74867ms elapsed_secs=0.01274867
08:31:04 [DEBUG] (843) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=143.023µs elapsed_secs=0.000143023
08:31:04 [DEBUG] (843) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=156.751µs elapsed_secs=0.000156751
08:31:04 [DEBUG] (843) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=391.382µs elapsed_secs=0.000391382
08:31:04 [DEBUG] (843) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=73.177µs elapsed_secs=7.3177e-5
08:31:04 [DEBUG] (817) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.051918ms elapsed_secs=0.011051918
08:31:04 [DEBUG] (831) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.1027ms elapsed_secs=0.0091027
08:31:04 [DEBUG] (823) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.357827ms elapsed_secs=0.011357827
08:31:04 [DEBUG] (817) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=244.399µs elapsed_secs=0.000244399
08:31:04 [DEBUG] (817) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.263µs elapsed_secs=8.8263e-5
08:31:04 [DEBUG] (823) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=639.939µs elapsed_secs=0.000639939
08:31:04 [DEBUG] (831) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=730.401µs elapsed_secs=0.000730401
08:31:04 [DEBUG] (823) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.815µs elapsed_secs=6.8815e-5
08:31:04 [DEBUG] (831) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=66.99µs elapsed_secs=6.699e-5
08:31:04 [DEBUG] (847) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.279106ms elapsed_secs=0.013279106
08:31:04 [DEBUG] (847) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=152.961µs elapsed_secs=0.000152961
08:31:04 [DEBUG] (847) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=64.117µs elapsed_secs=6.4117e-5
08:31:04 [DEBUG] (827) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.961901ms elapsed_secs=0.008961901
08:31:04 [DEBUG] (847) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=185.326µs elapsed_secs=0.000185326
08:31:04 [DEBUG] (847) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=112.364µs elapsed_secs=0.000112364
08:31:04 [DEBUG] (827) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=149.461µs elapsed_secs=0.000149461
08:31:04 [DEBUG] (827) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=263.468µs elapsed_secs=0.000263468
08:31:04 [DEBUG] (835) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.065263ms elapsed_secs=0.007065263
08:31:04 [DEBUG] (835) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=659.776µs elapsed_secs=0.000659776
08:31:04 [DEBUG] (835) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=119.783µs elapsed_secs=0.000119783
08:31:04 [DEBUG] (814) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.037852ms elapsed_secs=0.009037852
08:31:04 [DEBUG] (839) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.732668ms elapsed_secs=0.007732668
08:31:04 [DEBUG] (839) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=194.897µs elapsed_secs=0.000194897
08:31:04 [DEBUG] (848) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=66.657µs elapsed_secs=6.6657e-5
08:31:04 [DEBUG] (839) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=118.949µs elapsed_secs=0.000118949
08:31:04 [DEBUG] (851) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=73.136µs elapsed_secs=7.3136e-5
08:31:04 [DEBUG] (843) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.461443ms elapsed_secs=0.007461443
08:31:04 [DEBUG] (843) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=148.736µs elapsed_secs=0.000148736
08:31:04 [DEBUG] (843) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67µs elapsed_secs=6.7e-5
08:31:04 [DEBUG] (831) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.277654ms elapsed_secs=0.009277654
08:31:04 [DEBUG] (831) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=288.005µs elapsed_secs=0.000288005
08:31:04 [DEBUG] (831) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=58.274µs elapsed_secs=5.8274e-5
08:31:04 [DEBUG] (823) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.26274ms elapsed_secs=0.00926274
08:31:04 [DEBUG] (823) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=213.172µs elapsed_secs=0.000213172
08:31:04 [DEBUG] (817) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.766553ms elapsed_secs=0.009766553
08:31:04 [DEBUG] (823) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=133.26µs elapsed_secs=0.00013326
08:31:04 [DEBUG] (852) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=255.569µs elapsed_secs=0.000255569
08:31:04 [DEBUG] (847) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.018566ms elapsed_secs=0.011018566
08:31:04 [DEBUG] (827) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.388597ms elapsed_secs=0.011388597
08:31:04 [DEBUG] (827) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=494.778µs elapsed_secs=0.000494778
08:31:04 [DEBUG] (847) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=583.694µs elapsed_secs=0.000583694
08:31:04 [DEBUG] (855) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=49.804µs elapsed_secs=4.9804e-5
08:31:04 [DEBUG] (827) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.004µs elapsed_secs=0.000101004
08:31:04 [DEBUG] (847) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.151µs elapsed_secs=0.000137151
08:31:04 [DEBUG] (851) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.127994ms elapsed_secs=0.013127994
08:31:04 [DEBUG] (851) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=78.498µs elapsed_secs=7.8498e-5
08:31:04 [DEBUG] (851) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=52.98µs elapsed_secs=5.298e-5
08:31:04 [DEBUG] (851) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=200.008µs elapsed_secs=0.000200008
08:31:04 [DEBUG] (851) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.586µs elapsed_secs=7.0586e-5
08:31:04 [DEBUG] (835) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.878942ms elapsed_secs=0.010878942
08:31:04 [DEBUG] (835) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=585.559µs elapsed_secs=0.000585559
08:31:04 [DEBUG] (835) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=81.409µs elapsed_secs=8.1409e-5
08:31:04 [DEBUG] (843) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.028108ms elapsed_secs=0.007028108
08:31:04 [DEBUG] (839) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.140235ms elapsed_secs=0.009140235
08:31:04 [DEBUG] (843) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=200.696µs elapsed_secs=0.000200696
08:31:04 [DEBUG] (839) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=159.857µs elapsed_secs=0.000159857
08:31:04 [DEBUG] (843) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.402µs elapsed_secs=0.000104402
08:31:04 [DEBUG] (839) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=117.171µs elapsed_secs=0.000117171
08:31:04 [DEBUG] (831) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.194503ms elapsed_secs=0.007194503
08:31:04 [DEBUG] (772) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=238.892442ms elapsed_secs=0.238892442
08:31:04 [DEBUG] (831) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=222.106µs elapsed_secs=0.000222106
08:31:04 [DEBUG] (831) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=158.153µs elapsed_secs=0.000158153
08:31:04 [DEBUG] (856) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.18µs elapsed_secs=4.418e-5
08:31:04 [DEBUG] (855) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.945976ms elapsed_secs=0.011945976
08:31:04 [DEBUG] (855) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=143.571µs elapsed_secs=0.000143571
08:31:04 [DEBUG] (855) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=433.436µs elapsed_secs=0.000433436
08:31:04 [DEBUG] (856) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=678.681µs elapsed_secs=0.000678681
08:31:04 [DEBUG] (770) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "TestUser0", email: "testuser0@example.com", password_hash: "password_hash_0" })
08:31:04 [DEBUG] (856) sqlx::query: summary="SELECT id, project_id, parent_id, …" db.statement="\n\n\n            SELECT id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at\n            FROM tasks\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=276.029µs elapsed_secs=0.000276029
08:31:04 [DEBUG] (770) menahel::repository::task_repo: Get task by id with transaction: None
08:31:04 [DEBUG] (855) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=457.338µs elapsed_secs=0.000457338
08:31:04 [DEBUG] (855) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=329.735µs elapsed_secs=0.000329735
08:31:04 [DEBUG] (823) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.80979ms elapsed_secs=0.01080979
08:31:04 [DEBUG] (859) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=65.103µs elapsed_secs=6.5103e-5
08:31:04 [DEBUG] (860) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=48.989µs elapsed_secs=4.8989e-5
08:31:04 [DEBUG] (863) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.786µs elapsed_secs=3.7786e-5
08:31:04 [DEBUG] (827) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.823684ms elapsed_secs=0.009823684
08:31:04 [DEBUG] (847) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.18826ms elapsed_secs=0.01018826
08:31:04 [DEBUG] (864) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=100.171µs elapsed_secs=0.000100171
08:31:04 [DEBUG] (847) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=458.977µs elapsed_secs=0.000458977
08:31:04 [DEBUG] (847) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.197µs elapsed_secs=7.7197e-5
08:31:04 [DEBUG] (851) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.216926ms elapsed_secs=0.010216926
08:31:04 [DEBUG] (867) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=77.935µs elapsed_secs=7.7935e-5
08:31:04 [DEBUG] (851) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=178.834µs elapsed_secs=0.000178834
08:31:04 [DEBUG] (851) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=217.562µs elapsed_secs=0.000217562
08:31:04 [DEBUG] (835) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.830011ms elapsed_secs=0.006830011
08:31:04 [DEBUG] (835) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=241.573µs elapsed_secs=0.000241573
08:31:04 [DEBUG] (835) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.823µs elapsed_secs=0.000101823
08:31:04 [DEBUG] (859) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.00935ms elapsed_secs=0.00900935
08:31:04 [DEBUG] (859) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=97.23µs elapsed_secs=9.723e-5
08:31:04 [DEBUG] (859) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=106.672µs elapsed_secs=0.000106672
08:31:04 [DEBUG] (859) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=329.234µs elapsed_secs=0.000329234
08:31:04 [DEBUG] (859) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=520.313µs elapsed_secs=0.000520313
08:31:04 [DEBUG] (839) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.952797ms elapsed_secs=0.007952797
08:31:04 [DEBUG] (843) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.287468ms elapsed_secs=0.010287468
08:31:04 [DEBUG] (831) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.618382ms elapsed_secs=0.008618382
08:31:04 [DEBUG] (843) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=733.507µs elapsed_secs=0.000733507
08:31:04 [DEBUG] (839) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=1.150234ms elapsed_secs=0.001150234
08:31:04 [DEBUG] (843) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=582.839µs elapsed_secs=0.000582839
08:31:04 [DEBUG] (839) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=513.295µs elapsed_secs=0.000513295
08:31:04 [DEBUG] (863) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.370679ms elapsed_secs=0.014370679
08:31:04 [DEBUG] (868) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=82.012µs elapsed_secs=8.2012e-5
08:31:04 [DEBUG] (863) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=132.972µs elapsed_secs=0.000132972
08:31:04 [DEBUG] (863) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=82.14µs elapsed_secs=8.214e-5
08:31:04 [DEBUG] (867) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.216151ms elapsed_secs=0.012216151
08:31:04 [DEBUG] (863) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=694.002µs elapsed_secs=0.000694002
08:31:04 [DEBUG] (867) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=190.528µs elapsed_secs=0.000190528
08:31:04 [DEBUG] (863) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.08µs elapsed_secs=9.508e-5
08:31:04 [DEBUG] (871) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.446µs elapsed_secs=4.7446e-5
08:31:04 [DEBUG] (867) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=139.614µs elapsed_secs=0.000139614
08:31:04 [DEBUG] (867) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=190.653µs elapsed_secs=0.000190653
08:31:04 [DEBUG] (867) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=63.834µs elapsed_secs=6.3834e-5
08:31:04 [DEBUG] (855) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.046883ms elapsed_secs=0.011046883
08:31:04 [DEBUG] (855) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=477.409µs elapsed_secs=0.000477409
08:31:04 [DEBUG] (855) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=59.131µs elapsed_secs=5.9131e-5
08:31:04 [DEBUG] (851) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.094115ms elapsed_secs=0.010094115
08:31:04 [DEBUG] (847) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.29855ms elapsed_secs=0.01029855
08:31:04 [DEBUG] (847) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=488.898µs elapsed_secs=0.000488898
08:31:04 [DEBUG] (851) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=335.347µs elapsed_secs=0.000335347
08:31:04 [DEBUG] (851) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.978µs elapsed_secs=0.000182978
08:31:04 [DEBUG] (847) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=535.304µs elapsed_secs=0.000535304
08:31:04 [DEBUG] (871) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.170399ms elapsed_secs=0.012170399
08:31:04 [DEBUG] (871) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=165.056µs elapsed_secs=0.000165056
08:31:04 [DEBUG] (871) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=75.937µs elapsed_secs=7.5937e-5
08:31:04 [DEBUG] (835) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.673615ms elapsed_secs=0.010673615
08:31:04 [DEBUG] (871) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=429.967µs elapsed_secs=0.000429967
08:31:04 [DEBUG] (835) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=466.317µs elapsed_secs=0.000466317
08:31:04 [DEBUG] (871) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.752µs elapsed_secs=9.9752e-5
08:31:04 [DEBUG] (835) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=103.101µs elapsed_secs=0.000103101
08:31:04 [DEBUG] (859) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.242674ms elapsed_secs=0.008242674
08:31:04 [DEBUG] (859) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=173.367µs elapsed_secs=0.000173367
08:31:04 [DEBUG] (859) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.888µs elapsed_secs=8.2888e-5
08:31:04 [DEBUG] (839) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.50011ms elapsed_secs=0.01050011
08:31:04 [DEBUG] (843) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.16278ms elapsed_secs=0.01016278
08:31:04 [DEBUG] (839) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=197.912µs elapsed_secs=0.000197912
08:31:04 [DEBUG] (839) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.133µs elapsed_secs=9.9133e-5
08:31:04 [DEBUG] (843) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=220.812µs elapsed_secs=0.000220812
08:31:04 [DEBUG] (843) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=204.234µs elapsed_secs=0.000204234
08:31:04 [DEBUG] (863) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.108311ms elapsed_secs=0.006108311
08:31:04 [DEBUG] (867) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.315485ms elapsed_secs=0.006315485
08:31:04 [DEBUG] (855) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.379587ms elapsed_secs=0.008379587
08:31:04 [DEBUG] (863) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=307.177µs elapsed_secs=0.000307177
08:31:04 [DEBUG] (863) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=160.794µs elapsed_secs=0.000160794
08:31:04 [DEBUG] (867) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=762.948µs elapsed_secs=0.000762948
08:31:04 [DEBUG] (855) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=677.493µs elapsed_secs=0.000677493
08:31:04 [DEBUG] (867) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=101.248µs elapsed_secs=0.000101248
08:31:04 [DEBUG] (855) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.474µs elapsed_secs=8.9474e-5
08:31:04 [DEBUG] (851) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.006053ms elapsed_secs=0.011006053
08:31:04 [DEBUG] (847) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.24239ms elapsed_secs=0.01124239
08:31:04 [DEBUG] (851) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=263.089µs elapsed_secs=0.000263089
08:31:04 [DEBUG] (847) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=173.264µs elapsed_secs=0.000173264
08:31:04 [DEBUG] (847) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=115.412µs elapsed_secs=0.000115412
08:31:04 [DEBUG] (851) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=331.002µs elapsed_secs=0.000331002
08:31:04 [DEBUG] (780) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=234.512466ms elapsed_secs=0.234512466
08:31:04 [DEBUG] (859) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.615232ms elapsed_secs=0.009615232
08:31:04 [DEBUG] (776) sqlx::query: summary="INSERT INTO projects (name) …" db.statement="\n\nINSERT INTO projects (name) VALUES ('Test Project 0');\nINSERT INTO projects (name) VALUES ('Test Project 1');\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(1, 1, NULL, 0, 'Test PJ0 Major TASK', 'TEST PJ0 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(2, 1, 1, 1, 'Test PJ0 Minor TASK', 'TEST PJ0 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(3, 1, 2, 2, 'Test PJ0 Trivial TASK', 'TEST PJ0 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(4, 2, NULL, 0, 'Test PJ1 Major TASK', 'TEST PJ1 Major TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(5, 2, 4, 1, 'Test PJ1 Minor TASK', 'TEST PJ1 Minor TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(6, 2, 5, 2, 'Test PJ1 Trivial TASK NotStarted', 'TEST PJ1 Trivial TASK - Description', 0, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(7, 2, 5, 2, 'Test PJ1 Trivial TASK InProgress', 'TEST PJ1 Trivial TASK - Description', 1, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(8, 2, 5, 2, 'Test PJ1 Trivial TASK Reviewing', 'TEST PJ1 Trivial TASK - Description', 2, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(9, 2, 5, 2, 'Test PJ1 Trivial TASK Cancelled', 'TEST PJ1 Trivial TASK - Description', 3, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(10, 2, 5, 2, 'Test PJ1 Trivial TASK Done', 'TEST PJ1 Trivial TASK - Description', 4, 0, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(11, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 1000', 'TEST PJ1 Trivial TASK - Description', 4, 1000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(12, 2, 5, 2, 'Test PJ1 Trivial TASK DEADLINE 10000', 'TEST PJ1 Trivial TASK - Description', 4, 10000, 0, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(13, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 1000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(14, 2, 5, 2, 'Test PJ1 Trivial TASK CREATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 10000, NULL);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(15, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 1000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 1000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(16, 2, 5, 2, 'Test PJ1 Trivial TASK UPDATED_AT 10000', 'TEST PJ1 Trivial TASK - Description', 4, NULL, 0, 10000);\n\nINSERT INTO tasks (id, project_id, parent_id, level, name, description, status, deadline, created_at, updated_at) VALUES\n(17, 2, 5, 2, 'Test PJ1 FULL OPT', 'TEST PJ1 FULL OPT - Description', 4, 99999, 99999, 99999);\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'TestUser0', 'testuser0@example.com', 'password_hash_0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'TestUser1', 'testuser1@example.com', 'password_hash_1');\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (1, 1, 3);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (2, 2, 3);\n\nINSERT INTO user_assign (id, user_id, task_id) VALUES (3, 1, 11);\nINSERT INTO user_assign (id, user_id, task_id) VALUES (4, 2, 12);\n\n\n\n\n" rows_affected=25 rows_returned=0 elapsed=248.156525ms elapsed_secs=0.248156525
08:31:04 [DEBUG] (871) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.314095ms elapsed_secs=0.010314095
08:31:04 [DEBUG] (859) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=315.016µs elapsed_secs=0.000315016
08:31:04 [DEBUG] (835) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.113129ms elapsed_secs=0.007113129
08:31:04 [DEBUG] (872) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=130.852µs elapsed_secs=0.000130852
08:31:04 [DEBUG] (871) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=209.003µs elapsed_secs=0.000209003
08:31:04 [DEBUG] (859) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.052µs elapsed_secs=9.3052e-5
08:31:04 [DEBUG] (871) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.856µs elapsed_secs=9.9856e-5
08:31:04 [DEBUG] (873) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.747µs elapsed_secs=3.9747e-5
08:31:04 [DEBUG] (843) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.896655ms elapsed_secs=0.006896655
08:31:04 [DEBUG] (872) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=352.393µs elapsed_secs=0.000352393
08:31:04 [DEBUG] (839) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.158442ms elapsed_secs=0.007158442
08:31:04 [DEBUG] (778) menahel::repository::user_repo: Get user by id with transaction: None
08:31:04 [DEBUG] (874) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=237.782µs elapsed_secs=0.000237782
08:31:04 [DEBUG] (873) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=1.001279ms elapsed_secs=0.001001279
08:31:04 [DEBUG] (875) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.059µs elapsed_secs=4.2059e-5
08:31:04 [DEBUG] (774) menahel::repository::user_repo: Get user by id with transaction: None
08:31:04 [DEBUG] (876) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.837µs elapsed_secs=4.5837e-5
08:31:04 [DEBUG] (880) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=62.328µs elapsed_secs=6.2328e-5
08:31:04 [DEBUG] (882) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.889µs elapsed_secs=4.2889e-5
08:31:04 [DEBUG] (886) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=60.026µs elapsed_secs=6.0026e-5
08:31:04 [DEBUG] (888) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=93.181µs elapsed_secs=9.3181e-5
08:31:04 [DEBUG] (855) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.809786ms elapsed_secs=0.010809786
08:31:04 [DEBUG] (863) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.453447ms elapsed_secs=0.010453447
08:31:04 [DEBUG] (867) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.504207ms elapsed_secs=0.010504207
08:31:04 [DEBUG] (867) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=484.57µs elapsed_secs=0.00048457
08:31:04 [DEBUG] (863) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=544.504µs elapsed_secs=0.000544504
08:31:04 [DEBUG] (855) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=569.557µs elapsed_secs=0.000569557
08:31:04 [DEBUG] (867) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=127.559µs elapsed_secs=0.000127559
08:31:04 [DEBUG] (863) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.771µs elapsed_secs=7.9771e-5
08:31:04 [DEBUG] (855) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=196.359µs elapsed_secs=0.000196359
08:31:04 [DEBUG] (875) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=10.615618ms elapsed_secs=0.010615618
08:31:04 [INFO] Created user: User { id: Some(1), username: "1234567890_20250610083104", email: "numeric_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (880) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.259859ms elapsed_secs=0.012259859
08:31:04 [DEBUG] (880) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=161.267µs elapsed_secs=0.000161267
08:31:04 [DEBUG] (880) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=120.332µs elapsed_secs=0.000120332
08:31:04 [DEBUG] (888) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.293752ms elapsed_secs=0.011293752
08:31:04 [DEBUG] (886) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=11.693607ms elapsed_secs=0.011693607
08:31:04 [DEBUG] (882) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.65305ms elapsed_secs=0.01265305
08:31:04 [DEBUG] (888) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=79.668µs elapsed_secs=7.9668e-5
08:31:04 [DEBUG] (891) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=42.72µs elapsed_secs=4.272e-5
08:31:04 [DEBUG] (880) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=517.327µs elapsed_secs=0.000517327
08:31:04 [DEBUG] (886) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=76.287µs elapsed_secs=7.6287e-5
08:31:04 [DEBUG] (882) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.933µs elapsed_secs=7.2933e-5
08:31:04 [DEBUG] (888) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=62.552µs elapsed_secs=6.2552e-5
08:31:04 [DEBUG] (880) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.791µs elapsed_secs=0.000153791
08:31:04 [DEBUG] (886) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.936µs elapsed_secs=8.4936e-5
08:31:04 [DEBUG] (882) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=68.744µs elapsed_secs=6.8744e-5
08:31:04 [DEBUG] (859) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.465082ms elapsed_secs=0.006465082
08:31:04 [DEBUG] (888) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=597.428µs elapsed_secs=0.000597428
08:31:04 [DEBUG] (847) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.647729ms elapsed_secs=0.008647729
08:31:04 [DEBUG] (851) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.106407ms elapsed_secs=0.007106407
08:31:04 [DEBUG] (886) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=847.899µs elapsed_secs=0.000847899
08:31:04 [DEBUG] (888) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.678µs elapsed_secs=0.000130678
08:31:04 [DEBUG] (859) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=548.957µs elapsed_secs=0.000548957
08:31:04 [DEBUG] (882) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.016438ms elapsed_secs=0.001016438
08:31:04 [DEBUG] (882) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=181.462µs elapsed_secs=0.000181462
08:31:04 [DEBUG] (859) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=426.057µs elapsed_secs=0.000426057
08:31:04 [DEBUG] (851) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=1.356005ms elapsed_secs=0.001356005
08:31:04 [DEBUG] (892) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=75.782µs elapsed_secs=7.5782e-5
08:31:04 [DEBUG] (886) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=963.307µs elapsed_secs=0.000963307
08:31:04 [DEBUG] (851) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.232µs elapsed_secs=0.000104232
08:31:04 [DEBUG] (871) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.712291ms elapsed_secs=0.009712291
08:31:04 [DEBUG] (871) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=766.587µs elapsed_secs=0.000766587
08:31:04 [DEBUG] (871) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=239.725µs elapsed_secs=0.000239725
08:31:04 [DEBUG] (895) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=253.862µs elapsed_secs=0.000253862
08:31:04 [DEBUG] (867) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.726533ms elapsed_secs=0.009726533
08:31:04 [DEBUG] (867) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=448.96µs elapsed_secs=0.00044896
08:31:04 [DEBUG] (867) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.882µs elapsed_secs=0.000150882
08:31:04 [DEBUG] (891) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.690187ms elapsed_secs=0.014690187
08:31:04 [DEBUG] (891) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=93.032µs elapsed_secs=9.3032e-5
08:31:04 [DEBUG] (891) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=78.711µs elapsed_secs=7.8711e-5
08:31:04 [DEBUG] (891) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=165.365µs elapsed_secs=0.000165365
08:31:04 [DEBUG] (891) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=148.22µs elapsed_secs=0.00014822
08:31:04 [DEBUG] (863) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.772034ms elapsed_secs=0.010772034
08:31:04 [DEBUG] (863) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=148.324µs elapsed_secs=0.000148324
08:31:04 [DEBUG] (863) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=62.955µs elapsed_secs=6.2955e-5
08:31:04 [DEBUG] (855) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.932689ms elapsed_secs=0.008932689
08:31:04 [DEBUG] (895) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.667401ms elapsed_secs=0.009667401
08:31:04 [DEBUG] (855) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=484.94µs elapsed_secs=0.00048494
08:31:04 [DEBUG] (895) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=104.129µs elapsed_secs=0.000104129
08:31:04 [DEBUG] (855) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=77.946µs elapsed_secs=7.7946e-5
08:31:04 [DEBUG] (895) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=120.916µs elapsed_secs=0.000120916
08:31:04 [DEBUG] (895) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=210.529µs elapsed_secs=0.000210529
08:31:04 [DEBUG] (895) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=154.943µs elapsed_secs=0.000154943
08:31:04 [DEBUG] (880) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.20359ms elapsed_secs=0.00620359
08:31:04 [DEBUG] (880) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=460.932µs elapsed_secs=0.000460932
08:31:04 [DEBUG] (882) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.053009ms elapsed_secs=0.007053009
08:31:04 [DEBUG] (851) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.23851ms elapsed_secs=0.00723851
08:31:04 [DEBUG] (880) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=403.507µs elapsed_secs=0.000403507
08:31:04 [DEBUG] (882) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=546.353µs elapsed_secs=0.000546353
08:31:04 [DEBUG] (882) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=174.656µs elapsed_secs=0.000174656
08:31:04 [DEBUG] (896) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.371µs elapsed_secs=6.7371e-5
08:31:04 [DEBUG] (888) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.777154ms elapsed_secs=0.009777154
08:31:04 [DEBUG] (886) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.087075ms elapsed_secs=0.010087075
08:31:04 [DEBUG] (888) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=430.94µs elapsed_secs=0.00043094
08:31:04 [DEBUG] (886) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=701.42µs elapsed_secs=0.00070142
08:31:04 [DEBUG] (888) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=99.617µs elapsed_secs=9.9617e-5
08:31:04 [DEBUG] (886) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.314µs elapsed_secs=9.5314e-5
08:31:04 [DEBUG] (899) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=38.151µs elapsed_secs=3.8151e-5
08:31:04 [DEBUG] (871) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.111955ms elapsed_secs=0.010111955
08:31:04 [DEBUG] (871) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=165.376µs elapsed_secs=0.000165376
08:31:04 [DEBUG] (859) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.521032ms elapsed_secs=0.012521032
08:31:04 [DEBUG] (871) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.605µs elapsed_secs=9.5605e-5
08:31:04 [DEBUG] (859) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=147.982µs elapsed_secs=0.000147982
08:31:04 [DEBUG] (859) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.804µs elapsed_secs=7.9804e-5
08:31:04 [DEBUG] (867) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.508289ms elapsed_secs=0.007508289
08:31:04 [DEBUG] (867) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=569.319µs elapsed_secs=0.000569319
08:31:04 [DEBUG] (867) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=106.112µs elapsed_secs=0.000106112
08:31:04 [DEBUG] (899) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.335286ms elapsed_secs=0.010335286
08:31:04 [DEBUG] (899) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=300.19µs elapsed_secs=0.00030019
08:31:04 [DEBUG] (899) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=114.849µs elapsed_secs=0.000114849
08:31:04 [DEBUG] (891) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.149689ms elapsed_secs=0.009149689
08:31:04 [DEBUG] (855) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.501285ms elapsed_secs=0.009501285
08:31:04 [DEBUG] (863) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.530378ms elapsed_secs=0.009530378
08:31:04 [DEBUG] (891) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=978.968µs elapsed_secs=0.000978968
08:31:04 [DEBUG] (899) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.039412ms elapsed_secs=0.001039412
08:31:04 [DEBUG] (863) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=432.503µs elapsed_secs=0.000432503
08:31:04 [DEBUG] (891) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=211.17µs elapsed_secs=0.00021117
08:31:04 [DEBUG] (863) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=110.554µs elapsed_secs=0.000110554
08:31:04 [DEBUG] (899) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=292.937µs elapsed_secs=0.000292937
08:31:04 [DEBUG] (900) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.486µs elapsed_secs=4.0486e-5
08:31:04 [DEBUG] (895) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.271401ms elapsed_secs=0.009271401
08:31:04 [DEBUG] (895) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=300.414µs elapsed_secs=0.000300414
08:31:04 [DEBUG] (895) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=72.418µs elapsed_secs=7.2418e-5
08:31:04 [DEBUG] (880) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.969347ms elapsed_secs=0.008969347
08:31:04 [DEBUG] (882) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.20106ms elapsed_secs=0.00920106
08:31:04 [DEBUG] (886) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.230501ms elapsed_secs=0.009230501
08:31:04 [DEBUG] (880) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=776.352µs elapsed_secs=0.000776352
08:31:04 [DEBUG] (886) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=769.788µs elapsed_secs=0.000769788
08:31:04 [DEBUG] (882) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=786.724µs elapsed_secs=0.000786724
08:31:04 [DEBUG] (880) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.875µs elapsed_secs=8.0875e-5
08:31:04 [DEBUG] (886) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.461µs elapsed_secs=0.000125461
08:31:04 [DEBUG] (882) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=67.435µs elapsed_secs=6.7435e-5
08:31:04 [DEBUG] (859) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.465342ms elapsed_secs=0.010465342
08:31:04 [DEBUG] (871) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.569172ms elapsed_secs=0.010569172
08:31:04 [DEBUG] (888) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.721704ms elapsed_secs=0.010721704
08:31:04 [DEBUG] (871) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=242.468µs elapsed_secs=0.000242468
08:31:04 [DEBUG] (888) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=194.89µs elapsed_secs=0.00019489
08:31:04 [DEBUG] (901) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.183µs elapsed_secs=7.0183e-5
08:31:04 [DEBUG] (888) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=54.195µs elapsed_secs=5.4195e-5
08:31:04 [DEBUG] (871) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=98.141µs elapsed_secs=9.8141e-5
08:31:04 [DEBUG] (900) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.516324ms elapsed_secs=0.008516324
08:31:04 [INFO] Created user: User { id: Some(1), username: "underscore_test_20250610083104", email: "underscore_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (904) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=76.825µs elapsed_secs=7.6825e-5
08:31:04 [DEBUG] (907) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=95.554µs elapsed_secs=9.5554e-5
08:31:04 [DEBUG] (867) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.579565ms elapsed_secs=0.007579565
08:31:04 [DEBUG] (908) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=95.496µs elapsed_secs=9.5496e-5
08:31:04 [DEBUG] (899) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.265409ms elapsed_secs=0.009265409
08:31:04 [DEBUG] (863) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.554996ms elapsed_secs=0.009554996
08:31:04 [DEBUG] (891) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.011939ms elapsed_secs=0.010011939
08:31:04 [DEBUG] (899) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=621.749µs elapsed_secs=0.000621749
08:31:04 [DEBUG] (909) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.2µs elapsed_secs=3.92e-5
08:31:04 [DEBUG] (891) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=427.114µs elapsed_secs=0.000427114
08:31:04 [DEBUG] (899) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=68.929µs elapsed_secs=6.8929e-5
08:31:04 [DEBUG] (891) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.328µs elapsed_secs=0.000137328
08:31:04 [DEBUG] (909) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=0 rows_returned=0 elapsed=308.172µs elapsed_secs=0.000308172
08:31:04 [DEBUG] (895) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.842788ms elapsed_secs=0.007842788
08:31:04 [DEBUG] (912) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=139.057µs elapsed_secs=0.000139057
08:31:04 [DEBUG] (907) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.024798ms elapsed_secs=0.010024798
08:31:04 [DEBUG] (895) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=252.832µs elapsed_secs=0.000252832
08:31:04 [DEBUG] (907) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=72.197µs elapsed_secs=7.2197e-5
08:31:04 [DEBUG] (895) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=78.436µs elapsed_secs=7.8436e-5
08:31:04 [DEBUG] (907) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=66.568µs elapsed_secs=6.6568e-5
08:31:04 [DEBUG] (907) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=156.84µs elapsed_secs=0.00015684
08:31:04 [DEBUG] (880) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.573582ms elapsed_secs=0.007573582
08:31:04 [DEBUG] (907) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.554µs elapsed_secs=0.000124554
08:31:04 [DEBUG] (882) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.974377ms elapsed_secs=0.007974377
08:31:04 [DEBUG] (880) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=234.69µs elapsed_secs=0.00023469
08:31:04 [DEBUG] (886) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.168707ms elapsed_secs=0.008168707
08:31:04 [DEBUG] (882) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=144.436µs elapsed_secs=0.000144436
08:31:04 [DEBUG] (880) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=65.587µs elapsed_secs=6.5587e-5
08:31:04 [DEBUG] (908) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=7.718261ms elapsed_secs=0.007718261
08:31:04 [DEBUG] (882) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=462.102µs elapsed_secs=0.000462102
08:31:04 [INFO] Created user: User { id: Some(1), username: "delete_user_test_20250610083104", email: "delete_user_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (886) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=146.361µs elapsed_secs=0.000146361
08:31:04 [DEBUG] (904) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=14.573554ms elapsed_secs=0.014573554
08:31:04 [DEBUG] (886) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.166µs elapsed_secs=8.7166e-5
08:31:04 [DEBUG] (913) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=40.908µs elapsed_secs=4.0908e-5
08:31:04 [DEBUG] (904) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=92.283µs elapsed_secs=9.2283e-5
08:31:04 [DEBUG] (913) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=144.355µs elapsed_secs=0.000144355
08:31:04 [DEBUG] (904) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=123.579µs elapsed_secs=0.000123579
08:31:04 [DEBUG] (865) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "delete_user_test_20250610083104", email: "delete_user_test_20250610083104@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" })
08:31:04 [DEBUG] (904) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=326.433µs elapsed_secs=0.000326433
08:31:04 [DEBUG] (904) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=181.722µs elapsed_secs=0.000181722
08:31:04 [DEBUG] (888) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.448462ms elapsed_secs=0.007448462
08:31:04 [DEBUG] (871) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.926523ms elapsed_secs=0.007926523
08:31:04 [DEBUG] (888) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=499.558µs elapsed_secs=0.000499558
08:31:04 [DEBUG] (914) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=86.666µs elapsed_secs=8.6666e-5
08:31:04 [DEBUG] (888) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=130.705µs elapsed_secs=0.000130705
08:31:04 [DEBUG] (912) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.54741ms elapsed_secs=0.01354741
08:31:04 [DEBUG] (912) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=77.756µs elapsed_secs=7.7756e-5
08:31:04 [DEBUG] (912) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=61.376µs elapsed_secs=6.1376e-5
08:31:04 [DEBUG] (908) sqlx::query: summary="DELETE FROM users WHERE …" db.statement="\n\n\n                DELETE FROM users\n                WHERE id = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=9.807615ms elapsed_secs=0.009807615
08:31:04 [DEBUG] (912) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=169.902µs elapsed_secs=0.000169902
08:31:04 [INFO] Deleted user: SqliteQueryResult { changes: 1, last_insert_rowid: 1 }
08:31:04 [DEBUG] (912) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=123.689µs elapsed_secs=0.000123689
08:31:04 [DEBUG] (913) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=0 elapsed=50.789µs elapsed_secs=5.0789e-5
08:31:04 [DEBUG] (865) menahel::repository::user_repo: Get user by id: None
08:31:04 [DEBUG] (914) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=6.899286ms elapsed_secs=0.006899286
08:31:04 [INFO] Created user: User { id: Some(1), username: "get_all_users_test_20250610083104_1", email: "get_all_users_test_20250610083104_1@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:04 [DEBUG] (899) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.227401ms elapsed_secs=0.009227401
08:31:04 [DEBUG] (917) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=84.468µs elapsed_secs=8.4468e-5
08:31:04 [DEBUG] (899) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=329.547µs elapsed_secs=0.000329547
08:31:04 [DEBUG] (899) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=76.024µs elapsed_secs=7.6024e-5
08:31:04 [DEBUG] (918) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=37.436µs elapsed_secs=3.7436e-5
08:31:04 [DEBUG] (895) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.249773ms elapsed_secs=0.006249773
08:31:04 [DEBUG] (880) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.656575ms elapsed_secs=0.006656575
08:31:04 [DEBUG] (895) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=132.681µs elapsed_secs=0.000132681
08:31:04 [DEBUG] (891) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.29833ms elapsed_secs=0.00829833
08:31:04 [DEBUG] (895) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=320.454µs elapsed_secs=0.000320454
08:31:04 [DEBUG] (907) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.388715ms elapsed_secs=0.007388715
08:31:04 [DEBUG] (880) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=511.225µs elapsed_secs=0.000511225
08:31:04 [DEBUG] (891) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=179.822µs elapsed_secs=0.000179822
08:31:04 [DEBUG] (907) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=202.864µs elapsed_secs=0.000202864
08:31:04 [DEBUG] (891) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=87.428µs elapsed_secs=8.7428e-5
08:31:04 [DEBUG] (880) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=132.403µs elapsed_secs=0.000132403
08:31:04 [DEBUG] (907) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=105.102µs elapsed_secs=0.000105102
08:31:04 [DEBUG] (882) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.791429ms elapsed_secs=0.006791429
08:31:04 [DEBUG] (882) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=403.975µs elapsed_secs=0.000403975
08:31:04 [DEBUG] (882) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=163.768µs elapsed_secs=0.000163768
08:31:04 [DEBUG] (886) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.829941ms elapsed_secs=0.008829941
08:31:04 [DEBUG] (886) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=790.278µs elapsed_secs=0.000790278
08:31:05 [DEBUG] (886) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=194.5µs elapsed_secs=0.0001945
08:31:05 [DEBUG] (904) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.02982ms elapsed_secs=0.01002982
08:31:05 [DEBUG] (904) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=380.859µs elapsed_secs=0.000380859
08:31:05 [DEBUG] (904) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=138.819µs elapsed_secs=0.000138819
08:31:05 [DEBUG] (918) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=11.631289ms elapsed_secs=0.011631289
08:31:05 [DEBUG] (888) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.206527ms elapsed_secs=0.011206527
08:31:05 [INFO] Created user: User { id: Some(2), username: "get_all_users_test_20250610083104_2", email: "get_all_users_test_20250610083104_2@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:05 [DEBUG] (917) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.510077ms elapsed_secs=0.013510077
08:31:05 [DEBUG] (888) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=534.655µs elapsed_secs=0.000534655
08:31:05 [DEBUG] (917) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=164.278µs elapsed_secs=0.000164278
08:31:05 [DEBUG] (888) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=160.109µs elapsed_secs=0.000160109
08:31:05 [DEBUG] (917) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=128.559µs elapsed_secs=0.000128559
08:31:05 [DEBUG] (917) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=271.222µs elapsed_secs=0.000271222
08:31:05 [DEBUG] (917) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=144.75µs elapsed_secs=0.00014475
08:31:05 [DEBUG] (912) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.894089ms elapsed_secs=0.008894089
08:31:05 [DEBUG] (912) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=581.988µs elapsed_secs=0.000581988
08:31:05 [DEBUG] (912) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.219µs elapsed_secs=9.1219e-5
08:31:05 [DEBUG] (914) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=4.795388ms elapsed_secs=0.004795388
08:31:05 [INFO] Created user: User { id: Some(3), username: "get_all_users_test_20250610083104_3", email: "get_all_users_test_20250610083104_3@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:05 [DEBUG] (899) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.136705ms elapsed_secs=0.007136705
08:31:05 [DEBUG] (899) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=455.702µs elapsed_secs=0.000455702
08:31:05 [DEBUG] (899) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=89.971µs elapsed_secs=8.9971e-5
08:31:05 [DEBUG] (891) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.022815ms elapsed_secs=0.008022815
08:31:05 [DEBUG] (907) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.265287ms elapsed_secs=0.008265287
08:31:05 [DEBUG] (880) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.496721ms elapsed_secs=0.008496721
08:31:05 [DEBUG] (891) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=257.897µs elapsed_secs=0.000257897
08:31:05 [DEBUG] (895) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.382625ms elapsed_secs=0.009382625
08:31:05 [DEBUG] (891) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=383.907µs elapsed_secs=0.000383907
08:31:05 [DEBUG] (907) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=544.934µs elapsed_secs=0.000544934
08:31:05 [DEBUG] (907) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=391.578µs elapsed_secs=0.000391578
08:31:05 [DEBUG] (919) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=96.149µs elapsed_secs=9.6149e-5
08:31:05 [DEBUG] (895) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=638.517µs elapsed_secs=0.000638517
08:31:05 [DEBUG] (882) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.032689ms elapsed_secs=0.008032689
08:31:05 [DEBUG] (919) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=0 rows_returned=0 elapsed=380.601µs elapsed_secs=0.000380601
08:31:05 [DEBUG] (895) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=581.11µs elapsed_secs=0.00058111
08:31:05 [DEBUG] (877) menahel::repository::user_repo: Get all users: []
08:31:05 [DEBUG] (920) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=140.845µs elapsed_secs=0.000140845
08:31:05 [DEBUG] (918) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=7.941918ms elapsed_secs=0.007941918
08:31:05 [INFO] Created user: User { id: Some(4), username: "get_all_users_test_20250610083104_4", email: "get_all_users_test_20250610083104_4@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:05 [DEBUG] (886) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.714683ms elapsed_secs=0.009714683
08:31:05 [DEBUG] (923) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=96.244µs elapsed_secs=9.6244e-5
08:31:05 [DEBUG] (888) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.2805ms elapsed_secs=0.0102805
08:31:05 [DEBUG] (904) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.561982ms elapsed_secs=0.010561982
08:31:05 [DEBUG] (904) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=433.185µs elapsed_secs=0.000433185
08:31:05 [DEBUG] (904) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=82.338µs elapsed_secs=8.2338e-5
08:31:05 [DEBUG] (917) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.512475ms elapsed_secs=0.008512475
08:31:05 [DEBUG] (914) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=6.192211ms elapsed_secs=0.006192211
08:31:05 [DEBUG] (920) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=6.611322ms elapsed_secs=0.006611322
08:31:05 [INFO] Created user: User { id: Some(5), username: "get_all_users_test_20250610083104_5", email: "get_all_users_test_20250610083104_5@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }
08:31:05 [INFO] Created user: User { id: Some(1), username: "get_user_by_id_test_20250610083105", email: "get_user_by_id_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (917) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=233.629µs elapsed_secs=0.000233629
08:31:05 [DEBUG] (917) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=285.175µs elapsed_secs=0.000285175
08:31:05 [DEBUG] (918) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n            \n" rows_affected=1 rows_returned=5 elapsed=403.993µs elapsed_secs=0.000403993
08:31:05 [DEBUG] (924) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=46.208µs elapsed_secs=4.6208e-5
08:31:05 [DEBUG] (869) menahel::repository::user_repo: Get all users: [User { id: Some(1), username: "get_all_users_test_20250610083104_1", email: "get_all_users_test_20250610083104_1@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }, User { id: Some(2), username: "get_all_users_test_20250610083104_2", email: "get_all_users_test_20250610083104_2@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }, User { id: Some(3), username: "get_all_users_test_20250610083104_3", email: "get_all_users_test_20250610083104_3@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }, User { id: Some(4), username: "get_all_users_test_20250610083104_4", email: "get_all_users_test_20250610083104_4@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }, User { id: Some(5), username: "get_all_users_test_20250610083104_5", email: "get_all_users_test_20250610083104_5@test.com", password_hash: "b3756598adc3a5981b824b6eb3b1c9929b46b5eda674f05530be44ad4cc9e783" }]
08:31:05 [DEBUG] (924) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=178.544µs elapsed_secs=0.000178544
08:31:05 [DEBUG] (879) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "get_user_by_id_test_20250610083105", email: "get_user_by_id_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" })
08:31:05 [DEBUG] (920) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=1 rows_returned=0 elapsed=225.51µs elapsed_secs=0.00022551
08:31:05 [DEBUG] (879) menahel::repository::user_repo: Get user by id: None
08:31:05 [DEBUG] (912) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.263947ms elapsed_secs=0.009263947
08:31:05 [DEBUG] (927) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=127.063µs elapsed_secs=0.000127063
08:31:05 [DEBUG] (912) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=1.081525ms elapsed_secs=0.001081525
08:31:05 [DEBUG] (912) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=182.162µs elapsed_secs=0.000182162
08:31:05 [DEBUG] (930) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=59.879µs elapsed_secs=5.9879e-5
08:31:05 [DEBUG] (923) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=13.911708ms elapsed_secs=0.013911708
08:31:05 [DEBUG] (923) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=101.669µs elapsed_secs=0.000101669
08:31:05 [DEBUG] (923) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=70.587µs elapsed_secs=7.0587e-5
08:31:05 [DEBUG] (923) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=275.32µs elapsed_secs=0.00027532
08:31:05 [DEBUG] (899) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.378933ms elapsed_secs=0.011378933
08:31:05 [DEBUG] (923) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=128.685µs elapsed_secs=0.000128685
08:31:05 [DEBUG] (899) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=189.953µs elapsed_secs=0.000189953
08:31:05 [DEBUG] (899) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.191µs elapsed_secs=8.6191e-5
08:31:05 [DEBUG] (895) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.088361ms elapsed_secs=0.009088361
08:31:05 [DEBUG] (891) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.34113ms elapsed_secs=0.00934113
08:31:05 [DEBUG] (907) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.539222ms elapsed_secs=0.009539222
08:31:05 [DEBUG] (907) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=315.233µs elapsed_secs=0.000315233
08:31:05 [DEBUG] (931) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=39.961µs elapsed_secs=3.9961e-5
08:31:05 [DEBUG] (907) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=80.186µs elapsed_secs=8.0186e-5
08:31:05 [DEBUG] (927) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=12.613491ms elapsed_secs=0.012613491
08:31:05 [DEBUG] (930) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=10.562121ms elapsed_secs=0.010562121
08:31:05 [DEBUG] (927) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=136.507µs elapsed_secs=0.000136507
08:31:05 [DEBUG] (930) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=83.061µs elapsed_secs=8.3061e-5
08:31:05 [DEBUG] (927) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=105.081µs elapsed_secs=0.000105081
08:31:05 [DEBUG] (930) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=84.633µs elapsed_secs=8.4633e-5
08:31:05 [DEBUG] (930) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=449.732µs elapsed_secs=0.000449732
08:31:05 [DEBUG] (927) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=541.124µs elapsed_secs=0.000541124
08:31:05 [DEBUG] (930) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.676µs elapsed_secs=0.000104676
08:31:05 [DEBUG] (927) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.173µs elapsed_secs=0.000176173
08:31:05 [DEBUG] (917) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.342343ms elapsed_secs=0.007342343
08:31:05 [DEBUG] (904) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.267766ms elapsed_secs=0.008267766
08:31:05 [DEBUG] (917) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=499.022µs elapsed_secs=0.000499022
08:31:05 [DEBUG] (917) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=188.73µs elapsed_secs=0.00018873
08:31:05 [DEBUG] (904) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=277.773µs elapsed_secs=0.000277773
08:31:05 [DEBUG] (904) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=176.253µs elapsed_secs=0.000176253
08:31:05 [DEBUG] (931) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.354545ms elapsed_secs=0.008354545
08:31:05 [INFO] Created user: User { id: Some(1), username: "get_user_by_name_test_20250610083105", email: "get_user_by_name_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (932) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.391µs elapsed_secs=7.0391e-5
08:31:05 [DEBUG] (932) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=0 rows_returned=1 elapsed=231.448µs elapsed_secs=0.000231448
08:31:05 [DEBUG] (889) menahel::repository::user_repo: Get user by name: Some(User { id: Some(1), username: "get_user_by_name_test_20250610083105", email: "get_user_by_name_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" })
08:31:05 [DEBUG] (931) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE username = $1\n            \n" rows_affected=1 rows_returned=0 elapsed=101.574µs elapsed_secs=0.000101574
08:31:05 [DEBUG] (889) menahel::repository::user_repo: Get user by name: None
08:31:05 [DEBUG] (912) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.882731ms elapsed_secs=0.010882731
08:31:05 [DEBUG] (935) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=151.861µs elapsed_secs=0.000151861
08:31:05 [DEBUG] (912) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=452.399µs elapsed_secs=0.000452399
08:31:05 [DEBUG] (912) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=74.859µs elapsed_secs=7.4859e-5
08:31:05 [DEBUG] (899) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.133723ms elapsed_secs=0.008133723
08:31:05 [DEBUG] (907) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.638348ms elapsed_secs=0.008638348
08:31:05 [DEBUG] (923) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.794429ms elapsed_secs=0.008794429
08:31:05 [DEBUG] (907) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=232.371µs elapsed_secs=0.000232371
08:31:05 [DEBUG] (923) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=191.28µs elapsed_secs=0.00019128
08:31:05 [DEBUG] (907) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=86.958µs elapsed_secs=8.6958e-5
08:31:05 [DEBUG] (923) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=180.971µs elapsed_secs=0.000180971
08:31:05 [DEBUG] (935) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.166171ms elapsed_secs=0.009166171
08:31:05 [DEBUG] (935) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=255.753µs elapsed_secs=0.000255753
08:31:05 [DEBUG] (935) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=113.316µs elapsed_secs=0.000113316
08:31:05 [DEBUG] (935) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=310.303µs elapsed_secs=0.000310303
08:31:05 [DEBUG] (917) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.0298ms elapsed_secs=0.0100298
08:31:05 [DEBUG] (927) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.034419ms elapsed_secs=0.010034419
08:31:05 [DEBUG] (930) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.198307ms elapsed_secs=0.010198307
08:31:05 [DEBUG] (917) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=546.144µs elapsed_secs=0.000546144
08:31:05 [DEBUG] (935) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=186.074µs elapsed_secs=0.000186074
08:31:05 [DEBUG] (917) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=203.95µs elapsed_secs=0.00020395
08:31:05 [DEBUG] (927) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=343.952µs elapsed_secs=0.000343952
08:31:05 [DEBUG] (930) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=317.916µs elapsed_secs=0.000317916
08:31:05 [DEBUG] (927) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=153.595µs elapsed_secs=0.000153595
08:31:05 [DEBUG] (930) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.741µs elapsed_secs=0.000122741
08:31:05 [DEBUG] (904) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.943553ms elapsed_secs=0.010943553
08:31:05 [DEBUG] (904) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=362.133µs elapsed_secs=0.000362133
08:31:05 [DEBUG] (904) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.952µs elapsed_secs=9.3952e-5
08:31:05 [DEBUG] (912) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.754718ms elapsed_secs=0.006754718
08:31:05 [DEBUG] (912) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=611.838µs elapsed_secs=0.000611838
08:31:05 [DEBUG] (912) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=70.635µs elapsed_secs=7.0635e-5
08:31:05 [DEBUG] (923) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.191585ms elapsed_secs=0.006191585
08:31:05 [DEBUG] (907) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.23877ms elapsed_secs=0.00623877
08:31:05 [DEBUG] (923) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=494.099µs elapsed_secs=0.000494099
08:31:05 [DEBUG] (936) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=47.231µs elapsed_secs=4.7231e-5
08:31:05 [DEBUG] (923) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=93.521µs elapsed_secs=9.3521e-5
08:31:05 [DEBUG] (936) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=302.214µs elapsed_secs=0.000302214
08:31:05 [DEBUG] (905) menahel::repository::user_repo: Get user by id with transaction: None
08:31:05 [DEBUG] (939) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=89.464µs elapsed_secs=8.9464e-5
08:31:05 [DEBUG] (930) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.598483ms elapsed_secs=0.010598483
08:31:05 [DEBUG] (904) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.902297ms elapsed_secs=0.008902297
08:31:05 [DEBUG] (917) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.039516ms elapsed_secs=0.009039516
08:31:05 [DEBUG] (927) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=10.914955ms elapsed_secs=0.010914955
08:31:05 [DEBUG] (935) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.408037ms elapsed_secs=0.011408037
08:31:05 [DEBUG] (930) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=710.204µs elapsed_secs=0.000710204
08:31:05 [DEBUG] (917) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=396.18µs elapsed_secs=0.00039618
08:31:05 [DEBUG] (927) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=274.922µs elapsed_secs=0.000274922
08:31:05 [DEBUG] (930) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=150.813µs elapsed_secs=0.000150813
08:31:05 [DEBUG] (917) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=84.2µs elapsed_secs=8.42e-5
08:31:05 [DEBUG] (935) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=284.984µs elapsed_secs=0.000284984
08:31:05 [DEBUG] (927) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=270.994µs elapsed_secs=0.000270994
08:31:05 [DEBUG] (935) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=122.418µs elapsed_secs=0.000122418
08:31:05 [DEBUG] (939) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.216526ms elapsed_secs=0.009216526
08:31:05 [DEBUG] (939) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=111.784µs elapsed_secs=0.000111784
08:31:05 [DEBUG] (939) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=87.468µs elapsed_secs=8.7468e-5
08:31:05 [DEBUG] (939) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=328.441µs elapsed_secs=0.000328441
08:31:05 [DEBUG] (939) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=104.47µs elapsed_secs=0.00010447
08:31:05 [DEBUG] (912) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.948746ms elapsed_secs=0.007948746
08:31:05 [DEBUG] (923) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.005428ms elapsed_secs=0.007005428
08:31:05 [DEBUG] (940) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=87.3µs elapsed_secs=8.73e-5
08:31:05 [DEBUG] (923) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=159.478µs elapsed_secs=0.000159478
08:31:05 [DEBUG] (923) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=111.771µs elapsed_secs=0.000111771
08:31:05 [DEBUG] (940) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=8.579659ms elapsed_secs=0.008579659
08:31:05 [INFO] Created user: User { id: Some(1), username: "update_user_test_20250610083105", email: "update_user_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (941) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=51.167µs elapsed_secs=5.1167e-5
08:31:05 [DEBUG] (941) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=158.305µs elapsed_secs=0.000158305
08:31:05 [DEBUG] (930) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.535542ms elapsed_secs=0.007535542
08:31:05 [DEBUG] (910) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "update_user_test_20250610083105", email: "update_user_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" })
08:31:05 [DEBUG] (917) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.657749ms elapsed_secs=0.007657749
08:31:05 [DEBUG] (930) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=164.235µs elapsed_secs=0.000164235
08:31:05 [DEBUG] (927) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.11722ms elapsed_secs=0.00811722
08:31:05 [DEBUG] (935) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.113933ms elapsed_secs=0.008113933
08:31:05 [DEBUG] (930) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=352.281µs elapsed_secs=0.000352281
08:31:05 [DEBUG] (941) sqlx::query: summary="UPDATE users SET username …" db.statement="\n\n\n                UPDATE users\n                SET username = $1, email = $2, password_hash = $3\n                WHERE id = $4\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=153.699µs elapsed_secs=0.000153699
08:31:05 [DEBUG] (927) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=230.426µs elapsed_secs=0.000230426
08:31:05 [DEBUG] (942) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=71.076µs elapsed_secs=7.1076e-5
08:31:05 [DEBUG] (927) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=124.932µs elapsed_secs=0.000124932
08:31:05 [DEBUG] (935) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=235.851µs elapsed_secs=0.000235851
08:31:05 [DEBUG] (935) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=79.532µs elapsed_secs=7.9532e-5
08:31:05 [DEBUG] (886) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=92.66226ms elapsed_secs=0.09266226
08:31:05 [DEBUG] (943) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=91.055µs elapsed_secs=9.1055e-5
08:31:05 [DEBUG] (943) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=1 elapsed=333.334µs elapsed_secs=0.000333334
08:31:05 [DEBUG] (883) menahel::repository::user_repo: Get user by id with transaction: Some(User { id: Some(1), username: "Test User 0", email: "test0@example.com", password_hash: "password0" })
08:31:05 [DEBUG] (888) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=93.637795ms elapsed_secs=0.093637795
08:31:05 [DEBUG] (944) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=68.782µs elapsed_secs=6.8782e-5
08:31:05 [DEBUG] (947) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=116.89µs elapsed_secs=0.00011689
08:31:05 [DEBUG] (944) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n            SELECT id, username, email, password_hash\n            FROM users\n            WHERE id = $1\n        \n" rows_affected=0 rows_returned=0 elapsed=219.817µs elapsed_secs=0.000219817
08:31:05 [DEBUG] (885) menahel::repository::user_repo: Get user by id with transaction: None
08:31:05 [DEBUG] (939) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.593275ms elapsed_secs=0.008593275
08:31:05 [DEBUG] (939) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=354.662µs elapsed_secs=0.000354662
08:31:05 [DEBUG] (923) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.554291ms elapsed_secs=0.009554291
08:31:05 [INFO] Updated user: Some(User { id: Some(1), username: "update_user_test_20250610083105_updated", email: "update_user_test_20250610083105@test.com_updated", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" })
08:31:05 [DEBUG] (939) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=91.505µs elapsed_secs=9.1505e-5
08:31:05 [DEBUG] (940) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                WHERE id = $1\n           \n" rows_affected=0 rows_returned=1 elapsed=85.948µs elapsed_secs=8.5948e-5
08:31:05 [DEBUG] (923) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=301.31µs elapsed_secs=0.00030131
08:31:05 [DEBUG] (910) menahel::repository::user_repo: Get user by id: Some(User { id: Some(1), username: "update_user_test_20250610083105_updated", email: "update_user_test_20250610083105@test.com_updated", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" })
08:31:05 [DEBUG] (950) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.122µs elapsed_secs=4.3122e-5
08:31:05 [DEBUG] (942) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=9.51156ms elapsed_secs=0.00951156
08:31:05 [DEBUG] (923) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=308.079µs elapsed_secs=0.000308079
08:31:05 [INFO] Created user: User { id: Some(1), username: "empty_email_test_20250610083105", email: "empty_email_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (895) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=86.339463ms elapsed_secs=0.086339463
08:31:05 [DEBUG] (951) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.514µs elapsed_secs=4.3514e-5
08:31:05 [DEBUG] (951) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n                SELECT COUNT(*) FROM users\n            \n" rows_affected=0 rows_returned=1 elapsed=130.294µs elapsed_secs=0.000130294
08:31:05 [DEBUG] (893) menahel::repository::user_repo: Get users count: 10
08:31:05 [DEBUG] (947) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=8.720978ms elapsed_secs=0.008720978
08:31:05 [DEBUG] (947) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=236.374µs elapsed_secs=0.000236374
08:31:05 [DEBUG] (947) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=89.145µs elapsed_secs=8.9145e-5
08:31:05 [DEBUG] (947) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=582.072µs elapsed_secs=0.000582072
08:31:05 [DEBUG] (947) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=160.889µs elapsed_secs=0.000160889
08:31:05 [DEBUG] (950) sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    success BOOLEAN NOT NULL,\n    checksum BLOB NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=9.768388ms elapsed_secs=0.009768388
08:31:05 [DEBUG] (950) sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=126.182µs elapsed_secs=0.000126182
08:31:05 [DEBUG] (950) sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=0 rows_returned=0 elapsed=88.726µs elapsed_secs=8.8726e-5
08:31:05 [DEBUG] (950) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password_hash TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=1.610336ms elapsed_secs=0.001610336
08:31:05 [DEBUG] (950) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=189.639µs elapsed_secs=0.000189639
08:31:05 [DEBUG] (930) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=11.793656ms elapsed_secs=0.011793656
08:31:05 [DEBUG] (935) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.366355ms elapsed_secs=0.012366355
08:31:05 [DEBUG] (930) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=381.706µs elapsed_secs=0.000381706
08:31:05 [DEBUG] (927) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.785128ms elapsed_secs=0.012785128
08:31:05 [DEBUG] (935) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=311.999µs elapsed_secs=0.000311999
08:31:05 [DEBUG] (930) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=137.38µs elapsed_secs=0.00013738
08:31:05 [DEBUG] (935) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=319.523µs elapsed_secs=0.000319523
08:31:05 [DEBUG] (927) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=437.834µs elapsed_secs=0.000437834
08:31:05 [DEBUG] (927) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.622µs elapsed_secs=0.000120622
08:31:05 [DEBUG] (923) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.994268ms elapsed_secs=0.009994268
08:31:05 [DEBUG] (952) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.223µs elapsed_secs=4.4223e-5
08:31:05 [DEBUG] (899) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=83.86459ms elapsed_secs=0.08386459
08:31:05 [DEBUG] (939) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=12.071301ms elapsed_secs=0.012071301
08:31:05 [DEBUG] (939) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=137.857µs elapsed_secs=0.000137857
08:31:05 [DEBUG] (953) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=105.171µs elapsed_secs=0.000105171
08:31:05 [DEBUG] (939) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=64.396µs elapsed_secs=6.4396e-5
08:31:05 [DEBUG] (953) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=171.528µs elapsed_secs=0.000171528
08:31:05 [DEBUG] (897) menahel::repository::user_repo: Get users count with transaction: 10
08:31:05 [DEBUG] (897) menahel::repository::user_repo: Get users with pagination: offset: 0, limit: 5
08:31:05 [DEBUG] (953) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=155.974µs elapsed_secs=0.000155974
08:31:05 [DEBUG] (897) menahel::repository::user_repo: Get users with pagination: [User { id: Some(1), username: "Test User 0", email: "test0@example.com", password_hash: "password0" }, User { id: Some(2), username: "Test User 1", email: "test1@example.com", password_hash: "password1" }, User { id: Some(3), username: "Test User 2", email: "test2@example.com", password_hash: "password2" }, User { id: Some(4), username: "Test User 3", email: "test3@example.com", password_hash: "password3" }, User { id: Some(5), username: "Test User 4", email: "test4@example.com", password_hash: "password4" }]
08:31:05 [DEBUG] (954) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=41.286µs elapsed_secs=4.1286e-5
08:31:05 [DEBUG] (954) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=118.825µs elapsed_secs=0.000118825
08:31:05 [DEBUG] (897) menahel::repository::user_repo: Get users count with transaction: 10
08:31:05 [DEBUG] (897) menahel::repository::user_repo: Get users with pagination: offset: 5, limit: 5
08:31:05 [DEBUG] (954) sqlx::query: summary="SELECT id, username, email, …" db.statement="\n\n\n                SELECT id, username, email, password_hash\n                FROM users\n                ORDER BY id\n                LIMIT $1 OFFSET $2\n            \n" rows_affected=0 rows_returned=5 elapsed=137.849µs elapsed_secs=0.000137849
08:31:05 [DEBUG] (897) menahel::repository::user_repo: Get users with pagination: [User { id: Some(6), username: "Test User 5", email: "test5@example.com", password_hash: "password5" }, User { id: Some(7), username: "Test User 6", email: "test6@example.com", password_hash: "password6" }, User { id: Some(8), username: "Test User 7", email: "test7@example.com", password_hash: "password7" }, User { id: Some(9), username: "Test User 8", email: "test8@example.com", password_hash: "password8" }, User { id: Some(10), username: "Test User 9", email: "test9@example.com", password_hash: "password9" }]
08:31:05 [DEBUG] (952) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=5.632332ms elapsed_secs=0.005632332
08:31:05 [DEBUG] (947) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.437409ms elapsed_secs=0.008437409
08:31:05 [INFO] Created user: User { id: Some(1), username: "empty_field_test_20250610083105", email: "empty_field_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (947) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=461.051µs elapsed_secs=0.000461051
08:31:05 [DEBUG] (947) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=159.636µs elapsed_secs=0.000159636
08:31:05 [DEBUG] (927) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.23887ms elapsed_secs=0.00723887
08:31:05 [DEBUG] (935) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.384408ms elapsed_secs=0.007384408
08:31:05 [DEBUG] (950) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=8.967454ms elapsed_secs=0.008967454
08:31:05 [DEBUG] (930) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=9.389036ms elapsed_secs=0.009389036
08:31:05 [DEBUG] (955) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=67.266µs elapsed_secs=6.7266e-5
08:31:05 [DEBUG] (956) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=43.723µs elapsed_secs=4.3723e-5
08:31:05 [DEBUG] (950) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE projects (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT UNIQUE NOT NULL\n)\n" rows_affected=1 rows_returned=0 elapsed=703.095µs elapsed_secs=0.000703095
08:31:05 [DEBUG] (935) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=712.648µs elapsed_secs=0.000712648
08:31:05 [DEBUG] (950) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=120.034µs elapsed_secs=0.000120034
08:31:05 [DEBUG] (935) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.702µs elapsed_secs=7.5702e-5
08:31:05 [DEBUG] (956) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=5.961429ms elapsed_secs=0.005961429
08:31:05 [INFO] Created user: User { id: Some(1), username: "invalid_email_test_20250610083105", email: "invalid_email_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (955) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=5.911784ms elapsed_secs=0.005911784
08:31:05 [INFO] Created user: User { id: Some(1), username: "empty_password_test_20250610083105", email: "empty_password_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (939) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.378193ms elapsed_secs=0.007378193
08:31:05 [DEBUG] (939) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=245.064µs elapsed_secs=0.000245064
08:31:05 [DEBUG] (939) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=233.165µs elapsed_secs=0.000233165
08:31:05 [DEBUG] (947) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.878224ms elapsed_secs=0.005878224
08:31:05 [DEBUG] (947) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=351.847µs elapsed_secs=0.000351847
08:31:05 [DEBUG] (947) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=125.502µs elapsed_secs=0.000125502
08:31:05 [DEBUG] (935) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=7.428152ms elapsed_secs=0.007428152
08:31:05 [DEBUG] (950) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=6.152508ms elapsed_secs=0.006152508
08:31:05 [DEBUG] (904) sqlx::query: summary="INSERT INTO users (id, …" db.statement="\n\nINSERT INTO users (id, username, email, password_hash) VALUES (1, 'Test User 0', 'test0@example.com', 'password0');\nINSERT INTO users (id, username, email, password_hash) VALUES (2, 'Test User 1', 'test1@example.com', 'password1');\nINSERT INTO users (id, username, email, password_hash) VALUES (3, 'Test User 2', 'test2@example.com', 'password2');\nINSERT INTO users (id, username, email, password_hash) VALUES (4, 'Test User 3', 'test3@example.com', 'password3');\nINSERT INTO users (id, username, email, password_hash) VALUES (5, 'Test User 4', 'test4@example.com', 'password4');\nINSERT INTO users (id, username, email, password_hash) VALUES (6, 'Test User 5', 'test5@example.com', 'password5');\nINSERT INTO users (id, username, email, password_hash) VALUES (7, 'Test User 6', 'test6@example.com', 'password6');\nINSERT INTO users (id, username, email, password_hash) VALUES (8, 'Test User 7', 'test7@example.com', 'password7');\nINSERT INTO users (id, username, email, password_hash) VALUES (9, 'Test User 8', 'test8@example.com', 'password8');\nINSERT INTO users (id, username, email, password_hash) VALUES (10, 'Test User 9', 'test9@example.com', 'password9');\n" rows_affected=10 rows_returned=0 elapsed=83.018494ms elapsed_secs=0.083018494
08:31:05 [DEBUG] (950) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE tasks (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    project_id INTEGER NOT NULL,\n    parent_id INTEGER,\n    level INTEGER NOT NULL CHECK (level BETWEEN 0 AND 2),\n    name TEXT NOT NULL,\n    description TEXT,\n    status INTEGER NOT NULL,\n    deadline INTEGER,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (project_id) REFERENCES projects(id),\n    FOREIGN KEY (parent_id) REFERENCES tasks(id)\n)\n" rows_affected=1 rows_returned=0 elapsed=313.283µs elapsed_secs=0.000313283
08:31:05 [DEBUG] (957) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=74.117µs elapsed_secs=7.4117e-5
08:31:05 [DEBUG] (958) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=70.853µs elapsed_secs=7.0853e-5
08:31:05 [DEBUG] (950) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=88.804µs elapsed_secs=8.8804e-5
08:31:05 [DEBUG] (958) sqlx::query: summary="SELECT COUNT(*) FROM users …" db.statement="\n\n\n            SELECT COUNT(*) FROM users\n        \n" rows_affected=0 rows_returned=1 elapsed=203.238µs elapsed_secs=0.000203238
08:31:05 [DEBUG] (902) menahel::repository::user_repo: Get users count with transaction: 10
08:31:05 [DEBUG] (939) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.769811ms elapsed_secs=0.003769811
08:31:05 [DEBUG] (939) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=176.782µs elapsed_secs=0.000176782
08:31:05 [DEBUG] (939) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=75.229µs elapsed_secs=7.5229e-5
08:31:05 [DEBUG] (957) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=4.165001ms elapsed_secs=0.004165001
08:31:05 [INFO] Created user: User { id: Some(1), username: "invalid_password_test_20250610083105", email: "invalid_password_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (947) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.123601ms elapsed_secs=0.004123601
08:31:05 [DEBUG] (947) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=423.412µs elapsed_secs=0.000423412
08:31:05 [DEBUG] (947) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=90.536µs elapsed_secs=9.0536e-5
08:31:05 [DEBUG] (950) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=5.879586ms elapsed_secs=0.005879586
08:31:05 [DEBUG] (950) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE user_assign (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n" rows_affected=1 rows_returned=0 elapsed=233.26µs elapsed_secs=0.00023326
08:31:05 [DEBUG] (950) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=95.042µs elapsed_secs=9.5042e-5
08:31:05 [DEBUG] (939) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.872489ms elapsed_secs=0.002872489
08:31:05 [DEBUG] (947) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.075008ms elapsed_secs=0.003075008
08:31:05 [DEBUG] (947) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=205.119µs elapsed_secs=0.000205119
08:31:05 [DEBUG] (959) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=35.934µs elapsed_secs=3.5934e-5
08:31:05 [DEBUG] (947) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=55.126µs elapsed_secs=5.5126e-5
08:31:05 [DEBUG] (950) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=3.401112ms elapsed_secs=0.003401112
08:31:05 [DEBUG] (950) sqlx::query: summary="-- Add up migration …" db.statement="\n\n-- Add up migration script here\nCREATE TABLE comments (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    user_id INTEGER NOT NULL,\n    task_id INTEGER NOT NULL,\n    content TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER,\n    FOREIGN KEY (user_id) REFERENCES users (id),\n    FOREIGN KEY (task_id) REFERENCES tasks (id)\n);\n\n" rows_affected=1 rows_returned=0 elapsed=332.758µs elapsed_secs=0.000332758
08:31:05 [DEBUG] (959) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=3.485132ms elapsed_secs=0.003485132
08:31:05 [DEBUG] (950) sqlx::query: summary="INSERT INTO _sqlx_migrations ( …" db.statement="\n\n\n    INSERT INTO _sqlx_migrations ( version, description, success, checksum, execution_time )\n    VALUES ( ?1, ?2, TRUE, ?3, -1 )\n                \n" rows_affected=1 rows_returned=0 elapsed=96.053µs elapsed_secs=9.6053e-5
08:31:05 [INFO] Created user: User { id: Some(1), username: "long_email_test_20250610083105", email: "long_email_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (947) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=4.183985ms elapsed_secs=0.004183985
08:31:05 [DEBUG] (960) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=45.502µs elapsed_secs=4.5502e-5
08:31:05 [DEBUG] (950) sqlx::query: summary="UPDATE _sqlx_migrations SET execution_time …" db.statement="\n\n\n    UPDATE _sqlx_migrations\n    SET execution_time = ?1\n    WHERE version = ?2\n                \n" rows_affected=1 rows_returned=0 elapsed=2.920454ms elapsed_secs=0.002920454
08:31:05 [DEBUG] (961) sqlx::query: summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON; \n" rows_affected=0 rows_returned=0 elapsed=44.901µs elapsed_secs=4.4901e-5
08:31:05 [DEBUG] (960) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=4.102602ms elapsed_secs=0.004102602
08:31:05 [INFO] Created user: User { id: Some(1), username: "long_username_test_20250610083105", email: "long_username_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
08:31:05 [DEBUG] (961) sqlx::query: summary="INSERT INTO users (username, …" db.statement="\n\n\n                INSERT INTO users (username, email, password_hash)\n                VALUES ($1, $2, $3)\n                RETURNING id, username, email, password_hash\n            \n" rows_affected=0 rows_returned=1 elapsed=3.216041ms elapsed_secs=0.003216041
08:31:05 [INFO] Created user: User { id: Some(1), username: "special_chars_test_20250610083105", email: "special_chars_test_20250610083105@test.com", password_hash: "b123585f65de1195abf7a29d66e6b6687d5c64a316c917fbfe727edbaf93cdb9" }
